> # test.glm.R: tests glm and factors added for earth release 2.0
> 
> library(earth)
Loading required package: plotmo
Loading required package: plotrix
Loading required package: TeachingDemos
> if(!interactive())
+     postscript(paper="letter")
> data(ozone1)
> data(trees)
> data(etitanic)
> source("check.models.equal.R")
> options(warn=1) # print warnings as they occur
> 
> # test that we got an error as expected from a try() call
> expect.err <- function(object, expected.msg="")
+ {
+     if(class(object)[1] == "try-error") {
+         msg <- attr(object, "condition")$message[1]
+         if(length(grep(expected.msg, msg, fixed=TRUE)))
+             cat("Got error as expected from ",
+                 deparse(substitute(object)), "\n", sep="")
+         else
+             stop(sprintf("Expected: %s\n  Got:      %s",
+                          expected.msg, substr(msg, 1, 1000)))
+     } else
+         stop("did not get expected error for ", expected.msg)
+ }
> printh <- function(x, expect.warning=FALSE, max.print=0) # like print but with a header
+ {
+     cat("===", deparse(substitute(x)))
+     if(expect.warning)
+         cat(" expect warning -->")
+     else if (NROW(x) > 1)
+         cat("\n")
+     if (max.print > 0)
+         print(head(x, n=max.print))
+     else
+         print(x)
+ }
> 
> count <- 0
> 
> show.earth.models <- function(a, nresponse=NA, ...)
+ {
+     model.name <- deparse(substitute(a))
+     cat("\nPrint", model.name, "\n\n")
+     print(a)
+     cat("\nSummary", model.name, "\n\n")
+     print(summary(a))
+     count <<- count + 1
+     if (count %% 2 == 0) {  # an attempt at trying different parameters without combin explosion.
+         cat("\nSummary", model.name, "decomp=\"none\", digits=5, fixed.point=FALSE, details=TRUE\n\n")
+         print(summary(a, decomp="none", digits=5, fixed.point=FALSE, details=TRUE))
+     } else {
+         cat("\nSummary", model.name, "digits=3, details=TRUE\n\n")
+         print(summary(a, decomp="none", digits=3, details=TRUE))
+     }
+     cat("\nevimp", model.name, "\n\n")
+     print(evimp(a))
+     cat("\nevimp", model.name, "trim=FALSE\n\n")
+     ev <- evimp(a, trim=FALSE)
+     print(ev)
+     plot(a, nresponse=nresponse,
+          caption=if(is.na(nresponse)) model.name
+                  else paste("Response ", nresponse, ": ", model.name, sep=""))
+     plot(ev)
+     if (!is.null(a$glm.list)) {
+         control <- a$glm.list[[1]]$control
+         family <- a$glm.list[[1]]$family
+         cat("\nglm params: epsilon", control$epsilon,
+             "maxit", control$maxit, "trace", control$trace,
+             "family", family$family, "link", family$link, "\n")
+     }
+     cat("\nplotmo", model.name, "\n")
+     if(is.na(nresponse))
+         plotmo(a, clip=FALSE)
+     else
+         plotmo(a, nresponse=nresponse, clip=FALSE)
+     cat("-------------------------------------------------------------------------------\n\n")
+ }
> 
> # print contents of earth.model, for sanity checking that all fields are present as usual
> # but strip big fields to reduce amount of printing
> 
> print.stripped.earth.model <- function(a, model.name)
+ {
+     a$bx <- NULL
+     a$fitted.values <- NULL
+     a$residuals <- NULL
+     cat("print.stripped.earth.model(", model.name, ")\n", sep="")
+     print.default(a)
+     cat("-------------------------------------------------------------------------------\n\n")
+ }
> 
> # binomial models
> 
> ldose  <- rep(0:5, 2) - 2
> # ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
> ldose1 <- c(0.1, 1.2, 0.1, 1.2, 1.0, 0.1, 0.3, 1.4, 0.1, 1.2, 0.1, 0.9)
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> SF <- cbind(numdead, numalive=20 - numdead)
> numdead2 <- c(2,3,10,13,19,20,0,3,7,11,13,17)
> SF2 <- cbind(numdead2, numalive2=20 - numdead2)
> 
> PMETHOD <- "none"
> 
> # single response glm model but with a binomial pair of y columns
> cat("a1: single response glm model but with a binomial pair of y columns, with ldose1 data degree=2\n\n")
a1: single response glm model but with a binomial pair of y columns, with ldose1 data degree=2

> a1 <-  earth(SF ~ sex + ldose + ldose1, glm=list(family="binomial"), trace=4, pmethod=PMETHOD, degree=2)
Call: earth(formula=SF~sex+ldose+ldose1, trace=4, glm=list(family="binomial"),
            pmethod=PMETHOD, degree=2)

x[12,3]:
    sexmale ldose ldose1
1         1    -2    0.1
2         1    -1    1.2
3         1     0    0.1
...       1     1    1.2
12        0     3    0.9

y[12,2]:
    numdead numalive
1         1       19
2         4       16
3         9       11
...      13        7
12       16        4

Forward pass:    minspan 3    endspan 5    x is 12 by 3 (288 B)

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.7349 0.9211       0.9211    2        ldose           0  2   3   
4      0.8101 0.9808      0.05966    1      sexmale           0< 4       
6        -inf 0.9913      0.01054    2        ldose           0  5   6   reject term

GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Forward pass complete: 5 terms, 4 terms used

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6538  0.7933     0.6538      1  1 2
          3      0.7349  0.9211     0.0811      1  1 2 3
chosen    4      0.8101  0.9808     0.0753      2  1 2 3 4

Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 

y arg to glm()[12,2]:
    numdead numalive
1         1       19
2         4       16
3         9       11
...      13        7
12       16        4

GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> show.earth.models(a1)

Print a1 

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.495166    RSS 9.692982    GRSq 0.8101281    RSq 0.9807774

GLM null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4

Summary a1 

Call: earth(formula=SF~sex+ldose+ldose1, trace=4, glm=list(family="binomial"),
            pmethod=PMETHOD, degree=2)

GLM coefficients
               numdead
(Intercept) -1.0992373
sexmale      1.0963463
h(0-ldose)  -1.4542178
h(ldose-0)   0.9083549

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.495166    RSS 9.692982    GRSq 0.8101281    RSq 0.9807774

GLM null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4

Summary a1 digits=3, details=TRUE

Call: earth(formula=SF~sex+ldose+ldose1, trace=4, glm=list(family="binomial"),
            pmethod=PMETHOD, degree=2)

Earth coefficients
            numdead
(Intercept)    5.89
h(ldose-0)     3.62
h(0-ldose)    -3.68
sexmale        3.17

GLM coefficients
            numdead
(Intercept)  -1.099
h(ldose-0)    0.908
h(0-ldose)   -1.454
sexmale       1.096

GLM deviance residuals:
    Min       1Q   Median       3Q      Max  
-0.8488  -0.4812   0.0467   0.4687   1.5958  

GLM coefficients (family binomial, link logit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   -1.099      0.346   -3.18  0.00148
h(ldose-0)     0.908      0.183    4.95  7.4e-07
h(0-ldose)    -1.454      0.382   -3.80  0.00014
sexmale        1.096      0.354    3.09  0.00198

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.5    RSS 9.69    GRSq 0.81    RSq 0.981

GLM null.deviance 125 (11 dof)   deviance 5.41 (8 dof)   iters 4

evimp a1 

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  30.5   24.7

evimp a1 trim=FALSE

              nsubsets   gcv    rss
ldose                3 100.0  100.0
sexmale              1  30.5   24.7
ldose1-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a1 
 grid:    sex ldose ldose1
       female   0.5    0.6
-------------------------------------------------------------------------------

> printh(evimp(a1, trim=FALSE, sqrt=FALSE))
=== evimp(a1, trim = FALSE, sqrt = FALSE)
              nsubsets   gcv    rss
ldose                3 100.0  100.0
sexmale              1   9.3    6.1
ldose1-unused        0   0.0    0.0
> printh(evimp(a1, trim=FALSE, sqrt=TRUE)) # this tests sqrt param with negative evimps
=== evimp(a1, trim = FALSE, sqrt = TRUE)
              nsubsets   gcv    rss
ldose                3 100.0  100.0
sexmale              1  30.5   24.7
ldose1-unused        0   0.0    0.0
> a1update <- update(a1, trace=0)
> check.models.equal(a1, a1update, msg="a1update a1")
check.models.equal not identical: a1update a1 [but within numerical tolerances]
> 
> # test some different but equivalent glm specs
> a1a <-  earth(SF ~ sex + ldose + ldose1, glm=list(family="binomial"), trace=1, pmethod=PMETHOD, degree=2)
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> check.models.equal(a1a, a1, msg="a1 a1a")
check.models.equal not identical: a1 a1a [but within numerical tolerances]
> a1b <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial), trace=1, pmethod=PMETHOD, degree=2)
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> check.models.equal(a1, a1b, msg="a1 a1b")
check.models.equal not identical: a1 a1b [but within numerical tolerances]
> a1c <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial()), trace=1, pmethod=PMETHOD, degree=2)
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> check.models.equal(a1, a1c, msg="a1 a1c")
check.models.equal not identical: a1 a1c [but within numerical tolerances]
> a1d <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit")), trace=1, pmethod=PMETHOD, degree=2)
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> check.models.equal(a1, a1d, msg="a1 a1d")
check.models.equal not identical: a1 a1d [but within numerical tolerances]
> # Removed for earth 2.3.3 because offset is no longer supported
> # a1e <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),offset=NULL), trace=1, pmethod=PMETHOD, degree=2)
> # check.models.equal(a1, a1e, msg="a1 a1e")
> # a1f <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),offset=rep(0,nrow(SF))), trace=1, pmethod=PMETHOD, degree=2)
> # check.models.equal(a1, a1f, msg="a1 a1f")
> a1g <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),control=glm.control()), trace=1, pmethod=PMETHOD, degree=2)
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> check.models.equal(a1, a1g, msg="a1 a1g")
check.models.equal not identical: a1 a1g [but within numerical tolerances]
> # following should cause a "did not converge warning" because maxit=2
> a1h <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),control=glm.control(epsilon=1e-8, maxit=2, trace=TRUE)), trace=1, pmethod=PMETHOD, degree=2)
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
Deviance = 5.484361 Iterations - 1
Deviance = 5.411227 Iterations - 2
Warning: glm.fit: algorithm did not converge
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411227 (8 dof)   iters 2 did not converge
> show.earth.models(a1h) # check "did not converge" and also that maxit is retained in glm.list$control

Print a1h 

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.495166    RSS 9.692982    GRSq 0.8101281    RSq 0.9807774

GLM null.deviance 124.8756 (11 dof)   deviance 5.411227 (8 dof)   iters 2 did not converge

Summary a1h 

Call: earth(formula=SF~sex+ldose+ldose1, trace=1,
            glm=list(family=binomial(link="logit"),control=glm.con...),
            pmethod=PMETHOD, degree=2)

GLM coefficients
               numdead
(Intercept) -1.0979519
sexmale      1.0948594
h(0-ldose)  -1.4536064
h(ldose-0)   0.9074077

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.495166    RSS 9.692982    GRSq 0.8101281    RSq 0.9807774

GLM null.deviance 124.8756 (11 dof)   deviance 5.411227 (8 dof)   iters 2 did not converge

Summary a1h decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=SF~sex+ldose+ldose1, trace=1,
            glm=list(family=binomial(link="logit"),control=glm.con...),
            pmethod=PMETHOD, degree=2)

Earth coefficients
            numdead
(Intercept)  5.8904
h(ldose-0)   3.6184
h(0-ldose)  -3.6842
sexmale      3.1667

GLM coefficients
             numdead
(Intercept) -1.09795
h(ldose-0)   0.90741
h(0-ldose)  -1.45361
sexmale      1.09486

GLM deviance residuals:
      Min         1Q     Median         3Q        Max  
-0.849877  -0.480277   0.045807   0.466362   1.598119  

GLM coefficients (family binomial, link logit)
            Estimate Std. Error z value  Pr(>|z|)
(Intercept) -1.09795    0.34156 -3.2145 0.0013066
h(ldose-0)   0.90741    0.17996  5.0423   4.6e-07
h(0-ldose)  -1.45361    0.37574 -3.8686 0.0001094
sexmale      1.09486    0.34912  3.1360 0.0017125

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.4952    RSS 9.693    GRSq 0.81013    RSq 0.98078

GLM null.deviance 124.88 (11 dof)   deviance 5.4112 (8 dof)   iters 2 did not converge

evimp a1h 

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  30.5   24.7

evimp a1h trim=FALSE

              nsubsets   gcv    rss
ldose                3 100.0  100.0
sexmale              1  30.5   24.7
ldose1-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 2 trace TRUE family binomial link logit 

plotmo a1h 
 grid:    sex ldose ldose1
       female   0.5    0.6
-------------------------------------------------------------------------------

> check.models.equal(a1, a1g, msg="a1 a1h") # models should still be equal within numeric tolerance
check.models.equal not identical: a1 a1h [but within numerical tolerances]
> stopifnot(a1h$glm.list[[1]]$control$maxit == 2)
> # equivalent way of specifying maxit
> a1h2 <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),control=glm.control(epsilon=1e-8),maxit=2), pmethod=PMETHOD, degree=2)
Warning: glm.fit: algorithm did not converge
earth glm numdead: did not converge after 2 iterations
> check.models.equal(a1h, a1h2, msg="a1h a1h2")
check.models.equal not identical: a1h a1h2 [but within numerical tolerances]
> stopifnot(a1h2$glm.list[[1]]$control$maxit == 2)
> 
> # check update, also check params are carried forward properly with update
> a1h.update1 <- update(a1h, glm=list(family=binomial(link="probit"), maxit=8))
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Skipped forward pass
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.484289 (8 dof)   iters 4
> stopifnot(a1h.update1$glm.list[[1]]$control$maxit == 8)
> show.earth.models(a1h.update1)

Print a1h.update1 

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.495166    RSS 9.692982    GRSq 0.8101281    RSq 0.9807774

GLM null.deviance 124.8756 (11 dof)   deviance 4.484289 (8 dof)   iters 4

Summary a1h.update1 

Call: earth(formula=SF~sex+ldose+ldose1, trace=1,
            glm=list(family=binomial(link="probit"),maxit=8), pmethod=PMETHOD,
            degree=2, Object=a1h)

GLM coefficients
               numdead
(Intercept) -0.6623727
sexmale      0.6556299
h(0-ldose)  -0.8197971
h(ldose-0)   0.5506930

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.495166    RSS 9.692982    GRSq 0.8101281    RSq 0.9807774

GLM null.deviance 124.8756 (11 dof)   deviance 4.484289 (8 dof)   iters 4

Summary a1h.update1 digits=3, details=TRUE

Call: earth(formula=SF~sex+ldose+ldose1, trace=1,
            glm=list(family=binomial(link="probit"),maxit=8), pmethod=PMETHOD,
            degree=2, Object=a1h)

Earth coefficients
            numdead
(Intercept)    5.89
h(ldose-0)     3.62
h(0-ldose)    -3.68
sexmale        3.17

GLM coefficients
            numdead
(Intercept)  -0.662
h(ldose-0)    0.551
h(0-ldose)   -0.820
sexmale       0.656

GLM deviance residuals:
    Min       1Q   Median       3Q      Max  
-0.6550  -0.4810  -0.0221   0.4741   1.4317  

GLM coefficients (family binomial, link probit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   -0.662      0.202   -3.29   0.0010
h(ldose-0)     0.551      0.104    5.29  1.2e-07
h(0-ldose)    -0.820      0.199   -4.11  3.9e-05
sexmale        0.656      0.203    3.23   0.0012

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.5    RSS 9.69    GRSq 0.81    RSq 0.981

GLM null.deviance 125 (11 dof)   deviance 4.48 (8 dof)   iters 4

evimp a1h.update1 

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  30.5   24.7

evimp a1h.update1 trim=FALSE

              nsubsets   gcv    rss
ldose                3 100.0  100.0
sexmale              1  30.5   24.7
ldose1-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 8 trace FALSE family binomial link probit 

plotmo a1h.update1 
 grid:    sex ldose ldose1
       female   0.5    0.6
-------------------------------------------------------------------------------

> a1h.update2 <- update(a1h, glm=list(family=gaussian, maxit=9), degree=1)
x[12,3] with colnames sexmale ldose ldose1
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 7.7e-05)
After forward pass GRSq 0.743 RSq 0.981
Prune method "none" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.907 RSq 0.981 
GLM numdead: null.deviance 504.25 (11 dof)   deviance 9.692982 (8 dof)   iters 2
GLM numalive: null.deviance 504.25 (11 dof)   deviance 9.692982 (8 dof)   iters 2
> stopifnot(a1h.update2$glm.list[[1]]$control$maxit == 9)
> show.earth.models(a1h.update2, nresponse="numdea")

Print a1h.update2 

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  4.652632  9.692982 0.9069628 0.9807774
numalive 4.652632  9.692982 0.9069628 0.9807774
All      9.305263 19.385965 0.9069628 0.9807774

GLM (family gaussian, link identity)
         null.deviance df deviance df iters converged
numdead         504.25 11 9.692982  8     2         1
numalive        504.25 11 9.692982  8     2         1

Summary a1h.update2 

Call: earth(formula=SF~sex+ldose+ldose1, trace=1,
            glm=list(family=gaussian,maxit=9), pmethod=PMETHOD, degree=1)

GLM coefficients
              numdead  numalive
(Intercept)  5.890351 14.109649
sexmale      3.166667 -3.166667
h(0-ldose)  -3.684210  3.684210
h(ldose-0)   3.618421 -3.618421

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  4.652632  9.692982 0.9069628 0.9807774
numalive 4.652632  9.692982 0.9069628 0.9807774
All      9.305263 19.385965 0.9069628 0.9807774

GLM (family gaussian, link identity)
         null.deviance df deviance df iters converged
numdead         504.25 11 9.692982  8     2         1
numalive        504.25 11 9.692982  8     2         1

Summary a1h.update2 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=SF~sex+ldose+ldose1, trace=1,
            glm=list(family=gaussian,maxit=9), pmethod=PMETHOD, degree=1)

Earth coefficients
            numdead numalive
(Intercept)  5.8904  14.1096
h(ldose-0)   3.6184  -3.6184
h(0-ldose)  -3.6842   3.6842
sexmale      3.1667  -3.1667

GLM coefficients
            numdead numalive
(Intercept)  5.8904  14.1096
h(ldose-0)   3.6184  -3.6184
h(0-ldose)  -3.6842   3.6842
sexmale      3.1667  -3.1667

GLM numdead deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.372807  -0.702851   0.015351   0.366228   1.706140  

GLM numdead coefficients (family gaussian, link identity)
            Estimate Std. Error t value  Pr(>|t|)
(Intercept)  5.89035    0.68772  8.5650 2.663e-05
h(ldose-0)   3.61842    0.33406 10.8316 4.661e-06
h(0-ldose)  -3.68421    0.50505 -7.2947 8.432e-05
sexmale      3.16667    0.63551  4.9829  0.001076

GLM numdead dispersion parameter for gaussian family taken to be 1.211623

GLM numalive deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.706140  -0.366228  -0.015351   0.702851   1.372807  

GLM numalive coefficients (family gaussian, link identity)
            Estimate Std. Error  t value  Pr(>|t|)
(Intercept) 14.10965    0.68772  20.5166 3.334e-08
h(ldose-0)  -3.61842    0.33406 -10.8316 4.661e-06
h(0-ldose)   3.68421    0.50505   7.2947 8.432e-05
sexmale     -3.16667    0.63551  -4.9829  0.001076

GLM numalive dispersion parameter for gaussian family taken to be 1.211623

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale, ldose1-unused
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
            GCV    RSS    GRSq     RSq
numdead  4.6526  9.693 0.90696 0.98078
numalive 4.6526  9.693 0.90696 0.98078
All      9.3053 19.386 0.90696 0.98078

GLM (family gaussian, link identity)
         null.deviance df deviance df iters converged
numdead         504.25 11    9.693  8     2         1
numalive        504.25 11    9.693  8     2         1

evimp a1h.update2 

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  33.5   24.7

evimp a1h.update2 trim=FALSE

              nsubsets   gcv    rss
ldose                3 100.0  100.0
sexmale              1  33.5   24.7
ldose1-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 9 trace FALSE family gaussian link identity 

plotmo a1h.update2 
 grid:    sex ldose ldose1
       female   0.5    0.6
-------------------------------------------------------------------------------

> 
> # basic check with an I in formula
> a1i <-  earth(SF ~ sex + ldose + I(ldose1-3), glm=list(family="binomial"), trace=1, pmethod=PMETHOD, degree=2)
x[12,3] with colnames sexmale ldose I(ldose1-3)
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> print(summary(a1i))
Call: earth(formula=SF~sex+ldose+I(ldose1-3), trace=1,
            glm=list(family="binomial"), pmethod=PMETHOD, degree=2)

GLM coefficients
               numdead
(Intercept) -1.0992373
sexmale      1.0963463
h(0-ldose)  -1.4542178
h(ldose-0)   0.9083549

Earth selected 4 of 4 terms, and 2 of 3 predictors 
Termination condition: GRSq -Inf at 4 terms
Importance: ldose, sexmale, I(ldose1-3)-unused
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 9.495166    RSS 9.692982    GRSq 0.8101281    RSq 0.9807774

GLM null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
> 
> cat("a2: single response glm model but with a binomial pair of y columns, degree=1\n\n")
a2: single response glm model but with a binomial pair of y columns, degree=1

> a2 <-  earth(SF ~ sex*ldose, glm=list(fa="b"), trace=3, pmethod=PMETHOD)
x[12,3] with colnames sexmale ldose sexmale:ldose
y[12,2] with colnames numdead numalive

Forward pass:    minspan 3    endspan 5    x is 12 by 3 (288 B)

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.8052 0.9211       0.9211    2        ldose           0  2   3   
4      0.9070 0.9808      0.05966    1      sexmale           0< 4       
6     -0.0504 0.9913      0.01054    3 sexmale:ldos           0  5   6   
8        -inf 0.9913            0    -                                reject term

GRSq -Inf at 7 terms, 6 terms used
After forward pass GRSq -in RSq 0.991
Forward pass complete: 7 terms, 6 terms used

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.6912  0.7933     0.6912      1  
          3      0.8052  0.9211     0.1140      1  
          4      0.9070  0.9808     0.1018      2  
          5      0.8568  0.9893    -0.0502      3  
chosen    6     -0.0504  0.9913    -0.9071      3  

Prune method "none" penalty 2 nprune 6: selected 6 of 6 terms, and 3 of 3 predictors
After backward pass GRSq -0.0504 RSq 0.991 

GLM numdead: null.deviance 124.8756 (11 dof)   deviance 2.844964 (6 dof)   iters 4
> show.earth.models(a2)

Print a2 

Earth selected 6 of 6 terms, and 3 of 3 predictors 
Termination condition: GRSq -Inf at 6 terms
Importance: ldose, sexmale, sexmale:ldose
Number of terms at each degree of interaction: 1 5 (additive model)
Earth GCV 52.52632    RSS 4.377193    GRSq -0.0503527    RSq 0.9913194

GLM null.deviance 124.8756 (11 dof)   deviance 2.844964 (6 dof)   iters 4

Summary a2 

Call: earth(formula=SF~sex*ldose, trace=3, glm=list(fa="b"), pmethod=PMETHOD)

GLM coefficients
                      numdead
(Intercept)        -0.7757141
sexmale             0.4206031
h(0-ldose)         -1.7623115
h(ldose-0)          0.6801898
h(0-sexmale:ldose)  0.5785471
h(sexmale:ldose-0)  0.6270137

Earth selected 6 of 6 terms, and 3 of 3 predictors 
Termination condition: GRSq -Inf at 6 terms
Importance: ldose, sexmale, sexmale:ldose
Number of terms at each degree of interaction: 1 5 (additive model)
Earth GCV 52.52632    RSS 4.377193    GRSq -0.0503527    RSq 0.9913194

GLM null.deviance 124.8756 (11 dof)   deviance 2.844964 (6 dof)   iters 4

Summary a2 digits=3, details=TRUE

Call: earth(formula=SF~sex*ldose, trace=3, glm=list(fa="b"), pmethod=PMETHOD)

Earth coefficients
                   numdead
(Intercept)          5.930
h(ldose-0)           3.316
h(0-ldose)          -3.158
sexmale              3.088
h(sexmale:ldose-0)   0.605
h(0-sexmale:ldose)  -1.053

GLM coefficients
                   numdead
(Intercept)         -0.776
h(ldose-0)           0.680
h(0-ldose)          -1.762
sexmale              0.421
h(sexmale:ldose-0)   0.627
h(0-sexmale:ldose)   0.579

GLM deviance residuals:
    Min       1Q   Median       3Q      Max  
-0.7341  -0.2652   0.0655   0.2872   1.0557  

GLM coefficients (family binomial, link logit)
                   Estimate Std. Error z value Pr(>|z|)
(Intercept)          -0.776      0.394   -1.97   0.0490
h(ldose-0)            0.680      0.224    3.04   0.0024
h(0-ldose)           -1.762      0.713   -2.47   0.0135
sexmale               0.421      0.559    0.75   0.4522
h(sexmale:ldose-0)    0.627      0.408    1.54   0.1242
h(0-sexmale:ldose)    0.579      0.847    0.68   0.4946

Number of cases: 12
Earth selected 6 of 6 terms, and 3 of 3 predictors 
Termination condition: GRSq -Inf at 6 terms
Importance: ldose, sexmale, sexmale:ldose
Number of terms at each degree of interaction: 1 5 (additive model)
Earth GCV 52.5    RSS 4.38    GRSq -0.0504    RSq 0.991

GLM null.deviance 125 (11 dof)   deviance 2.84 (6 dof)   iters 4

evimp a2 

              nsubsets   gcv    rss
ldose                5 -22.9  100.0
sexmale              3 -94.5   26.6
sexmale:ldose        2 -100.0   10.3

evimp a2 trim=FALSE

              nsubsets   gcv    rss
ldose                5 -22.9  100.0
sexmale              3 -94.5   26.6
sexmale:ldose        2 -100.0   10.3

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a2 
 grid:    sex ldose
       female   0.5
-------------------------------------------------------------------------------

> # repeat with bpairs arg
> a2a <- earth(SF ~ sex*ldose, glm=list(family="binomial", bpairs=c(TRUE,FALSE)), trace=3, pmethod=PMETHOD)
x[12,3] with colnames sexmale ldose sexmale:ldose
y[12,2] with colnames numdead numalive

Forward pass:    minspan 3    endspan 5    x is 12 by 3 (288 B)

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.8052 0.9211       0.9211    2        ldose           0  2   3   
4      0.9070 0.9808      0.05966    1      sexmale           0< 4       
6     -0.0504 0.9913      0.01054    3 sexmale:ldos           0  5   6   
8        -inf 0.9913            0    -                                reject term

GRSq -Inf at 7 terms, 6 terms used
After forward pass GRSq -in RSq 0.991
Forward pass complete: 7 terms, 6 terms used

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.6912  0.7933     0.6912      1  
          3      0.8052  0.9211     0.1140      1  
          4      0.9070  0.9808     0.1018      2  
          5      0.8568  0.9893    -0.0502      3  
chosen    6     -0.0504  0.9913    -0.9071      3  

Prune method "none" penalty 2 nprune 6: selected 6 of 6 terms, and 3 of 3 predictors
After backward pass GRSq -0.0504 RSq 0.991 

GLM numdead: null.deviance 124.8756 (11 dof)   deviance 2.844964 (6 dof)   iters 4
> stopifnot(identical(a2$glm.list[[1]]$coefficients, a2a$glm.list[[1]]$coefficients))
> 
> a2c <- earth(SF ~ sex, glm=list(family="binomial", bpairs=c(TRUE,FALSE)), trace=0, pmethod=PMETHOD)
> a2update <- update(a2, SF ~ sex, trace=0)
> check.models.equal(a2c, a2update, msg="a2c a2update")
check.models.equal not identical: a2c a2update [but within numerical tolerances]
> 
> # build a standard GLM model for comparison
> cat("a3: direct GLM a3:\n\n")
a3: direct GLM a3:

> a3 <- glm(SF ~ sex * ldose, family="binomial")
> print(summary(a3))

Call:
glm(formula = SF ~ sex * ldose, family = "binomial")

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-1.39849  -0.32094  -0.07592   0.38220   1.10375  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -1.1815     0.2853  -4.141 3.46e-05 ***
sexmale         0.8808     0.3884   2.268   0.0234 *  
ldose           0.9060     0.1671   5.422 5.89e-08 ***
sexmale:ldose   0.3529     0.2700   1.307   0.1912    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 124.8756  on 11  degrees of freedom
Residual deviance:   4.9937  on  8  degrees of freedom
AIC: 43.104

Number of Fisher Scoring iterations: 4

> plotmo(a3, caption="a3 <- glm(SF ~ sex * ldose, family=\"binomial\")")
 grid:    sex ldose
       female   0.5
> cat("-------------------------------------------------------------------------------\n\n")
-------------------------------------------------------------------------------

> 
> # double response glm model with two binomial paired cols
> SF.both <- cbind(SF, SF2)
> cat("a4: double response glm model with two binomial paired cols\n\n")
a4: double response glm model with two binomial paired cols

> a4 <-  earth(SF.both ~ sex*ldose, linpreds=TRUE, glm=list(family="binomial"), trace=1)
x[12,3] with colnames sexmale ldose sexmale:ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6, 8
RSq changed by less than 0.001 at 7 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.783 RSq 0.984
Prune method "backward" penalty 2 nprune 4: selected 3 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.939 RSq 0.975 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> show.earth.models(a4, nresponse="numdead")

Print a4 

Earth selected 3 of 4 terms, and 2 of 3 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale, sexmale:ldose-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a4 

Call: earth(formula=SF.both~sex*ldose, trace=1, glm=list(family="binomial"),
            linpreds=TRUE)

GLM coefficients
              numdead   numdead2
(Intercept) -1.344727 -1.0620705
sexmale      1.100743  0.9311516
ldose        1.064214  1.0759950

Earth selected 3 of 4 terms, and 2 of 3 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale, sexmale:ldose-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a4 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=SF.both~sex*ldose, trace=1, glm=list(family="binomial"),
            linpreds=TRUE)

Earth coefficients
            numdead numdead2
(Intercept)  5.8452   6.6429
ldose        3.6429   3.7143
sexmale      3.1667   2.6667

GLM coefficients
            numdead numdead2
(Intercept) -1.3447 -1.06207
ldose        1.0642  1.07600
sexmale      1.1007  0.93115

GLM numdead deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.105398  -0.653432  -0.022249   0.484706   1.429444  

GLM numdead coefficients (family binomial, link logit)
            Estimate Std. Error z value  Pr(>|z|)
(Intercept) -1.34473    0.27965 -4.8085 1.520e-06
ldose        1.06421    0.13108  8.1190 4.702e-16
sexmale      1.10074    0.35583  3.0935  0.001978

GLM numdead2 deviance residuals:
     Min        1Q    Median        3Q       Max  
-1.25549  -0.73593   0.20315   0.69113   1.32952  

GLM numdead2 coefficients (family binomial, link logit)
            Estimate Std. Error z value  Pr(>|z|)
(Intercept) -1.06207    0.26721 -3.9747 7.048e-05
ldose        1.07600    0.13124  8.1987 2.429e-16
sexmale      0.93115    0.35232  2.6429  0.008219

Number of cases: 12
Earth selected 3 of 4 terms, and 2 of 3 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale, sexmale:ldose-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
            GCV     RSS    GRSq     RSq
numdead  2.3761  9.7024 0.95249 0.98076
numdead2 3.7901 15.4762 0.92646 0.97022
All      6.1662 25.1786 0.93928 0.97541

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead         124.88 11   6.7571  9     4         1
numdead2        128.03 11   8.5725  9     4         1

evimp a4 

        nsubsets   gcv    rss
ldose          2 100.0  100.0
sexmale        1  23.3   22.7

evimp a4 trim=FALSE

                     nsubsets   gcv    rss
ldose                       2 100.0  100.0
sexmale                     1  23.3   22.7
sexmale:ldose-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a4 
 grid:    sex ldose
       female   0.5
-------------------------------------------------------------------------------

> print.stripped.earth.model(a4, "a4")
print.stripped.earth.model(a4)
$dirs
              sexmale ldose sexmale:ldose
(Intercept)         0     0             0
ldose               0     2             0
sexmale             2     0             0
sexmale:ldose       0     0             2

$cuts
              sexmale ldose sexmale:ldose
(Intercept)         0     0             0
ldose               0    -2             0
sexmale             0     0             0
sexmale:ldose       0     0            -2

$selected.terms
[1] 1 2 3

$prune.terms
     [,1] [,2] [,3] [,4]
[1,]    1    0    0    0
[2,]    1    2    0    0
[3,]    1    2    3    0
[4,]    1    2    3    4

$rss
[1] 25.17857

$rsq
[1] 0.9754096

$gcv
[1] 6.166181

$grsq
[1] 0.9392766

$rss.per.response
[1]  9.702381 15.476190

$rsq.per.response
[1] 0.9807588 0.9702190

$gcv.per.response
[1] 2.376093 3.790087

$grsq.per.response
[1] 0.9524860 0.9264592

$rss.per.subset
[1] 1023.91667   76.59524   25.17857   16.51429

$gcv.per.subset
[1] 101.545455  11.347443   6.166181   7.926857

$rss.per.subset
[1] 1023.91667   76.59524   25.17857   16.51429

$gcv.per.subset
[1] 101.545455  11.347443   6.166181   7.926857

$coefficients
             numdead numdead2
(Intercept) 5.845238 6.642857
ldose       3.642857 3.714286
sexmale     3.166667 2.666667

$leverages
 [1] 0.3452381 0.2309524 0.1738095 0.1738095 0.2309524 0.3452381 0.3452381
 [8] 0.2309524 0.1738095 0.1738095 0.2309524 0.3452381

$penalty
[1] 2

$nk
[1] 21

$thresh
[1] 0.001

$termcond
[1] 4

$weights
NULL

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame, 
    weights = weights, na.action = na.action, control = control, 
    model = TRUE, method = "glm.fit", x = TRUE, y = TRUE, contrasts = NULL, 
    trace = (trace >= 2))

Coefficients:
(Intercept)        ldose      sexmale  
     -1.345        1.064        1.101  

Degrees of Freedom: 11 Total (i.e. Null);  9 Residual
Null Deviance:	    124.9 
Residual Deviance: 6.757 	AIC: 42.87

$glm.list[[2]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame, 
    weights = weights, na.action = na.action, control = control, 
    model = TRUE, method = "glm.fit", x = TRUE, y = TRUE, contrasts = NULL, 
    trace = (trace >= 2))

Coefficients:
(Intercept)        ldose      sexmale  
    -1.0621       1.0760       0.9312  

Degrees of Freedom: 11 Total (i.e. Null);  9 Residual
Null Deviance:	    128 
Residual Deviance: 8.572 	AIC: 44.6


$glm.coefficients
              numdead   numdead2
(Intercept) -1.344727 -1.0620705
ldose        1.064214  1.0759950
sexmale      1.100743  0.9311515

$glm.bpairs
[1]  TRUE FALSE  TRUE FALSE

$namesx.org
[1] "sex"   "ldose"

$namesx
[1] "sex"   "ldose"

$terms
SF.both ~ sex * ldose
attr(,"variables")
list(SF.both, sex, ldose)
attr(,"factors")
        sex ldose sex:ldose
SF.both   0     0         0
sex       1     0         1
ldose     0     1         1
attr(,"term.labels")
[1] "sex"       "ldose"     "sex:ldose"
attr(,"order")
[1] 1 1 2
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(SF.both, sex, ldose)
attr(,"dataClasses")
    SF.both         sex       ldose 
"nmatrix.4"    "factor"   "numeric" 

$call
earth(formula = SF.both ~ sex * ldose, trace = 1, glm = list(family = "binomial"), 
    linpreds = TRUE)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> # repeat with bpairs arg
> a4a <- earth(SF.both ~ sex*ldose, linpreds=TRUE, glm=list(fam="bi", bpa=c(TRUE,FALSE,TRUE,FALSE)), trace=1)
x[12,3] with colnames sexmale ldose sexmale:ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6, 8
RSq changed by less than 0.001 at 7 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.783 RSq 0.984
Prune method "backward" penalty 2 nprune 4: selected 3 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.939 RSq 0.975 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> stopifnot(identical(a4$glm.list[[1]]$coefficients, a4a$glm.list[[1]]$coefficients))
> stopifnot(identical(a4$glm.list[[2]]$coefficients, a4a$glm.list[[2]]$coefficients))
> a4update <- update(a4a, trace=0)
> check.models.equal(a4update, a4a, msg="a4update a4a")
check.models.equal not identical: a4update a4a [but within numerical tolerances]
> 
> # alternative way of specifying bpairs
> a4aa <- earth(SF.both ~ sex*ldose, linpreds=TRUE, glm=list(fam="bi", bpa=c(1,3)), trace=1)
x[12,3] with colnames sexmale ldose sexmale:ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6, 8
RSq changed by less than 0.001 at 7 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.783 RSq 0.984
Prune method "backward" penalty 2 nprune 4: selected 3 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.939 RSq 0.975 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> check.models.equal(a4aa, a4a, msg="a4aa a4a")
check.models.equal not identical: a4aa a4a [but within numerical tolerances]
> 
> a4d <- earth(SF.both ~ ldose, linpreds=TRUE, glm=list(fam="bino", bpa=c(TRUE,FALSE,TRUE,FALSE)), trace=0)
> a4update <- update(a4a, form=SF.both ~ ldose)
x[12,1] with colname ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4
RSq changed by less than 0.001 at 3 terms, 2 terms used (DeltaRSq 0)
After forward pass GRSq 0.815 RSq 0.925
Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.888 RSq 0.925 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 16.98403 (10 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 15.90252 (10 dof)   iters 4
> check.models.equal(a4update, a4d, msg="a4update a4d no keepxy")
check.models.equal not identical: a4update a4d no keepxy [but within numerical tolerances]
> 
> # titanic data, multiple responses (i.e. 3 level factor)
> cat("a5: titanic data, multiple responses (i.e. 3 level factor)\n\n")
a5: titanic data, multiple responses (i.e. 3 level factor)

> a5 <- earth(pclass ~ ., data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> show.earth.models(a5, nresponse=1)

Print a5 

Earth selected 9 of 17 terms, and 5 of 5 predictors 
Termination condition: Reached nk 21
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 4 4

Earth
          GCV      RSS        GRSq        RSq
1st 0.1478715 148.5253 0.253819943 0.28210854
2nd 0.1869804 187.8072 0.003405389 0.04118751
3rd 0.1895587 190.3968 0.241872961 0.27061448
All 0.5244105 526.7293 0.175229617 0.20649767

GLM (family binomial, link logit)
    null.deviance   df  deviance   df iters converged
1st      1223.308 1045  894.8141 1037     5         1
2nd      1175.305 1045 1126.9441 1037     5         1
3rd      1448.213 1045 1118.9411 1037     5         1

Summary a5 

Call: earth(formula=pclass~., data=etitanic, trace=0,
            glm=list(family="binomial"), degree=2)

GLM coefficients
                                1st         2nd         3rd
(Intercept)             -2.66307135 -1.93136147  1.37992944
survived                 2.84788552  1.06418271 -2.84378575
sexmale                  1.42483431  0.96598862 -1.45239590
h(sibsp-1)              -0.52879762 -0.64928949  0.79974678
h(2-parch)               1.25518755  0.06534587 -1.29855706
survived * sexmale      -1.25498201 -1.95099222  2.28554497
survived * h(16-age)    -0.17824991  0.09390085  0.02011681
h(55-age) * h(2-parch)  -0.04946408  0.00043737  0.04146455
h(1-sibsp) * h(1-parch) -1.02162885 -0.21902436  1.12490799

Earth selected 9 of 17 terms, and 5 of 5 predictors 
Termination condition: Reached nk 21
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 4 4

Earth
          GCV      RSS        GRSq        RSq
1st 0.1478715 148.5253 0.253819943 0.28210854
2nd 0.1869804 187.8072 0.003405389 0.04118751
3rd 0.1895587 190.3968 0.241872961 0.27061448
All 0.5244105 526.7293 0.175229617 0.20649767

GLM (family binomial, link logit)
    null.deviance   df  deviance   df iters converged
1st      1223.308 1045  894.8141 1037     5         1
2nd      1175.305 1045 1126.9441 1037     5         1
3rd      1448.213 1045 1118.9411 1037     5         1

Summary a5 digits=3, details=TRUE

Call: earth(formula=pclass~., data=etitanic, trace=0,
            glm=list(family="binomial"), degree=2)

Earth coefficients
                            1st      2nd     3rd
(Intercept)              0.1397  0.13822  0.7221
survived                 0.3519  0.16023 -0.5121
h(sibsp-1)              -0.0480 -0.06756  0.1155
h(2-parch)               0.2173  0.00942 -0.2268
survived * h(16-age)    -0.0233  0.01869  0.0046
survived * sexmale      -0.0959 -0.30327  0.3992
sexmale                  0.1094  0.13653 -0.2459
h(55-age) * h(2-parch)  -0.0078  0.00004  0.0078
h(1-sibsp) * h(1-parch) -0.1624 -0.03288  0.1953

GLM coefficients
                            1st     2nd     3rd
(Intercept)             -2.6631 -1.9314  1.3799
survived                 2.8479  1.0642 -2.8438
h(sibsp-1)              -0.5288 -0.6493  0.7997
h(2-parch)               1.2552  0.0653 -1.2986
survived * h(16-age)    -0.1782  0.0939  0.0201
survived * sexmale      -1.2550 -1.9510  2.2855
sexmale                  1.4248  0.9660 -1.4524
h(55-age) * h(2-parch)  -0.0495  0.0004  0.0415
h(1-sibsp) * h(1-parch) -1.0216 -0.2190  1.1249

GLM 1st deviance residuals:
   Min      1Q  Median      3Q     Max  
-2.021  -0.684  -0.358   0.569   2.660  

GLM 1st coefficients (family binomial, link logit)
                        Estimate Std. Error z value Pr(>|z|)
(Intercept)             -2.66307    0.52983   -5.03  5.0e-07
survived                 2.84789    0.51049    5.58  2.4e-08
h(sibsp-1)              -0.52880    0.23651   -2.24  0.02537
h(2-parch)               1.25519    0.18758    6.69  2.2e-11
survived * h(16-age)    -0.17825    0.05157   -3.46  0.00055
survived * sexmale      -1.25498    0.56404   -2.23  0.02608
sexmale                  1.42483    0.50927    2.80  0.00515
h(55-age) * h(2-parch)  -0.04946    0.00441  -11.22  < 2e-16
h(1-sibsp) * h(1-parch) -1.02163    0.21299   -4.80  1.6e-06

GLM 2nd deviance residuals:
   Min      1Q  Median      3Q     Max  
-1.454  -0.807  -0.775  -0.104   2.071  

GLM 2nd coefficients (family binomial, link logit)
                         Estimate Std. Error z value Pr(>|z|)
(Intercept)             -1.931361   0.376978   -5.12  3.0e-07
survived                 1.064183   0.349791    3.04  0.00235
h(sibsp-1)              -0.649289   0.223077   -2.91  0.00361
h(2-parch)               0.065346   0.173310    0.38  0.70614
survived * h(16-age)     0.093901   0.028429    3.30  0.00096
survived * sexmale      -1.950992   0.437220   -4.46  8.1e-06
sexmale                  0.965989   0.343006    2.82  0.00486
h(55-age) * h(2-parch)   0.000437   0.003580    0.12  0.90276
h(1-sibsp) * h(1-parch) -0.219024   0.192991   -1.13  0.25642

GLM 3rd deviance residuals:
   Min      1Q  Median      3Q     Max  
-2.329  -0.839  -0.322   0.899   2.619  

GLM 3rd coefficients (family binomial, link logit)
                        Estimate Std. Error z value Pr(>|z|)
(Intercept)              1.37993    0.35341    3.90  9.4e-05
survived                -2.84379    0.33834   -8.41  < 2e-16
h(sibsp-1)               0.79975    0.19120    4.18  2.9e-05
h(2-parch)              -1.29856    0.19122   -6.79  1.1e-11
survived * h(16-age)     0.02012    0.02845    0.71     0.48
survived * sexmale       2.28554    0.39903    5.73  1.0e-08
sexmale                 -1.45240    0.32194   -4.51  6.4e-06
h(55-age) * h(2-parch)   0.04146    0.00406   10.21  < 2e-16
h(1-sibsp) * h(1-parch)  1.12491    0.20357    5.53  3.3e-08

Number of cases: 1046
Earth selected 9 of 17 terms, and 5 of 5 predictors 
Termination condition: Reached nk 21
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 4 4

Earth
      GCV RSS    GRSq    RSq
1st 0.148 148 0.25382 0.2821
2nd 0.187 188 0.00341 0.0412
3rd 0.190 190 0.24187 0.2706
All 0.524 527 0.17523 0.2065

GLM (family binomial, link logit)
    null.deviance   df deviance   df iters converged
1st          1223 1045      895 1037     5         1
2nd          1175 1045     1127 1037     5         1
3rd          1448 1045     1119 1037     5         1

evimp a5 

         nsubsets   gcv    rss
age             8 100.0  100.0
parch           8 100.0  100.0
survived        7  79.7   81.7
sibsp           5  40.3   48.0
sexmale         4  34.4   41.7

evimp a5 trim=FALSE

         nsubsets   gcv    rss
age             8 100.0  100.0
parch           8 100.0  100.0
survived        7  79.7   81.7
sibsp           5  40.3   48.0
sexmale         4  34.4   41.7

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a5 
 grid:    survived    sex age sibsp parch
                 0 female  28     0     0
-------------------------------------------------------------------------------

> printh(a5$levels)
=== a5$levels
[1] "1st" "2nd" "3rd"
> print.stripped.earth.model(a5, "a5")
print.stripped.earth.model(a5)
$dirs
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0   1     0     0
h(26-age)                    0       0  -1     0     0
survived                     2       0   0     0     0
h(sibsp-1)                   0       0   0     1     0
h(1-sibsp)                   0       0   0    -1     0
h(parch-2)                   0       0   0     0     1
h(2-parch)                   0       0   0     0    -1
survived*h(age-16)           2       0   1     0     0
survived*h(16-age)           2       0  -1     0     0
survived*sexmale             2       2   0     0     0
sexmale                      0       2   0     0     0
h(age-55)*h(2-parch)         0       0   1     0    -1
h(55-age)*h(2-parch)         0       0  -1     0    -1
h(1-sibsp)*h(parch-1)        0       0   0    -1     1
h(1-sibsp)*h(1-parch)        0       0   0    -1    -1
h(age-54)                    0       0   1     0     0

$cuts
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0  26     0     0
h(26-age)                    0       0  26     0     0
survived                     0       0   0     0     0
h(sibsp-1)                   0       0   0     1     0
h(1-sibsp)                   0       0   0     1     0
h(parch-2)                   0       0   0     0     2
h(2-parch)                   0       0   0     0     2
survived*h(age-16)           0       0  16     0     0
survived*h(16-age)           0       0  16     0     0
survived*sexmale             0       0   0     0     0
sexmale                      0       0   0     0     0
h(age-55)*h(2-parch)         0       0  55     0     2
h(55-age)*h(2-parch)         0       0  55     0     2
h(1-sibsp)*h(parch-1)        0       0   0     1     1
h(1-sibsp)*h(1-parch)        0       0   0     1     1
h(age-54)                    0       0  54     0     0

$selected.terms
[1]  1  4  5  8 10 11 12 14 16

$prune.terms
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0
 [2,]    1   14    0    0    0    0    0    0    0     0     0     0     0
 [3,]    1    4   14    0    0    0    0    0    0     0     0     0     0
 [4,]    1    4    8   14    0    0    0    0    0     0     0     0     0
 [5,]    1    4    8   14   16    0    0    0    0     0     0     0     0
 [6,]    1    4    8   11   14   16    0    0    0     0     0     0     0
 [7,]    1    4    8   11   12   14   16    0    0     0     0     0     0
 [8,]    1    4    5    8   11   12   14   16    0     0     0     0     0
 [9,]    1    4    5    8   10   11   12   14   16     0     0     0     0
[10,]    1    4    5    8   10   11   12   14   16    17     0     0     0
[11,]    1    4    5    8   10   11   12   13   14    16    17     0     0
[12,]    1    4    5    7    8   10   11   12   13    14    16    17     0
[13,]    1    3    4    5    7    8   10   11   12    13    14    16    17
[14,]    1    3    4    5    7    8    9   10   11    12    13    14    16
[15,]    1    3    4    5    6    7    8    9   10    11    12    13    14
[16,]    1    3    4    5    6    7    8    9   10    11    12    13    14
[17,]    1    2    3    4    5    6    7    8    9    10    11    12    13
      [,14] [,15] [,16] [,17]
 [1,]     0     0     0     0
 [2,]     0     0     0     0
 [3,]     0     0     0     0
 [4,]     0     0     0     0
 [5,]     0     0     0     0
 [6,]     0     0     0     0
 [7,]     0     0     0     0
 [8,]     0     0     0     0
 [9,]     0     0     0     0
[10,]     0     0     0     0
[11,]     0     0     0     0
[12,]     0     0     0     0
[13,]     0     0     0     0
[14,]    17     0     0     0
[15,]    16    17     0     0
[16,]    15    16    17     0
[17,]    14    15    16    17

$rss
[1] 526.7293

$rsq
[1] 0.2064977

$gcv
[1] 0.5244105

$grsq
[1] 0.1752296

$rss.per.response
[1] 148.5253 187.8072 190.3968

$rsq.per.response
[1] 0.28210854 0.04118751 0.27061448

$gcv.per.response
[1] 0.1478715 0.1869804 0.1895587

$grsq.per.response
[1] 0.253819943 0.003405389 0.241872961

$rss.per.subset
 [1] 663.8031 618.3144 587.1155 558.2529 550.5473 546.0083 539.0533 532.1400
 [9] 526.7293 526.1097 522.0963 519.3960 516.5436 515.0676 514.2161 513.5054
[17] 513.3259

$gcv.per.subset
 [1] 0.6358261 0.5950986 0.5677911 0.5424834 0.5375831 0.5357360 0.5314825
 [8] 0.5272225 0.5244105 0.5263582 0.5249065 0.5247609 0.5244530 0.5255400
[15] 0.5272719 0.5291595 0.5316095

$rss.per.subset
 [1] 663.8031 618.3144 587.1155 558.2529 550.5473 546.0083 539.0533 532.1400
 [9] 526.7293 526.1097 522.0963 519.3960 516.5436 515.0676 514.2161 513.5054
[17] 513.3259

$gcv.per.subset
 [1] 0.6358261 0.5950986 0.5677911 0.5424834 0.5375831 0.5357360 0.5314825
 [8] 0.5272225 0.5244105 0.5263582 0.5249065 0.5247609 0.5244530 0.5255400
[15] 0.5272719 0.5291595 0.5316095

$coefficients
                               1st           2nd          3rd
(Intercept)            0.139677983  0.1382163301  0.722105687
survived               0.351855854  0.1602346217 -0.512090476
h(sibsp-1)            -0.047958497 -0.0675639271  0.115522424
h(2-parch)             0.217333399  0.0094234505 -0.226756850
survived*h(16-age)    -0.023258457  0.0186856516  0.004572806
survived*sexmale      -0.095932289 -0.3032702269  0.399202516
sexmale                0.109367428  0.1365288369 -0.245896265
h(55-age)*h(2-parch)  -0.007847314  0.0000355992  0.007811715
h(1-sibsp)*h(1-parch) -0.162393009 -0.0328783910  0.195271400

$leverages
   [1] 0.005158606 0.033494707 0.017266066 0.011963928 0.017266066 0.011263458
   [7] 0.011670960 0.002889399 0.014370755 0.007592325 0.008274991 0.008886300
  [13] 0.005594526 0.005363932 0.013850834 0.005386378 0.005441478 0.005121957
  [19] 0.002541748 0.010859171 0.005243409 0.009110406 0.006218027 0.005158606
  [25] 0.002710161 0.012630619 0.008624204 0.005253987 0.008931298 0.004090736
  [31] 0.009430977 0.005127648 0.010444850 0.003405728 0.006912318 0.005232760
  [37] 0.003214876 0.004944421 0.006662146 0.015229279 0.010444850 0.006024081
  [43] 0.004090736 0.009776645 0.009588407 0.010855244 0.005865304 0.002362774
  [49] 0.002439326 0.004257037 0.014508881 0.009550159 0.017792581 0.010894224
  [55] 0.005266467 0.006450345 0.011670960 0.008015404 0.008894797 0.012364077
  [61] 0.006922784 0.005335481 0.005127648 0.010435712 0.006644234 0.007314315
  [67] 0.005900089 0.004641118 0.004921387 0.005128157 0.010894224 0.015229279
  [73] 0.006077876 0.010894224 0.005865304 0.006723071 0.007205379 0.012259881
  [79] 0.009011481 0.005147225 0.006370641 0.010894224 0.012055896 0.009167137
  [85] 0.011559223 0.024055130 0.005771168 0.009166204 0.005000615 0.009176221
  [91] 0.009176221 0.014380004 0.002889399 0.005176960 0.005554695 0.011258343
  [97] 0.012825352 0.008964545 0.002352479 0.014998031 0.014998031 0.014998031
 [103] 0.013529385 0.011963928 0.010894224 0.005127648 0.017721685 0.012930589
 [109] 0.010894224 0.011731068 0.005304747 0.006522512 0.006979596 0.004641118
 [115] 0.005253987 0.005232760 0.005134791 0.002837924 0.014380004 0.007592325
 [121] 0.013017873 0.006498998 0.005141092 0.005865304 0.011230581 0.005134791
 [127] 0.004356556 0.012630619 0.007445216 0.014091580 0.009476386 0.007774559
 [133] 0.006979596 0.003042767 0.009011481 0.005594526 0.006077876 0.005596952
 [139] 0.003405728 0.007592325 0.005665956 0.005087510 0.010132943 0.007164476
 [145] 0.006979596 0.008894792 0.012238148 0.006979596 0.005554695 0.016839282
 [151] 0.011576857 0.004356556 0.005607255 0.002349345 0.007592325 0.006998599
 [157] 0.012754617 0.008388177 0.005692415 0.008100426 0.005127648 0.008894792
 [163] 0.003405728 0.010444850 0.005665956 0.005516873 0.002386532 0.006080983
 [169] 0.002352479 0.010444850 0.005177299 0.002352479 0.007266584 0.008091037
 [175] 0.008886300 0.005594526 0.004356556 0.007157827 0.008964545 0.006547723
 [181] 0.007592325 0.009555430 0.006922784 0.007111376 0.012104828 0.007592325
 [187] 0.004641118 0.005128157 0.006940939 0.007763244 0.011963928 0.010894224
 [193] 0.007592325 0.005692415 0.005232760 0.006077876 0.002410586 0.004221303
 [199] 0.002984428 0.006469953 0.007950371 0.008356226 0.009167137 0.005127648
 [205] 0.012629506 0.004641118 0.005865304 0.002754773 0.003149675 0.005044914
 [211] 0.002337169 0.010435712 0.005147225 0.004356556 0.002541748 0.005147225
 [217] 0.011026399 0.011258343 0.002362774 0.013933400 0.010020765 0.010020765
 [223] 0.011963928 0.010894224 0.005594526 0.006979596 0.005127648 0.008843781
 [229] 0.005848877 0.008894792 0.009166204 0.007318124 0.013850834 0.008931298
 [235] 0.007592325 0.007592325 0.007046220 0.008886300 0.012792003 0.007763244
 [241] 0.019643889 0.011059261 0.004945241 0.011026399 0.008797985 0.007592325
 [247] 0.016103256 0.007956525 0.010489334 0.010444850 0.011026399 0.021013236
 [253] 0.007592325 0.007775286 0.010894224 0.005814165 0.004921387 0.014091580
 [259] 0.005592625 0.017792581 0.004921387 0.008803201 0.003042767 0.007592325
 [265] 0.004641118 0.005253987 0.011026399 0.011670960 0.007592325 0.005985287
 [271] 0.005558420 0.010444850 0.010894224 0.006077876 0.005134791 0.005661786
 [277] 0.011963928 0.005441478 0.006080983 0.005735633 0.011358608 0.005115432
 [283] 0.007592325 0.005335481 0.006410926 0.007108739 0.002352479 0.003998081
 [289] 0.002710161 0.006362237 0.007036115 0.007592325 0.003998081 0.002984428
 [295] 0.005335481 0.002439326 0.005966785 0.012025706 0.008624204 0.002439326
 [301] 0.033505449 0.023497806 0.006963553 0.010894224 0.008843781 0.006498998
 [307] 0.002984428 0.002601141 0.003405728 0.002510862 0.005594526 0.010053817
 [313] 0.006077876 0.004945241 0.008380851 0.006893482 0.005335481 0.002710161
 [319] 0.003405728 0.006218027 0.033794505 0.011073682 0.005232760 0.005253987
 [325] 0.003757866 0.016794103 0.010616876 0.006345057 0.006522512 0.014695434
 [331] 0.005079416 0.010894224 0.006469953 0.007108739 0.002386532 0.002439326
 [337] 0.009364483 0.013599923 0.005148940 0.004899238 0.005900089 0.012229617
 [343] 0.003333663 0.013085174 0.003998081 0.010894224 0.005208306 0.002340601
 [349] 0.004257037 0.006469953 0.007594859 0.002710161 0.003998081 0.005502815
 [355] 0.004872402 0.007157827 0.016579641 0.005239689 0.004872402 0.007202156
 [361] 0.006978130 0.002984428 0.003333663 0.003998081 0.006851464 0.007034064
 [367] 0.003998081 0.002541748 0.013173866 0.002463348 0.006613420 0.006362237
 [373] 0.005191235 0.004534736 0.002601141 0.004641118 0.007616884 0.007616884
 [379] 0.002837924 0.002837924 0.002403690 0.002352479 0.006345057 0.002352479
 [385] 0.032582313 0.010894224 0.003843658 0.015413122 0.005222587 0.013850834
 [391] 0.002352479 0.015453503 0.005276052 0.005134791 0.010894224 0.010894224
 [397] 0.011963928 0.010894224 0.010444850 0.008528887 0.008039888 0.009021505
 [403] 0.012163845 0.006245578 0.005096049 0.002541748 0.010894224 0.005607255
 [409] 0.007552456 0.007034064 0.003333663 0.009776645 0.011026399 0.021013236
 [415] 0.002362774 0.006991980 0.007164476 0.006065037 0.004641118 0.008528887
 [421] 0.008838557 0.002340601 0.005737937 0.006362237 0.007594859 0.012484856
 [427] 0.002463348 0.006912318 0.007592325 0.002337169 0.011957304 0.005168804
 [433] 0.033646698 0.026235307 0.011963928 0.010894224 0.006991980 0.005191235
 [439] 0.002541748 0.002837924 0.007592325 0.009166204 0.007768811 0.019163075
 [445] 0.033197605 0.005148940 0.005125845 0.002352479 0.003042767 0.002340601
 [451] 0.002352479 0.004356556 0.005175567 0.004973780 0.010327659 0.002889399
 [457] 0.004944421 0.007592325 0.002510862 0.007157827 0.002889399 0.004534736
 [463] 0.007592325 0.006345354 0.009798160 0.027736707 0.024481800 0.011963928
 [469] 0.002601141 0.005696542 0.002439326 0.010097540 0.005158606 0.002889399
 [475] 0.009693527 0.002984428 0.008869857 0.002439326 0.005441478 0.003757866
 [481] 0.003214876 0.005293246 0.006498998 0.005276052 0.005121957 0.002403690
 [487] 0.008827158 0.002510862 0.028417425 0.010862136 0.010894224 0.002541748
 [493] 0.006362237 0.018644724 0.005208306 0.002984428 0.031945235 0.024481800
 [499] 0.010020765 0.008444309 0.003757866 0.006080983 0.002601141 0.002710161
 [505] 0.002510862 0.005079416 0.010894224 0.006280619 0.005127648 0.007592325
 [511] 0.005127648 0.002463348 0.005848877 0.002710161 0.003214876 0.002710161
 [517] 0.003875631 0.005146359 0.008444309 0.002984428 0.005208306 0.005276748
 [523] 0.006469953 0.014734225 0.003042767 0.005115432 0.006410926 0.007217699
 [529] 0.005115432 0.009630894 0.005848877 0.005132249 0.006644234 0.007034064
 [535] 0.027736707 0.021264885 0.010894224 0.033984602 0.020170908 0.011963928
 [541] 0.010894224 0.007592325 0.008803201 0.005363932 0.012308595 0.003405728
 [547] 0.011963928 0.005938866 0.004872828 0.007266584 0.009228074 0.010097540
 [553] 0.006736118 0.002352479 0.002601141 0.015822134 0.031945235 0.005502815
 [559] 0.009110406 0.002601141 0.003536394 0.002837924 0.002710161 0.002463348
 [565] 0.003998081 0.002340601 0.008624204 0.023088199 0.028683036 0.028683036
 [571] 0.025826021 0.028683036 0.028683036 0.028683036 0.011963928 0.009011481
 [577] 0.002601141 0.017266066 0.003536394 0.002601141 0.006893482 0.015836517
 [583] 0.002837924 0.002463348 0.023088199 0.023088199 0.045566605 0.023088199
 [589] 0.039375881 0.011963928 0.009519634 0.010894224 0.006912318 0.003333663
 [595] 0.002984428 0.013253497 0.002352479 0.002984428 0.008555300 0.003536394
 [601] 0.006349098 0.018745469 0.036159802 0.036159802 0.020292844 0.010894224
 [607] 0.006736118 0.003042767 0.002601141 0.010097540 0.012163845 0.012668599
 [613] 0.012184767 0.003149675 0.003757866 0.002601141 0.003149675 0.003536394
 [619] 0.008797985 0.003333663 0.003998081 0.002601141 0.007051171 0.012754646
 [625] 0.005181020 0.011999189 0.003333663 0.005900089 0.012736086 0.006469953
 [631] 0.007407921 0.003149675 0.002463348 0.012973707 0.009886162 0.003757866
 [637] 0.013062285 0.012601100 0.012229617 0.003998081 0.002754773 0.004257037
 [643] 0.004257037 0.012601100 0.003333663 0.003333663 0.002439326 0.002837924
 [649] 0.007266584 0.012990238 0.002439326 0.002837924 0.003333663 0.008797985
 [655] 0.002386532 0.006759487 0.008356226 0.003536394 0.010576520 0.002837924
 [661] 0.002541748 0.002837924 0.002337169 0.002337169 0.005900089 0.012229617
 [667] 0.007592325 0.003615322 0.002463348 0.002510862 0.003757866 0.002352479
 [673] 0.011781432 0.024481800 0.010894224 0.007592325 0.003757866 0.005582043
 [679] 0.005317100 0.004257037 0.003064709 0.010435712 0.012484856 0.003757866
 [685] 0.005127648 0.008869857 0.011963928 0.005117464 0.011952523 0.002510862
 [691] 0.002710161 0.008528887 0.003149675 0.009021505 0.009940717 0.012121784
 [697] 0.007036115 0.008827158 0.004534736 0.033197605 0.037132184 0.011963928
 [703] 0.010894224 0.002710161 0.003149675 0.002541748 0.006498998 0.004257037
 [709] 0.003405728 0.003615322 0.002340601 0.010327659 0.005127648 0.012308595
 [715] 0.005737937 0.002362774 0.007592325 0.009364483 0.007217699 0.007950371
 [721] 0.003998081 0.004534736 0.004090736 0.011963928 0.005853406 0.006029012
 [727] 0.004641118 0.026204360 0.003126479 0.003126479 0.003998081 0.002601141
 [733] 0.015220999 0.015220999 0.009821294 0.011963928 0.017266066 0.002710161
 [739] 0.003149675 0.007266584 0.015552639 0.005123271 0.003214876 0.004899238
 [745] 0.002754773 0.038497738 0.038497738 0.038497738 0.044190141 0.044190141
 [751] 0.038497738 0.011963928 0.017266066 0.005966785 0.002340601 0.003536394
 [757] 0.008343378 0.008134451 0.003757866 0.012308595 0.013253497 0.006547723
 [763] 0.007594859 0.003536394 0.002908833 0.008923527 0.006759487 0.003333663
 [769] 0.008388177 0.002710161 0.006204359 0.009011481 0.013062285 0.005363932
 [775] 0.012387354 0.005900089 0.002439326 0.012180975 0.028417425 0.005232760
 [781] 0.003615322 0.002439326 0.005276748 0.003405728 0.002352479 0.014734225
 [787] 0.014847985 0.008869857 0.009886162 0.003536394 0.004944421 0.008640158
 [793] 0.002403690 0.009110406 0.003149675 0.002362774 0.002337169 0.002386532
 [799] 0.021552086 0.032481486 0.005266467 0.002362774 0.003757866 0.010894224
 [805] 0.002984428 0.008797985 0.002510862 0.015460369 0.015300409 0.008797985
 [811] 0.004257037 0.003333663 0.002352479 0.009886162 0.002362774 0.003149675
 [817] 0.021264885 0.010881080 0.003875631 0.002431176 0.003843658 0.016687392
 [823] 0.008294185 0.023034733 0.018030683 0.005037673 0.013598416 0.005772631
 [829] 0.017266066 0.009228074 0.012990238 0.005900089 0.009110406 0.002386532
 [835] 0.002386532 0.003149675 0.009693527 0.002340601 0.002431176 0.002541748
 [841] 0.002889399 0.002837924 0.012248577 0.014984041 0.006450345 0.014704151
 [847] 0.013624959 0.002439326 0.006410926 0.014781734 0.003432686 0.009011481
 [853] 0.005966785 0.005737937 0.008797985 0.009364483 0.003149675 0.002386532
 [859] 0.012253491 0.002463348 0.002362774 0.007373145 0.012679208 0.007046220
 [865] 0.015639072 0.007592325 0.009886162 0.002837924 0.003333663 0.002439326
 [871] 0.002710161 0.016668242 0.005000615 0.002403690 0.005594526 0.003998081
 [877] 0.003149675 0.007373145 0.033646698 0.011429649 0.005428273 0.002362774
 [883] 0.014800364 0.009798160 0.012195925 0.002439326 0.006736118 0.005363932
 [889] 0.003333663 0.003214876 0.009286256 0.003333663 0.002410586 0.005900089
 [895] 0.007592325 0.002984428 0.005900089 0.011781432 0.002439326 0.005239689
 [901] 0.012282051 0.002439326 0.008797985 0.003536394 0.012387354 0.012736086
 [907] 0.003536394 0.004534736 0.005115432 0.012245706 0.011773651 0.018198928
 [913] 0.017813362 0.017266066 0.023447722 0.022817686 0.023331002 0.022188904
 [919] 0.022295835 0.017266066 0.003333663 0.003757866 0.002340601 0.007822697
 [925] 0.013359360 0.017266066 0.003333663 0.002710161 0.003149675 0.012630619
 [931] 0.002837924 0.012180975 0.003757866 0.006893482 0.013062285 0.008797985
 [937] 0.004257037 0.002837924 0.002754773 0.003333663 0.022565922 0.023111619
 [943] 0.022817686 0.023331002 0.022729079 0.017266066 0.012484856 0.002463348
 [949] 0.009166204 0.017719872 0.013476545 0.005772631 0.017266066 0.005607255
 [955] 0.004534736 0.002710161 0.002819743 0.119830700 0.002837924 0.006080983
 [961] 0.002889399 0.032481486 0.010894224 0.021264885 0.009228074 0.003536394
 [967] 0.002771700 0.008869857 0.003149675 0.003042767 0.003333663 0.006736118
 [973] 0.013529385 0.013529385 0.019026655 0.019026655 0.011963928 0.017266066
 [979] 0.003757866 0.002352479 0.002340601 0.002362774 0.005737937 0.003333663
 [985] 0.007592325 0.003757866 0.012484856 0.008803201 0.002510862 0.013476545
 [991] 0.011957161 0.011130469 0.010197281 0.002710161 0.007592325 0.010710424
 [997] 0.002837924 0.009228074 0.002403690 0.033555247 0.005665956 0.002340601
[1003] 0.002342481 0.003843658 0.009228074 0.014714111 0.009074434 0.010894224
[1009] 0.002541748 0.006736118 0.010444850 0.006381420 0.011963928 0.017266066
[1015] 0.005119907 0.011966485 0.002362774 0.002439326 0.002439326 0.004641118
[1021] 0.017260659 0.015550914 0.010217375 0.014731610 0.009693527 0.003536394
[1027] 0.013939585 0.003149675 0.003149675 0.002349345 0.005554695 0.005966785
[1033] 0.008356226 0.007616884 0.008894797 0.002410586 0.003333663 0.002510862
[1039] 0.002541748 0.006644234 0.009470932 0.004221303 0.016675168 0.002553659
[1045] 0.002510862 0.002386532

$penalty
[1] 3

$nk
[1] 21

$thresh
[1] 0.001

$termcond
[1] 7

$weights
NULL

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame, 
    weights = weights, na.action = na.action, control = control, 
    model = TRUE, method = "glm.fit", x = TRUE, y = TRUE, contrasts = NULL, 
    trace = (trace >= 2))

Coefficients:
            (Intercept)                 survived             `h(sibsp-1)`  
               -2.66307                  2.84789                 -0.52880  
           `h(2-parch)`     `survived*h(16-age)`       `survived*sexmale`  
                1.25519                 -0.17825                 -1.25498  
                sexmale   `h(55-age)*h(2-parch)`  `h(1-sibsp)*h(1-parch)`  
                1.42483                 -0.04946                 -1.02163  

Degrees of Freedom: 1045 Total (i.e. Null);  1037 Residual
Null Deviance:	    1223 
Residual Deviance: 894.8 	AIC: 912.8

$glm.list[[2]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame, 
    weights = weights, na.action = na.action, control = control, 
    model = TRUE, method = "glm.fit", x = TRUE, y = TRUE, contrasts = NULL, 
    trace = (trace >= 2))

Coefficients:
            (Intercept)                 survived             `h(sibsp-1)`  
             -1.9313615                1.0641827               -0.6492895  
           `h(2-parch)`     `survived*h(16-age)`       `survived*sexmale`  
              0.0653459                0.0939009               -1.9509922  
                sexmale   `h(55-age)*h(2-parch)`  `h(1-sibsp)*h(1-parch)`  
              0.9659886                0.0004374               -0.2190244  

Degrees of Freedom: 1045 Total (i.e. Null);  1037 Residual
Null Deviance:	    1175 
Residual Deviance: 1127 	AIC: 1145

$glm.list[[3]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame, 
    weights = weights, na.action = na.action, control = control, 
    model = TRUE, method = "glm.fit", x = TRUE, y = TRUE, contrasts = NULL, 
    trace = (trace >= 2))

Coefficients:
            (Intercept)                 survived             `h(sibsp-1)`  
                1.37993                 -2.84379                  0.79975  
           `h(2-parch)`     `survived*h(16-age)`       `survived*sexmale`  
               -1.29856                  0.02012                  2.28554  
                sexmale   `h(55-age)*h(2-parch)`  `h(1-sibsp)*h(1-parch)`  
               -1.45240                  0.04146                  1.12491  

Degrees of Freedom: 1045 Total (i.e. Null);  1037 Residual
Null Deviance:	    1448 
Residual Deviance: 1119 	AIC: 1137


$glm.coefficients
                              1st          2nd         3rd
(Intercept)           -2.66307135 -1.931361472  1.37992944
survived               2.84788552  1.064182711 -2.84378575
h(sibsp-1)            -0.52879762 -0.649289486  0.79974678
h(2-parch)             1.25518755  0.065345867 -1.29855706
survived*h(16-age)    -0.17824991  0.093900852  0.02011681
survived*sexmale      -1.25498201 -1.950992216  2.28554497
sexmale                1.42483431  0.965988623 -1.45239590
h(55-age)*h(2-parch)  -0.04946408  0.000437374  0.04146455
h(1-sibsp)*h(1-parch) -1.02162885 -0.219024356  1.12490799

$namesx.org
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$namesx
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$levels
[1] "1st" "2nd" "3rd"

$terms
pclass ~ survived + sex + age + sibsp + parch
attr(,"variables")
list(pclass, survived, sex, age, sibsp, parch)
attr(,"factors")
         survived sex age sibsp parch
pclass          0   0   0     0     0
survived        1   0   0     0     0
sex             0   1   0     0     0
age             0   0   1     0     0
sibsp           0   0   0     1     0
parch           0   0   0     0     1
attr(,"term.labels")
[1] "survived" "sex"      "age"      "sibsp"    "parch"   
attr(,"order")
[1] 1 1 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(pclass, survived, sex, age, sibsp, parch)
attr(,"dataClasses")
   pclass  survived       sex       age     sibsp     parch 
 "factor" "numeric"  "factor" "numeric" "numeric" "numeric" 

$call
earth(formula = pclass ~ ., data = etitanic, trace = 0, glm = list(family = "binomial"), 
    degree = 2)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> # variance models are not supported for multiple response models
> expect.err(try(earth(pclass ~ ., data=etitanic, ncross=3, nfold=3, varmod.method="lm")), "variance models are not supported for multiple response models")
Error : variance models are not supported for multiple response models
Got error as expected from try(earth(pclass ~ ., data = etitanic, ncross = 3, nfold = 3,     varmod.method = "lm"))
> 
> a5d <- earth(pclass ~ .-age, data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> a5update <- update(a5, form=pclass ~ .-age)
> check.models.equal(a5update, a5d, msg="a5update a5d")
check.models.equal not identical: a5update a5d [but within numerical tolerances]
> 
> a5d <- earth(pclass ~ .-age, data=etitanic, degree=2, glm=list(family="binomial"), trace=0, keepxy=1)
> a5update <- update(a5, form=pclass ~ .-age)
> check.models.equal(a5update, a5d, msg="a5update a5d with keepxy")
check.models.equal not identical: a5update a5d with keepxy [but within numerical tolerances]
> 
> # titanic data, one logical response
> cat("a6: titanic data, one logical response\n\n")
a6: titanic data, one logical response

> pclass1 = (etitanic[,1] == "1st")
> a6 <- earth(pclass1 ~ ., data=etitanic[,-1], degree=2, glm=list(family="binomial"), trace=1)
x[1046,5] with colnames survived sexmale age sibsp parch
y[1046,1] with colname pclass1
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.246 RSq 0.303
Prune method "backward" penalty 3 nprune 17: selected 10 of 17 terms, and 5 of 5 predictors
After backward pass GRSq 0.263 RSq 0.294 
GLM pclass1: null.deviance 1223.308 (1045 dof)   deviance 898.8677 (1036 dof)   iters 5
> show.earth.models(a6)

Print a6 

Earth selected 10 of 17 terms, and 5 of 5 predictors 
Termination condition: Reached nk 21
Importance: age, survived, parch, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6
Earth GCV 0.1461088    RSS 146.0399    GRSq 0.2627145    RSq 0.2941218

GLM null.deviance 1223.308 (1045 dof)   deviance 898.8677 (1036 dof)   iters 5

Summary a6 

Call: earth(formula=pclass1~., data=etitanic[,-1], trace=1,
            glm=list(family="binomial"), degree=2)

GLM coefficients
                            pclass1
(Intercept)             -2.15536466
survived                 2.48613146
h(age-54)                0.46377156
h(2-parch)               1.14564190
survived * h(52-age)    -0.03081539
sexmale * h(age-26)      0.03631076
h(55-age) * h(2-parch)  -0.03458961
h(age-55) * h(2-parch)  -0.28833417
h(1-sibsp) * h(2-parch) -0.44864252
h(sibsp-1) * h(2-parch) -0.76097005

Earth selected 10 of 17 terms, and 5 of 5 predictors 
Termination condition: Reached nk 21
Importance: age, survived, parch, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6
Earth GCV 0.1461088    RSS 146.0399    GRSq 0.2627145    RSq 0.2941218

GLM null.deviance 1223.308 (1045 dof)   deviance 898.8677 (1036 dof)   iters 5

Summary a6 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=pclass1~., data=etitanic[,-1], trace=1,
            glm=list(family="binomial"), degree=2)

Earth coefficients
                           pclass1
(Intercept)              0.1301632
survived                 0.4814561
survived * h(52-age)    -0.0087828
h(2-parch)               0.1572521
h(sibsp-1) * h(2-parch) -0.0603447
h(1-sibsp) * h(2-parch) -0.0685080
sexmale * h(age-26)      0.0066260
h(age-55) * h(2-parch)  -0.0386885
h(55-age) * h(2-parch)  -0.0044698
h(age-54)                0.0636415

GLM coefficients
                          pclass1
(Intercept)             -2.155365
survived                 2.486131
survived * h(52-age)    -0.030815
h(2-parch)               1.145642
h(sibsp-1) * h(2-parch) -0.760970
h(1-sibsp) * h(2-parch) -0.448643
sexmale * h(age-26)      0.036311
h(age-55) * h(2-parch)  -0.288334
h(55-age) * h(2-parch)  -0.034590
h(age-54)                0.463772

GLM deviance residuals:
     Min        1Q    Median        3Q       Max  
-2.35378  -0.64964  -0.38654   0.45424   2.61661  

GLM coefficients (family binomial, link logit)
                          Estimate Std. Error z value  Pr(>|z|)
(Intercept)             -2.1553647  0.2665552 -8.0860 6.166e-16
survived                 2.4861315  0.3401134  7.3097 2.677e-13
survived * h(52-age)    -0.0308154  0.0120686 -2.5533   0.01067
h(2-parch)               1.1456419  0.2469745  4.6387 3.506e-06
h(sibsp-1) * h(2-parch) -0.7609700  0.3270186 -2.3270   0.01997
h(1-sibsp) * h(2-parch) -0.4486425  0.1092515 -4.1065 4.017e-05
sexmale * h(age-26)      0.0363108  0.0152894  2.3749   0.01755
h(age-55) * h(2-parch)  -0.2883342  0.1153556 -2.4995   0.01244
h(55-age) * h(2-parch)  -0.0345896  0.0075046 -4.6091 4.043e-06
h(age-54)                0.4637716  0.2140609  2.1665   0.03027

Number of cases: 1046
Earth selected 10 of 17 terms, and 5 of 5 predictors 
Termination condition: Reached nk 21
Importance: age, survived, parch, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6
Earth GCV 0.14611    RSS 146.04    GRSq 0.26271    RSq 0.29412

GLM null.deviance 1223.3 (1045 dof)   deviance 898.87 (1036 dof)   iters 5

evimp a6 

         nsubsets   gcv    rss
age             9 100.0  100.0
survived        8  63.3   67.2
parch           5  23.9   33.0
sibsp           4  21.8   29.8
sexmale         3  16.3   24.2

evimp a6 trim=FALSE

         nsubsets   gcv    rss
age             9 100.0  100.0
survived        8  63.3   67.2
parch           5  23.9   33.0
sibsp           4  21.8   29.8
sexmale         3  16.3   24.2

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a6 
 grid:    survived    sex age sibsp parch
                 0 female  28     0     0
-------------------------------------------------------------------------------

> printh(a6$levels) # expect levels to be NULL
=== a6$levels
[1] FALSE  TRUE
> print.stripped.earth.model(a6, "a6")
print.stripped.earth.model(a6)
$dirs
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0   1     0     0
h(26-age)                    0       0  -1     0     0
survived                     2       0   0     0     0
survived*h(age-52)           2       0   1     0     0
survived*h(52-age)           2       0  -1     0     0
h(parch-2)                   0       0   0     0     1
h(2-parch)                   0       0   0     0    -1
h(age-26)*h(sibsp-2)         0       0   1     1     0
h(age-26)*h(2-sibsp)         0       0   1    -1     0
h(sibsp-1)*h(2-parch)        0       0   0     1    -1
h(1-sibsp)*h(2-parch)        0       0   0    -1    -1
sexmale*h(age-26)            0       2   1     0     0
h(age-55)*h(2-parch)         0       0   1     0    -1
h(55-age)*h(2-parch)         0       0  -1     0    -1
h(age-54)                    0       0   1     0     0
h(age-17)                    0       0   1     0     0

$cuts
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0  26     0     0
h(26-age)                    0       0  26     0     0
survived                     0       0   0     0     0
survived*h(age-52)           0       0  52     0     0
survived*h(52-age)           0       0  52     0     0
h(parch-2)                   0       0   0     0     2
h(2-parch)                   0       0   0     0     2
h(age-26)*h(sibsp-2)         0       0  26     2     0
h(age-26)*h(2-sibsp)         0       0  26     2     0
h(sibsp-1)*h(2-parch)        0       0   0     1     2
h(1-sibsp)*h(2-parch)        0       0   0     1     2
sexmale*h(age-26)            0       0  26     0     0
h(age-55)*h(2-parch)         0       0  55     0     2
h(55-age)*h(2-parch)         0       0  55     0     2
h(age-54)                    0       0  54     0     0
h(age-17)                    0       0  17     0     0

$selected.terms
 [1]  1  4  6  8 11 12 13 14 15 16

$prune.terms
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0
 [2,]    1    2    0    0    0    0    0    0    0     0     0     0     0
 [3,]    1    2    4    0    0    0    0    0    0     0     0     0     0
 [4,]    1    2    4    6    0    0    0    0    0     0     0     0     0
 [5,]    1    2    3    4    6    0    0    0    0     0     0     0     0
 [6,]    1    4    6    8   12   13    0    0    0     0     0     0     0
 [7,]    1    4    6    8   14   15   16    0    0     0     0     0     0
 [8,]    1    4    6    8   12   14   15   16    0     0     0     0     0
 [9,]    1    4    6    8   12   13   14   15   16     0     0     0     0
[10,]    1    4    6    8   11   12   13   14   15    16     0     0     0
[11,]    1    4    6    8   11   12   13   14   15    16    17     0     0
[12,]    1    2    4    6    8   11   12   13   14    15    16    17     0
[13,]    1    2    3    4    6    8   11   12   13    14    15    16    17
[14,]    1    2    3    4    6    7    8   11   12    13    14    15    16
[15,]    1    2    3    4    6    7    8   10   11    12    13    14    15
[16,]    1    2    3    4    6    7    8    9   10    11    12    13    14
[17,]    1    2    3    4    5    6    7    8    9    10    11    12    13
      [,14] [,15] [,16] [,17]
 [1,]     0     0     0     0
 [2,]     0     0     0     0
 [3,]     0     0     0     0
 [4,]     0     0     0     0
 [5,]     0     0     0     0
 [6,]     0     0     0     0
 [7,]     0     0     0     0
 [8,]     0     0     0     0
 [9,]     0     0     0     0
[10,]     0     0     0     0
[11,]     0     0     0     0
[12,]     0     0     0     0
[13,]     0     0     0     0
[14,]    17     0     0     0
[15,]    16    17     0     0
[16,]    15    16    17     0
[17,]    14    15    16    17

$rss
[1] 146.0399

$rsq
[1] 0.2941218

$gcv
[1] 0.1461088

$grsq
[1] 0.2627145

$rss.per.response
[1] 146.0399

$rsq.per.response
[1] 0.2941218

$gcv.per.response
[1] 0.1461088

$grsq.per.response
[1] 0.2627145

$rss.per.subset
 [1] 206.8910 173.4973 156.0461 152.9652 152.6767 151.0928 149.8526 148.0316
 [9] 146.8059 146.0399 145.8457 145.6514 145.1890 144.6297 144.3103 144.1945
[17] 144.1931

$gcv.per.subset
 [1] 0.1981713 0.1669830 0.1509100 0.1486443 0.1490815 0.1482502 0.1477480
 [8] 0.1466636 0.1461597 0.1461088 0.1466308 0.1471559 0.1474121 0.1475703
[15] 0.1479743 0.1485903 0.1493290

$rss.per.subset
 [1] 206.8910 173.4973 156.0461 152.9652 152.6767 151.0928 149.8526 148.0316
 [9] 146.8059 146.0399 145.8457 145.6514 145.1890 144.6297 144.3103 144.1945
[17] 144.1931

$gcv.per.subset
 [1] 0.1981713 0.1669830 0.1509100 0.1486443 0.1490815 0.1482502 0.1477480
 [8] 0.1466636 0.1461597 0.1461088 0.1466308 0.1471559 0.1474121 0.1475703
[15] 0.1479743 0.1485903 0.1493290

$coefficients
                           pclass1
(Intercept)            0.130163247
survived               0.481456050
survived*h(52-age)    -0.008782781
h(2-parch)             0.157252095
h(sibsp-1)*h(2-parch) -0.060344743
h(1-sibsp)*h(2-parch) -0.068508035
sexmale*h(age-26)      0.006626046
h(age-55)*h(2-parch)  -0.038688500
h(55-age)*h(2-parch)  -0.004469815
h(age-54)              0.063641475

$leverages
   [1] 0.003627610 0.019498104 0.009132649 0.008749840 0.009132649 0.015941844
   [7] 0.038626853 0.003395500 0.031392889 0.068592784 0.011164567 0.009660984
  [13] 0.004077044 0.003778543 0.199300445 0.003539061 0.010630957 0.003832855
  [19] 0.002706644 0.009219836 0.008989740 0.003778543 0.007089418 0.003627610
  [25] 0.002842341 0.007254148 0.009198423 0.004394281 0.003649132 0.005789218
  [31] 0.008060360 0.003656449 0.020762271 0.004423025 0.008838110 0.003489517
  [37] 0.004042887 0.007494078 0.008215637 0.038988222 0.025179634 0.006585672
  [43] 0.005789218 0.009660181 0.015008207 0.007749594 0.022002515 0.002356455
  [49] 0.002525403 0.004860772 0.011464811 0.009910481 0.015812217 0.010223216
  [55] 0.008137625 0.007118778 0.165724255 0.010608619 0.012314403 0.006965773
  [61] 0.006878011 0.004660574 0.003656449 0.012523101 0.007195267 0.007068616
  [67] 0.004533846 0.006888162 0.005579441 0.004816661 0.227043661 0.036420944
  [73] 0.142952297 0.010223216 0.074665268 0.007770618 0.007929130 0.019916413
  [79] 0.003682958 0.003980422 0.006784974 0.007603997 0.007171980 0.010163119
  [85] 0.036264174 0.016582092 0.011917325 0.013058190 0.003617991 0.012999533
  [91] 0.012999533 0.020328062 0.003395500 0.003389744 0.005311887 0.017482046
  [97] 0.006252336 0.005601818 0.002344935 0.007497472 0.007724677 0.007547136
 [103] 0.009132649 0.217590792 0.086193115 0.003656449 0.034877746 0.013719402
 [109] 0.007639386 0.045813930 0.009534303 0.007298428 0.007179732 0.006888162
 [115] 0.004394281 0.003489517 0.007844409 0.002887480 0.020328062 0.068592784
 [121] 0.022049985 0.005515866 0.003957849 0.022002515 0.003389744 0.007844409
 [127] 0.006319875 0.007254148 0.007254148 0.019072223 0.013724239 0.010090301
 [133] 0.007179732 0.003700379 0.003682958 0.004077044 0.013641867 0.011975385
 [139] 0.004423025 0.013737935 0.004640107 0.007365949 0.015292377 0.008761125
 [145] 0.007179732 0.005141578 0.009910539 0.007179732 0.005311887 0.020950551
 [151] 0.017204942 0.006319875 0.008818801 0.002331016 0.010877348 0.008393326
 [157] 0.012834113 0.011062869 0.005696906 0.011723756 0.003656449 0.005141578
 [163] 0.004423025 0.019551605 0.004640107 0.011267116 0.002416354 0.004821611
 [169] 0.002344935 0.020762271 0.004923864 0.002344935 0.006854066 0.008964594
 [175] 0.009660984 0.004077044 0.006319875 0.011919804 0.005601818 0.007036249
 [181] 0.027797799 0.022710390 0.006878011 0.007639755 0.007027791 0.013737935
 [187] 0.006888162 0.003716385 0.006734592 0.007743938 0.048746882 0.008171651
 [193] 0.023358150 0.005696906 0.003489517 0.071496499 0.002466175 0.006049842
 [199] 0.002991809 0.006914861 0.008048196 0.009426022 0.010163119 0.003656449
 [205] 0.021364786 0.006888162 0.014367603 0.003128252 0.003155329 0.006913773
 [211] 0.002311145 0.012523101 0.003980422 0.006319875 0.002706644 0.003980422
 [217] 0.017780499 0.017482046 0.002356455 0.010386005 0.008434245 0.007774221
 [223] 0.112169475 0.019081348 0.004077044 0.007179732 0.003656449 0.004743096
 [229] 0.006121501 0.005141578 0.013058190 0.008258080 0.020420529 0.003649132
 [235] 0.012110259 0.012110259 0.007545302 0.009660984 0.007479255 0.007743938
 [241] 0.014907082 0.020399417 0.005913737 0.015269940 0.004131408 0.016501294
 [247] 0.025849478 0.009969637 0.016135809 0.032485199 0.043165975 0.056400334
 [253] 0.014084087 0.010942981 0.008434245 0.012600634 0.005579441 0.019072223
 [259] 0.010353799 0.008739425 0.005579441 0.003918202 0.003700379 0.014084087
 [265] 0.006888162 0.004394281 0.027718618 0.026625893 0.012341027 0.013034922
 [271] 0.003573001 0.019551605 0.008342234 0.016696108 0.007979466 0.011064408
 [277] 0.008933993 0.010702277 0.004821611 0.010585427 0.003615574 0.003724865
 [283] 0.016501294 0.004660574 0.006831103 0.006816280 0.002344935 0.004401304
 [289] 0.002842341 0.006872367 0.007389955 0.011156730 0.004401304 0.002991809
 [295] 0.004660574 0.002525403 0.009537607 0.007377928 0.009198423 0.002525403
 [301] 0.015587027 0.013637646 0.009595763 0.010223216 0.004743096 0.005515866
 [307] 0.002991809 0.002856391 0.004423025 0.002672082 0.004077044 0.009477543
 [313] 0.029462363 0.005913737 0.008775439 0.007439014 0.004660574 0.002842341
 [319] 0.004423025 0.007089418 0.019582603 0.003625379 0.003917761 0.004394281
 [325] 0.004001025 0.016665597 0.016109837 0.010294043 0.007298428 0.007605757
 [331] 0.003659049 0.016291903 0.006914861 0.006816280 0.002416354 0.002525403
 [337] 0.004077044 0.013402415 0.004118213 0.003851275 0.004533846 0.003504491
 [343] 0.003378038 0.008252799 0.004401304 0.019081348 0.003638345 0.002314985
 [349] 0.004860772 0.006914861 0.007479255 0.002842341 0.004401304 0.004151444
 [355] 0.004026936 0.011919804 0.013402415 0.006452930 0.004302212 0.006922660
 [361] 0.006722246 0.002991809 0.003378038 0.004401304 0.008063157 0.006749475
 [367] 0.004401304 0.002706644 0.007641803 0.002552284 0.007515708 0.006872367
 [373] 0.004167564 0.005379430 0.002856391 0.006888162 0.008219308 0.008219308
 [379] 0.002887480 0.002887480 0.002435555 0.002344935 0.010294043 0.002344935
 [385] 0.012579449 0.007497472 0.005296190 0.008660423 0.003268303 0.028736557
 [391] 0.002344935 0.014133455 0.006895190 0.007979466 0.007497472 0.007497472
 [397] 0.021928522 0.019081348 0.019551605 0.018002576 0.018345268 0.018158289
 [403] 0.004862398 0.007236011 0.006398761 0.002706644 0.023396811 0.008818801
 [409] 0.009609613 0.006749475 0.003378038 0.009660181 0.023917794 0.043965962
 [415] 0.002356455 0.006368424 0.008761125 0.006686935 0.006888162 0.018002576
 [421] 0.018047195 0.002314985 0.004285657 0.006872367 0.007479255 0.003155329
 [427] 0.002552284 0.008838110 0.011156730 0.002311145 0.004590401 0.004135980
 [433] 0.019414003 0.017483476 0.009132649 0.007639386 0.006368424 0.004167564
 [439] 0.002706644 0.002887480 0.014084087 0.013058190 0.009482385 0.035429954
 [445] 0.019414003 0.004118213 0.003719003 0.002344935 0.003700379 0.002314985
 [451] 0.002344935 0.006319875 0.005570227 0.006088270 0.005515866 0.003395500
 [457] 0.007494078 0.060108252 0.002672082 0.011919804 0.003395500 0.005379430
 [463] 0.016501294 0.006786337 0.011906980 0.011687671 0.011049484 0.010469988
 [469] 0.002856391 0.004776607 0.002525403 0.005148951 0.003627610 0.003395500
 [475] 0.004533846 0.002991809 0.003677063 0.002525403 0.010630957 0.004001025
 [481] 0.004042887 0.003615574 0.005515866 0.005740206 0.003832855 0.002435555
 [487] 0.003766753 0.002672082 0.011687671 0.008252799 0.008966869 0.002706644
 [493] 0.006872367 0.070851409 0.003638345 0.002991809 0.012465464 0.011049484
 [499] 0.007497472 0.012544107 0.004001025 0.004821611 0.002856391 0.002842341
 [505] 0.002672082 0.003269047 0.008434245 0.005148951 0.003656449 0.011272114
 [511] 0.003656449 0.002552284 0.006121501 0.002842341 0.004042887 0.002842341
 [517] 0.004193766 0.006594316 0.012544107 0.002991809 0.003638345 0.003688657
 [523] 0.006914861 0.007404006 0.003700379 0.003724865 0.006831103 0.007710781
 [529] 0.003724865 0.009192390 0.006121501 0.003901692 0.007195267 0.006749475
 [535] 0.011687671 0.010437580 0.007887943 0.019498104 0.015723294 0.010234714
 [541] 0.008966869 0.032911595 0.003918202 0.003778543 0.002887480 0.004423025
 [547] 0.009132649 0.005078372 0.004505092 0.006854066 0.003908006 0.005148951
 [553] 0.005922357 0.002344935 0.002856391 0.012947463 0.011767403 0.004151444
 [559] 0.003778543 0.002856391 0.003659936 0.002887480 0.002842341 0.002552284
 [565] 0.004401304 0.002314985 0.009198423 0.009132649 0.009132649 0.009132649
 [571] 0.008739425 0.009132649 0.009132649 0.009132649 0.011903741 0.003682958
 [577] 0.002856391 0.009132649 0.003659936 0.002856391 0.007439014 0.009426022
 [583] 0.002887480 0.002552284 0.009132649 0.009132649 0.017483476 0.009132649
 [589] 0.015723294 0.012597356 0.004285657 0.011273711 0.008838110 0.003378038
 [595] 0.002991809 0.004860772 0.002344935 0.002991809 0.008548446 0.003659936
 [601] 0.006776475 0.071386185 0.015760153 0.015760153 0.013040419 0.007497472
 [607] 0.005922357 0.003700379 0.002856391 0.005148951 0.003740119 0.007030435
 [613] 0.002929631 0.003155329 0.004001025 0.002856391 0.003155329 0.003659936
 [619] 0.004131408 0.003378038 0.004401304 0.002856391 0.007046089 0.006300400
 [625] 0.005683415 0.005007897 0.003378038 0.004533846 0.003659936 0.006914861
 [631] 0.007935449 0.003155329 0.002552284 0.004193766 0.004821611 0.004001025
 [637] 0.004401304 0.003378038 0.003504491 0.004401304 0.003128252 0.004860772
 [643] 0.004860772 0.003378038 0.003378038 0.003378038 0.002525403 0.002887480
 [649] 0.006854066 0.006917474 0.002525403 0.002887480 0.003378038 0.004131408
 [655] 0.002416354 0.007391915 0.009426022 0.003659936 0.005922357 0.002887480
 [661] 0.002706644 0.002887480 0.002311145 0.002311145 0.004533846 0.003504491
 [667] 0.064266250 0.004840793 0.002552284 0.002672082 0.004001025 0.002344935
 [673] 0.007772312 0.011049484 0.010223216 0.011272114 0.004001025 0.004382634
 [679] 0.006211684 0.004860772 0.003066170 0.012523101 0.003155329 0.004001025
 [685] 0.003656449 0.003677063 0.009132649 0.004294927 0.004670376 0.002672082
 [691] 0.002842341 0.018002576 0.003155329 0.018158289 0.019194565 0.009068952
 [697] 0.007389955 0.003766753 0.005379430 0.019414003 0.020268629 0.009132649
 [703] 0.008966869 0.002842341 0.003155329 0.002706644 0.005515866 0.004860772
 [709] 0.004423025 0.004840793 0.002314985 0.005515866 0.003656449 0.002887480
 [715] 0.004285657 0.002356455 0.027797799 0.004077044 0.007710781 0.008048196
 [721] 0.004401304 0.005379430 0.005789218 0.011903741 0.004962986 0.005208555
 [727] 0.006888162 0.014808115 0.003866929 0.003866929 0.004401304 0.002856391
 [733] 0.009132649 0.009132649 0.009132649 0.009132649 0.009132649 0.002842341
 [739] 0.003155329 0.006854066 0.012713961 0.004197687 0.004042887 0.003851275
 [745] 0.003128252 0.009132649 0.009132649 0.009132649 0.009132649 0.009132649
 [751] 0.009132649 0.012597356 0.009132649 0.009537607 0.002314985 0.003659936
 [757] 0.019505548 0.018094381 0.004001025 0.002887480 0.004860772 0.007036249
 [763] 0.007479255 0.003659936 0.002932246 0.021111107 0.007391915 0.003378038
 [769] 0.011062869 0.002842341 0.008860569 0.003682958 0.004401304 0.003778543
 [775] 0.002991809 0.004533846 0.002525403 0.003062061 0.011004482 0.003917761
 [781] 0.004840793 0.002525403 0.003688657 0.004423025 0.002344935 0.007404006
 [787] 0.007439014 0.003677063 0.004821611 0.003659936 0.007494078 0.009946639
 [793] 0.002435555 0.003778543 0.003155329 0.002356455 0.002311145 0.002416354
 [799] 0.010437580 0.012352141 0.008137625 0.002356455 0.004001025 0.007603997
 [805] 0.002991809 0.004131408 0.002672082 0.008562356 0.008219308 0.004131408
 [811] 0.004860772 0.003378038 0.002344935 0.004821611 0.002356455 0.003155329
 [817] 0.009779886 0.010924538 0.004193766 0.002489216 0.005296190 0.018047195
 [823] 0.018194716 0.016582092 0.019219619 0.003625379 0.008584852 0.004862398
 [829] 0.009132649 0.003908006 0.006917474 0.004533846 0.003778543 0.002416354
 [835] 0.002416354 0.003155329 0.004533846 0.002314985 0.002489216 0.002706644
 [841] 0.003395500 0.002887480 0.002842341 0.014369417 0.007118778 0.007795417
 [847] 0.008775439 0.002525403 0.006831103 0.007391915 0.003511588 0.003682958
 [853] 0.009537607 0.004285657 0.004131408 0.004077044 0.003155329 0.002416354
 [859] 0.003652092 0.002552284 0.002356455 0.007379284 0.005646387 0.007545302
 [865] 0.008964594 0.012839829 0.004821611 0.002887480 0.003378038 0.002525403
 [871] 0.002842341 0.008660423 0.003253484 0.002435555 0.004077044 0.004401304
 [877] 0.003155329 0.007379284 0.019414003 0.004221652 0.004413023 0.002356455
 [883] 0.013267431 0.011906980 0.003253681 0.002525403 0.005922357 0.003778543
 [889] 0.003378038 0.004042887 0.007353087 0.003378038 0.002466175 0.004533846
 [895] 0.014084087 0.002991809 0.004533846 0.007178353 0.002525403 0.005307064
 [901] 0.003814490 0.002525403 0.004131408 0.003659936 0.002991809 0.003659936
 [907] 0.003659936 0.005379430 0.003724865 0.019574917 0.018719029 0.019338749
 [913] 0.018379870 0.009132649 0.039706521 0.038681836 0.039498747 0.038143636
 [919] 0.038159654 0.009132649 0.003378038 0.004001025 0.002314985 0.008671501
 [925] 0.007924954 0.009132649 0.003378038 0.002842341 0.003155329 0.007254148
 [931] 0.002887480 0.003062061 0.004001025 0.007439014 0.004401304 0.004131408
 [937] 0.004860772 0.002887480 0.003128252 0.003378038 0.038369259 0.039127590
 [943] 0.038681836 0.039498747 0.038562846 0.009132649 0.003155329 0.002552284
 [949] 0.013058190 0.020075691 0.008247504 0.004862398 0.009132649 0.008818801
 [955] 0.005379430 0.002842341 0.003257172 0.009132649 0.002887480 0.004821611
 [961] 0.003395500 0.012352141 0.007497472 0.010437580 0.003908006 0.003659936
 [967] 0.002857512 0.003677063 0.003155329 0.003700379 0.003378038 0.005922357
 [973] 0.009132649 0.009132649 0.009132649 0.009132649 0.012597356 0.009132649
 [979] 0.004001025 0.002344935 0.002314985 0.002356455 0.004285657 0.003378038
 [985] 0.013128288 0.004001025 0.003155329 0.003918202 0.002672082 0.006880629
 [991] 0.004732560 0.006854066 0.011507036 0.002842341 0.098091265 0.007944077
 [997] 0.002887480 0.003908006 0.002435555 0.012048492 0.005144835 0.002314985
[1003] 0.002323336 0.005296190 0.003908006 0.008759569 0.007772312 0.007887943
[1009] 0.002706644 0.005922357 0.037221056 0.005780726 0.012969902 0.009132649
[1015] 0.004604414 0.004809542 0.002356455 0.002525403 0.002525403 0.006888162
[1021] 0.018846711 0.067694227 0.019601608 0.008044268 0.004533846 0.003659936
[1027] 0.006594316 0.003155329 0.003155329 0.002331016 0.005311887 0.009537607
[1033] 0.009426022 0.008219308 0.012314403 0.002466175 0.003378038 0.002672082
[1039] 0.002706644 0.007195267 0.011286118 0.006049842 0.011507139 0.002759533
[1045] 0.002672082 0.002416354

$penalty
[1] 3

$nk
[1] 21

$thresh
[1] 0.001

$termcond
[1] 7

$weights
NULL

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame, 
    weights = weights, na.action = na.action, control = control, 
    model = TRUE, method = "glm.fit", x = TRUE, y = TRUE, contrasts = NULL, 
    trace = (trace >= 2))

Coefficients:
            (Intercept)                 survived     `survived*h(52-age)`  
               -2.15536                  2.48613                 -0.03082  
           `h(2-parch)`  `h(sibsp-1)*h(2-parch)`  `h(1-sibsp)*h(2-parch)`  
                1.14564                 -0.76097                 -0.44864  
    `sexmale*h(age-26)`   `h(age-55)*h(2-parch)`   `h(55-age)*h(2-parch)`  
                0.03631                 -0.28833                 -0.03459  
            `h(age-54)`  
                0.46377  

Degrees of Freedom: 1045 Total (i.e. Null);  1036 Residual
Null Deviance:	    1223 
Residual Deviance: 898.9 	AIC: 918.9


$glm.coefficients
                          pclass1
(Intercept)           -2.15536466
survived               2.48613146
survived*h(52-age)    -0.03081539
h(2-parch)             1.14564190
h(sibsp-1)*h(2-parch) -0.76097005
h(1-sibsp)*h(2-parch) -0.44864252
sexmale*h(age-26)      0.03631076
h(age-55)*h(2-parch)  -0.28833417
h(55-age)*h(2-parch)  -0.03458961
h(age-54)              0.46377156

$namesx.org
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$namesx
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$levels
[1] FALSE  TRUE

$terms
pclass1 ~ survived + sex + age + sibsp + parch
attr(,"variables")
list(pclass1, survived, sex, age, sibsp, parch)
attr(,"factors")
         survived sex age sibsp parch
pclass1         0   0   0     0     0
survived        1   0   0     0     0
sex             0   1   0     0     0
age             0   0   1     0     0
sibsp           0   0   0     1     0
parch           0   0   0     0     1
attr(,"term.labels")
[1] "survived" "sex"      "age"      "sibsp"    "parch"   
attr(,"order")
[1] 1 1 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(pclass1, survived, sex, age, sibsp, parch)
attr(,"dataClasses")
  pclass1  survived       sex       age     sibsp     parch 
"logical" "numeric"  "factor" "numeric" "numeric" "numeric" 

$call
earth(formula = pclass1 ~ ., data = etitanic[, -1], trace = 1, 
    glm = list(family = "binomial"), degree = 2)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> 
> # titanic data, one response which is a two level factor
> cat("a7: titanic data, one response which is a two level factor\n\n")
a7: titanic data, one response which is a two level factor

> a7 <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family="binomial"), trace=1)
x[1046,6] with colnames pclass2nd pclass3rd survived age sibsp parch
y[1046,1] with colname male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.340 RSq 0.384
Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.351 RSq 0.379 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 942.1048 (1036 dof)   iters 5
> show.earth.models(a7, nresponse=1)

Print a7 

Earth selected 10 of 15 terms, and 6 of 6 predictors 
Termination condition: Reached nk 21
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.1516519    RSS 151.5803    GRSq 0.3513315    RSq 0.3789639

GLM null.deviance 1379.574 (1045 dof)   deviance 942.1048 (1036 dof)   iters 5

Summary a7 

Call: earth(formula=sex~., data=etitanic, trace=1, glm=list(family="binomial"),
            degree=2)

GLM coefficients
                              male
(Intercept)              1.8378879
pclass3rd               -3.1014865
survived                -3.5709878
pclass2nd * survived    -0.7750898
pclass3rd * survived     1.6653543
pclass3rd * h(4-parch)   0.5210221
survived * h(16-age)     0.2098459
h(25-age) * h(4-parch)  -0.0197154
h(2-sibsp) * h(4-parch)  0.1550360
h(sibsp-2) * h(4-parch)  0.3317418

Earth selected 10 of 15 terms, and 6 of 6 predictors 
Termination condition: Reached nk 21
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.1516519    RSS 151.5803    GRSq 0.3513315    RSq 0.3789639

GLM null.deviance 1379.574 (1045 dof)   deviance 942.1048 (1036 dof)   iters 5

Summary a7 digits=3, details=TRUE

Call: earth(formula=sex~., data=etitanic, trace=1, glm=list(family="binomial"),
            degree=2)

Earth coefficients
                           male
(Intercept)              0.8043
survived                -0.6305
survived * h(16-age)     0.0390
pclass3rd * survived     0.2540
h(25-age) * h(4-parch)  -0.0035
h(sibsp-2) * h(4-parch)  0.0584
h(2-sibsp) * h(4-parch)  0.0226
pclass3rd               -0.5657
pclass3rd * h(4-parch)   0.1185
pclass2nd * survived    -0.1340

GLM coefficients
                          male
(Intercept)              1.838
survived                -3.571
survived * h(16-age)     0.210
pclass3rd * survived     1.665
h(25-age) * h(4-parch)  -0.020
h(sibsp-2) * h(4-parch)  0.332
h(2-sibsp) * h(4-parch)  0.155
pclass3rd               -3.101
pclass3rd * h(4-parch)   0.521
pclass2nd * survived    -0.775

GLM deviance residuals:
   Min      1Q  Median      3Q     Max  
-2.499  -0.705   0.349   0.567   2.081  

GLM coefficients (family binomial, link logit)
                        Estimate Std. Error z value Pr(>|z|)
(Intercept)              1.83789    0.33911    5.42  6.0e-08
survived                -3.57099    0.30949  -11.54  < 2e-16
survived * h(16-age)     0.20985    0.03724    5.63  1.8e-08
pclass3rd * survived     1.66535    0.39176    4.25  2.1e-05
h(25-age) * h(4-parch)  -0.01972    0.00632   -3.12  0.00181
h(sibsp-2) * h(4-parch)  0.33174    0.09600    3.46  0.00055
h(2-sibsp) * h(4-parch)  0.15504    0.03873    4.00  6.2e-05
pclass3rd               -3.10149    0.61623   -5.03  4.8e-07
pclass3rd * h(4-parch)   0.52102    0.15429    3.38  0.00073
pclass2nd * survived    -0.77509    0.30830   -2.51  0.01193

Number of cases: 1046
Earth selected 10 of 15 terms, and 6 of 6 predictors 
Termination condition: Reached nk 21
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.152    RSS 152    GRSq 0.351    RSq 0.379

GLM null.deviance 1380 (1045 dof)   deviance 942 (1036 dof)   iters 5

evimp a7 

          nsubsets   gcv    rss
survived         9 100.0  100.0
pclass3rd        8  43.1   48.6
parch            6  35.3   40.3
age              5  23.7   30.2
sibsp            4  19.8   26.0
pclass2nd        1   7.4   11.4

evimp a7 trim=FALSE

          nsubsets   gcv    rss
survived         9 100.0  100.0
pclass3rd        8  43.1   48.6
parch            6  35.3   40.3
age              5  23.7   30.2
sibsp            4  19.8   26.0
pclass2nd        1   7.4   11.4

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a7 
 grid:    pclass survived age sibsp parch
             1st        0  28     0     0
-------------------------------------------------------------------------------

> printh(a7$levels)
=== a7$levels
[1] "female" "male"  
> print.stripped.earth.model(a7, "a7")
print.stripped.earth.model(a7)
$dirs
                      pclass2nd pclass3rd survived age sibsp parch
(Intercept)                   0         0        0   0     0     0
survived                      0         0        2   0     0     0
h(parch-4)                    0         0        0   0     0     1
h(4-parch)                    0         0        0   0     0    -1
survived*h(age-16)            0         0        2   1     0     0
survived*h(16-age)            0         0        2  -1     0     0
pclass3rd*survived            0         2        2   0     0     0
h(age-25)*h(4-parch)          0         0        0   1     0    -1
h(25-age)*h(4-parch)          0         0        0  -1     0    -1
h(sibsp-2)*h(4-parch)         0         0        0   0     1    -1
h(2-sibsp)*h(4-parch)         0         0        0   0    -1    -1
pclass3rd                     0         2        0   0     0     0
pclass3rd*h(4-parch)          0         2        0   0     0    -1
pclass2nd*survived            2         0        2   0     0     0
survived*h(age-25)            0         0        2   1     0     0

$cuts
                      pclass2nd pclass3rd survived age sibsp parch
(Intercept)                   0         0        0   0     0     0
survived                      0         0        0   0     0     0
h(parch-4)                    0         0        0   0     0     4
h(4-parch)                    0         0        0   0     0     4
survived*h(age-16)            0         0        0  16     0     0
survived*h(16-age)            0         0        0  16     0     0
pclass3rd*survived            0         0        0   0     0     0
h(age-25)*h(4-parch)          0         0        0  25     0     4
h(25-age)*h(4-parch)          0         0        0  25     0     4
h(sibsp-2)*h(4-parch)         0         0        0   0     2     4
h(2-sibsp)*h(4-parch)         0         0        0   0     2     4
pclass3rd                     0         0        0   0     0     0
pclass3rd*h(4-parch)          0         0        0   0     0     4
pclass2nd*survived            0         0        0   0     0     0
survived*h(age-25)            0         0        0  25     0     0

$selected.terms
 [1]  1  2  6  7  9 10 11 12 13 14

$prune.terms
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0
 [2,]    1    2    0    0    0    0    0    0    0     0     0     0     0
 [3,]    1    2    7    0    0    0    0    0    0     0     0     0     0
 [4,]    1    2    7   12    0    0    0    0    0     0     0     0     0
 [5,]    1    2    7   12   13    0    0    0    0     0     0     0     0
 [6,]    1    2    6    7   12   13    0    0    0     0     0     0     0
 [7,]    1    2    6    7   11   12   13    0    0     0     0     0     0
 [8,]    1    2    6    7   10   11   12   13    0     0     0     0     0
 [9,]    1    2    6    7    9   10   11   12   13     0     0     0     0
[10,]    1    2    6    7    9   10   11   12   13    14     0     0     0
[11,]    1    2    6    7    9   10   11   12   13    14    15     0     0
[12,]    1    2    5    6    7    9   10   11   12    13    14    15     0
[13,]    1    2    3    5    6    7    9   10   11    12    13    14    15
[14,]    1    2    3    5    6    7    8    9   10    11    12    13    14
[15,]    1    2    3    4    5    6    7    8    9    10    11    12    13
      [,14] [,15]
 [1,]     0     0
 [2,]     0     0
 [3,]     0     0
 [4,]     0     0
 [5,]     0     0
 [6,]     0     0
 [7,]     0     0
 [8,]     0     0
 [9,]     0     0
[10,]     0     0
[11,]     0     0
[12,]     0     0
[13,]     0     0
[14,]    15     0
[15,]    14    15

$rss
[1] 151.5803

$rsq
[1] 0.3789639

$gcv
[1] 0.1516519

$grsq
[1] 0.3513315

$rss.per.response
[1] 151.5803

$rsq.per.response
[1] 0.3789639

$gcv.per.response
[1] 0.1516519

$grsq.per.response
[1] 0.3513315

$rss.per.subset
 [1] 244.0765 173.4300 170.0254 166.5886 160.0286 157.8267 156.0929 154.7149
 [9] 152.7736 151.5803 151.5549 150.9327 150.4562 150.4102 150.4026

$gcv.per.subset
 [1] 0.2337895 0.1669182 0.1644292 0.1618828 0.1562603 0.1548574 0.1539006
 [8] 0.1532851 0.1521011 0.1516519 0.1523707 0.1524917 0.1527600 0.1534684
[15] 0.1542213

$rss.per.subset
 [1] 244.0765 173.4300 170.0254 166.5886 160.0286 157.8267 156.0929 154.7149
 [9] 152.7736 151.5803 151.5549 150.9327 150.4562 150.4102 150.4026

$gcv.per.subset
 [1] 0.2337895 0.1669182 0.1644292 0.1618828 0.1562603 0.1548574 0.1539006
 [8] 0.1532851 0.1521011 0.1516519 0.1523707 0.1524917 0.1527600 0.1534684
[15] 0.1542213

$coefficients
                              male
(Intercept)            0.804252577
survived              -0.630522547
survived*h(16-age)     0.039021583
pclass3rd*survived     0.254002845
h(25-age)*h(4-parch)  -0.003459897
h(sibsp-2)*h(4-parch)  0.058392139
h(2-sibsp)*h(4-parch)  0.022625383
pclass3rd             -0.565708327
pclass3rd*h(4-parch)   0.118546080
pclass2nd*survived    -0.133997599

$leverages
   [1] 0.007007565 0.041454309 0.019332863 0.008231818 0.008231818 0.007007565
   [7] 0.006051323 0.004677086 0.012062259 0.004677086 0.005305113 0.010048572
  [13] 0.007020848 0.007007565 0.007007565 0.004039328 0.005658547 0.007007565
  [19] 0.004677086 0.006900884 0.006900884 0.007007565 0.007007565 0.007007565
  [25] 0.004677086 0.006051323 0.008826518 0.007007565 0.007007565 0.004677086
  [31] 0.007007565 0.007007565 0.007007565 0.004677086 0.007007565 0.005888675
  [37] 0.004677086 0.004677086 0.007007565 0.012062259 0.007007565 0.007007565
  [43] 0.004677086 0.007007565 0.007007565 0.005658547 0.005658547 0.004677086
  [49] 0.004677086 0.010480664 0.010599903 0.008719193 0.008185894 0.008185894
  [55] 0.004677086 0.005305113 0.006051323 0.005305113 0.006051323 0.006051323
  [61] 0.006051323 0.007007565 0.007007565 0.007007565 0.005305113 0.006051323
  [67] 0.007698434 0.004677086 0.006900884 0.006550741 0.006051323 0.012062259
  [73] 0.006550741 0.006051323 0.006900884 0.005305113 0.006051323 0.007007565
  [79] 0.007007565 0.007007565 0.005305113 0.008185894 0.006051323 0.011487631
  [85] 0.006900884 0.027516594 0.006900884 0.005305113 0.006900884 0.006051323
  [91] 0.006051323 0.006051323 0.004677086 0.005689900 0.007007565 0.006051323
  [97] 0.004677086 0.007007565 0.004677086 0.014220352 0.014569305 0.013925652
 [103] 0.013597987 0.012900318 0.012062259 0.007007565 0.012062259 0.006051323
 [109] 0.006012727 0.006900884 0.006900884 0.005305113 0.006051323 0.004677086
 [115] 0.007007565 0.005888675 0.005658547 0.004643012 0.006051323 0.004677086
 [121] 0.007007565 0.010342358 0.004120202 0.005658547 0.005689900 0.005658547
 [127] 0.004677086 0.006051323 0.006051323 0.006051323 0.006051323 0.005305113
 [133] 0.006051323 0.004677086 0.007007565 0.007020848 0.006550741 0.006900884
 [139] 0.004677086 0.004677086 0.009644711 0.005658547 0.006051323 0.005305113
 [145] 0.006051323 0.007007565 0.006051323 0.006051323 0.007007565 0.004677086
 [151] 0.007007565 0.004677086 0.004677086 0.004677086 0.004677086 0.005305113
 [157] 0.006051323 0.006051323 0.007007565 0.007007565 0.007007565 0.007007565
 [163] 0.004677086 0.007007565 0.009644711 0.005658547 0.004677086 0.008362736
 [169] 0.004677086 0.007007565 0.009477083 0.004677086 0.014939335 0.007796163
 [175] 0.010048572 0.007020848 0.004677086 0.004677086 0.007007565 0.005305113
 [181] 0.004677086 0.012900318 0.006051323 0.006051323 0.006051323 0.004677086
 [187] 0.004677086 0.004120202 0.006051323 0.006108364 0.005305113 0.006462394
 [193] 0.004677086 0.007007565 0.005888675 0.004120202 0.004677086 0.004677086
 [199] 0.004825944 0.005305113 0.006462394 0.008970859 0.011487631 0.007007565
 [205] 0.007007565 0.004677086 0.005658547 0.004677086 0.005225883 0.005658547
 [211] 0.004677086 0.007007565 0.007007565 0.004677086 0.004677086 0.007007565
 [217] 0.005305113 0.006051323 0.004677086 0.012281812 0.012405290 0.011932768
 [223] 0.010348343 0.009906352 0.007020848 0.006051323 0.007007565 0.007007565
 [229] 0.007007565 0.007007565 0.005305113 0.006051323 0.007007565 0.007007565
 [235] 0.004677086 0.004677086 0.005177773 0.010048572 0.005971341 0.006108364
 [241] 0.020444564 0.006900884 0.006900884 0.005305113 0.007007565 0.004677086
 [247] 0.006051323 0.006051323 0.006051323 0.007007565 0.005305113 0.005305113
 [253] 0.004677086 0.007007565 0.006720786 0.006550741 0.006900884 0.006051323
 [259] 0.006550741 0.007033429 0.006900884 0.007007565 0.004677086 0.004677086
 [265] 0.004677086 0.007007565 0.005305113 0.006051323 0.004677086 0.004120202
 [271] 0.004529100 0.007007565 0.006051323 0.006550741 0.006900884 0.006550741
 [277] 0.005305113 0.006900884 0.008362736 0.004120202 0.006209517 0.007007565
 [283] 0.004677086 0.007007565 0.005305113 0.010418869 0.004677086 0.008995696
 [289] 0.004677086 0.005305113 0.010418869 0.004677086 0.008995696 0.004825944
 [295] 0.011152006 0.004677086 0.004677086 0.010418869 0.012318589 0.004677086
 [301] 0.035349891 0.026002767 0.015790494 0.012664992 0.011152006 0.013611324
 [307] 0.004825944 0.004677086 0.004677086 0.004677086 0.011019377 0.010108514
 [313] 0.006550741 0.011324206 0.011459454 0.005305113 0.011152006 0.004677086
 [319] 0.004677086 0.011152006 0.035859887 0.011324206 0.011068645 0.011152006
 [325] 0.007727734 0.005305113 0.005305113 0.004677086 0.005305113 0.005305113
 [331] 0.011324206 0.010418869 0.005305113 0.010418869 0.004677086 0.004677086
 [337] 0.011019377 0.013503357 0.006550741 0.011324206 0.011405138 0.004677086
 [343] 0.005842827 0.014940301 0.008995696 0.010418869 0.011152006 0.004677086
 [349] 0.010480664 0.005305113 0.010192974 0.004677086 0.008995696 0.011394389
 [355] 0.009914540 0.004677086 0.013503357 0.006550741 0.011324206 0.010418869
 [361] 0.010418869 0.004825944 0.005842827 0.008995696 0.005305113 0.010418869
 [367] 0.008995696 0.004677086 0.004677086 0.004677086 0.005305113 0.005305113
 [373] 0.011152006 0.012182638 0.004677086 0.004677086 0.006097789 0.006097789
 [379] 0.004643012 0.004643012 0.004677086 0.004677086 0.004677086 0.004677086
 [385] 0.034737030 0.010278795 0.004677086 0.019587717 0.004120202 0.011152006
 [391] 0.004677086 0.015476063 0.006550741 0.011324206 0.012501602 0.012501602
 [397] 0.008231818 0.012664992 0.011152006 0.012679711 0.012900318 0.013319928
 [403] 0.008180767 0.016574991 0.012650785 0.004677086 0.014441226 0.004677086
 [409] 0.005305113 0.010418869 0.005842827 0.011152006 0.005305113 0.005305113
 [415] 0.004677086 0.016167144 0.005305113 0.016393194 0.004677086 0.012679711
 [421] 0.012889517 0.004677086 0.011103755 0.005305113 0.010192974 0.005225883
 [427] 0.004677086 0.011152006 0.004677086 0.004677086 0.006550741 0.006550741
 [433] 0.035364792 0.027567377 0.008231818 0.012337577 0.016167144 0.011152006
 [439] 0.004677086 0.004643012 0.004677086 0.005305113 0.010418869 0.004677086
 [445] 0.035122862 0.006550741 0.011116953 0.004677086 0.004677086 0.004677086
 [451] 0.004677086 0.004677086 0.011406222 0.009914540 0.013611324 0.004677086
 [457] 0.004677086 0.004677086 0.004677086 0.004677086 0.004677086 0.012182638
 [463] 0.004677086 0.005305113 0.015167432 0.029800151 0.026487521 0.005305113
 [469] 0.004677086 0.007581709 0.004677086 0.012658923 0.011152006 0.004677086
 [475] 0.011405138 0.004825944 0.011152006 0.004677086 0.009914540 0.007727734
 [481] 0.004677086 0.010027773 0.013611324 0.004120202 0.011152006 0.004677086
 [487] 0.011152006 0.004677086 0.029800151 0.014940301 0.010418869 0.004677086
 [493] 0.005305113 0.033522399 0.011152006 0.004825944 0.034087653 0.026487521
 [499] 0.016552774 0.011152006 0.007727734 0.011923527 0.004677086 0.004677086
 [505] 0.004677086 0.009914540 0.010577638 0.012658923 0.011152006 0.004677086
 [511] 0.011152006 0.004677086 0.011152006 0.004677086 0.004677086 0.004677086
 [517] 0.008334589 0.016237604 0.011152006 0.004825944 0.011152006 0.011152006
 [523] 0.005305113 0.005305113 0.004677086 0.011152006 0.005305113 0.005267439
 [529] 0.011152006 0.018148822 0.011152006 0.011152006 0.005305113 0.010418869
 [535] 0.029800151 0.023509287 0.010418869 0.035721826 0.021257690 0.008231818
 [541] 0.012664992 0.004677086 0.011152006 0.011152006 0.004643012 0.004067024
 [547] 0.013754208 0.007209865 0.011882579 0.013895156 0.009628716 0.009828901
 [553] 0.011428017 0.004067024 0.004067024 0.006303668 0.034571378 0.010928933
 [559] 0.009628716 0.004067024 0.004045372 0.003628682 0.004067024 0.004067024
 [565] 0.005555753 0.004067024 0.012641031 0.019323752 0.018704870 0.020159639
 [571] 0.027113848 0.023648668 0.018183434 0.018107067 0.047682324 0.009628716
 [577] 0.004067024 0.047682324 0.004045372 0.004067024 0.006303668 0.007139533
 [583] 0.003628682 0.004067024 0.018987185 0.018183434 0.048767908 0.018247707
 [589] 0.041300299 0.047682324 0.009057772 0.051878735 0.009628716 0.003615690
 [595] 0.003407345 0.006636452 0.004067024 0.003407345 0.013620332 0.004045372
 [601] 0.006303668 0.038881600 0.034644161 0.034644161 0.022159578 0.031515580
 [607] 0.011428017 0.004067024 0.004067024 0.009828901 0.005475632 0.005277884
 [613] 0.004067024 0.003403015 0.004692059 0.004067024 0.003403015 0.004045372
 [619] 0.009628716 0.003615690 0.005555753 0.004067024 0.019784655 0.014730527
 [625] 0.006329186 0.006329186 0.003615690 0.009097809 0.004045372 0.006303668
 [631] 0.005359860 0.003403015 0.004067024 0.005096780 0.009354852 0.004692059
 [637] 0.005555753 0.003615690 0.004067024 0.005555753 0.004067024 0.006636452
 [643] 0.006636452 0.003615690 0.003615690 0.003615690 0.004067024 0.003628682
 [649] 0.013895156 0.004067024 0.004067024 0.003628682 0.003615690 0.009628716
 [655] 0.004067024 0.006303668 0.007139533 0.004045372 0.011428017 0.003628682
 [661] 0.004067024 0.003628682 0.004067024 0.004067024 0.009097809 0.004067024
 [667] 0.004067024 0.004067024 0.004067024 0.004067024 0.004692059 0.004067024
 [673] 0.012474156 0.025011071 0.017829772 0.004067024 0.004692059 0.011478721
 [679] 0.005277884 0.006636452 0.003378054 0.009628716 0.003403015 0.004692059
 [685] 0.009628716 0.009628716 0.023077658 0.006329186 0.006329186 0.004067024
 [691] 0.004067024 0.014882615 0.003403015 0.014310026 0.016584657 0.012309389
 [697] 0.012309389 0.009628716 0.007934158 0.038731084 0.042325534 0.013234134
 [703] 0.018335200 0.004067024 0.003403015 0.004067024 0.010519956 0.006636452
 [709] 0.004067024 0.004067024 0.004067024 0.010519956 0.009628716 0.003628682
 [715] 0.009057772 0.004067024 0.004067024 0.009234741 0.005457457 0.011498683
 [721] 0.005555753 0.007934158 0.004067024 0.012950721 0.006623749 0.007918048
 [727] 0.004067024 0.027142780 0.004067024 0.004067024 0.005555753 0.004067024
 [733] 0.014472615 0.017320576 0.014452210 0.026385325 0.027018514 0.004067024
 [739] 0.003403015 0.013895156 0.017906315 0.006329186 0.004067024 0.011882579
 [745] 0.004067024 0.036133742 0.036727651 0.036527780 0.036303635 0.038462275
 [751] 0.037525722 0.047682324 0.047682324 0.004067024 0.004067024 0.004045372
 [757] 0.015507490 0.015507490 0.004692059 0.003628682 0.006636452 0.006303668
 [763] 0.011822147 0.004045372 0.003490888 0.015507490 0.006303668 0.003615690
 [769] 0.012309389 0.004067024 0.017677775 0.009628716 0.005555753 0.009628716
 [775] 0.003407345 0.009097809 0.004067024 0.004067024 0.030115683 0.011177373
 [781] 0.004067024 0.004067024 0.009628716 0.004067024 0.004067024 0.006303668
 [787] 0.006303668 0.009628716 0.009354852 0.004045372 0.004067024 0.008126966
 [793] 0.004067024 0.009628716 0.003403015 0.004067024 0.004067024 0.004067024
 [799] 0.022085597 0.031865204 0.004067024 0.004067024 0.004692059 0.017829772
 [805] 0.003407345 0.009628716 0.004067024 0.005815684 0.005479269 0.009628716
 [811] 0.006636452 0.003615690 0.004067024 0.009354852 0.004067024 0.003403015
 [817] 0.023536496 0.010498256 0.005096780 0.004067024 0.004067024 0.014283883
 [823] 0.015507490 0.029069035 0.023211338 0.011882579 0.030649519 0.006159698
 [829] 0.012950721 0.009628716 0.004067024 0.009097809 0.009628716 0.004067024
 [835] 0.004067024 0.003403015 0.009097809 0.004067024 0.004067024 0.004067024
 [841] 0.004067024 0.003628682 0.004067024 0.004067024 0.006303668 0.006303668
 [847] 0.012043242 0.004067024 0.006303668 0.006303668 0.003803405 0.009628716
 [853] 0.004067024 0.009057772 0.009628716 0.009234741 0.003403015 0.004067024
 [859] 0.004067024 0.004067024 0.004067024 0.013479564 0.004067024 0.005772059
 [865] 0.006369106 0.004067024 0.009354852 0.003628682 0.003615690 0.004067024
 [871] 0.004067024 0.018294891 0.010498256 0.004067024 0.009234741 0.005555753
 [877] 0.003403015 0.013479564 0.040229850 0.011317564 0.011570759 0.004067024
 [883] 0.014874453 0.014657474 0.004067024 0.004067024 0.011428017 0.009628716
 [889] 0.003615690 0.004067024 0.009628716 0.003615690 0.004067024 0.009097809
 [895] 0.004067024 0.003407345 0.009097809 0.012940446 0.004067024 0.005277884
 [901] 0.004067024 0.004067024 0.009628716 0.004045372 0.003407345 0.004045372
 [907] 0.004045372 0.007934158 0.009628716 0.024024838 0.017903747 0.022311467
 [913] 0.015575596 0.047682324 0.043638107 0.037631698 0.042331874 0.036861530
 [919] 0.036178218 0.047682324 0.003615690 0.004692059 0.004067024 0.031272868
 [925] 0.025937376 0.012950721 0.003615690 0.004067024 0.003403015 0.012309389
 [931] 0.003628682 0.004067024 0.004692059 0.006303668 0.005555753 0.009628716
 [937] 0.006636452 0.003628682 0.004067024 0.003615690 0.036276383 0.040085606
 [943] 0.037631698 0.042331874 0.037057860 0.047682324 0.003403015 0.004067024
 [949] 0.006303668 0.006303668 0.028232415 0.006159698 0.012950721 0.004067024
 [955] 0.007934158 0.004067024 0.004067024 0.165546791 0.003628682 0.009354852
 [961] 0.004067024 0.031865204 0.017620530 0.022085597 0.009628716 0.004045372
 [967] 0.003820727 0.009628716 0.003403015 0.004067024 0.003615690 0.011428017
 [973] 0.014228707 0.011611867 0.011912379 0.015534999 0.047682324 0.047682324
 [979] 0.004692059 0.004067024 0.004067024 0.004067024 0.009057772 0.003615690
 [985] 0.004067024 0.004692059 0.003403015 0.009628716 0.004067024 0.028387746
 [991] 0.006329186 0.013895156 0.009628716 0.004067024 0.004067024 0.013387956
 [997] 0.003628682 0.009628716 0.004067024 0.036272682 0.013062738 0.004067024
[1003] 0.004067024 0.004067024 0.009628716 0.015315546 0.012474156 0.017829772
[1009] 0.004067024 0.011428017 0.009628716 0.011357956 0.012950721 0.015175738
[1015] 0.006329186 0.006329186 0.004067024 0.004067024 0.004067024 0.004067024
[1021] 0.015690490 0.029998555 0.017695830 0.006303668 0.009097809 0.004045372
[1027] 0.011180587 0.003403015 0.003403015 0.004067024 0.009628716 0.004067024
[1033] 0.007139533 0.005479269 0.012309389 0.004067024 0.003615690 0.004067024
[1039] 0.004067024 0.006303668 0.015034961 0.004067024 0.011544950 0.004067024
[1045] 0.004067024 0.004067024

$penalty
[1] 3

$nk
[1] 21

$thresh
[1] 0.001

$termcond
[1] 7

$weights
NULL

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame, 
    weights = weights, na.action = na.action, control = control, 
    model = TRUE, method = "glm.fit", x = TRUE, y = TRUE, contrasts = NULL, 
    trace = (trace >= 2))

Coefficients:
            (Intercept)                 survived     `survived*h(16-age)`  
                1.83789                 -3.57099                  0.20985  
   `pclass3rd*survived`   `h(25-age)*h(4-parch)`  `h(sibsp-2)*h(4-parch)`  
                1.66535                 -0.01972                  0.33174  
`h(2-sibsp)*h(4-parch)`                pclass3rd   `pclass3rd*h(4-parch)`  
                0.15504                 -3.10149                  0.52102  
   `pclass2nd*survived`  
               -0.77509  

Degrees of Freedom: 1045 Total (i.e. Null);  1036 Residual
Null Deviance:	    1380 
Residual Deviance: 942.1 	AIC: 962.1


$glm.coefficients
                             male
(Intercept)            1.83788793
survived              -3.57098777
survived*h(16-age)     0.20984595
pclass3rd*survived     1.66535433
h(25-age)*h(4-parch)  -0.01971544
h(sibsp-2)*h(4-parch)  0.33174181
h(2-sibsp)*h(4-parch)  0.15503604
pclass3rd             -3.10148653
pclass3rd*h(4-parch)   0.52102209
pclass2nd*survived    -0.77508977

$namesx.org
[1] "pclass"   "survived" "age"      "sibsp"    "parch"   

$namesx
[1] "pclass"   "survived" "age"      "sibsp"    "parch"   

$levels
[1] "female" "male"  

$terms
sex ~ pclass + survived + age + sibsp + parch
attr(,"variables")
list(sex, pclass, survived, age, sibsp, parch)
attr(,"factors")
         pclass survived age sibsp parch
sex           0        0   0     0     0
pclass        1        0   0     0     0
survived      0        1   0     0     0
age           0        0   1     0     0
sibsp         0        0   0     1     0
parch         0        0   0     0     1
attr(,"term.labels")
[1] "pclass"   "survived" "age"      "sibsp"    "parch"   
attr(,"order")
[1] 1 1 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(sex, pclass, survived, age, sibsp, parch)
attr(,"dataClasses")
      sex    pclass  survived       age     sibsp     parch 
 "factor"  "factor" "numeric" "numeric" "numeric" "numeric" 

$call
earth(formula = sex ~ ., data = etitanic, trace = 1, glm = list(family = "binomial"), 
    degree = 2)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> 
> a7d <- earth(sex ~ .-pclass, data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> a7dupdate <- update(a7, form=sex ~ .-pclass)
update.earth: using 1046 by 6 data argument from original call to earth
x[1046,4] with colnames survived age sibsp parch
y[1046,1] with colname male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.305 RSq 0.367
Prune method "backward" penalty 3 nprune 20: selected 9 of 20 terms, and 4 of 4 predictors
After backward pass GRSq 0.332 RSq 0.358 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 970.0529 (1037 dof)   iters 5
> check.models.equal(a7dupdate, a7d, msg="a7update a7d")
check.models.equal not identical: a7update a7d [but within numerical tolerances]
> printh(a7d$levels)
=== a7d$levels
[1] "female" "male"  
> 
> a7d <- earth(sex ~ .-pclass, data=etitanic, degree=2, glm=list(family="binomial"), trace=0, keepxy=1)
> a7dupdate <- update(a7, form=sex ~ .-pclass)
update.earth: using 1046 by 6 data argument from original call to earth
x[1046,4] with colnames survived age sibsp parch
y[1046,1] with colname male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.305 RSq 0.367
Prune method "backward" penalty 3 nprune 20: selected 9 of 20 terms, and 4 of 4 predictors
After backward pass GRSq 0.332 RSq 0.358 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 970.0529 (1037 dof)   iters 5
> check.models.equal(a7dupdate, a7d, msg="a7update a7d with keepxy")
check.models.equal not identical: a7update a7d with keepxy [but within numerical tolerances]
> 
> subset. <- rep(TRUE, nrow(etitanic))
> subset.[1:10] <- FALSE
> a7e <- earth(sex ~ ., subset=subset., data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> a7eupdate <- update(a7, subset=subset.)
update.earth: using 1046 by 6 data argument from original call to earth
x[1046,6] with colnames pclass2nd pclass3rd survived age sibsp parch
y[1046,1] with colname male
1036 cases after taking subset
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.341 RSq 0.388
Prune method "backward" penalty 3 nprune 16: selected 12 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.353 RSq 0.387 
GLM male: null.deviance 1365.015 (1035 dof)   deviance 922.4507 (1024 dof)   iters 5
> check.models.equal(a7eupdate, a7e, msg="a7update a7e")
check.models.equal not identical: a7update a7e [but within numerical tolerances]
> 
> subset. <- 1:nrow(etitanic) # another way of specifying a subset
> subset.[1:10] <- 0
> a7eeupdate <- update(a7, subset=subset.)
update.earth: using 1046 by 6 data argument from original call to earth
x[1046,6] with colnames pclass2nd pclass3rd survived age sibsp parch
y[1046,1] with colname male
1036 cases after taking subset
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.341 RSq 0.388
Prune method "backward" penalty 3 nprune 16: selected 12 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.353 RSq 0.387 
GLM male: null.deviance 1365.015 (1035 dof)   deviance 922.4507 (1024 dof)   iters 5
> check.models.equal(a7eeupdate, a7e, msg="a7update a7e with alternative subset")
check.models.equal not identical: a7update a7e with alternative subset [but within numerical tolerances]
> 
> a7f <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family=binomial(link="probit")), trace=0)
> a7fupdate <- update(a7, glm=list(family=binomial(link="probit")))
update.earth: using 1046 by 6 data argument from original call to earth
x[1046,6] with colnames pclass2nd pclass3rd survived age sibsp parch
y[1046,1] with colname male
Skipped forward pass
Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.351 RSq 0.379 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 941.2327 (1036 dof)   iters 5
> check.models.equal(a7fupdate, a7f, msg="a7update a7f with link=probit")
check.models.equal not identical: a7update a7f with link=probit [but within numerical tolerances]
> 
> a7 <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family="binomial"), keepxy=1)
> a7g <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family=binomial(link="probit")), trace=0)
> a7gupdate <- update(a7, glm=list(family=binomial(link="probit")), trace=1)
update.earth: using 1046 by 6 data saved by keepxy in original call to earth
x[1046,6] with colnames pclass2nd pclass3rd survived age sibsp parch
y[1046,1] with colname male
Skipped forward pass
Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.351 RSq 0.379 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 941.2327 (1036 dof)   iters 5
> check.models.equal(a7gupdate, a7g, msg="a7update a7g with link=probit and keepxy")
check.models.equal not identical: a7update a7g with link=probit and keepxy [but within numerical tolerances]
> 
> a8 <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family="binomial"), keepxy=1)
> a8g <- earth(sex ~ ., data=etitanic[100:900,], degree=2, glm=list(family=binomial), trace=0)
> a8gupdate <- update(a8, data=etitanic[100:900,], trace=1)
x[801,6] with colnames pclass2nd pclass3rd survived age sibsp parch
y[801,1] with colname male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.348 RSq 0.408
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.366 RSq 0.397 
GLM male: null.deviance 1053.094 (800 dof)   deviance 696.2176 (792 dof)   iters 5
> check.models.equal(a8gupdate, a8g, msg="a8update a8g with new data")
check.models.equal not identical: a8update a8g with new data [but within numerical tolerances]
> 
> # poisson models
> 
> counts <- c(18,17,15,20,10,20,25,13,12)
> counts2 <- c(181,171,151,201,101,201,251,131,121)
> outcome <- gl(3,1,9)
> treatment <- gl(3,3)
> d.AD <- data.frame(treatment, outcome, counts, counts2)
> 
> # one response poisson model
> cat("a8p: one response poisson model\n\n")
a8p: one response poisson model

> a8p <- earth(counts ~ outcome + treatment, glm=list(family=poisson()), trace=3, pmethod=PMETHOD)
x[9,4] with colnames outcome2 outcome3 treatment2 treatment3
y[9,1] with colname counts

Forward pass:    minspan 3    endspan 3    x is 9 by 4 (288 B)

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2     -0.2727 0.2841       0.2841    1     outcome2           0< 2       
4     -0.8939 0.5265       0.2424    2     outcome3           0< 3       
6        -inf 0.5265            0    3   treatment2           0  4   5   reject term

GRSq -Inf at 5 terms, 3 terms used
After forward pass GRSq -in RSq 0.527
Forward pass complete: 5 terms, 3 terms used

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2     -0.2727  0.2841    -0.2727      1  
chosen    3     -0.8939  0.5265    -0.6212      2  

Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 4 predictors
After backward pass GRSq -0.894 RSq 0.527 

GLM counts: null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
> show.earth.models(a8p)

Print a8p 

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Termination condition: GRSq -Inf at 3 terms
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.33333    GRSq -0.8939394    RSq 0.5265152

GLM null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4

Summary a8p 

Call: earth(formula=counts~outcome+treatment, trace=3,
            glm=list(family=poisson()), pmethod=PMETHOD)

GLM coefficients
                counts
(Intercept)  3.0445224
outcome2    -0.4542553
outcome3    -0.2929871

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Termination condition: GRSq -Inf at 3 terms
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.33333    GRSq -0.8939394    RSq 0.5265152

GLM null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4

Summary a8p decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=counts~outcome+treatment, trace=3,
            glm=list(family=poisson()), pmethod=PMETHOD)

Earth coefficients
             counts
(Intercept) 21.0000
outcome2    -7.6667
outcome3    -5.3333

GLM coefficients
              counts
(Intercept)  3.04452
outcome2    -0.45426
outcome3    -0.29299

GLM deviance residuals:
     Min        1Q    Median        3Q       Max  
-0.96656  -0.67125  -0.16965   0.84715   1.04939  

GLM coefficients (family poisson, link log)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)  3.04452    0.12599 24.1651  < 2e-16
outcome2    -0.45426    0.20217 -2.2469  0.02465
outcome3    -0.29299    0.19274 -1.5201  0.12849

Number of cases: 9
Earth selected 3 of 3 terms, and 2 of 4 predictors 
Termination condition: GRSq -Inf at 3 terms
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.333    GRSq -0.89394    RSq 0.52652

GLM null.deviance 10.581 (8 dof)   deviance 5.1291 (6 dof)   iters 4

evimp a8p 

         nsubsets   gcv    rss
outcome2        2 -100.0  100.0
outcome3        1 -83.4   67.9

evimp a8p trim=FALSE

                  nsubsets   gcv    rss
outcome2                 2 -100.0  100.0
outcome3                 1 -83.4   67.9
treatment2-unused        0   0.0    0.0
treatment3-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 25 trace FALSE family poisson link log 

plotmo a8p 
 grid:    outcome treatment
                1         1
-------------------------------------------------------------------------------

> # build a standard GLM model for comparison
> cat("a9: one response poisson model, standard GLM model for comparison\n\n")
a9: one response poisson model, standard GLM model for comparison

> a9 <- glm(counts ~ outcome + treatment, family="poisson")
> cat("Direct GLM a9 summary:\n\n")
Direct GLM a9 summary:

> print(summary(a9))

Call:
glm(formula = counts ~ outcome + treatment, family = "poisson")

Deviance Residuals: 
       1         2         3         4         5         6         7         8  
-0.67125   0.96272  -0.16965  -0.21999  -0.95552   1.04939   0.84715  -0.09167  
       9  
-0.96656  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)  3.045e+00  1.709e-01  17.815   <2e-16 ***
outcome2    -4.543e-01  2.022e-01  -2.247   0.0246 *  
outcome3    -2.930e-01  1.927e-01  -1.520   0.1285    
treatment2   1.338e-15  2.000e-01   0.000   1.0000    
treatment3   1.421e-15  2.000e-01   0.000   1.0000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for poisson family taken to be 1)

    Null deviance: 10.5814  on 8  degrees of freedom
Residual deviance:  5.1291  on 4  degrees of freedom
AIC: 56.761

Number of Fisher Scoring iterations: 4

> plotmo(a9, grid.levels=list(outcome="2"), caption="a9 <- glm(counts ~ outcome + treatment, family=\"poisson\")")
 grid:    outcome treatment
                2         1
> 
> # two response poisson model
> cat("a10: two response poisson model\n\n")
a10: two response poisson model

> a10 <- earth(cbind(counts, counts2) ~ outcome + treatment, glm=list(fam="po"), trace=1, pmethod=PMETHOD)
x[9,4] with colnames outcome2 outcome3 treatment2 treatment3
y[9,2] with colnames counts counts2
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 3 terms used
After forward pass GRSq -in RSq 0.527
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 4 predictors
After backward pass GRSq -0.894 RSq 0.527 
GLM counts: null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
GLM counts2: null.deviance 105.166 (8 dof)   deviance 50.96448 (6 dof)   iters 4
> show.earth.models(a10, nresponse="counts")

Print a10 

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Termination condition: GRSq -Inf at 3 terms
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
             GCV       RSS       GRSq       RSq
counts    46.875   83.3333 -0.8939394 0.5265152
counts2 4687.500 8333.3333 -0.8939394 0.5265152
All     4734.375 8416.6667 -0.8939394 0.5265152

GLM (family poisson, link log)
        null.deviance df  deviance df iters converged
counts       10.58145  8  5.129141  6     4         1
counts2     105.16600  8 50.964475  6     4         1

Summary a10 

Call: earth(formula=cbind(counts,counts2)~outcome+treatment, trace=1,
            glm=list(fam="po"), pmethod=PMETHOD)

GLM coefficients
                counts    counts2
(Intercept)  3.0445224  5.3518581
outcome2    -0.4542553 -0.4515339
outcome3    -0.2929871 -0.2913750

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Termination condition: GRSq -Inf at 3 terms
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
             GCV       RSS       GRSq       RSq
counts    46.875   83.3333 -0.8939394 0.5265152
counts2 4687.500 8333.3333 -0.8939394 0.5265152
All     4734.375 8416.6667 -0.8939394 0.5265152

GLM (family poisson, link log)
        null.deviance df  deviance df iters converged
counts       10.58145  8  5.129141  6     4         1
counts2     105.16600  8 50.964475  6     4         1

Summary a10 digits=3, details=TRUE

Call: earth(formula=cbind(counts,counts2)~outcome+treatment, trace=1,
            glm=list(fam="po"), pmethod=PMETHOD)

Earth coefficients
            counts counts2
(Intercept)  21.00   211.0
outcome2     -7.67   -76.7
outcome3     -5.33   -53.3

GLM coefficients
            counts counts2
(Intercept)  3.045   5.352
outcome2    -0.454  -0.452
outcome3    -0.293  -0.291

GLM counts deviance residuals:
   Min      1Q  Median      3Q     Max  
-0.967  -0.671  -0.170   0.847   1.049  

GLM counts coefficients (family poisson, link log)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)    3.045      0.126   24.17   <2e-16
outcome2      -0.454      0.202   -2.25    0.025
outcome3      -0.293      0.193   -1.52    0.128

GLM counts2 deviance residuals:
   Min      1Q  Median      3Q     Max  
-3.046  -2.117  -0.535   2.673   3.309  

GLM counts2 coefficients (family poisson, link log)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   5.3519     0.0397  134.65  < 2e-16
outcome2     -0.4515     0.0637   -7.09  1.4e-12
outcome3     -0.2914     0.0608   -4.79  1.6e-06

Number of cases: 9
Earth selected 3 of 3 terms, and 2 of 4 predictors 
Termination condition: GRSq -Inf at 3 terms
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
         GCV  RSS   GRSq   RSq
counts    47   83 -0.894 0.526
counts2 4688 8333 -0.894 0.526
All     4734 8417 -0.894 0.526

GLM (family poisson, link log)
        null.deviance df deviance df iters converged
counts           10.6  8     5.13  6     4         1
counts2         105.2  8    50.96  6     4         1

evimp a10 

         nsubsets   gcv    rss
outcome2        2 -100.0  100.0
outcome3        1 -83.4   67.9

evimp a10 trim=FALSE

                  nsubsets   gcv    rss
outcome2                 2 -100.0  100.0
outcome3                 1 -83.4   67.9
treatment2-unused        0   0.0    0.0
treatment3-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 25 trace FALSE family poisson link log 

plotmo a10 
 grid:    outcome treatment
                1         1
-------------------------------------------------------------------------------

> 
> # compare family=gaussian to standard earth model
> cat("a11: compare family=gaussian to standard earth model\n\n")
a11: compare family=gaussian to standard earth model

> a11 <- earth(etitanic$sex ~ ., data=etitanic, degree=2, glm=list(family="gaussian"), trace=4)
Call: earth(formula=etitanic$sex~., data=etitanic, trace=4,
            glm=list(family="gaussian"), degree=2)

x[1046,6]:
     pclass2nd pclass3rd survived     age sibsp parch
1            0         0        1 29.0000     0     0
2            0         0        1  0.9167     1     2
3            0         0        0  2.0000     1     2
...          0         0        0 30.0000     1     2
1046         0         1        0 29.0000     0     0

y[1046,1]:
     male
1       0
2       1
3       0
...     1
1046    1

Forward pass:    minspan 6    endspan 9    x is 1046 by 6 (49 kB)

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.2860 0.2894       0.2894    3     survived           0< 2       
4      0.3055 0.3155      0.02604    6        parch           4  3   4   
6      0.3162 0.3324      0.01695    4          age          16  5   6   2   
8      0.3227 0.3420     0.009561    2    pclass3rd           0< 7       2   
10     0.3272 0.3527      0.01072    4          age          25  8   9   5   
12     0.3291 0.3608     0.008119    5        sibsp           2  10  11  5   
14     0.3339 0.3685     0.007709    2    pclass3rd           0< 12      
16     0.3390 0.3764     0.007888    2    pclass3rd           0< 13      5   
18     0.3406 0.3809     0.004522    1    pclass2nd           0< 14      2   
20     0.3403 0.3838     0.002844    4          age          25  15      2   

Reached nk 21
After forward pass GRSq 0.340 RSq 0.384
Forward pass complete: 21 terms, 15 terms used

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.2860  0.2894     0.2860      1  1 2
          3      0.2967  0.3034     0.0106      2  1 2 7
          4      0.3076  0.3175     0.0109      2  1 2 7 12
          5      0.3316  0.3444     0.0240      3  1 2 7 12 13
          6      0.3376  0.3534     0.0060      4  1 2 6 7 12 13
          7      0.3417  0.3605     0.0041      5  1 2 6 7 11 12 13
          8      0.3443  0.3661     0.0026      5  1 2 6 7 10 11 12 13
          9      0.3494  0.3741     0.0051      5  1 2 6 7 9 10 11 12 13
chosen   10      0.3513  0.3790     0.0019      6  1 2 6 7 9 10 11 12 13 14
         11      0.3483  0.3791    -0.0031      6  1 2 6 7 9 10 11 12 13 14 15
         12      0.3477  0.3816    -0.0005      6  1 2 5 6 7 9 10 11 12 13 14 15
         13      0.3466  0.3836    -0.0011      6  1 2 3 5 6 7 9 10 11 12 13 14 15
         14      0.3436  0.3838    -0.0030      6  1 2 3 5 6 7 8 9 10 11 12 13 14 15
         15      0.3403  0.3838    -0.0032      6  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.351 RSq 0.379 

y arg to glm()[1046,1]:
     male
1       0
2       1
3       0
...     1
1046    1

GLM male: null.deviance 244.0765 (1045 dof)   deviance 151.5803 (1036 dof)   iters 2
> cat("\nsummary(a11, details=TRUE)\n\n", sep="")

summary(a11, details=TRUE)

> print(summary(a11, details=TRUE))
Call: earth(formula=etitanic$sex~., data=etitanic, trace=4,
            glm=list(family="gaussian"), degree=2)

Earth coefficients
                               male
(Intercept)              0.80425258
pclass3rd               -0.56570833
survived                -0.63052255
pclass2nd * survived    -0.13399760
pclass3rd * survived     0.25400284
pclass3rd * h(4-parch)   0.11854608
survived * h(16-age)     0.03902158
h(25-age) * h(4-parch)  -0.00345990
h(2-sibsp) * h(4-parch)  0.02262538
h(sibsp-2) * h(4-parch)  0.05839214

GLM coefficients
                               male
(Intercept)              0.80425258
pclass3rd               -0.56570833
survived                -0.63052255
pclass2nd * survived    -0.13399760
pclass3rd * survived     0.25400284
pclass3rd * h(4-parch)   0.11854608
survived * h(16-age)     0.03902158
h(25-age) * h(4-parch)  -0.00345990
h(2-sibsp) * h(4-parch)  0.02262538
h(sibsp-2) * h(4-parch)  0.05839214

GLM deviance residuals:
        Min           1Q       Median           3Q          Max  
-0.98525564  -0.24160618   0.05999512   0.16564154   0.89239142  

GLM coefficients (family gaussian, link identity)
                             Estimate    Std. Error   t value   Pr(>|t|)
(Intercept)              0.8042525771  0.0434451920  18.51189 < 2.22e-16
survived                -0.6305225466  0.0377399581 -16.70703 < 2.22e-16
survived * h(16-age)     0.0390215829  0.0062172834   6.27631 5.0886e-10
pclass3rd * survived     0.2540028447  0.0554726986   4.57888 5.2419e-06
h(25-age) * h(4-parch)  -0.0034598967  0.0009960987  -3.47345 0.00053506
h(sibsp-2) * h(4-parch)  0.0583921392  0.0146151761   3.99531 6.9180e-05
h(2-sibsp) * h(4-parch)  0.0226253831  0.0056441035   4.00868 6.5436e-05
pclass3rd               -0.5657083270  0.0951418087  -5.94595 3.7532e-09
pclass3rd * h(4-parch)   0.1185460799  0.0244443560   4.84963 1.4264e-06
pclass2nd * survived    -0.1339975991  0.0469199432  -2.85588 0.00437752

GLM dispersion parameter for gaussian family taken to be 0.146313

Number of cases: 1046
Earth selected 10 of 15 terms, and 6 of 6 predictors 
Termination condition: Reached nk 21
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.1516519    RSS 151.5803    GRSq 0.3513315    RSq 0.3789639

GLM null.deviance 244.0765 (1045 dof)   deviance 151.5803 (1036 dof)   iters 2
> stopifnot(identical(a11$coefficients, a11$glm.coefficients))
> cat("-------------------------------------------------------------------------------\n\n")
-------------------------------------------------------------------------------

> 
> cat("a12: compare family=gaussian to standard earth model with two responses\n\n")
a12: compare family=gaussian to standard earth model with two responses

> a12 <- earth(cbind(etitanic$sex, (as.integer(etitanic$age)^2)) ~ ., data=etitanic, degree=2, glm=list(family="gaussian"), trace=4)
Call: earth(formula=cbind(etitanic$sex,(as.integer(etitanic$age)^2))~.,
            data=etitanic, trace=4, glm=list(family="gaussian"), degree=2)

x[1046,5]:
     pclass2nd pclass3rd survived sibsp parch
1            0         0        1     0     0
2            0         0        1     1     2
3            0         0        0     1     2
...          0         0        0     1     2
1046         0         1        0     0     0

y[1046,2]:
     y1  y2
1     1 841
2     2   0
3     1   4
...   2 900
1046  2 841

Forward pass:    minspan 6    endspan 9    x is 1046 by 5 (40.9 kB)

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.1060 0.1103       0.1103    2    pclass3rd           0< 2       
4      0.1653 0.1733      0.06303    1    pclass2nd           0< 3       
6      0.2059 0.2210      0.04767    5        parch           2  4   5   
8      0.2210 0.2396      0.01859    3     survived           0< 6       
10     0.2223 0.2481     0.008525    5        parch           2  7   8   2   
12     0.2234 0.2565      0.00837    4        sibsp           1  9   10  
14     0.2219 0.2587     0.002244    5        parch           1  11      2   
16     0.2231 0.2635     0.004765    5        parch           1  12      
18     0.2226 0.2702     0.006718    5        parch           1  13  14  4   
20     0.2232 0.2743      0.00415    5        parch           2  15      4   

Reached nk 21
After forward pass GRSq 0.223 RSq 0.274
Forward pass complete: 21 terms, 15 terms used

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.1060  0.1103     0.1060      1  1 2
          3      0.1653  0.1733     0.0593      2  1 2 3
          4      0.1911  0.2027     0.0258      3  1 2 3 6
          5      0.2100  0.2251     0.0189      4  1 2 3 6 9
          6      0.2179  0.2365     0.0079      5  1 2 3 4 6 9
          7      0.2225  0.2446     0.0045      5  1 2 3 4 6 9 12
          8      0.2275  0.2531     0.0050      5  1 2 3 4 6 7 9 12
          9      0.2295  0.2587     0.0020      5  1 2 3 4 6 7 9 11 12
chosen   10      0.2305  0.2633     0.0011      5  1 2 3 4 6 7 8 9 11 12
         11      0.2304  0.2668    -0.0001      5  1 2 3 4 6 7 8 9 11 12 13
         12      0.2293  0.2693    -0.0012      5  1 2 3 4 6 7 8 9 11 12 13 15
         13      0.2288  0.2724    -0.0005      5  1 2 3 4 6 7 8 9 11 12 13 14 15
         14      0.2270  0.2743    -0.0018      5  1 2 3 4 5 6 7 8 9 11 12 13 14 15
         15      0.2232  0.2743    -0.0038      5  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 5 of 5 predictors
After backward pass GRSq 0.231 RSq 0.263 

y arg to glm()[1046,1]:
     y1
1     1
2     2
3     1
...   2
1046  2

GLM y1: null.deviance 244.0765 (1045 dof)   deviance 166.313 (1036 dof)   iters 2
y arg to glm()[1046,1]:
      y2
1    841
2      0
3      4
...  900
1046 841

GLM y2: null.deviance 1022962131 (1045 dof)   deviance 753596300 (1036 dof)   iters 2
> cat("\nsummary(a12, details=TRUE)\n\n", sep="")

summary(a12, details=TRUE)

> print(summary(a12, details=TRUE))
Call: earth(formula=cbind(etitanic$sex,(as.integer(etitanic$age)^2))~.,
            data=etitanic, trace=4, glm=list(family="gaussian"), degree=2)

Earth coefficients
                                y1         y2
(Intercept)             1.87825514  1994.3477
pclass2nd              -0.03052777  -739.9866
pclass3rd              -0.24945083 -1666.0231
survived               -0.52605843  -320.9401
h(sibsp-1)              0.01497329  -177.7240
h(parch-1)             -0.09968178  -594.6399
h(parch-2)              0.04012795  1973.9441
pclass3rd * h(parch-2) -0.02275679 -2152.3800
pclass3rd * h(2-parch)  0.13019337   299.5782
pclass3rd * h(parch-1)  0.03601703  1047.1577

GLM coefficients
                                y1         y2
(Intercept)             1.87825514  1994.3477
pclass2nd              -0.03052777  -739.9866
pclass3rd              -0.24945083 -1666.0231
survived               -0.52605843  -320.9401
h(sibsp-1)              0.01497329  -177.7240
h(parch-1)             -0.09968178  -594.6399
h(parch-2)              0.04012795  1973.9441
pclass3rd * h(parch-2) -0.02275679 -2152.3800
pclass3rd * h(2-parch)  0.13019337   299.5782
pclass3rd * h(parch-1)  0.03601703  1047.1577

GLM y1 deviance residuals:
       Min          1Q      Median          3Q         Max  
-0.9041644  -0.3216689   0.1108089   0.1522726   0.9609189  

GLM y1 coefficients (family gaussian, link identity)
                          Estimate  Std. Error   t value Pr(>|t|)
(Intercept)             1.87825514  0.02962998  63.39037  < 2e-16
pclass3rd              -0.24945083  0.10625049  -2.34776 0.019074
pclass2nd              -0.03052777  0.03479059  -0.87747 0.380434
h(parch-2)              0.04012795  0.14694175   0.27309 0.784840
survived               -0.52605843  0.02717222 -19.36016  < 2e-16
pclass3rd * h(parch-2) -0.02275679  0.19924557  -0.11421 0.909090
pclass3rd * h(2-parch)  0.13019337  0.05510971   2.36244 0.018339
h(sibsp-1)              0.01497329  0.02397899   0.62443 0.532480
pclass3rd * h(parch-1)  0.03601703  0.13031139   0.27639 0.782302
h(parch-1)             -0.09968178  0.05886754  -1.69332 0.090695

GLM y1 dispersion parameter for gaussian family taken to be 0.1605338

GLM y2 deviance residuals:
       Min          1Q      Median          3Q         Max  
-1705.3478   -514.7814   -198.4811    297.5189   4726.5924  

GLM y2 coefficients (family gaussian, link identity)
                          Estimate  Std. Error  t value   Pr(>|t|)
(Intercept)             1994.34775    63.07215 31.62010 < 2.22e-16
pclass3rd              -1666.02307   226.17115 -7.36621 3.5776e-13
pclass2nd               -739.98661    74.05734 -9.99208 < 2.22e-16
h(parch-2)              1973.94408   312.78900  6.31078 4.1081e-10
survived                -320.94014    57.84041 -5.54872 3.6538e-08
pclass3rd * h(parch-2) -2152.38000   424.12604 -5.07486 4.5943e-07
pclass3rd * h(2-parch)   299.57821   117.30982  2.55374 0.01079967
h(sibsp-1)              -177.72401    51.04312 -3.48184 0.00051875
pclass3rd * h(parch-1)  1047.15774   277.38862  3.77506 0.00016906
h(parch-1)              -594.63992   125.30896 -4.74539 2.3728e-06

GLM y2 dispersion parameter for gaussian family taken to be 727409.6

Number of cases: 1046
Earth selected 10 of 15 terms, and 5 of 5 predictors 
Termination condition: Reached nk 21
Importance: pclass3rd, pclass2nd, survived, sibsp, parch
Number of terms at each degree of interaction: 1 6 3

Earth
          GCV       RSS      GRSq       RSq
y1       0.17       166 0.2882848 0.3186029
y2  753952.19 753596300 0.2305416 0.2633195
All 753952.36 753596466 0.2305416 0.2633195

GLM (family gaussian, link identity)
   null.deviance   df     deviance   df iters converged
y1  2.440765e+02 1045 1.663130e+02 1036     2         1
y2  1.022962e+09 1045 7.535963e+08 1036     2         1
> stopifnot(identical(a12$coefficients, a12$glm.coefficients))
> 
> # test to see how standard model.matrix does column numbering with formula
> 
> my.x1 <- as.numeric(ToothGrowth[,2]) # supp was VC or OJ
> my.x2 <- as.numeric(ToothGrowth[,3]) # dose
> my.input.mat <- cbind(my.x1, my.x2)
> my.response <- ToothGrowth[,1]
> a13 <- earth(my.response~my.input.mat, trace=1)
x[60,2] with colnames my.input.matmy.x1 my.input.matmy.x2
y[60,1] with colname my.response
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.682 RSq 0.762
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.705 RSq 0.762 
> print(summary(a13, details=TRUE))
Call: earth(formula=my.response~my.input.mat, trace=1)

                       coefficients
(Intercept)                  25.285
my.input.matmy.x1            -3.700
h(1-my.input.matmy.x2)      -18.260
h(my.input.matmy.x2-1)        6.365

Number of cases: 60
Selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: my.input.matmy.x2, my.input.matmy.x1
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 17.52421    RSS 820.425    GRSq 0.7054941    RSq 0.7623478
> 
> stop.if.not.identical <- function(msg, a, b)
+ {
+     if(!identical(a, b)) {
+        cat(msg, "not identical\n")
+        cat(deparse(substitute(a)), ":\n", sep="")
+        print(a)
+        cat(deparse(substitute(b)), ":\n", sep="")
+        print(b)
+        stop("test failed")
+     }
+     cat(msg, "identical\n")
+ }
> 
> # some matrix interface tests
> 
> # double response glm model with two binomial paired cols
> SF.both <- cbind(SF, SF2)
> df <- data.frame(sex, ldose)
> aref <-  earth(SF.both ~ ., data=df, glm=list(family="binomial"), trace=1)
x[12,2] with colnames sexmale ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.673 RSq 0.976
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.882 RSq 0.976 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 7.802145 (8 dof)   iters 4
> show.earth.models(aref, nresponse=1)

Print aref 

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary aref 

Call: earth(formula=SF.both~., data=df, trace=1, glm=list(family="binomial"))

GLM coefficients
               numdead   numdead2
(Intercept) -1.0992373 -0.8776310
sexmale      1.0963463  0.9303095
h(0-ldose)  -1.4542178 -1.3476824
h(ldose-0)   0.9083549  0.9501481

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary aref decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=SF.both~., data=df, trace=1, glm=list(family="binomial"))

Earth coefficients
            numdead numdead2
(Intercept)  5.8904   6.8684
h(ldose-0)   3.6184   3.5921
h(0-ldose)  -3.6842  -3.9211
sexmale      3.1667   2.6667

GLM coefficients
             numdead numdead2
(Intercept) -1.09924 -0.87763
h(ldose-0)   0.90835  0.95015
h(0-ldose)  -1.45422 -1.34768
sexmale      1.09635  0.93031

GLM numdead deviance residuals:
      Min         1Q     Median         3Q        Max  
-0.848821  -0.481207   0.046671   0.468733   1.595765  

GLM numdead coefficients (family binomial, link logit)
            Estimate Std. Error z value  Pr(>|z|)
(Intercept) -1.09924    0.34589 -3.1780 0.0014832
h(ldose-0)   0.90835    0.18344  4.9518 7.354e-07
h(0-ldose)  -1.45422    0.38247 -3.8021 0.0001435
sexmale      1.09635    0.35443  3.0933 0.0019797

GLM numdead2 deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.052328  -0.753901   0.083926   0.607488   1.461508  

GLM numdead2 coefficients (family binomial, link logit)
            Estimate Std. Error z value  Pr(>|z|)
(Intercept) -0.87763    0.33710 -2.6035 0.0092278
h(ldose-0)   0.95015    0.19046  4.9888 6.075e-07
h(0-ldose)  -1.34768    0.34933 -3.8579 0.0001144
sexmale      0.93031    0.35192  2.6435 0.0082046

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
             GCV    RSS    GRSq     RSq
numdead   4.6526  9.693 0.90696 0.98078
numdead2  7.3158 15.241 0.85805 0.97067
All      11.9684 24.934 0.88214 0.97565

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead         124.88 11   5.4112  8     4         1
numdead2        128.03 11   7.8021  8     4         1

evimp aref 

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  27.4   22.7

evimp aref trim=FALSE

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  27.4   22.7

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo aref 
 grid:    sex ldose
       female   0.5
-------------------------------------------------------------------------------

> 
> a21 <-  earth(data.frame(sex, ldose), SF.both, glm=list(family="binomial"), trace=1)
x[12,2] with colnames sexmale ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.673 RSq 0.976
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.882 RSq 0.976 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 7.802145 (8 dof)   iters 4
> show.earth.models(a21, nresponse="numdead2")

Print a21 

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary a21 

Call: earth(x=data.frame(sex,ldose), y=SF.both, trace=1,
            glm=list(family="binomial"))

GLM coefficients
               numdead   numdead2
(Intercept) -1.0992373 -0.8776310
sexmale      1.0963463  0.9303095
h(0-ldose)  -1.4542178 -1.3476824
h(ldose-0)   0.9083549  0.9501481

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary a21 digits=3, details=TRUE

Call: earth(x=data.frame(sex,ldose), y=SF.both, trace=1,
            glm=list(family="binomial"))

Earth coefficients
            numdead numdead2
(Intercept)    5.89     6.87
h(ldose-0)     3.62     3.59
h(0-ldose)    -3.68    -3.92
sexmale        3.17     2.67

GLM coefficients
            numdead numdead2
(Intercept)  -1.099   -0.878
h(ldose-0)    0.908    0.950
h(0-ldose)   -1.454   -1.348
sexmale       1.096    0.930

GLM numdead deviance residuals:
    Min       1Q   Median       3Q      Max  
-0.8488  -0.4812   0.0467   0.4687   1.5958  

GLM numdead coefficients (family binomial, link logit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   -1.099      0.346   -3.18  0.00148
h(ldose-0)     0.908      0.183    4.95  7.4e-07
h(0-ldose)    -1.454      0.382   -3.80  0.00014
sexmale        1.096      0.354    3.09  0.00198

GLM numdead2 deviance residuals:
    Min       1Q   Median       3Q      Max  
-1.0523  -0.7539   0.0839   0.6075   1.4615  

GLM numdead2 coefficients (family binomial, link logit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   -0.878      0.337   -2.60  0.00923
h(ldose-0)     0.950      0.190    4.99  6.1e-07
h(0-ldose)    -1.348      0.349   -3.86  0.00011
sexmale        0.930      0.352    2.64  0.00820

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
           GCV   RSS  GRSq   RSq
numdead   4.65  9.69 0.907 0.981
numdead2  7.32 15.24 0.858 0.971
All      11.97 24.93 0.882 0.976

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead            125 11     5.41  8     4         1
numdead2           128 11     7.80  8     4         1

evimp a21 

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  27.4   22.7

evimp a21 trim=FALSE

        nsubsets   gcv    rss
ldose          3 100.0  100.0
sexmale        1  27.4   22.7

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a21 
 grid:    sex ldose
       female   0.5
-------------------------------------------------------------------------------

> check.models.equal(aref, a21, msg="aref a21")
check.models.equal not identical: aref a21 [but within numerical tolerances]
> 
> a21 <-  earth(cbind(sex, ldose), SF.both, glm=list(family="binomial"), trace=1)
x[12,2] with colnames sex ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.673 RSq 0.976
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.882 RSq 0.976 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 7.802145 (8 dof)   iters 4
> show.earth.models(a21, nresponse="numdead")

Print a21 

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sex
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary a21 

Call: earth(x=cbind(sex,ldose), y=SF.both, trace=1,
            glm=list(family="binomial"))

GLM coefficients
               numdead   numdead2
(Intercept) -2.1955836 -1.8079405
sex          1.0963463  0.9303095
h(0-ldose)  -1.4542178 -1.3476824
h(ldose-0)   0.9083549  0.9501481

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sex
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary a21 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(x=cbind(sex,ldose), y=SF.both, trace=1,
            glm=list(family="binomial"))

Earth coefficients
            numdead numdead2
(Intercept)  2.7237   4.2018
h(ldose-0)   3.6184   3.5921
h(0-ldose)  -3.6842  -3.9211
sex          3.1667   2.6667

GLM coefficients
             numdead numdead2
(Intercept) -2.19558 -1.80794
h(ldose-0)   0.90835  0.95015
h(0-ldose)  -1.45422 -1.34768
sex          1.09635  0.93031

GLM numdead deviance residuals:
      Min         1Q     Median         3Q        Max  
-0.848821  -0.481207   0.046671   0.468733   1.595765  

GLM numdead coefficients (family binomial, link logit)
            Estimate Std. Error z value  Pr(>|z|)
(Intercept) -2.19558    0.62222 -3.5286 0.0004177
h(ldose-0)   0.90835    0.18344  4.9518 7.354e-07
h(0-ldose)  -1.45422    0.38247 -3.8021 0.0001435
sex          1.09635    0.35443  3.0933 0.0019797

GLM numdead2 deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.052328  -0.753901   0.083926   0.607488   1.461508  

GLM numdead2 coefficients (family binomial, link logit)
            Estimate Std. Error z value  Pr(>|z|)
(Intercept) -1.80794    0.60930 -2.9672 0.0030050
h(ldose-0)   0.95015    0.19046  4.9888 6.075e-07
h(0-ldose)  -1.34768    0.34933 -3.8579 0.0001144
sex          0.93031    0.35192  2.6435 0.0082046

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sex
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
             GCV    RSS    GRSq     RSq
numdead   4.6526  9.693 0.90696 0.98078
numdead2  7.3158 15.241 0.85805 0.97067
All      11.9684 24.934 0.88214 0.97565

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead         124.88 11   5.4112  8     4         1
numdead2        128.03 11   7.8021  8     4         1

evimp a21 

      nsubsets   gcv    rss
ldose        3 100.0  100.0
sex          1  27.4   22.7

evimp a21 trim=FALSE

      nsubsets   gcv    rss
ldose        3 100.0  100.0
sex          1  27.4   22.7

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a21 
 grid:    sex ldose
          1.5   0.5
-------------------------------------------------------------------------------

> # TODO does not match because different conversion of factor with cbind and earth, revisit
> # check.models.equal(aref, a21, msg="aref a21")
> 
> df.both <- data.frame(SF, SF2)
> a22 <-  earth(cbind(sex, ldose), df.both, glm=list(family="binomial"), trace=1)
x[12,2] with colnames sex ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.673 RSq 0.976
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.882 RSq 0.976 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 7.802145 (8 dof)   iters 4
> show.earth.models(a22, nresponse=1)

Print a22 

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sex
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary a22 

Call: earth(x=cbind(sex,ldose), y=df.both, trace=1,
            glm=list(family="binomial"))

GLM coefficients
               numdead   numdead2
(Intercept) -2.1955836 -1.8079405
sex          1.0963463  0.9303095
h(0-ldose)  -1.4542178 -1.3476824
h(ldose-0)   0.9083549  0.9501481

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sex
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   4.652632  9.692982 0.9069628 0.9807774
numdead2  7.315790 15.241228 0.8580483 0.9706712
All      11.968421 24.934210 0.8821373 0.9756482

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 5.411176  8     4         1
numdead2      128.0299 11 7.802145  8     4         1

Summary a22 digits=3, details=TRUE

Call: earth(x=cbind(sex,ldose), y=df.both, trace=1,
            glm=list(family="binomial"))

Earth coefficients
            numdead numdead2
(Intercept)    2.72     4.20
h(ldose-0)     3.62     3.59
h(0-ldose)    -3.68    -3.92
sex            3.17     2.67

GLM coefficients
            numdead numdead2
(Intercept)  -2.196    -1.81
h(ldose-0)    0.908     0.95
h(0-ldose)   -1.454    -1.35
sex           1.096     0.93

GLM numdead deviance residuals:
    Min       1Q   Median       3Q      Max  
-0.8488  -0.4812   0.0467   0.4687   1.5958  

GLM numdead coefficients (family binomial, link logit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   -2.196      0.622   -3.53  0.00042
h(ldose-0)     0.908      0.183    4.95  7.4e-07
h(0-ldose)    -1.454      0.382   -3.80  0.00014
sex            1.096      0.354    3.09  0.00198

GLM numdead2 deviance residuals:
    Min       1Q   Median       3Q      Max  
-1.0523  -0.7539   0.0839   0.6075   1.4615  

GLM numdead2 coefficients (family binomial, link logit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   -1.808      0.609   -2.97  0.00301
h(ldose-0)     0.950      0.190    4.99  6.1e-07
h(0-ldose)    -1.348      0.349   -3.86  0.00011
sex            0.930      0.352    2.64  0.00820

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sex
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
           GCV   RSS  GRSq   RSq
numdead   4.65  9.69 0.907 0.981
numdead2  7.32 15.24 0.858 0.971
All      11.97 24.93 0.882 0.976

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead            125 11     5.41  8     4         1
numdead2           128 11     7.80  8     4         1

evimp a22 

      nsubsets   gcv    rss
ldose        3 100.0  100.0
sex          1  27.4   22.7

evimp a22 trim=FALSE

      nsubsets   gcv    rss
ldose        3 100.0  100.0
sex          1  27.4   22.7

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a22 
 grid:    sex ldose
          1.5   0.5
-------------------------------------------------------------------------------

> # TODO does not match because different conversion of factor with cbind and earth, revisit
> # check.models.equal(aref, a22, msg="a20 a22")
> check.models.equal(a21, a22, msg="a21 a22")
check.models.equal not identical: a21 a22 [but within numerical tolerances]
> 
> # --- predict with factors ------------------------------------------------------
> 
> # there is a lot of redundancy in this routine, it doesn't really matter
> 
> test.predict.with.factors <- function(trace)
+ {
+     cat("\n--- predict with single level factors and a single response, trace=", trace,
+         " ---\n\n", sep="")
+ 
+     cat("first do a quick test of predict.earth help page example\n")
+     a <- earth(Volume ~ ., data = trees)
+     if (trace) print(head(predict(a, trace=trace)))
+     if (trace) print(predict(a, c(10,80), trace=trace))
+ 
+     # test set A: prepare the data
+ 
+     ldose  <- rep(0:5, 2) - 2
+     # ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
+     ldose1 <- c(0.1, 1.2, 0.1, 1.2, 1.0, 0.1, 0.3, 1.4, 0.1, 1.2, 0.1, 0.9)
+     sex <- factor(rep(c("male", "female"), times=c(6,6)))
+     numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
+ 
+     sexmale <- (sex == "male")
+     am <-  earth(cbind(sexmale, ldose, ldose1), numdead, trace=trace, pmethod=PMETHOD, degree=2)
+     af <-  earth(numdead ~ sex + ldose + ldose1, trace=trace, pmethod=PMETHOD, degree=2)
+     check.models.equal(am, af, "predict with single level factors and a single response")
+ 
+     cat("A-20m head(predict(am, trace=", trace, ")\n", sep="")
+     pm <- predict(am, trace=trace)
+     if (trace) print(head(pm))
+ 
+     cat("A-20f head(predict(af, trace=", trace, ")\n", sep="")
+     pf <- predict(af, trace=trace)
+     if (trace) print(head(pf))
+     stop.if.not.identical("A-20", pm, pf)
+ 
+     cat("A-21m predict(am, newdata=c(sex[1], -2, 0.1), trace=", trace, "))\n", sep="")
+     pm <- predict(am, newdata=c(sex[1]=="male", -2, 0.1), trace=trace)
+     pm.ref <- pm
+     if (trace) print(pm)
+ 
+     cat("A-21f predict(af, newdata=c(sex[1], -2, 0.1), trace=", trace, "))\n", sep="")
+     pf <- predict(af, newdata=c(sex[1]=="male", -2, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-21", pm.ref, pf)
+ 
+     cat("A-22m predict(am, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pm <- predict(am, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-22", pm.ref, pm)
+ 
+     cat("A-22f predict(af, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pf <- predict(af, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-22", pm, pf)
+ 
+     cat("A-23m predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pm <- predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+ 
+     cat("A-23f predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pf <- predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-23", pm, pf)
+ 
+     cat("A-24m predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pm <- predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+     pm2.ref <- pm
+ 
+     cat("A-24f predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pf <- predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-24", pm, pf)
+ 
+     cat("A-25m predict(am, xpredict matrix trace=", trace, "\n", sep="")
+     new.data <- matrix(c(sex[1], sex[1], -2, -1, 0.1, 0.1), nrow=2)
+     pm <- predict(am, newdata=new.data, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-25", pm2.ref, pm)
+ 
+     cat("A-25f predict(af, xpredict matrix trace=", trace, "\n", sep="")
+     pf <- predict(af, newdata=new.data, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-25", pm, pf)
+ 
+     cat("A-26m predict(am, new.data with col names) trace=", trace, "\n", sep="")
+     new.data <- matrix(c(sex[1], sex[1], -2, -1, 0.1, 0.1), nrow=2)
+     colnames(new.data) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, newdata=new.data, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-26m", pm2.ref, pm)
+ 
+     cat("A-26f predict(af, new.data with col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, newdata=new.data, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-26f", pm, pf)
+ 
+     cat("A-27m predict(am, new.data with out of order col names) trace=", trace, "\n", sep="")
+     new.data <- matrix(c(sex[1], sex[1], 0.1, 0.1, -2, -1), nrow=2)
+     colnames(new.data) <- c("sex", "ldose1", "ldose")
+     pm <- predict(am, newdata=new.data, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-27", pm2.ref, pm)
+ 
+     cat("A-27f predict(af, new.data with out of order col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, newdata=new.data, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-27", pm, pf)
+ 
+     cat("A-28m predict(am, xdata.frame without col names) trace=", trace, "\n", sep="")
+     if (trace) print(pm)
+     stop.if.not.identical("A-28", pm2.ref, pm)
+ 
+     cat("A-28f predict(af, xdata.frame without col names) trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(c(sex[1], sex[1]), c(-2, -1), c(0.1, 0.1))
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-28", pm, pf)
+ 
+     cat("A-29m predict(am, xdata.frame with col names) trace=", trace, "\n", sep="")
+     xdata.frame.29 <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame.29) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame.29, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-29", pm.ref, pm)
+ 
+     cat("A-29f predict(af, xdata.frame with col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, xdata.frame.29, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-29", pm, pf)
+ 
+     cat("A2-29m predict(am, xdata.frame with col names) trace=", trace, "\n", sep="")
+     xdata.frame.29.2 <- data.frame(c(sex[1], sex[1]), c(-2, -1), c(0.1, 0.1))
+     colnames(xdata.frame.29.2) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame.29.2, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A2-29", pm2.ref, pm)
+ 
+     cat("A2-29f predict(af, xdata.frame with col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, xdata.frame.29.2, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A2-29", pm, pf)
+ 
+     cat("A-31m predict(am, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     pm <- predict(am, xdata.frame, trace=trace)
+     stop.if.not.identical("A-31", pm.ref, pm)
+     if (trace) print(pm)
+ 
+     cat("A-31f predict(af, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-31", pm, pf)
+ 
+     cat("A-31bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex=sex[1], ldose=-2, ldose1=0.1)
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-31", pm.ref, pm)
+ 
+     cat("A-31bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-31b", pm, pf)
+ 
+     cat("A-32m predict(am, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-32", pm, pf)
+     stop.if.not.identical("A-32", pm.ref, pm)
+ 
+     cat("A-32f predict(af, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-32", pm, pf)
+ 
+     cat("A-42am predict(am, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pm <- predict(am, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-42a", pm.ref, pm)
+ 
+     cat("A-42af predict(af, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pf <- predict(af, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-42a", pm, pf)
+ 
+     cat("A-43am predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pm <- predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+ 
+     cat("A-43af predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pf <- predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-43a", pm, pf)
+ 
+     cat("A-44am predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pm <- predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-44a", pm2.ref, pm)
+ 
+     cat("A-44fm predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pf <- predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-44f", pm, pf)
+ 
+     cat("A-53m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2)
+     expect.err(try(predict(am, xdata.frame, trace=trace)), "expected 3")
+ 
+     cat("A-53f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2)
+     expect.err(try(predict(af, xdata.frame, trace=trace)), "expected 3")
+ 
+     cat("A-54m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(-2, sex[1], 0.1)
+     colnames(xdata.frame) <- c("ldose", "sex", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-54", pm.ref, pm)
+ 
+     cat("A-54f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-54", pm, pf)
+ 
+     cat("A-55m predict(am, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     xdata.frame <- data.frame(sex[c(1,7)], c(-2,-1), c(0.1, 0.1))
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm3.ref <- pm
+     if (trace) print(pm)
+ 
+     cat("A-55f predict(af, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-55", pm, pf)
+ 
+     cat("A-56m predict(am, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     xdata.frame <- data.frame(sex[c(1,7)], c(-2,-1), c(0.1, 0.1))
+     colnames(xdata.frame) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-56", pm3.ref, pm)
+ 
+     cat("A-56f predict(af, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-56", pm, pf)
+ 
+     cat("A-57m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex[c(1,7)], c(-2,-1))
+     expect.err(try(predict(am, xdata.frame, trace=trace)), "expected 3")
+ 
+     cat("A-57f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     expect.err(try(predict(af, xdata.frame, trace=trace)), "expected 3")
+     stop.if.not.identical("A-57", pm, pf)
+ 
+     cat("A-58m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(c(-2,-1), sex[c(1,7)], c(0.1, 0.1))
+     colnames(xdata.frame) <- c("ldose", "sex", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-58", pm3.ref, pm)
+ 
+     cat("A-58f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-58", pm, pf)
+ 
+     cat("A-59m predict(am, xdata.frame, trace=", trace, ") numeric where factor expected, expect forge on message\n", sep="")
+     xdata.frame.39 <- data.frame(c(sex[1], sex[7]), c(-2,-1), c(0.1, 0.1))
+     colnames(xdata.frame.39) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame.39, trace=trace)
+     if (trace) print(pm)
+     # stop.if.not.identical("A-59", pm3.ref, pm) # TODO fails but "forge on" message is correctly issued
+ 
+     cat("A-59f predict(af, xdata.frame, trace=", trace, ") numeric where factor expected, expect forge on message\n", sep="")
+     pf <- predict(af, xdata.frame.39, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-59", pm, pf)
+ 
+     cat("A-50m data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame) <- NULL
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-34", pm.ref, pm)
+ 
+     cat("A-60f data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame) <- NULL
+     pf <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-60", pm, pf)
+ 
+     cat("A-61f data frame without extra columns, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex=sex[1], extra1=99, ldose=-2, extra2=99, ldose1=0.1, extra3=sex[7])
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-61", pm, pf)
+ 
+     #-----------------------------------
+ 
+     my.x1 <- as.numeric(ToothGrowth[,2]) # supp was VC or OJ
+     my.x2 <- as.numeric(ToothGrowth[,3]) # dose
+     my.input.mat <- cbind(my.x1, my.x2)
+     my.response <- ToothGrowth[,1]
+ 
+     cat("A-68 input matrix to formula interface trace=", trace, ", expect error \"could not interpret\"\n", sep="")
+     a41 <- earth(my.response~my.input.mat, trace=trace)
+     expect.err(try(predict(a41, c(2.1, 0.6), trace=trace)), "could not interpret the data")
+ 
+     cat("A-69 above test but with properly named dataframe trace=", trace, "\n", sep="")
+     df <- data.frame(growth=my.response, supp=my.x1, dose=my.x2)
+     a42 <- earth(formula=growth~., data=df, trace=0)
+     p <- predict(a42, c(2.1, 0.6), trace=0) # now gives the correct result
+     if (trace) print(head(p))
+ 
+     cat("Tests with not all predictors used in the model so can pass fewer columns\n")
+     # No factor tests done, they probably won't work in this setup.
+ 
+     # first for earth.default
+     dummy <- rep(0, 12)
+     am <-  earth(cbind(ldose, dummy, ldose1), numdead, trace=trace, pmethod=PMETHOD, degree=2)
+     # prepare reference prediction, using all columns
+     newdata <- matrix(c(-2, 0, 0.1), ncol=3, nrow=1)
+     colnames(newdata) <- c("ldose", "dummy", "ldose1")
+     pm.ref <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm.ref)
+ 
+     cat("A-72m predict(am, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- matrix(c(-2, 0.1), ncol=2, nrow=1)
+     colnames(newdata) <- c("ldose", "ldose1")
+     pm <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-72m", pm, pm.ref)
+ 
+     # prepare reference prediction, using all columns
+     newdata <- data.frame(cbind(ldose, dummy, ldose1))
+     print(newdata)
+     pm.ref <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm.ref)
+ 
+     cat("A-73m predict(am, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- newdata[, c(1,3)]
+     pm <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-73m", pm, pm.ref)
+ 
+     # now for earth.formula
+     dummy <- rep(0, 12)
+     af <-  earth(numdead ~ ldose + dummy + ldose1, trace=trace, pmethod=PMETHOD, degree=2)
+     # prepare reference prediction, using all columns
+     newdata <- matrix(c(-2, 0, 0.1), ncol=3, nrow=1)
+     colnames(newdata) <- c("ldose", "dummy", "ldose1")
+     newdata <- as.data.frame(newdata)
+     pf.ref <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf.ref)
+ 
+     cat("A-72f predict(af, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- matrix(c(-2, 0.1), ncol=2, nrow=1)
+     colnames(newdata) <- c("ldose", "ldose1")
+     newdata <- as.data.frame(newdata)
+     pf <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-72f", pf, pf.ref)
+ 
+     # prepare reference prediction, using all columns
+     newdata <- data.frame(cbind(ldose, dummy, ldose1))
+     print(newdata)
+     pf.ref <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf.ref)
+ 
+     cat("A-73f predict(af, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- newdata[, c(1,3)]
+     pf <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-73f", pf, pf.ref)
+ 
+     cat("\n--- B predict with multiple level factors and a multiple real response, trace=", trace,
+         " ---\n\n", sep="")
+ 
+     # note that we can no now longer get away with using numerics for
+     # factors because factors have more than two levels
+ 
+     # test set B: prepare the data
+ 
+     ldose  <- rep(0:5, 2) - 2
+     ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
+     sex3 <- factor(rep(c("male", "female", "andro"), times=c(6,4,2)))
+     fac3 <- factor(c("lev2", "lev2", "lev1", "lev1", "lev3", "lev3",
+                      "lev2", "lev2", "lev1", "lev1", "lev3", "lev3"))
+     numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
+     numdead2 <- c(2,3,10,13,19,20,0,3,7,11,13,17)
+     numdeadboth <- cbind(numdead, numdead2)
+     isex <- as.double(sex3) # sex3 as an index
+     df <- data.frame(sex3, ldose, ldose1, fac3)
+     am <-  earth(df, numdeadboth, trace=trace, pmethod=PMETHOD, degree=2)
+     af <-  earth(numdeadboth ~ ., data=df, trace=trace, pmethod=PMETHOD, degree=2)
+     check.models.equal(am, af, "B predict with multiple level factors and a multiple real response")
+     cat("20m head(predict(am, trace=", trace, ")\n", sep="")
+     pm <- predict(am, trace=trace)
+     if (trace) print(head(pm))
+ 
+     cat("B-21f head(predict(af, trace=", trace, ")\n", sep="")
+     pf <- predict(af, trace=trace)
+     if (trace) print(head(pf))
+     stop.if.not.identical("B-20", pm, pf)
+ 
+     cat("B-31m predict(am, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm.ref <- pm
+     stop.if.not.identical("B-31", pm.ref, pm)
+     if (trace) print(pm)
+ 
+     cat("B-31f predict(af, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-31", pm, pf)
+ 
+     cat("B-31bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], ldose=-2, ldose1=0.1, fac3=fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-31", pm.ref, pm)
+ 
+     cat("B-31bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-31b", pm, pf)
+ 
+     cat("B-32m predict(am, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-32", pm, pf)
+     stop.if.not.identical("B-32", pm.ref, pm)
+ 
+     cat("B-32f predict(af, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-32", pm, pf)
+ 
+     cat("B-53m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2)
+     expect.err(try(predict(am, xdata.frame, trace=trace)), "expected 4 to match")
+ 
+     cat("B-53f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     expect.err(try(predict(af, xdata.frame, trace=trace)), "expected 4 to match")
+ 
+     cat("B-54m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(-2, sex3[1], 0.1, fac3[1])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-54", pm.ref, pm)
+ 
+     cat("B-54f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-54", pm, pf)
+ 
+     cat("B-55m predict(am, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm3.ref <- pm
+     if (trace) print(pm)
+     cat("B-55m again, but with same x data for both reponses\n")
+     xdata.frame <- data.frame(sex3[c(1,1)], c(-2,-2), c(0.1, 0.1), fac3[c(1,1)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     print(pm)
+ 
+     cat("B-55f predict(af, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-55", pm, pf)
+ 
+     cat("B2-55bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[c(1,7)], ldose=c(-2,-1), ldose1=c(0.1,0.1), fac3=fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B2-55", pm3.ref, pm)
+ 
+     cat("B2-55bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B2-55b", pm, pf)
+ 
+     cat("B-56m predict(am, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-56", pm3.ref, pm)
+ 
+     cat("B-56f predict(af, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-56", pm, pf)
+ 
+     cat("B-57m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1))
+     expect.err(try(predict(am, xdata.frame, trace=trace)), "expected 4 to match")
+ 
+     cat("B-57f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     expect.err(try(predict(af, xdata.frame, trace=trace)), "expected 4 to match")
+     stop.if.not.identical("B-57", pm, pf)
+ 
+     cat("B-58m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(c(-2,-1), sex3[c(1,7)], c(0.1, 0.1),  fac3[c(1,9)])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-58", pm3.ref, pm)
+ 
+     cat("B-58f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-58", pm, pf)
+ 
+     cat("B-50m data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-34", pm.ref, pm)
+ 
+     cat("B-60f data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pf <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-60", pm, pf)
+ 
+     cat("B-60f data frame without extra columns, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], extra1=99, ldose=-2, extra2=99,
+                                ldose1=0.1, fac3=fac3[1], extra3=sex3[7])
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-60f", pm, pf)
+ 
+     cat("\n--- C predict with multiple level factors and a 3 level factor response, trace=", trace,
+         " ---\n\n", sep="")
+ 
+     # test set C: prepare the data
+ 
+     ldose  <- rep(0:5, 2) - 2
+     ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
+     sex3 <- factor(rep(c("male", "female", "andro"), times=c(6,4,2)))
+     fac3 <- factor(c("lev2", "lev2", "lev1", "lev1", "lev3", "lev3",
+                      "lev2", "lev2", "lev1", "lev1", "lev3", "lev3"))
+     facdead <- factor(c("dead2", "dead2", "dead3", "dead1", "dead3", "dead3",
+                         "dead1", "dead2", "dead1", "dead1", "dead3", "dead3"))
+ 
+     isex <- as.double(sex3) # sex3 as an index
+     df <- data.frame(sex3=sex3, ldose=ldose, ldose1=ldose1, fac3=fac3)
+     am <-  earth(df, facdead, trace=trace, pmethod=PMETHOD, degree=2)
+     df.with.response <- data.frame(sex3=sex3, ldose=ldose, ldose1=ldose1, facdead=facdead, fac3=fac3)
+     af <-  earth(facdead ~ ., data=df.with.response, trace=trace, pmethod=PMETHOD, degree=2)
+     check.models.equal(am, af, "C predict with multiple level factors and a multiple real response")
+     cat("20m head(predict(am, trace=", trace, ")\n", sep="")
+     pm <- predict(am, trace=trace)
+     if (trace) print(head(pm))
+ 
+     cat("C-21f head(predict(af, trace=", trace, ")\n", sep="")
+     pf <- predict(af, trace=trace)
+     if (trace) print(head(pf))
+     stop.if.not.identical("C-20", pm, pf)
+ 
+     cat("C-31m predict(am, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm.ref <- pm
+     stop.if.not.identical("C-31", pm.ref, pm)
+     if (trace) print(pm)
+ 
+     cat("C-31f predict(af, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-31", pm, pf)
+ 
+     cat("C-31bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], ldose=-2, ldose1=0.1, fac3=fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-31", pm.ref, pm)
+ 
+     cat("C-31bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-31b", pm, pf)
+ 
+     cat("C-32m predict(am, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-32", pm, pf)
+     stop.if.not.identical("C-32", pm.ref, pm)
+ 
+     cat("C-32f predict(af, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-32", pm, pf)
+ 
+     cat("C-53m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2)
+     expect.err(try(predict(am, xdata.frame, trace=trace)), "expected 4 to match")
+ 
+     cat("C-53f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     expect.err(try(predict(af, xdata.frame, trace=trace)), "expected 4 to match")
+ 
+     cat("C-54m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(-2, sex3[1], 0.1, fac3[1])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-54", pm.ref, pm)
+ 
+     cat("C-54f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-54", pm, pf)
+ 
+     cat("C-55m predict(am, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm3.ref <- pm
+     if (trace) print(pm)
+ 
+     cat("C-55f predict(af, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-55", pm, pf)
+ 
+     cat("C2-55bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[c(1,7)], ldose=c(-2,-1), ldose1=c(0.1,0.1), fac3=fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C2-55", pm3.ref, pm)
+ 
+     cat("C2-55bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C2-55b", pm, pf)
+ 
+     cat("C-56m predict(am, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-56", pm3.ref, pm)
+ 
+     cat("C-56f predict(af, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-56", pm, pf)
+ 
+     cat("C-57m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1))
+     expect.err(try(predict(am, xdata.frame, trace=trace)), "expected 4 to match")
+ 
+     cat("C-57f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     expect.err(try(predict(af, xdata.frame, trace=trace)), "has 2 columns")
+     stop.if.not.identical("C-57", pm, pf)
+ 
+     cat("C-58m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(c(-2,-1), sex3[c(1,7)], c(0.1, 0.1),  fac3[c(1,9)])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-58", pm3.ref, pm)
+ 
+     cat("C-58f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-58", pm, pf)
+ 
+     cat("C-50m data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-34", pm.ref, pm)
+ 
+     cat("C-60f data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pf <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-60", pm, pf)
+ 
+     cat("C-61f data frame without extra columns, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], extra1=99, ldose=-2, extra2=99,
+                                ldose1=0.1, fac3=fac3[1], extra3=sex3[7])
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-61", pm, pf)
+ }
> test.predict.with.factors(trace=1)

--- predict with single level factors and a single response, trace=1 ---

first do a quick test of predict.earth help page example
predict.earth: returning earth fitted.values 
        Volume
[1,]  8.883097
[2,]  9.909039
[3,] 10.593000
[4,] 16.406671
[5,] 20.578818
[6,] 22.083528
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
  Girth Height
1    10     80
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
  Girth Height
1    10     80
predict.earth: bx[1,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
predict.earth: returning earth predictions 
       Volume
[1,] 17.60359
x[12,3] with colnames sexmale ldose ldose1
y[12,1] with colname numdead
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
x[12,3] with colnames sexmale ldose ldose1
y[12,1] with colname numdead
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms, 4 terms used
After forward pass GRSq -in RSq 0.991
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.81 RSq 0.981 
check.models.equal not identical: predict with single level factors and a single response [but within numerical tolerances]
A-20m head(predict(am, trace=1)
predict.earth: returning earth fitted.values 
       numdead
[1,]  1.688596
[2,]  5.372807
[3,]  9.057018
[4,] 12.675439
[5,] 16.293860
[6,] 19.912281
A-20f head(predict(af, trace=1)
predict.earth: returning earth fitted.values 
       numdead
[1,]  1.688596
[2,]  5.372807
[3,]  9.057018
[4,] 12.675439
[5,] 16.293860
[6,] 19.912281
A-20 identical
A-21m predict(am, newdata=c(sex[1], -2, 0.1), trace=1))
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sexmale ldose ldose1
1       1    -2    0.1
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-21f predict(af, newdata=c(sex[1], -2, 0.1), trace=1))
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sex ldose ldose1
1   1    -2    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  sex ldose ldose1
1   1    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-21 identical
A-22m predict(am, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sexmale ldose ldose1
1       1    -2    0.1
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-22 identical
A-22f predict(af, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sex ldose ldose1
1   1    -2    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  sex ldose ldose1
1   1    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-22 identical
A-23m predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sexmale ldose ldose1
1       2    -2    0.1
2       2    -2    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          2       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 4.855263
A-23f predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          2       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 4.855263
A-23 identical
A-24m predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sexmale ldose ldose1
1       2    -2    0.1
2       2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-24f predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-24 identical
A-25m predict(am, xpredict matrix trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sexmale ldose ldose1
1       2    -2    0.1
2       2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-25 identical
A-25f predict(af, xpredict matrix trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-25 identical
A-26m predict(am, new.data with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-26m identical
A-26f predict(af, new.data with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-26f identical
A-27m predict(am, new.data with out of order col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: sex ldose1 ldose
    New columns: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-27 identical
A-27f predict(af, new.data with out of order col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: sex ldose1 ldose
    New columns: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-27 identical
A-28m predict(am, xdata.frame without col names) trace=1
      numdead
[1,] 4.855263
[2,] 8.539474
A-28 identical
A-28f predict(af, xdata.frame without col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: c.sex.1...sex.1.. c..2...1. c.0.1..0.1.
    New names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-28 identical
A-29m predict(am, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-29 identical
A-29f predict(af, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-29 identical
A2-29m predict(am, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A2-29 identical
A2-29f predict(af, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A2-29 identical
A-31m predict(am, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.1. X.2 X0.1
    New names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sexmale ldose ldose1
1    male    -2    0.1
  sexmale is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
A-31 identical
      numdead
[1,] 1.688596
A-31f predict(af, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.1. X.2 X0.1
    New names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-31 identical
A-31bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-31 identical
A-31bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-31b identical
A-32m predict(am, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-32 identical
A-32 identical
A-32f predict(af, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-32 identical
A-42am predict(am, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sexmale ldose ldose1
1       1    -2    0.1
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-42a identical
A-42af predict(af, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sex ldose ldose1
1   1    -2    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  sex ldose ldose1
1   1    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-42a identical
A-43am predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          2       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 4.855263
A-43af predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sexmale ldose ldose1
1       2    -2    0.1
2       2    -2    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          2       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 4.855263
A-43a identical
A-44am predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-44a identical
A-44fm predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sexmale ldose ldose1
1       2    -2    0.1
2       2    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       2
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 8.539474
A-44f identical
A-53m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
Got error as expected from try(predict(am, xdata.frame, trace = trace))
A-53f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sex ldose ldose1
Got error as expected from try(predict(af, xdata.frame, trace = trace))
A-54m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-54 identical
A-54f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-54 identical
A-55m predict(am, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.c.1..7.. c..2...1. c.0.1..0.1.
    New names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sexmale ldose ldose1
1    male    -2    0.1
2  female    -1    0.1
  sexmale is a factor with levels: female male
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
2           1          0          1       0
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
[2,] 2.206140
A-55f predict(af, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.c.1..7.. c..2...1. c.0.1..0.1.
    New names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
2           1          0          1       0
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
[2,] 2.206140
A-55 identical
A-56m predict(am, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
2           1          0          1       0
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
[2,] 2.206140
A-56 identical
A-56f predict(af, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
2           1          0          1       0
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
[2,] 2.206140
A-56 identical
A-57m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
Got error as expected from try(predict(am, xdata.frame, trace = trace))
A-57f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sex ldose ldose1
Got error as expected from try(predict(af, xdata.frame, trace = trace))
A-57 identical
A-58m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
2           1          0          1       0
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
[2,] 2.206140
A-58 identical
A-58f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
  sex is a factor with levels: female male
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
2           1          0          1       0
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
[2,] 2.206140
A-58 identical
A-59m predict(am, xdata.frame, trace=1) numeric where factor expected, expect forge on message
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       1
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 5.372807
A-59f predict(af, xdata.frame, trace=1) numeric where factor expected, expect forge on message
get.earth.x from model.matrix.earth from predict.earth: x[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,3]:
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
predict.earth: bx[2,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       2
2           1          0          1       1
predict.earth: returning earth predictions 
      numdead
[1,] 4.855263
[2,] 5.372807
A-59 identical
A-50m data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sexmale ldose ldose1
1    male    -2    0.1
  sexmale is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-34 identical
A-60f data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  sexmale ldose ldose1
1    male    -2    0.1
  sexmale is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-60 identical
A-61f data frame without extra columns, trace=1
get.earth.x from model.matrix.earth from predict.earth: x[1,6]:
   sex extra1 ldose extra2 ldose1 extra3
1 male     99    -2     99    0.1 female
  factors: sex extra3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
   sex ldose ldose1
1 male    -2    0.1
  sex is a factor with levels: female male
predict.earth: bx[1,4]:
  (Intercept) h(ldose-0) h(0-ldose) sexmale
1           1          0          2       1
predict.earth: returning earth predictions 
      numdead
[1,] 1.688596
A-61 identical
A-68 input matrix to formula interface trace=1, expect error "could not interpret"
x[60,2] with colnames my.input.matmy.x1 my.input.matmy.x2
y[60,1] with colname my.response
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.682 RSq 0.762
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.705 RSq 0.762 
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: my.x1 my.x2
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
  my.x1 my.x2
1   2.1   0.6
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[60,1]:
    my.input.mat.my.x1 my.input.mat.my.x2
1                  2.0                0.5
2                  2.0                0.5
3                  2.0                0.5
...                2.0                0.5
60                 1.0                2.0
Error : model.frame.default could not interpret the data passed to get.earth.x from model.matrix.earth from predict.earth
        (actual.nrows=60 expected.nrows=1 fitted.nrows=60)
Got error as expected from try(predict(a41, c(2.1, 0.6), trace = trace))
A-69 above test but with properly named dataframe trace=1
     growth
[1,] 10.211
Tests with not all predictors used in the model so can pass fewer columns
x[12,3] with colnames ldose dummy ldose1
y[12,1] with colname numdead
Forward pass term 1, 2, 4, 6, 8
GRSq -Inf at 7 terms, 5 terms used
After forward pass GRSq -in RSq 0.931
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 2 of 3 predictors
After backward pass GRSq -7.58 RSq 0.929 
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  ldose dummy ldose1
1    -2     0    0.1
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1           1          0          2               0.2    0.1
predict.earth: returning earth predictions 
       numdead
[1,] 0.8567965
A-72m predict(am, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  ldose dummy ldose1
1    -2   999    0.1
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1           1          0          2               0.2    0.1
predict.earth: returning earth predictions 
       numdead
[1,] 0.8567965
A-72m identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
get.earth.x from model.matrix.earth from predict.earth: x[12,3]:
    ldose dummy ldose1
1      -2     0    0.1
2      -1     0    1.2
3       0     0    0.1
...     1     0    1.2
12      3     0    0.9
predict.earth: bx[12,5]:
    (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1             1          0          2               0.2    0.1
2             1          0          1               1.2    1.2
3             1          0          0               0.0    0.1
...           1          1          0               0.0    1.2
12            1          3          0               0.0    0.9
predict.earth: returning earth predictions 
         numdead
 [1,]  0.8567965
 [2,]  2.9874744
 [3,]  7.4404550
 [4,] 11.8280855
 [5,] 15.0894517
 [6,] 17.7443680
 [7,]  0.2612882
 [8,]  2.7763560
 [9,]  7.4404550
[10,] 11.8280855
[11,] 14.3097303
[12,] 18.4374537
A-73m predict(am, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x[12,3]:
    ldose dummy ldose1
1      -2   999    0.1
2      -1   999    1.2
3       0   999    0.1
...     1   999    1.2
12      3   999    0.9
predict.earth: bx[12,5]:
    (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1             1          0          2               0.2    0.1
2             1          0          1               1.2    1.2
3             1          0          0               0.0    0.1
...           1          1          0               0.0    1.2
12            1          3          0               0.0    0.9
predict.earth: returning earth predictions 
         numdead
 [1,]  0.8567965
 [2,]  2.9874744
 [3,]  7.4404550
 [4,] 11.8280855
 [5,] 15.0894517
 [6,] 17.7443680
 [7,]  0.2612882
 [8,]  2.7763560
 [9,]  7.4404550
[10,] 11.8280855
[11,] 14.3097303
[12,] 18.4374537
A-73m identical
x[12,3] with colnames ldose dummy ldose1
y[12,1] with colname numdead
Forward pass term 1, 2, 4, 6, 8
GRSq -Inf at 7 terms, 5 terms used
After forward pass GRSq -in RSq 0.931
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 2 of 3 predictors
After backward pass GRSq -7.58 RSq 0.929 
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  ldose dummy ldose1
1    -2     0    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  ldose dummy ldose1
1    -2     0    0.1
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1           1          0          2               0.2    0.1
predict.earth: returning earth predictions 
       numdead
[1,] 0.8567965
A-72f predict(af, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x[1,3]:
  ldose dummy ldose1
1    -2   999    0.1
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  ldose dummy ldose1
1    -2   999    0.1
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1           1          0          2               0.2    0.1
predict.earth: returning earth predictions 
       numdead
[1,] 0.8567965
A-72f identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
get.earth.x from model.matrix.earth from predict.earth: x[12,3]:
    ldose dummy ldose1
1      -2     0    0.1
2      -1     0    1.2
3       0     0    0.1
...     1     0    1.2
12      3     0    0.9
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[12,3]:
    ldose dummy ldose1
1      -2     0    0.1
2      -1     0    1.2
3       0     0    0.1
...     1     0    1.2
12      3     0    0.9
predict.earth: bx[12,5]:
    (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1             1          0          2               0.2    0.1
2             1          0          1               1.2    1.2
3             1          0          0               0.0    0.1
...           1          1          0               0.0    1.2
12            1          3          0               0.0    0.9
predict.earth: returning earth predictions 
         numdead
 [1,]  0.8567965
 [2,]  2.9874744
 [3,]  7.4404550
 [4,] 11.8280855
 [5,] 15.0894517
 [6,] 17.7443680
 [7,]  0.2612882
 [8,]  2.7763560
 [9,]  7.4404550
[10,] 11.8280855
[11,] 14.3097303
[12,] 18.4374537
A-73f predict(af, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x[12,3]:
    ldose dummy ldose1
1      -2   999    0.1
2      -1   999    1.2
3       0   999    0.1
...     1   999    1.2
12      3   999    0.9
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[12,3]:
    ldose dummy ldose1
1      -2   999    0.1
2      -1   999    1.2
3       0   999    0.1
...     1   999    1.2
12      3   999    0.9
predict.earth: bx[12,5]:
    (Intercept) h(ldose-0) h(0-ldose) h(0-ldose)*ldose1 ldose1
1             1          0          2               0.2    0.1
2             1          0          1               1.2    1.2
3             1          0          0               0.0    0.1
...           1          1          0               0.0    1.2
12            1          3          0               0.0    0.9
predict.earth: returning earth predictions 
         numdead
 [1,]  0.8567965
 [2,]  2.9874744
 [3,]  7.4404550
 [4,] 11.8280855
 [5,] 15.0894517
 [6,] 17.7443680
 [7,]  0.2612882
 [8,]  2.7763560
 [9,]  7.4404550
[10,] 11.8280855
[11,] 14.3097303
[12,] 18.4374537
A-73f identical

--- B predict with multiple level factors and a multiple real response, trace=1 ---

x[12,6] with colnames sex3female sex3male ldose ldose1 fac3lev2 fac3lev3
y[12,2] with colnames numdead numdead2
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms
After forward pass GRSq -in RSq 0.981
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 2 of 6 predictors
After backward pass GRSq -0.921 RSq 0.984 
x[12,6] with colnames sex3female sex3male ldose ldose1 fac3lev2 fac3lev3
y[12,2] with colnames numdead numdead2
Forward pass term 1, 2, 4, 6
GRSq -Inf at 5 terms
After forward pass GRSq -in RSq 0.981
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 2 of 6 predictors
After backward pass GRSq -0.921 RSq 0.984 
check.models.equal not identical: B predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=1)
predict.earth: returning earth fitted.values 
       numdead numdead2
[1,]  1.166667  1.23913
[2,]  4.666667  5.00000
[3,]  8.166667  8.76087
[4,] 13.750000 14.06159
[5,] 17.000000 17.33333
[6,] 20.250000 20.60507
B-21f head(predict(af, trace=1)
predict.earth: returning earth fitted.values 
       numdead numdead2
[1,]  1.166667  1.23913
[2,]  4.666667  5.00000
[3,]  8.166667  8.76087
[4,] 13.750000 14.06159
[5,] 17.000000 17.33333
[6,] 20.250000 20.60507
B-20 identical
B-31m predict(am, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
B-31 identical
      numdead numdead2
[1,] 1.166667  1.23913
B-31f predict(af, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-31 identical
B-31bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-31 identical
B-31bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-31b identical
B-32m predict(am, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-32 identical
B-32 identical
B-32f predict(af, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-32 identical
B-53m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
B-53f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
B-54m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-54 identical
B-54f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-54 identical
B-55m predict(am, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..7.. c..2...1. c.0.1..0.1. fac3.c.1..9..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          1             0           2.4
predict.earth: returning earth predictions 
       numdead numdead2
[1,]  1.166667  1.23913
[2,] 15.666667 14.08696
B-55m again, but with same x data for both reponses
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..1.. c..2...2. c.0.1..0.1. fac3.c.1..1..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
2 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
[2,] 1.166667  1.23913
B-55f predict(af, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..1.. c..2...2. c.0.1..0.1. fac3.c.1..1..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
2 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
2 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
[2,] 1.166667  1.23913
B-55 identical
B2-55bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          1             0           2.4
predict.earth: returning earth predictions 
       numdead numdead2
[1,]  1.166667  1.23913
[2,] 15.666667 14.08696
B2-55 identical
B2-55bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          1             0           2.4
predict.earth: returning earth predictions 
       numdead numdead2
[1,]  1.166667  1.23913
[2,] 15.666667 14.08696
B2-55b identical
B-56m predict(am, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          1             0           2.4
predict.earth: returning earth predictions 
       numdead numdead2
[1,]  1.166667  1.23913
[2,] 15.666667 14.08696
B-56 identical
B-56f predict(af, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          1             0           2.4
predict.earth: returning earth predictions 
       numdead numdead2
[1,]  1.166667  1.23913
[2,] 15.666667 14.08696
B-56 identical
B-57m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
B-57f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
B-57 identical
B-58m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          1             0           2.4
predict.earth: returning earth predictions 
       numdead numdead2
[1,]  1.166667  1.23913
[2,] 15.666667 14.08696
B-58 identical
B-58f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
2           1          0          1             0           2.4
predict.earth: returning earth predictions 
       numdead numdead2
[1,]  1.166667  1.23913
[2,] 15.666667 14.08696
B-58 identical
B-50m data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-34 identical
B-60f data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-60 identical
B-60f data frame without extra columns, trace=1
get.earth.x from model.matrix.earth from predict.earth: x[1,7]:
  sex3 extra1 ldose extra2 ldose1 fac3 extra3
1 male     99    -2     99    0.1 lev2 female
  factors: sex3 fac3 extra3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,5]:
  (Intercept) h(ldose-0) h(0-ldose) h(ldose1-2.5) h(2.5-ldose1)
1           1          0          2             0           2.4
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.166667  1.23913
B-60f identical

--- C predict with multiple level factors and a 3 level factor response, trace=1 ---

x[12,6] with colnames sex3female sex3male ldose ldose1 fac3lev2 fac3lev3
y[12,3] with colnames dead1 dead2 dead3
Forward pass term 1, 2, 4, 6
Reached minimum GRSq -10 at 5 terms, 4 terms used (GRSq -25)
After forward pass GRSq -25.233 RSq 0.783
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 6 predictors
After backward pass GRSq -2.98 RSq 0.597 
x[12,6] with colnames sex3female sex3male ldose ldose1 fac3lev2 fac3lev3
y[12,3] with colnames dead1 dead2 dead3
Forward pass term 1, 2, 4, 6
Reached minimum GRSq -10 at 5 terms, 4 terms used (GRSq -25)
After forward pass GRSq -25.233 RSq 0.783
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 2 of 6 predictors
After backward pass GRSq -2.98 RSq 0.597 
check.models.equal not identical: C predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=1)
predict.earth: returning earth fitted.values 
           dead1       dead2       dead3
[1,]  0.48796881  0.55646922 -0.04443804
[2,] -0.17857394  1.04640569  0.13216825
[3,]  0.61065675  0.20356630  0.18577695
[4,]  0.63869210 -0.05928628  0.42059419
[5,]  0.30641076 -0.01824193  0.71183118
[6,] -0.02587059  0.02280242  1.00306817
C-21f head(predict(af, trace=1)
predict.earth: returning earth fitted.values 
           dead1       dead2       dead3
[1,]  0.48796881  0.55646922 -0.04443804
[2,] -0.17857394  1.04640569  0.13216825
[3,]  0.61065675  0.20356630  0.18577695
[4,]  0.63869210 -0.05928628  0.42059419
[5,]  0.30641076 -0.01824193  0.71183118
[6,] -0.02587059  0.02280242  1.00306817
C-20 identical
C-31m predict(am, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
C-31 identical
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-31f predict(af, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-31 identical
C-31bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-31 identical
C-31bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-31b identical
C-32m predict(am, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-32 identical
C-32 identical
C-32f predict(af, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-32 identical
C-53m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
C-53f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
C-54m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-54 identical
C-54f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-54 identical
C-55m predict(am, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..7.. c..2...1. c.0.1..0.1. fac3.c.1..9..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C-55f predict(af, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..7.. c..2...1. c.0.1..0.1. fac3.c.1..9..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C-55 identical
C2-55bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C2-55 identical
C2-55bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C2-55b identical
C-56m predict(am, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C-56 identical
C-56f predict(af, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C-56 identical
C-57m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
C-57f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
C-57 identical
C-58m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C-58 identical
C-58f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,4]:
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
  factors: sex3 fac3
predict.earth: bx[2,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
2           1             0           2.4                -2.4
predict.earth: returning earth predictions 
          dead1     dead2       dead3
[1,]  0.4879688 0.5564692 -0.04443804
[2,] -1.1001477 2.0104065  0.08974114
C-58 identical
C-50m data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-34 identical
C-60f data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-60 identical
C-61f data frame without extra columns, trace=1
get.earth.x from model.matrix.earth from predict.earth: x[1,7]:
  sex3 extra1 ldose extra2 ldose1 fac3 extra3
1 male     99    -2     99    0.1 lev2 female
  factors: sex3 fac3 extra3
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,4]:
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
  factors: sex3 fac3
predict.earth: bx[1,4]:
  (Intercept) h(ldose1-2.5) h(2.5-ldose1) ldose*h(2.5-ldose1)
1           1             0           2.4                -4.8
predict.earth: returning earth predictions 
         dead1     dead2       dead3
[1,] 0.4879688 0.5564692 -0.04443804
C-61 identical
> test.predict.with.factors(trace=0)

--- predict with single level factors and a single response, trace=0 ---

first do a quick test of predict.earth help page example
check.models.equal not identical: predict with single level factors and a single response [but within numerical tolerances]
A-20m head(predict(am, trace=0)
A-20f head(predict(af, trace=0)
A-20 identical
A-21m predict(am, newdata=c(sex[1], -2, 0.1), trace=0))
A-21f predict(af, newdata=c(sex[1], -2, 0.1), trace=0))
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
A-21 identical
A-22m predict(am, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
A-22 identical
A-22f predict(af, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
A-22 identical
A-23m predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
A-23f predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
A-23 identical
A-24m predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
A-24f predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-24 identical
A-25m predict(am, xpredict matrix trace=0
A-25 identical
A-25f predict(af, xpredict matrix trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-25 identical
A-26m predict(am, new.data with col names) trace=0
A-26m identical
A-26f predict(af, new.data with col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-26f identical
A-27m predict(am, new.data with out of order col names) trace=0
A-27 identical
A-27f predict(af, new.data with out of order col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-27 identical
A-28m predict(am, xdata.frame without col names) trace=0
A-28 identical
A-28f predict(af, xdata.frame without col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-28 identical
A-29m predict(am, xdata.frame with col names) trace=0
A-29 identical
A-29f predict(af, xdata.frame with col names) trace=0
A-29 identical
A2-29m predict(am, xdata.frame with col names) trace=0
A2-29 identical
A2-29f predict(af, xdata.frame with col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A2-29 identical
A-31m predict(am, xdata.frame, trace=0) data frame with factors and wrong col names
A-31 identical
A-31f predict(af, xdata.frame, trace=0) data frame with factors and wrong col names
A-31 identical
A-31bm predict(am, xdata.frame, trace=0) data frame col names
A-31 identical
A-31bf predict(af, xdata.frame, trace=0) data frame col names
A-31b identical
A-32m predict(am, xdata.frame, trace=0) # data frame with names
A-32 identical
A-32 identical
A-32f predict(af, xdata.frame, trace=0) # data frame with names
A-32 identical
A-42am predict(am, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
A-42a identical
A-42af predict(af, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
A-42a identical
A-43am predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
A-43af predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
A-43a identical
A-44am predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-44a identical
A-44fm predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
A-44f identical
A-53m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
Got error as expected from try(predict(am, xdata.frame, trace = trace))
A-53f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sex ldose ldose1
Got error as expected from try(predict(af, xdata.frame, trace = trace))
A-54m predict(am, xdata.frame, trace=0) # data frame with cols in different order
A-54 identical
A-54f predict(af, xdata.frame, trace=0) # data frame with cols in different order
A-54 identical
A-55m predict(am, xdata.frame, trace=0) data frame without col names
A-55f predict(af, xdata.frame, trace=0) data frame without col names
A-55 identical
A-56m predict(am, xdata.frame, trace=0) # data frame with col names
A-56 identical
A-56f predict(af, xdata.frame, trace=0) # data frame with col names
A-56 identical
A-57m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
Got error as expected from try(predict(am, xdata.frame, trace = trace))
A-57f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sex ldose ldose1
Got error as expected from try(predict(af, xdata.frame, trace = trace))
A-57 identical
A-58m predict(am, xdata.frame, trace=0) # data frame with cols in different order
A-58 identical
A-58f predict(af, xdata.frame, trace=0) # data frame with cols in different order
A-58 identical
A-59m predict(am, xdata.frame, trace=0) numeric where factor expected, expect forge on message
A-59f predict(af, xdata.frame, trace=0) numeric where factor expected, expect forge on message
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Continuing anyway, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
A-59 identical
A-50m data frame without column names, trace=0
A-34 identical
A-60f data frame without column names, trace=0
A-60 identical
A-61f data frame without extra columns, trace=0
A-61 identical
A-68 input matrix to formula interface trace=0, expect error "could not interpret"
Error : model.frame.default could not interpret the data passed to get.earth.x from model.matrix.earth from predict.earth
        (actual.nrows=60 expected.nrows=1 fitted.nrows=60)
Got error as expected from try(predict(a41, c(2.1, 0.6), trace = trace))
A-69 above test but with properly named dataframe trace=0
Tests with not all predictors used in the model so can pass fewer columns
A-72m predict(am, newdata=newdata[two columns], trace=trace)
A-72m identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
A-73m predict(am, newdata=newdata[two columns], trace=trace)
A-73m identical
A-72f predict(af, newdata=newdata[two columns], trace=trace)
A-72f identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
A-73f predict(af, newdata=newdata[two columns], trace=trace)
A-73f identical

--- B predict with multiple level factors and a multiple real response, trace=0 ---

check.models.equal not identical: B predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=0)
B-21f head(predict(af, trace=0)
B-20 identical
B-31m predict(am, xdata.frame, trace=0) data frame with factors and wrong col names
B-31 identical
B-31f predict(af, xdata.frame, trace=0) data frame with factors and wrong col names
B-31 identical
B-31bm predict(am, xdata.frame, trace=0) data frame col names
B-31 identical
B-31bf predict(af, xdata.frame, trace=0) data frame col names
B-31b identical
B-32m predict(am, xdata.frame, trace=0) # data frame with names
B-32 identical
B-32 identical
B-32f predict(af, xdata.frame, trace=0) # data frame with names
B-32 identical
B-53m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
B-53f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
B-54m predict(am, xdata.frame, trace=0) # data frame with cols in different order
B-54 identical
B-54f predict(af, xdata.frame, trace=0) # data frame with cols in different order
B-54 identical
B-55m predict(am, xdata.frame, trace=0) data frame without col names
B-55m again, but with same x data for both reponses
      numdead numdead2
[1,] 1.166667  1.23913
[2,] 1.166667  1.23913
B-55f predict(af, xdata.frame, trace=0) data frame without col names
B-55 identical
B2-55bm predict(am, xdata.frame, trace=0) data frame col names
B2-55 identical
B2-55bf predict(af, xdata.frame, trace=0) data frame col names
B2-55b identical
B-56m predict(am, xdata.frame, trace=0) # data frame with col names
B-56 identical
B-56f predict(af, xdata.frame, trace=0) # data frame with col names
B-56 identical
B-57m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
B-57f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
B-57 identical
B-58m predict(am, xdata.frame, trace=0) # data frame with cols in different order
B-58 identical
B-58f predict(af, xdata.frame, trace=0) # data frame with cols in different order
B-58 identical
B-50m data frame without column names, trace=0
B-34 identical
B-60f data frame without column names, trace=0
B-60 identical
B-60f data frame without extra columns, trace=0
B-60f identical

--- C predict with multiple level factors and a 3 level factor response, trace=0 ---

check.models.equal not identical: C predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=0)
C-21f head(predict(af, trace=0)
C-20 identical
C-31m predict(am, xdata.frame, trace=0) data frame with factors and wrong col names
C-31 identical
C-31f predict(af, xdata.frame, trace=0) data frame with factors and wrong col names
C-31 identical
C-31bm predict(am, xdata.frame, trace=0) data frame col names
C-31 identical
C-31bf predict(af, xdata.frame, trace=0) data frame col names
C-31b identical
C-32m predict(am, xdata.frame, trace=0) # data frame with names
C-32 identical
C-32 identical
C-32f predict(af, xdata.frame, trace=0) # data frame with names
C-32 identical
C-53m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
C-53f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
C-54m predict(am, xdata.frame, trace=0) # data frame with cols in different order
C-54 identical
C-54f predict(af, xdata.frame, trace=0) # data frame with cols in different order
C-54 identical
C-55m predict(am, xdata.frame, trace=0) data frame without col names
C-55f predict(af, xdata.frame, trace=0) data frame without col names
C-55 identical
C2-55bm predict(am, xdata.frame, trace=0) data frame col names
C2-55 identical
C2-55bf predict(af, xdata.frame, trace=0) data frame col names
C2-55b identical
C-56m predict(am, xdata.frame, trace=0) # data frame with col names
C-56 identical
C-56f predict(af, xdata.frame, trace=0) # data frame with col names
C-56 identical
C-57m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(am, xdata.frame, trace = trace))
C-57f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
Got error as expected from try(predict(af, xdata.frame, trace = trace))
C-57 identical
C-58m predict(am, xdata.frame, trace=0) # data frame with cols in different order
C-58 identical
C-58f predict(af, xdata.frame, trace=0) # data frame with cols in different order
C-58 identical
C-50m data frame without column names, trace=0
C-34 identical
C-60f data frame without column names, trace=0
C-60 identical
C-61f data frame without extra columns, trace=0
C-61 identical
> 
> cat("---test glm.predict---\n")
---test glm.predict---
> 
> ldose  <- rep(0:5, 2) - 2
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> SF <- cbind(numdead, numalive=20 - numdead)
> 
> cat("c1a: single response glm model with a binomial pair of y columns, fitted values, keepxy=0\n")
c1a: single response glm model with a binomial pair of y columns, fitted values, keepxy=0
> c1a  <- earth(SF ~ sex + ldose, glm=list(family="binomial"), linpreds=TRUE, trace=1, pmethod=PMETHOD, degree=1, keepxy=0)
x[12,2] with colnames sexmale ldose
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.952 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
> c1ae <- earth(numdead ~ sex + ldose, trace=1, linpreds=TRUE, pmethod=PMETHOD, degree=1, keepxy=0)
x[12,2] with colnames sexmale ldose
y[12,1] with colname numdead
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.952 RSq 0.981 
> c1ag <- glm(SF ~ sex + ldose, family="binomial") # use this as a reference
> 
> c1a.predict <- predict(c1a, trace=1)
predict.earth: returning glm fitted.values
> c1ag.predict <- predict(c1ag, trace=1)
> check.fuzzy.equal(c1a.predict, c1ag.predict, fuzz=1e-10, msg="c1a fitted values, type=default link, keepxy=0", verbose=TRUE)
c1a fitted values, type=default link, keepxy=0 OK
> c1a.predict <- predict(c1a, type="link", trace=1)
predict.earth: returning glm fitted.values
> c1ag.predict <- predict(c1ag, type="li", trace=1)
> check.fuzzy.equal(c1a.predict, c1ag.predict, fuzz=1e-10, msg="c1a fitted values, type=link, keepxy=0", verbose=TRUE)
c1a fitted values, type=link, keepxy=0 OK
> c1a.predict <- predict(c1a, type="response", trace=1)
predict.earth: returning glm fitted.values
> c1ag.predict <- predict(c1ag, type="resp", trace=1)
> check.fuzzy.equal(c1a.predict, c1ag.predict, fuzz=1e-10, msg="c1a fitted values, type=response, keepxy=0", verbose=TRUE)
c1a fitted values, type=response, keepxy=0 OK
> c1a.predict <- predict(c1a, type="e", trace=1)
predict.earth: returning earth (not glm) fitted.values 
> c1ae.predict <- predict(c1ae, trace=1)
predict.earth: returning earth fitted.values 
> check.fuzzy.equal(c1a.predict, c1ae.predict, fuzz=1e-10, msg="c1a fitted values, type=earth, keepxy=0", verbose=TRUE)
c1a fitted values, type=earth, keepxy=0 OK
> 
> cat("c1b: single response glm model with a binomial pair of y columns\n")
c1b: single response glm model with a binomial pair of y columns
> c1b <-  earth(SF ~ sex + ldose, glm=list(family="binomial"), linpreds=TRUE, trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.952 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
Warning: No 'data' argument to earth so 'keepxy' is limited

> c1be <-  earth(numdead ~ sex + ldose, linpreds=TRUE, trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,1] with colname numdead
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.952 RSq 0.981 
Warning: No 'data' argument to earth so 'keepxy' is limited

> c1bg <- glm(SF ~ sex + ldose, family="binomial") # use this as a reference
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c1b.predict <- predict(c1b, newdata, trace=1)
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
predict.earth: bx[1,3]:
  (Intercept) ldose sexmale
1           1     2       1
predict.earth: returning glm link predictions
> stopifnot(dim(c1b.predict) == c(1,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata), fuzz=1e-10, msg="c1b", verbose=TRUE)
c1b OK
> 
> c1b.link.predict <- predict(c1b, newdata, type="link", trace=1) # should be same as above because default is link
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
predict.earth: bx[1,3]:
  (Intercept) ldose sexmale
1           1     2       1
predict.earth: returning glm link predictions
> check.fuzzy.equal(c1b.link.predict, c1b.predict, fuzz=1e-10, msg="c1b link", verbose=TRUE)
c1b link OK
> 
> c1b.predict <- predict(c1b, newdata, type="r")
> stopifnot(dim(c1b.predict) == c(1,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata, type="response"), fuzz=1e-10, msg="c1b type=response", verbose=TRUE)
c1b type=response OK
> 
> c1b.predict <- predict(c1b, newdata, type="earth")
> stopifnot(dim(c1b.predict) == c(1,1))
> check.fuzzy.equal(c1b.predict, predict(c1be, newdata), fuzz=1e-10, msg="c1b type=earth", verbose=TRUE)
c1b type=earth OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c1b.predict <- predict(c1b, newdata, trace=1)
get.earth.x from model.matrix.earth from predict.earth: x[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
predict.earth: bx[4,3]:
  (Intercept) ldose sexmale
1           1    -2       1
2           1     0       1
3           1    -2       0
4           1     0       0
predict.earth: returning glm link predictions
> stopifnot(dim(c1b.predict) == c(4,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata), fuzz=1e-10, msg="c1b multiple rows", verbose=TRUE)
c1b multiple rows OK
> 
> c1b.predict <- predict(c1b, newdata, type="response", trace=1)
get.earth.x from model.matrix.earth from predict.earth: x[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
predict.earth: bx[4,3]:
  (Intercept) ldose sexmale
1           1    -2       1
2           1     0       1
3           1    -2       0
4           1     0       0
predict.earth: returning glm response predictions
> stopifnot(dim(c1b.predict) == c(4,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata, type="response"), fuzz=1e-10, msg="c1b multiple rows type=response", verbose=TRUE)
c1b multiple rows type=response OK
> 
> c1b.predict <- predict(c1b, newdata, type="terms", trace=0)
Warning: predict.earth: returning the earth (not glm) terms
> c1be.predict <- predict(c1be, newdata, type="terms")
> c1bg.predict <- predict(c1bg, newdata, type="terms")
> check.fuzzy.equal(c1b.predict, c1be.predict, fuzz=1e-10, msg="c1b multiple rows type=terms", verbose=TRUE)
c1b multiple rows type=terms OK
> 
> cat("c2: double response glm model with two y binomial pairs\n")
c2: double response glm model with two y binomial pairs
> SF2 <- cbind(numdead, numalive=20 - numdead, numdead2=numdead, numalive2=20 - numdead)
> c2 <-  earth(SF2 ~ sex + ldose, glm=list(family="binomial"), linpreds=TRUE, trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.952 RSq 0.981 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
Warning: No 'data' argument to earth so 'keepxy' is limited

> c2e <-  earth(data.frame(sex, ldose), data.frame(numdead,numdead), linpreds=TRUE, trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,2] with colnames numdead numdead.1
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.952 RSq 0.981 
> c2g <- glm(SF ~ sex + ldose, family="binomial") # use this as a reference
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c2.predict <- predict(c2, newdata, trace=1)
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
predict.earth: bx[1,3]:
  (Intercept) ldose sexmale
1           1     2       1
predict.earth: returning glm link predictions
> stopifnot(dim(c2.predict) == c(1,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata), fuzz=1e-10, msg="c2", verbose=TRUE)
c2 OK
> 
> c2.link.predict <- predict(c2, newdata, type="link", trace=1) # should be same as above because default is link
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
   sex ldose
1 male     2
  sex is a factor with levels: female male
predict.earth: bx[1,3]:
  (Intercept) ldose sexmale
1           1     2       1
predict.earth: returning glm link predictions
> check.fuzzy.equal(c2.link.predict, c2.predict, fuzz=1e-10, msg="c2 link", verbose=TRUE)
c2 link OK
> 
> c2.predict <- predict(c2, newdata, type="response")
> stopifnot(dim(c2.predict) == c(1,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata, type="response"), fuzz=1e-10, msg="c2 multiple rows type=response", verbose=TRUE)
c2 multiple rows type=response OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c2.predict <- predict(c2, newdata)
> stopifnot(dim(c2.predict) == c(4,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata), fuzz=1e-10, msg="c2 column1", verbose=TRUE)
c2 column1 OK
> check.fuzzy.equal(c2.predict[,2], predict(c2g, newdata), fuzz=1e-10, msg="c2 column2", verbose=TRUE)
c2 column2 OK
> 
> c2.predict <- predict(c2, newdata, type="response")
> stopifnot(dim(c2.predict) == c(4,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata, type="response"), fuzz=1e-10, msg="c2 column1 multiple rows type=response", verbose=TRUE)
c2 column1 multiple rows type=response OK
> check.fuzzy.equal(c2.predict[,2], predict(c2g, newdata, type="response"), fuzz=1e-10, msg="c2 column2 multiple rows type=response", verbose=TRUE)
c2 column2 multiple rows type=response OK
> 
> c2.predict <- predict(c2, newdata, type="earth", trace=1)
get.earth.x from model.matrix.earth from predict.earth: x[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
predict.earth: bx[4,3]:
  (Intercept) ldose sexmale
1           1    -2       1
2           1     0       1
3           1    -2       0
4           1     0       0
predict.earth: returning earth (not glm) predictions 
> stopifnot(dim(c2.predict) == c(4,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2e, newdata, trace=1), fuzz=1e-10, msg="c2 column1 multiple rows type=earth", verbose=TRUE)
get.earth.x from model.matrix.earth from predict.earth: x[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
predict.earth: bx[4,3]:
  (Intercept) ldose sexmale
1           1    -2       1
2           1     0       1
3           1    -2       0
4           1     0       0
predict.earth: returning earth predictions 
c2 column1 multiple rows type=earth OK
> check.fuzzy.equal(c2.predict[,2], predict(c2e, newdata, trace=1), fuzz=1e-10, msg="c2 column2 multiple rows type=earth", verbose=TRUE)
get.earth.x from model.matrix.earth from predict.earth: x[4,2]:
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
  sex is a factor with levels: female male
predict.earth: bx[4,3]:
  (Intercept) ldose sexmale
1           1    -2       1
2           1     0       1
3           1    -2       0
4           1     0       0
predict.earth: returning earth predictions 
c2 column2 multiple rows type=earth OK
> 
> cat("c3a: single response glm model with a boolean response, fitted values, keepxy=0\n")
c3a: single response glm model with a boolean response, fitted values, keepxy=0
> 
> mybool <- rep(c(FALSE, TRUE), times=c(6,6))
> data1 <- data.frame(mybool, sex, ldose)
> c3a <-  earth(mybool ~ sex + ldose, data=data1, glm=list(family="binomial"), linpreds=TRUE, trace=1, pmethod=PMETHOD, degree=1, keepxy=0)
x[12,2] with colnames sexmale ldose
y[12,1] with colname mybool
Forward pass term 1, 2
Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Prune method "none" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
GLM mybool: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (10 dof)   iters 23
> c3ag <- glm(mybool ~ sex + ldose, family="binomial") # use this as a reference
> c3ae <- earth(mybool ~ sex + ldose, data=data1, linpreds=TRUE, pmethod=PMETHOD, degree=1, keepxy=1)
> 
> c3a.predict <- predict(c3a, trace=1)
predict.earth: returning glm fitted.values
> c3ag.predict <- predict(c3ag, trace=1)
> # TODO why does fuzz have to be big here?
> check.fuzzy.equal(c3a.predict, c3ag.predict, fuzz=1e-7, msg="c3a fitted values, type=default link, keepxy=0", verbose=TRUE)
c3a fitted values, type=default link, keepxy=0 OK
> c3a.predict <- predict(c3a, type="link", trace=1)
predict.earth: returning glm fitted.values
> c3ag.predict <- predict(c3ag, type="link", trace=1)
> check.fuzzy.equal(c3a.predict, c3ag.predict, fuzz=1e-7, msg="c3a fitted values, type=link, keepxy=0", verbose=TRUE)
c3a fitted values, type=link, keepxy=0 OK
> c3a.predict <- predict(c3a, type="response", trace=1)
predict.earth: returning glm fitted.values
> c3ag.predict <- predict(c3ag, type="response", trace=1)
> check.fuzzy.equal(c3a.predict, c3ag.predict, fuzz=1e-10, msg="c3a fitted values, type=response, keepxy=0", verbose=TRUE)
c3a fitted values, type=response, keepxy=0 OK
> c3a.predict <- predict(c3a, type="earth", trace=1)
predict.earth: returning earth (not glm) fitted.values 
> c3ae.predict <- predict(c3ae, trace=1)
predict.earth: returning earth fitted.values 
> check.fuzzy.equal(c3a.predict, c3ae.predict, fuzz=1e-10, msg="c3a fitted values, type=earth, keepxy=0", verbose=TRUE)
c3a fitted values, type=earth, keepxy=0 OK
> 
> c3a.response.predict <- predict(c3a, type="response")
> c3a.class.predict <- predict(c3a,type="class")
> stopifnot(c3a.class.predict == (c3a.response.predict > .5))
> 
> cat("c3b: single response glm model with a boolean response, fitted values, keepxy=1\n")
c3b: single response glm model with a boolean response, fitted values, keepxy=1
> 
> c3b <-  earth(mybool ~ sex + ldose, glm=list(family="binomial"), linpreds=TRUE, trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,1] with colname mybool
Forward pass term 1, 2
Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Prune method "none" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
GLM mybool: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (10 dof)   iters 23
Warning: No 'data' argument to earth so 'keepxy' is limited

> c3bg <- glm(mybool ~ sex + ldose, family="binomial") # use this as a reference
> c3be <- earth(mybool ~ sex + ldose, linpreds=TRUE, pmethod=PMETHOD, degree=1, keepxy=0)
> 
> c3b.predict <- predict(c3b, trace=1) # fitted values
predict.earth: returning glm fitted.values
> c3bg.predict <- predict(c3bg, trace=1)
> check.fuzzy.equal(c3b.predict, c3bg.predict, fuzz=1e-7, msg="c3b fitted values, type=default link, keepxy=0", verbose=TRUE)
c3b fitted values, type=default link, keepxy=0 OK
> c3b.predict <- predict(c3b, type="link", trace=1)
predict.earth: returning glm fitted.values
> c3bg.predict <- predict(c3bg, type="link", trace=1)
> check.fuzzy.equal(c3b.predict, c3bg.predict, fuzz=1e-7, msg="c3b fitted values, type=link, keepxy=0", verbose=TRUE)
c3b fitted values, type=link, keepxy=0 OK
> c3b.predict <- predict(c3b, type="response", trace=1)
predict.earth: returning glm fitted.values
> c3bg.predict <- predict(c3bg, type="response", trace=1)
> check.fuzzy.equal(c3b.predict, c3bg.predict, fuzz=1e-10, msg="c3b fitted values, type=response, keepxy=0", verbose=TRUE)
c3b fitted values, type=response, keepxy=0 OK
> c3b.predict <- predict(c3b, type="earth", trace=1)
predict.earth: returning earth (not glm) fitted.values 
> c3be.predict <- predict(c3be, trace=1)
predict.earth: returning earth fitted.values 
> check.fuzzy.equal(c3b.predict, c3be.predict, fuzz=1e-10, msg="c3b fitted values, type=earth, keepxy=0", verbose=TRUE)
c3b fitted values, type=earth, keepxy=0 OK
> 
> c3b.response.predict <- predict(c3b, type="response")
> c3b.class.predict <- predict(c3b,type="class")
> stopifnot(c3b.class.predict == (c3b.response.predict > .5))
> 
> cat("c3c: single response glm model with a boolean response\n")
c3c: single response glm model with a boolean response
> 
> c3c <-  earth(mybool ~ sex + ldose, data=data1, linpreds=TRUE, glm=list(family="binomial"), trace=1, pmethod=PMETHOD, degree=1, keepxy=0)
x[12,2] with colnames sexmale ldose
y[12,1] with colname mybool
Forward pass term 1, 2
Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Prune method "none" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
GLM mybool: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (10 dof)   iters 23
> c3cg <- glm(mybool ~ sex + ldose, data=data1, family="binomial") # use this as a reference
> c3ce <- earth(mybool ~ sex + ldose, data=data1, linpreds=TRUE, pmethod=PMETHOD, degree=1, keepxy=0)
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c3c.predict <- predict(c3c, newdata)
> stopifnot(dim(c3c.predict) == c(1,1))
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata), fuzz=1e-10, msg="c3c", verbose=TRUE)
c3c OK
> 
> c3c.predict <- predict(c3c, newdata, type="response")
> stopifnot(dim(c3c.predict) == c(1,1))
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata, type="response"), fuzz=1e-10, msg="c3c type=response", verbose=TRUE)
c3c type=response OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c3c.predict <- predict(c3c, newdata)
> stopifnot(dim(c3c.predict) == c(4,1))
> # TODO why does the fuzz have to be bigger on this?
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata), fuzz=1e-7, msg="c3c multiple rows", verbose=TRUE)
c3c multiple rows OK
> 
> c3c.predict <- predict(c3c, newdata, type="response")
> stopifnot(dim(c3c.predict) == c(4,1))
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata, type="response"), fuzz=1e-10, msg="c3c multiple rows type=response", verbose=TRUE)
c3c multiple rows type=response OK
> 
> c3c.response.predict <- predict(c3c, type="response")
> c3c.class.predict <- predict(c3c,type="class")
> stopifnot(c3c.class.predict == (c3c.response.predict > .5))
> 
> cat("c3d: single response glm model with a two level factor response\n")
c3d: single response glm model with a two level factor response
> cat("Expect \"did not converge warnings\", it doesn't matter for our purposes here\n")
Expect "did not converge warnings", it doesn't matter for our purposes here
> myfac <- gl(2, 3, length=12, labels = c("Control", "Treat"))
> c3d <-  earth(myfac ~ ldose + sex, data=data1, glm=list(family="binomial"), trace=0, pmethod=PMETHOD, degree=1)
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
> c3d.class.predict <- predict(c3d,type="cl") # we also test here that the type can be abbreviated
> stopifnot(c3d.class.predict == myfac)
> 
> cat("c4: multiple response glm model with a factor response\n")
c4: multiple response glm model with a factor response
> fac3 <- factor(rep(c("A", "B", "C"), times=c(4,3,5)))
> cat("Expect \"did not converge warnings\", it doesn't matter for our purposes here\n")
Expect "did not converge warnings", it doesn't matter for our purposes here
> c4 <-  earth(fac3 ~ sex + ldose, linpreds=TRUE, glm=list(family="binomial"), trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,3] with colnames A B C
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq -1.245 RSq 0.536
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq -0.145 RSq 0.536 
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM A: null.deviance 15.27634 (11 dof)   deviance 9.406236e-10 (9 dof)   iters 25 did not converge
GLM B: null.deviance 13.49604 (11 dof)   deviance 12.68403 (9 dof)   iters 4
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM C: null.deviance 16.30064 (11 dof)   deviance 1.037213e-09 (9 dof)   iters 25 did not converge
Warning: No 'data' argument to earth so 'keepxy' is limited

> c4g <- glm(fac3 ~ sex + ldose, family="binomial") # use this as a reference
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c4.predict <- predict(c4, newdata)
> stopifnot(dim(c4.predict) == c(1,3))
> # minus needed on predict because of different handling of factors
> check.fuzzy.equal(c4.predict[1,1], -predict(c4g, newdata), fuzz=1e-8, msg="c4", verbose=TRUE)
c4 OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c4.predict <- predict(c4, newdata)
> stopifnot(dim(c4.predict) == c(4,3))
> check.fuzzy.equal(c4.predict[,1], -predict(c4g, newdata), fuzz=1e-8, msg="c4 multiple rows", verbose=TRUE)
c4 multiple rows OK
> 
> c4.predict <- predict(c4, newdata, type="response")
> stopifnot(dim(c4.predict) == c(4,3))
> check.fuzzy.equal(1-c4.predict[,1], predict(c4g, newdata, type="response"), fuzz=1e-10, msg="c4 multiple rows type=response", verbose=TRUE)
c4 multiple rows type=response OK
> 
> cat("c5: multiple response glm model with two multi level factor responses\n")
c5: multiple response glm model with two multi level factor responses
> 
> fac3 <- factor(rep(c("A", "B", "C"), times=c(4,3,5)))
> fac4 <- factor(rep(c("P", "Q", "R", "S"), times=c(3,3,3,3)))
> big.dataframe <- data.frame(fac3, fac4)
> c5 <-  earth(data.frame(sex, ldose), big.dataframe, trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,7] with colnames fac3A fac3B fac3C fac4P fac4Q fac4R fac4S
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq -4.184 RSq 0.614
Prune method "none" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq -0.866 RSq 0.614 
> stopifnot(colnames(c5$coef) == c("fac3A", "fac3B", "fac3C",
+                                  "fac4P", "fac4Q", "fac4R", "fac4S"))
> stopifnot(is.null(c5$glm.bpairs))
> 
> cat("c6: multiple response earth model with mixed responses\n")
c6: multiple response earth model with mixed responses
> 
> big.dataframe2 <- data.frame(SF, fac3, fac4, SF+1, sex, fac4, SF+3)
> c6 <-  earth(data.frame(sex, ldose), big.dataframe2, trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,18] with colnames numdead numalive fac3A fac3B fac3C fac4P fac4Q fac4R fac4...
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.699 RSq 0.978
Prune method "none" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.892 RSq 0.978 
> stopifnot(colnames(c6$coef) == c("numdead", "numalive", "fac3A", "fac3B", "fac3C",
+                                   "fac4P", "fac4Q", "fac4R", "fac4S", "numdead.1", "numalive.1",
+                                   "sex", "fac4.1P", "fac4.1Q", "fac4.1R", "fac4.1S",
+                                   "numdead.2", "numalive.2"))
> stopifnot(is.null(c6$glm.bpairs))
> 
> cat("c7: multiple response glm model with mixed responses\n")
c7: multiple response glm model with mixed responses
> cat("Expect \"did not converge warnings\", it doesn't matter for our purposes here\n")
Expect "did not converge warnings", it doesn't matter for our purposes here
> c7 <-  earth(data.frame(sex, ldose), big.dataframe2, glm=list(family="binomial"), trace=1, pmethod=PMETHOD, degree=1, keepxy=1)
x[12,2] with colnames sexmale ldose
y[12,18] with colnames numdead numalive fac3A fac3B fac3C fac4P fac4Q fac4R fac4...
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.658 RSq 0.975
Prune method "none" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.877 RSq 0.975 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.411176 (8 dof)   iters 4
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac3A: null.deviance 15.27634 (11 dof)   deviance 4.26029e-10 (8 dof)   iters 25
GLM fac3B: null.deviance 13.49604 (11 dof)   deviance 9.085386 (8 dof)   iters 6
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac3C: null.deviance 16.30064 (11 dof)   deviance 2.745364e-10 (8 dof)   iters 25
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4P: null.deviance 13.49604 (11 dof)   deviance 4.337952e-10 (8 dof)   iters 25
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4Q: null.deviance 13.49604 (11 dof)   deviance 6.366565e-10 (8 dof)   iters 25 did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4R: null.deviance 13.49604 (11 dof)   deviance 4.337952e-10 (8 dof)   iters 25
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4S: null.deviance 13.49604 (11 dof)   deviance 6.366565e-10 (8 dof)   iters 25 did not converge
GLM numdead.1: null.deviance 105.9173 (11 dof)   deviance 2.105556 (8 dof)   iters 4
GLM sex: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (8 dof)   iters 23
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4.1P: null.deviance 13.49604 (11 dof)   deviance 4.337952e-10 (8 dof)   iters 25
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4.1Q: null.deviance 13.49604 (11 dof)   deviance 6.366565e-10 (8 dof)   iters 25 did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4.1R: null.deviance 13.49604 (11 dof)   deviance 4.337952e-10 (8 dof)   iters 25
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM fac4.1S: null.deviance 13.49604 (11 dof)   deviance 6.366565e-10 (8 dof)   iters 25 did not converge
GLM numdead.2: null.deviance 84.92686 (11 dof)   deviance 1.332537 (8 dof)   iters 4
> print(summary(c7))
Call: earth(x=data.frame(sex,ldose), y=big.dataframe2, keepxy=1, trace=1,
            glm=list(family="binomial"), pmethod=PMETHOD, degree=1)

GLM coefficients
               numdead      fac3A     fac3B      fac3C      fac4P       fac4Q
(Intercept) -1.0992373 -24.107131 -5.669837  70.785897 -26.422247 -160.822966
sexmale      1.0963463  93.453832  1.332362 -95.043175  50.094772  137.828229
h(0-ldose)  -1.4542178  -5.470154  2.410193 -47.340285   0.828288   -1.553226
h(ldose-0)   0.9083549 -46.279298  1.896406  -4.255826 -46.668108   45.611781
                 fac4R       fac4S  numdead.1       sex    fac4.1P     fac4.1Q
(Intercept)  23.672524  -22.994736 -0.9335311 -24.56607 -26.422247 -160.822966
sexmale     -50.094772 -137.828229  0.8782552  49.13214  50.094772  137.828229
h(0-ldose)    0.828288   -1.553226 -1.0901292   0.00000   0.828288   -1.553226
h(ldose-0)  -46.668108   45.611781  0.7847316   0.00000 -46.668108   45.611781
               fac4.1R     fac4.1S  numdead.2
(Intercept)  23.672524  -22.994736 -0.7312038
sexmale     -50.094772 -137.828229  0.6437285
h(0-ldose)    0.828288   -1.553226 -0.7664274
h(ldose-0)  -46.668108   45.611781  0.6257651

Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
                 GCV       RSS       GRSq       RSq
numdead    4.6526316  9.692982  0.9069628 0.9807774
fac3A      0.3684211  0.767544 -0.3930921 0.7121711
fac3B      0.7621053  1.587719 -2.4153606 0.2943470
fac3C      0.2421053  0.504386  0.1630075 0.8270677
fac4P      0.4357895  0.907895 -0.9529825 0.5964912
fac4Q      0.4357895  0.907895 -0.9529825 0.5964912
fac4R      0.4357895  0.907895 -0.9529825 0.5964912
fac4S      0.4357895  0.907895 -0.9529825 0.5964912
numdead.1  4.6526316  9.692982  0.9069628 0.9807774
sex        0.0000000  0.000000  1.0000000 1.0000000
fac4.1P    0.4357895  0.907895 -0.9529825 0.5964912
fac4.1Q    0.4357895  0.907895 -0.9529825 0.5964912
fac4.1R    0.4357895  0.907895 -0.9529825 0.5964912
fac4.1S    0.4357895  0.907895 -0.9529825 0.5964912
numdead.2  4.6526316  9.692982  0.9069628 0.9807774
All       18.8168421 39.201754  0.8769210 0.9745705

GLM (family binomial, link logit)
          null.deviance df deviance df iters converged
numdead       124.87559 11 5.411176  8     4         1
fac3A          15.27634 11 0.000000  8    25         1
fac3B          13.49604 11 9.085386  8     6         1
fac3C          16.30064 11 0.000000  8    25         1
fac4P          13.49604 11 0.000000  8    25         1
fac4Q          13.49604 11 0.000000  8    25         0
fac4R          13.49604 11 0.000000  8    25         1
fac4S          13.49604 11 0.000000  8    25         0
numdead.1     105.91731 11 2.105556  8     4         1
sex            16.63553 11 0.000000  8    23         1
fac4.1P        13.49604 11 0.000000  8    25         1
fac4.1Q        13.49604 11 0.000000  8    25         0
fac4.1R        13.49604 11 0.000000  8    25         1
fac4.1S        13.49604 11 0.000000  8    25         0
numdead.2      84.92686 11 1.332537  8     4         1
> print(summary(c7, details=1))
Call: earth(x=data.frame(sex,ldose), y=big.dataframe2, keepxy=1, trace=1,
            glm=list(family="binomial"), pmethod=PMETHOD, degree=1)

Earth coefficients
              numdead       fac3A      fac3B       fac3C       fac4P
(Intercept)  5.890351  0.21052632 -0.1885965  0.97807018  0.11842105
sexmale      3.166667  0.66666667  0.1666667 -0.83333333  0.50000000
h(0-ldose)  -3.684210 -0.02631579  0.2631579 -0.23684211  0.07894737
h(ldose-0)   3.618421 -0.19736842  0.2236842 -0.02631579 -0.15789474
                  fac4Q       fac4R       fac4S numdead.1 sex     fac4.1P
(Intercept) -0.11842105  0.61842105  0.38157895  6.890351   0  0.11842105
sexmale      0.50000000 -0.50000000 -0.50000000  3.166667   1  0.50000000
h(0-ldose)  -0.07894737  0.07894737 -0.07894737 -3.684210   0  0.07894737
h(ldose-0)   0.15789474 -0.15789474  0.15789474  3.618421   0 -0.15789474
                fac4.1Q     fac4.1R     fac4.1S numdead.2
(Intercept) -0.11842105  0.61842105  0.38157895  8.890351
sexmale      0.50000000 -0.50000000 -0.50000000  3.166667
h(0-ldose)  -0.07894737  0.07894737 -0.07894737 -3.684210
h(ldose-0)   0.15789474 -0.15789474  0.15789474  3.618421

GLM coefficients
               numdead      fac3A     fac3B      fac3C      fac4P       fac4Q
(Intercept) -1.0992373 -24.107131 -5.669837  70.785897 -26.422247 -160.822966
sexmale      1.0963463  93.453832  1.332362 -95.043175  50.094772  137.828229
h(0-ldose)  -1.4542178  -5.470154  2.410193 -47.340285   0.828288   -1.553226
h(ldose-0)   0.9083549 -46.279298  1.896406  -4.255826 -46.668108   45.611781
                 fac4R       fac4S  numdead.1       sex    fac4.1P     fac4.1Q
(Intercept)  23.672524  -22.994736 -0.9335311 -24.56607 -26.422247 -160.822966
sexmale     -50.094772 -137.828229  0.8782552  49.13214  50.094772  137.828229
h(0-ldose)    0.828288   -1.553226 -1.0901292   0.00000   0.828288   -1.553226
h(ldose-0)  -46.668108   45.611781  0.7847316   0.00000 -46.668108   45.611781
               fac4.1R     fac4.1S  numdead.2
(Intercept)  23.672524  -22.994736 -0.7312038
sexmale     -50.094772 -137.828229  0.6437285
h(0-ldose)    0.828288   -1.553226 -0.7664274
h(ldose-0)  -46.668108   45.611781  0.6257651

GLM numdead deviance residuals:
        Min           1Q       Median           3Q          Max  
-0.84882134  -0.48120721   0.04667129   0.46873270   1.59576457  

GLM numdead coefficients (family binomial, link logit)
              Estimate Std. Error  z value   Pr(>|z|)
(Intercept) -1.0992373  0.3458948 -3.17795 0.00148319
h(ldose-0)   0.9083549  0.1834401  4.95178 7.3538e-07
h(0-ldose)  -1.4542178  0.3824747 -3.80213 0.00014346
sexmale      1.0963463  0.3544311  3.09326 0.00197973

GLM fac3A deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.288595e-05  -1.493971e-07  -2.107342e-08   2.107342e-08   1.385135e-05  

GLM fac3A coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept) -2.410713e+01  1.041488e+05 -0.00023  0.99982
h(ldose-0)  -4.627930e+01  9.091672e+04 -0.00051  0.99959
h(0-ldose)  -5.470154e+00  1.601553e+06  0.00000  1.00000
sexmale      9.345383e+01  1.749766e+05  0.00053  0.99957

GLM fac3B deviance residuals:
       Min          1Q      Median          3Q         Max  
-1.3881458  -0.5243976  -0.2438318   0.1073816   1.5527268  

GLM fac3B coefficients (family binomial, link logit)
             Estimate Std. Error  z value Pr(>|z|)
(Intercept) -5.669837   3.423500 -1.65615 0.097691
h(ldose-0)   1.896406   1.277845  1.48407 0.137791
h(0-ldose)   2.410193   1.792850  1.34434 0.178840
sexmale      1.332362   1.726275  0.77181 0.440225

GLM fac3C deviance residuals:
          Min             1Q         Median             3Q            Max  
-9.159112e-06  -2.432614e-07  -2.107342e-08   2.107342e-08   1.146476e-05  

GLM fac3C coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept)     70.785897 176524.595848  0.00040  0.99968
h(ldose-0)      -4.255826 945774.960862  0.00000  1.00000
h(0-ldose)     -47.340285 119867.277330 -0.00039  0.99968
sexmale        -95.043175 209197.083583 -0.00045  0.99964

GLM fac4P deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.435779e-05  -2.920166e-06  -2.107342e-08   1.101857e-06   1.023509e-05  

GLM fac4P coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept) -2.642225e+01  1.668260e+05 -0.00016  0.99987
h(ldose-0)  -4.666811e+01  9.783237e+04 -0.00048  0.99962
h(0-ldose)   8.282884e-01  8.168170e+04  0.00001  0.99999
sexmale      5.009477e+01  1.542324e+05  0.00032  0.99974

GLM fac4Q deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.436387e-05  -3.930877e-06  -2.107342e-08  -1.053671e-08   1.734947e-05  

GLM fac4Q coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept)   -160.822966 250916.192056 -0.00064  0.99949
h(ldose-0)      45.611781  76980.828707  0.00059  0.99953
h(0-ldose)      -1.553226 105824.638013 -0.00001  0.99999
sexmale        137.828229 213425.800106  0.00065  0.99948

GLM fac4R deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.435779e-05  -2.920166e-06  -2.107342e-08   1.101857e-06   1.023509e-05  

GLM fac4R coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept)  2.367252e+01  7.747368e+04  0.00031  0.99976
h(ldose-0)  -4.666811e+01  9.783237e+04 -0.00048  0.99962
h(0-ldose)   8.282884e-01  8.168170e+04  0.00001  0.99999
sexmale     -5.009477e+01  1.542324e+05 -0.00032  0.99974

GLM fac4S deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.436387e-05  -3.930877e-06  -2.107342e-08  -1.053671e-08   1.734947e-05  

GLM fac4S coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept)    -22.994736  59006.579876 -0.00039  0.99969
h(ldose-0)      45.611781  76980.828713  0.00059  0.99953
h(0-ldose)      -1.553226 105824.638013 -0.00001  0.99999
sexmale       -137.828229 213425.800125 -0.00065  0.99948

GLM numdead.1 deviance residuals:
       Min          1Q      Median          3Q         Max  
-0.6126657  -0.3178897  -0.0121362   0.3542013   0.8186876  

GLM numdead.1 coefficients (family binomial, link logit)
              Estimate Std. Error  z value   Pr(>|z|)
(Intercept) -0.9335311  0.3116546 -2.99540 0.00274083
h(ldose-0)   0.7847316  0.1627049  4.82304 1.4139e-06
h(0-ldose)  -1.0901292  0.2978786 -3.65964 0.00025257
sexmale      0.8782552  0.3123113  2.81211 0.00492170

GLM sex deviance residuals:
          Min             1Q         Median             3Q            Max  
-6.547293e-06  -6.547293e-06   0.000000e+00   6.547293e-06   6.547293e-06  

GLM sex coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept) -2.456607e+01  8.185296e+04 -0.00030  0.99976
h(ldose-0)   2.111809e-12  3.976025e+04  0.00000  1.00000
h(0-ldose)   5.719333e-12  6.011185e+04  0.00000  1.00000
sexmale      4.913214e+01  7.563908e+04  0.00065  0.99948

GLM fac4.1P deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.435779e-05  -2.920166e-06  -2.107342e-08   1.101857e-06   1.023509e-05  

GLM fac4.1P coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept) -2.642225e+01  1.668260e+05 -0.00016  0.99987
h(ldose-0)  -4.666811e+01  9.783237e+04 -0.00048  0.99962
h(0-ldose)   8.282884e-01  8.168170e+04  0.00001  0.99999
sexmale      5.009477e+01  1.542324e+05  0.00032  0.99974

GLM fac4.1Q deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.436387e-05  -3.930877e-06  -2.107342e-08  -1.053671e-08   1.734947e-05  

GLM fac4.1Q coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept)   -160.822966 250916.192056 -0.00064  0.99949
h(ldose-0)      45.611781  76980.828707  0.00059  0.99953
h(0-ldose)      -1.553226 105824.638013 -0.00001  0.99999
sexmale        137.828229 213425.800106  0.00065  0.99948

GLM fac4.1R deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.435779e-05  -2.920166e-06  -2.107342e-08   1.101857e-06   1.023509e-05  

GLM fac4.1R coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept)  2.367252e+01  7.747368e+04  0.00031  0.99976
h(ldose-0)  -4.666811e+01  9.783237e+04 -0.00048  0.99962
h(0-ldose)   8.282884e-01  8.168170e+04  0.00001  0.99999
sexmale     -5.009477e+01  1.542324e+05 -0.00032  0.99974

GLM fac4.1S deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.436387e-05  -3.930877e-06  -2.107342e-08  -1.053671e-08   1.734947e-05  

GLM fac4.1S coefficients (family binomial, link logit)
                 Estimate    Std. Error  z value Pr(>|z|)
(Intercept)    -22.994736  59006.579876 -0.00039  0.99969
h(ldose-0)      45.611781  76980.828713  0.00059  0.99953
h(0-ldose)      -1.553226 105824.638013 -0.00001  0.99999
sexmale       -137.828229 213425.800125 -0.00065  0.99948

GLM numdead.2 deviance residuals:
        Min           1Q       Median           3Q          Max  
-0.52615202  -0.20968283  -0.01596796   0.29143300   0.55965543  

GLM numdead.2 coefficients (family binomial, link logit)
              Estimate Std. Error  z value   Pr(>|z|)
(Intercept) -0.7312038  0.2702829 -2.70533 0.00682371
h(ldose-0)   0.6257651  0.1381541  4.52947 5.9132e-06
h(0-ldose)  -0.7664274  0.2301894 -3.32955 0.00086986
sexmale      0.6437285  0.2638265  2.43997 0.01468851

Number of cases: 12
Earth selected 4 of 4 terms, and 2 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 3 (additive model)

Earth
                 GCV       RSS       GRSq       RSq
numdead    4.6526316  9.692982  0.9069628 0.9807774
fac3A      0.3684211  0.767544 -0.3930921 0.7121711
fac3B      0.7621053  1.587719 -2.4153606 0.2943470
fac3C      0.2421053  0.504386  0.1630075 0.8270677
fac4P      0.4357895  0.907895 -0.9529825 0.5964912
fac4Q      0.4357895  0.907895 -0.9529825 0.5964912
fac4R      0.4357895  0.907895 -0.9529825 0.5964912
fac4S      0.4357895  0.907895 -0.9529825 0.5964912
numdead.1  4.6526316  9.692982  0.9069628 0.9807774
sex        0.0000000  0.000000  1.0000000 1.0000000
fac4.1P    0.4357895  0.907895 -0.9529825 0.5964912
fac4.1Q    0.4357895  0.907895 -0.9529825 0.5964912
fac4.1R    0.4357895  0.907895 -0.9529825 0.5964912
fac4.1S    0.4357895  0.907895 -0.9529825 0.5964912
numdead.2  4.6526316  9.692982  0.9069628 0.9807774
All       18.8168421 39.201754  0.8769210 0.9745705

GLM (family binomial, link logit)
          null.deviance df deviance df iters converged
numdead       124.87559 11 5.411176  8     4         1
fac3A          15.27634 11 0.000000  8    25         1
fac3B          13.49604 11 9.085386  8     6         1
fac3C          16.30064 11 0.000000  8    25         1
fac4P          13.49604 11 0.000000  8    25         1
fac4Q          13.49604 11 0.000000  8    25         0
fac4R          13.49604 11 0.000000  8    25         1
fac4S          13.49604 11 0.000000  8    25         0
numdead.1     105.91731 11 2.105556  8     4         1
sex            16.63553 11 0.000000  8    23         1
fac4.1P        13.49604 11 0.000000  8    25         1
fac4.1Q        13.49604 11 0.000000  8    25         0
fac4.1R        13.49604 11 0.000000  8    25         1
fac4.1S        13.49604 11 0.000000  8    25         0
numdead.2      84.92686 11 1.332537  8     4         1
> stopifnot(colnames(c7$coef) == c("numdead", "fac3A", "fac3B", "fac3C",
+                                  "fac4P", "fac4Q", "fac4R", "fac4S",
+                                   "numdead.1", "sex",
+                                   "fac4.1P", "fac4.1Q", "fac4.1R", "fac4.1S", "numdead.2"))
> stopifnot(c7$glm.bpairs == c(TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE))
> 
> # residuals
> 
> a <- earth(pclass ~ ., data=etitanic)
> printh(residuals(a), max.print=3)
=== residuals(a)
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> a <- earth(pclass ~ ., data=etitanic, glm=list(family="b"))
> printh(residuals(a), expect.warning=TRUE, max.print=3)
=== residuals(a) expect warning -->Warning: residuals.earth: returning earth (not glm) residuals
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> printh(residuals(a, warn=FALSE), max.print=3)
=== residuals(a, warn = FALSE)
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> printh(resid(a, type="earth"), max.print=3)
=== resid(a, type = "earth")
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> printh(resid(a, type="deviance"), max.print=3)
=== resid(a, type = "deviance")
       1st        2nd        3rd
1 1.463565 -0.7712447 -0.9440797
2 2.002755 -0.9266706 -1.0226283
3 2.611499 -0.9184549 -1.5622542
> printh(resid(a, type="glm.pearson"), max.print=3)
=== resid(a, type = "glm.pearson")
       1st        2nd        3rd
1 1.385038 -0.5885288 -0.7493292
2 2.535727 -0.7323065 -0.8287859
3 5.409631 -0.7243429 -1.5454025
> printh(resid(a, type="glm.working"), max.print=3)
=== resid(a, type = "glm.working")
        1st       2nd       3rd
1  2.918329 -1.346366 -1.561494
2  7.429912 -1.536273 -1.686886
3 30.264104 -1.524673 -3.388269
> printh(resid(a, type="glm.response"), max.print=3)
=== resid(a, type = "glm.response")
        1st        2nd        3rd
1 0.6573382 -0.2572600 -0.3595878
2 0.8654089 -0.3490739 -0.4071918
3 0.9669576 -0.3441215 -0.7048640
> printh(resid(a, type="glm.partial"), max.print=3)
=== resid(a, type = "glm.partial")
  `h(age-26)` `h(26-age)`  survived `h(sibsp-1)` `h(1-sibsp)` `h(parch-2)`
1    2.551986    3.229034  3.868894     2.971321     2.716353     2.967871
2    6.823847    5.636241  8.380477     7.482904     7.813164     7.479454
3   29.658038   28.561316 29.608383    30.317096    30.647355    30.313645
  `h(2-parch)` `h(age-26)` `h(26-age)`  survived `h(sibsp-1)` `h(1-sibsp)`
1     2.814339   -1.286898   -1.291444 -1.323918    -1.226331    -1.459130
2     7.875285   -1.437891   -1.853336 -1.513824    -1.416238    -1.322303
3    30.709476   -1.426291   -1.825670 -1.540158    -1.404638    -1.310703
  `h(parch-2)` `h(2-parch)` `h(age-26)` `h(26-age)`  survived `h(sibsp-1)`
1    -1.308344    -1.430315   -1.238589  -1.8139051 -2.342634    -1.688705
2    -1.498251    -1.176736   -1.152683  -0.2297406 -2.468026    -1.814097
3    -1.486651    -1.165135   -2.854066  -2.0049559 -2.849421    -3.515480
  `h(1-sibsp)` `h(parch-2)` `h(2-parch)`
1    -1.266139    -1.631657    -1.398041
2    -2.247324    -1.757049    -2.386927
3    -3.948707    -3.458432    -4.088310
> expect.err(try(printh(resid(a, type="nonesuch"), max.print=3)), "Choose one of")
=== resid(a, type = "nonesuch")Error : type="nonesuch" is not allowed
Choose one of "earth" "standardize" "delever" "deviance" "glm.pearson" "glm.working" "glm.response" "glm.partial" "response"
Got error as expected from try(printh(resid(a, type = "nonesuch"), max.print = 3))
> expect.err(try(printh(resid(a, type="g"), max.print=3)), "ambiguous") # type="g" is ambiguous
=== resid(a, type = "g")Error : type="g" is ambiguous
Choose one of "earth" "standardize" "delever" "deviance" "glm.pearson" "glm.working" "glm.response" "glm.partial" "response"
Got error as expected from try(printh(resid(a, type = "g"), max.print = 3))
> expect.err(try(printh(resid(a, type="standardize"), max.print=3)), "model was not built with varmod.method") # model was not built with varmod.method
=== resid(a, type = "standardize")Error : "standardize" is not allowed because
the model was not built with varmod.method
Got error as expected from try(printh(resid(a, type = "standardize"), max.print = 3))
> 
> # tests based on Gavin Simpson's bug report
> # fit a MARS model allowing one-way interactions
> mod.Gamma <- earth(O3 ~ . - doy, data = ozone1, degree = 2, glm = list(family = Gamma))
> for(type in c("earth", "deviance", "glm.pearson", "glm.working", "glm.response", "glm.partial"))
+ {
+     cat("residuals.earth Gamma type=", type, ":\n", sep="")
+     print(head(resid(mod.Gamma, type = type), n=2))
+     print(tail(resid(mod.Gamma, type = type), n=2))
+ }
residuals.earth Gamma type=earth:
           O3
1 -2.51890227
2 -0.01708952
            O3
329 -1.0913151
330 -0.5089299
residuals.earth Gamma type=deviance:
          O3
1 -0.4314114
2 -0.0914371
            O3
329 -0.2358016
330 -1.1020783
residuals.earth Gamma type=glm.pearson:
           O3
1 -0.37173444
2 -0.08867169
            O3
329 -0.2176433
330 -0.7400754
residuals.earth Gamma type=glm.working:
          O3
1 0.07784932
2 0.01616180
            O3
329 0.03405494
330 0.19236381
residuals.earth Gamma type=glm.response:
          O3
1 -1.7750508
2 -0.4864969
           O3
329 -1.390947
330 -2.847269
residuals.earth Gamma type=glm.partial:
  `h(temp-58)` `h(58-temp)` `h(1049-ibh)` `h(53-humidity)*h(temp-58)`
1   0.09757393   0.13932235    0.07922958                  0.07743702
2   0.03588642   0.05530807    0.01262061                  0.01574951
  `h(temp-58)*h(dpg-54)` `h(1049-ibh)*h(40-dpg)` `h(wind-5)*h(1049-ibh)`
1             0.07723079              0.07196985              0.07739264
2             0.01554328              0.04292092              0.01570512
  `h(ibt-109)*h(250-vis)` `h(temp-70)*h(250-vis)` `h(humidity-45)*h(ibh-1049)`
1              0.09299506             0.070427489                  0.066665654
2              0.02703136             0.008739977                  0.004978142
  `h(45-humidity)*h(ibh-1049)`
1                   0.09492237
2                   0.00496450
    `h(temp-58)` `h(58-temp)` `h(1049-ibh)` `h(53-humidity)*h(temp-58)`
329   0.05377955   0.05087443     0.0354352                  0.03364264
330   0.21208842   0.25830219     0.1937441                  0.19195151
    `h(temp-58)*h(dpg-54)` `h(1049-ibh)*h(40-dpg)` `h(wind-5)*h(1049-ibh)`
329             0.03343641              0.02817547              0.03359826
330             0.19174528              0.18648434              0.19190713
    `h(ibt-109)*h(250-vis)` `h(temp-70)*h(250-vis)`
329              0.04920068              0.02663311
330              0.20750955              0.18494198
    `h(humidity-45)*h(ibh-1049)` `h(45-humidity)*h(ibh-1049)`
329                   0.04284466                   0.02285763
330                   0.25548790                   0.18116650
> mod.binomial <- earth(survived ~ ., data = etitanic, degree = 2, glm = list(family = binomial))
> for(type in c("earth", "deviance", "glm.pearson", "glm.working", "glm.response", "glm.partial"))
+ {
+     cat("residuals.earth binomial type=", type, ":\n", sep="")
+     print(head(residuals(mod.binomial, type = type), n=2))
+     print(tail(residuals(mod.binomial, type = type), n=2))
+ }
residuals.earth binomial type=earth:
     survived
1  0.02275002
2 -0.03128362
       survived
1045 -0.1739521
1046 -0.1669027
residuals.earth binomial type=deviance:
   survived
1 0.2717916
2 0.3071014
       survived
1045 -0.5961602
1046 -0.5807233
residuals.earth binomial type=glm.pearson:
   survived
1 0.1939740
2 0.2197388
       survived
1045 -0.4409888
1046 -0.4285674
residuals.earth binomial type=glm.working:
  survived
1 1.037626
2 1.048285
      survived
1045 -1.194471
1046 -1.183670
residuals.earth binomial type=glm.response:
    survived
1 0.03626154
2 0.04606108
       survived
1045 -0.1628094
1046 -0.1551699
residuals.earth binomial type=glm.partial:
     sexmale pclass3rd `sexmale*h(16-age)` `pclass2nd*sexmale`
1  3.3141577  3.745081           0.9446502            1.147468
2 -0.2941075  3.755740           3.5224203            1.158128
  `pclass3rd*h(4-sibsp)` `pclass3rd*sexmale` `pclass2nd*h(1-parch)` `h(65-age)`
1            0.007200521           0.4344715               1.287358    1.061012
2            0.017859758           0.4451307               1.298017    1.874054
       sexmale pclass3rd `sexmale*h(16-age)` `pclass2nd*sexmale`
1045 -2.536864 -4.139707           -1.287447           -1.084629
1046 -2.526063 -4.128906           -1.276646           -1.073828
     `pclass3rd*h(4-sibsp)` `pclass3rd*sexmale` `pclass2nd*h(1-parch)`
1045              0.2643066          0.01010947             -0.9447391
1046              0.2751078          0.02091059             -0.9339380
     `h(65-age)`
1045   -1.113942
1046   -1.160284
> # intercept only model
> 
> cat("a.intercept.only: intercept only logistic model\n\n")
a.intercept.only: intercept only logistic model

> # This seed chosen so call to earth below has one predictor model in 1st
> # cv fold and intercept-only in 2nd cv fold, that way we test both.
> set.seed(3)
> df <- data.frame(aaa = round(runif(18)), bbb = runif(18), ccc = rnorm(18))
> a.intercept.only <- earth(aaa ~ bbb + ccc, data = df, glm=list(family=binomial), trace=1, nfold=2)
x[18,2] with colnames bbb ccc
y[18,1] with colname aaa
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms (DeltaRSq 0)
After forward pass GRSq -3.791 RSq 0.188
Prune method "backward" penalty 2 nprune 5: selected 1 of 5 terms, and 0 of 2 predictors
After backward pass GRSq 0 RSq 0 
earth.glm: intercept-only earth model, faking the glm model
GLM aaa: null.deviance 22.91451 (17 dof)   deviance 22.91451 (17 dof)   iters 4

CV fold 1 --------------------------------------------------------------------
x[8,2] with colnames bbb ccc
y[8,1] with colname aaa
Forward pass term 1, 2, 4
GRSq -Inf at 3 terms
After forward pass GRSq -in RSq 0.912
Prune method "backward" penalty 2 nprune 3: selected 2 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.615 RSq 0.804 
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
GLM aaa: null.deviance 8.997362 (7 dof)   deviance 3.498037e-10 (6 dof)   iters 25
CV fold 1  CVRSq -1.076 n.oof  8 56%  n.infold.nz 6 75%  n.oof.nz 6 60%  

CV fold 2 --------------------------------------------------------------------
x[10,2] with colnames bbb ccc
y[10,1] with colname aaa
Forward pass term 1, 2, 4
Reached minimum GRSq -10 at 3 terms (GRSq -57)
After forward pass GRSq -56.959 RSq 0.284
Prune method "backward" penalty 2 nprune 3: selected 1 of 3 terms, and 0 of 2 predictors
After backward pass GRSq 0 RSq 0 
earth.glm: intercept-only earth model, faking the glm model
GLM aaa: null.deviance 13.46023 (9 dof)   deviance 13.46023 (9 dof)   iters 4
CV fold 2  CVRSq -0.120 n.oof 10 44%  n.infold.nz 6 60%  n.oof.nz 6 75%  

CV all     CVRSq -0.598                n.infold.nz 12 67%  

> show.earth.models(a.intercept.only)

Print a.intercept.only 

Earth selected 1 of 5 terms, and 0 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: bbb-unused, ccc-unused
Number of terms at each degree of interaction: 1 (intercept only model)
Earth GCV 0.2491349  RSS 4  GRSq 0  RSq 0  CVRSq -0.5982021

GLM null.deviance 22.91451 (17 dof)   deviance 22.91451 (17 dof)   iters 4

Summary a.intercept.only 

Call: earth(formula=aaa~bbb+ccc, data=df, trace=1, glm=list(family=binomial),
            nfold=2)

GLM coefficients
                  aaa
(Intercept) 0.6931472

Earth selected 1 of 5 terms, and 0 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: bbb-unused, ccc-unused
Number of terms at each degree of interaction: 1 (intercept only model)
Earth GCV 0.2491349  RSS 4  GRSq 0  RSq 0  CVRSq -0.5982021

GLM null.deviance 22.91451 (17 dof)   deviance 22.91451 (17 dof)   iters 4

Note: the cross-validation sd's below are standard deviations across folds

Cross validation:   nterms 1.50 sd 0.71    nvars 0.50 sd 0.71

 CVRSq   sd ClassRate    sd MaxErr   sd  AUC  sd MeanDev sd CalibInt   sd
  -0.6 0.68      0.72 0.035     -1 0.28 0.57 0.1      11 14     0.79 0.44
 CalibSlope sd
         NA NA

Summary a.intercept.only decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=aaa~bbb+ccc, data=df, trace=1, glm=list(family=binomial),
            nfold=2)

Earth coefficients
                aaa
(Intercept) 0.66667

GLM coefficients
                aaa
(Intercept) 0.69315

GLM deviance residuals:
     Min        1Q    Median        3Q       Max  
-1.48230  -1.48230   0.90052   0.90052   0.90052  

GLM coefficients (family binomial, link logit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)  0.69315    0.50000  1.3863   0.1657

Number of cases: 18
Earth selected 1 of 5 terms, and 0 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: bbb-unused, ccc-unused
Number of terms at each degree of interaction: 1 (intercept only model)
Earth GCV 0.24913  RSS 4  GRSq 0  RSq 0  CVRSq -0.5982

GLM null.deviance 22.915 (17 dof)   deviance 22.915 (17 dof)   iters 4

Note: the cross-validation sd's below are standard deviations across folds

Cross validation:   nterms 1.50 sd 0.71    nvars 0.50 sd 0.71

 CVRSq   sd ClassRate    sd MaxErr   sd  AUC  sd MeanDev sd CalibInt   sd
  -0.6 0.68      0.72 0.035     -1 0.28 0.57 0.1      11 14     0.79 0.44
 CalibSlope sd
         NA NA

evimp a.intercept.only 

    nsubsets   gcv    rss

evimp a.intercept.only trim=FALSE

           nsubsets   gcv    rss
bbb-unused        0   0.0    0.0
ccc-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a.intercept.only 
 grid:    bbb        ccc
    0.3547735 0.06386657
-------------------------------------------------------------------------------

> cat("\nsummary(a.intercept.only, details=TRUE)\n\n", sep="")

summary(a.intercept.only, details=TRUE)

> print(summary(a.intercept.only, details=TRUE))
Call: earth(formula=aaa~bbb+ccc, data=df, trace=1, glm=list(family=binomial),
            nfold=2)

Earth coefficients
                  aaa
(Intercept) 0.6666667

GLM coefficients
                  aaa
(Intercept) 0.6931472

GLM deviance residuals:
       Min          1Q      Median          3Q         Max  
-1.4823038  -1.4823038   0.9005166   0.9005166   0.9005166  

GLM coefficients (family binomial, link logit)
             Estimate Std. Error z value Pr(>|z|)
(Intercept) 0.6931472  0.4999999 1.38629  0.16566

Number of cases: 18
Earth selected 1 of 5 terms, and 0 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: bbb-unused, ccc-unused
Number of terms at each degree of interaction: 1 (intercept only model)
Earth GCV 0.2491349  RSS 4  GRSq 0  RSq 0  CVRSq -0.5982021

GLM null.deviance 22.91451 (17 dof)   deviance 22.91451 (17 dof)   iters 4

Note: the cross-validation sd's below are standard deviations across folds

Cross validation:   nterms 1.50 sd 0.71    nvars 0.50 sd 0.71

 CVRSq   sd ClassRate    sd MaxErr   sd  AUC  sd MeanDev sd CalibInt   sd
  -0.6 0.68      0.72 0.035     -1 0.28 0.57 0.1      11 14     0.79 0.44
 CalibSlope sd
         NA NA
> printh(predict(a.intercept.only))
=== predict(a.intercept.only)
            aaa
 [1,] 0.6931472
 [2,] 0.6931472
 [3,] 0.6931472
 [4,] 0.6931472
 [5,] 0.6931472
 [6,] 0.6931472
 [7,] 0.6931472
 [8,] 0.6931472
 [9,] 0.6931472
[10,] 0.6931472
[11,] 0.6931472
[12,] 0.6931472
[13,] 0.6931472
[14,] 0.6931472
[15,] 0.6931472
[16,] 0.6931472
[17,] 0.6931472
[18,] 0.6931472
> printh(predict(a.intercept.only, type="link"))
=== predict(a.intercept.only, type = "link")
            aaa
 [1,] 0.6931472
 [2,] 0.6931472
 [3,] 0.6931472
 [4,] 0.6931472
 [5,] 0.6931472
 [6,] 0.6931472
 [7,] 0.6931472
 [8,] 0.6931472
 [9,] 0.6931472
[10,] 0.6931472
[11,] 0.6931472
[12,] 0.6931472
[13,] 0.6931472
[14,] 0.6931472
[15,] 0.6931472
[16,] 0.6931472
[17,] 0.6931472
[18,] 0.6931472
> printh(predict(a.intercept.only, type="response"))
=== predict(a.intercept.only, type = "response")
            aaa
 [1,] 0.6666667
 [2,] 0.6666667
 [3,] 0.6666667
 [4,] 0.6666667
 [5,] 0.6666667
 [6,] 0.6666667
 [7,] 0.6666667
 [8,] 0.6666667
 [9,] 0.6666667
[10,] 0.6666667
[11,] 0.6666667
[12,] 0.6666667
[13,] 0.6666667
[14,] 0.6666667
[15,] 0.6666667
[16,] 0.6666667
[17,] 0.6666667
[18,] 0.6666667
> printh(predict(a.intercept.only, type="earth"))
=== predict(a.intercept.only, type = "earth")
            aaa
 [1,] 0.6666667
 [2,] 0.6666667
 [3,] 0.6666667
 [4,] 0.6666667
 [5,] 0.6666667
 [6,] 0.6666667
 [7,] 0.6666667
 [8,] 0.6666667
 [9,] 0.6666667
[10,] 0.6666667
[11,] 0.6666667
[12,] 0.6666667
[13,] 0.6666667
[14,] 0.6666667
[15,] 0.6666667
[16,] 0.6666667
[17,] 0.6666667
[18,] 0.6666667
> g <- a.intercept.only$glm.list[[1]]
> printh(predict(g, type="link"))
=== predict(g, type = "link")
        1         2         3         4         5         6         7         8 
0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 
        9        10        11        12        13        14        15        16 
0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 0.6931472 
       17        18 
0.6931472 0.6931472 
> printh(predict(g, type="response"))
=== predict(g, type = "response")
        1         2         3         4         5         6         7         8 
0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 
        9        10        11        12        13        14        15        16 
0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 
       17        18 
0.6666667 0.6666667 
> 
> new.df <- df[3:5, ]
> printh(predict(a.intercept.only, type="response"))
=== predict(a.intercept.only, type = "response")
            aaa
 [1,] 0.6666667
 [2,] 0.6666667
 [3,] 0.6666667
 [4,] 0.6666667
 [5,] 0.6666667
 [6,] 0.6666667
 [7,] 0.6666667
 [8,] 0.6666667
 [9,] 0.6666667
[10,] 0.6666667
[11,] 0.6666667
[12,] 0.6666667
[13,] 0.6666667
[14,] 0.6666667
[15,] 0.6666667
[16,] 0.6666667
[17,] 0.6666667
[18,] 0.6666667
> printh(predict(a.intercept.only, newdata=new.df, trace=1, type="link"))
=== predict(a.intercept.only, newdata = new.df, trace = 1, type = "link")get.earth.x from model.matrix.earth from predict.earth: x[3,3]:
  aaa        bbb        ccc
3   0 0.22820188 -0.5784837
4   0 0.01532989 -0.9423007
5   1 0.12898156 -0.2037282
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[3,2]:
         bbb        ccc
3 0.22820188 -0.5784837
4 0.01532989 -0.9423007
5 0.12898156 -0.2037282
predict.earth: bx[3,1]:
  (Intercept)
1           1
2           1
3           1
predict.earth: returning glm link predictions

           aaa
[1,] 0.6931472
[2,] 0.6931472
[3,] 0.6931472
> printh(predict(a.intercept.only, newdata=new.df, trace=1, type="response"))
=== predict(a.intercept.only, newdata = new.df, trace = 1, type = "response")get.earth.x from model.matrix.earth from predict.earth: x[3,3]:
  aaa        bbb        ccc
3   0 0.22820188 -0.5784837
4   0 0.01532989 -0.9423007
5   1 0.12898156 -0.2037282
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[3,2]:
         bbb        ccc
3 0.22820188 -0.5784837
4 0.01532989 -0.9423007
5 0.12898156 -0.2037282
predict.earth: bx[3,1]:
  (Intercept)
1           1
2           1
3           1
predict.earth: returning glm response predictions

           aaa
[1,] 0.6666667
[2,] 0.6666667
[3,] 0.6666667
> printh(predict(a.intercept.only, newdata=new.df, type="earth"))
=== predict(a.intercept.only, newdata = new.df, type = "earth")
           aaa
[1,] 0.6666667
[2,] 0.6666667
[3,] 0.6666667
> printh(predict(a.intercept.only, newdata=new.df, type="class"))
=== predict(a.intercept.only, newdata = new.df, type = "class")
     aaa
[1,]   1
[2,]   1
[3,]   1
> # cat("Expect Warning: predict.earth: returning the earth (not glm) terms\n")
> printh(predict(a.intercept.only, newdata=new.df, type="terms"))
=== predict(a.intercept.only, newdata = new.df, type = "terms")Warning: predict.earth: returning the earth (not glm) terms

    
[1,]
[2,]
[3,]
> 
> set.seed(1235)
> a <- earth(survived ~ ., data=etitanic, glm=list(family=binomial), nfold=2)
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
> plot.earth.models(list(a.intercept.only, a), main="plot.earth.models\nlist(a.intercept.only, a)")
> plot.earth.models(list(a, a.intercept.only), main="plot.earth.models\nlist(a, a.intercept.only)", legend.pos="topleft", jitter=.01)
> # nothing will plot for the next call
> plot.earth.models(list(a.intercept.only, a.intercept.only), main="plot.earth.models\nlist(a.intercept.only, a.intercept.only)")
> 
> # test position of legend and "intercep-only model" message when only one term in model
> a.intercept.pruned <- update(a.intercept.only, nprune=1, nfold=1)
update.earth: using 18 by 3 data argument from original call to earth
x[18,2] with colnames bbb ccc
y[18,1] with colname aaa
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms (DeltaRSq 0)
After forward pass GRSq -3.791 RSq 0.188
Prune method "backward" penalty 2 nprune 1: selected 1 of 5 terms, and 0 of 2 predictors
After backward pass GRSq 0 RSq 0 
earth.glm: intercept-only earth model, faking the glm model
GLM aaa: null.deviance 22.91451 (17 dof)   deviance 22.91451 (17 dof)   iters 4
> show.earth.models(a.intercept.pruned)

Print a.intercept.pruned 

Earth selected 1 of 5 terms, and 0 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: bbb-unused, ccc-unused
Number of terms at each degree of interaction: 1 (intercept only model)
Earth GCV 0.2491349    RSS 4    GRSq 0    RSq 0

GLM null.deviance 22.91451 (17 dof)   deviance 22.91451 (17 dof)   iters 4

Summary a.intercept.pruned 

Call: earth(formula=aaa~bbb+ccc, data=df, trace=1, glm=list(family=binomial),
            nfold=1, nprune=1)

GLM coefficients
                  aaa
(Intercept) 0.6931472

Earth selected 1 of 5 terms, and 0 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: bbb-unused, ccc-unused
Number of terms at each degree of interaction: 1 (intercept only model)
Earth GCV 0.2491349    RSS 4    GRSq 0    RSq 0

GLM null.deviance 22.91451 (17 dof)   deviance 22.91451 (17 dof)   iters 4

Summary a.intercept.pruned digits=3, details=TRUE

Call: earth(formula=aaa~bbb+ccc, data=df, trace=1, glm=list(family=binomial),
            nfold=1, nprune=1)

Earth coefficients
              aaa
(Intercept) 0.667

GLM coefficients
              aaa
(Intercept) 0.693

GLM deviance residuals:
   Min      1Q  Median      3Q     Max  
-1.482  -1.482   0.901   0.901   0.901  

GLM coefficients (family binomial, link logit)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)    0.693      0.500    1.39     0.17

Number of cases: 18
Earth selected 1 of 5 terms, and 0 of 2 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: bbb-unused, ccc-unused
Number of terms at each degree of interaction: 1 (intercept only model)
Earth GCV 0.249    RSS 4    GRSq 0    RSq 0

GLM null.deviance 22.9 (17 dof)   deviance 22.9 (17 dof)   iters 4

evimp a.intercept.pruned 

    nsubsets   gcv    rss

evimp a.intercept.pruned trim=FALSE

           nsubsets   gcv    rss
bbb-unused        0   0.0    0.0
ccc-unused        0   0.0    0.0

glm params: epsilon 1e-08 maxit 25 trace FALSE family binomial link logit 

plotmo a.intercept.pruned 
 grid:    bbb        ccc
    0.3547735 0.06386657
-------------------------------------------------------------------------------

> 
> # misc tests
> 
> cat("---misc 1---\n")
---misc 1---
> sex1 <- factor(rep(c("male", "female"), times=c(6,6)))
> sex2 <- factor(rep(c("male", "female"), times=c(6,6)))
> earth(numdead, cbind(sex1, sex2, sex1), trace=1) # one duplicate name
x[12,1] with colname numdead
y[12,3] with colnames sex1 sex2 sex1.1
Forward pass term 1, 2, 4
RSq changed by less than 0.001 at 3 terms (DeltaRSq 0)
After forward pass GRSq -3.446 RSq 0.081
Prune method "backward" penalty 2 nprune 3: selected 1 of 3 terms, and 0 of 1 predictors
After backward pass GRSq 0 RSq 0 
Selected 1 of 3 terms, and 0 of 1 predictors 
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: numdead-unused
Number of terms at each degree of interaction: 1 (intercept only model)

             GCV RSS GRSq RSq
sex1   0.2975207   3    0   0
sex2   0.2975207   3    0   0
sex1.1 0.2975207   3    0   0
All    0.8925620   9    0   0
> sex1 <- factor(rep(c("male", "female"), times=c(6,6)))
> sex2 <- factor(rep(c("male", "female"), times=c(6,6)))
> earth(numdead, cbind(sex1, sex2, sex1, sex1), trace=1) # two duplicate names
x[12,1] with colname numdead
y[12,4] with colnames sex1 sex2 sex1.1 sex1.2
Forward pass term 1, 2, 4
RSq changed by less than 0.001 at 3 terms (DeltaRSq 0)
After forward pass GRSq -3.446 RSq 0.081
Prune method "backward" penalty 2 nprune 3: selected 1 of 3 terms, and 0 of 1 predictors
After backward pass GRSq 0 RSq 0 
Selected 1 of 3 terms, and 0 of 1 predictors 
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: numdead-unused
Number of terms at each degree of interaction: 1 (intercept only model)

             GCV RSS GRSq RSq
sex1   0.2975207   3    0   0
sex2   0.2975207   3    0   0
sex1.1 0.2975207   3    0   0
sex1.2 0.2975207   3    0   0
All    1.1900826  12    0   0
> 
> # test column expansion when y is a data frame in earth.default
> 
> cat("---misc 2---\n")
---misc 2---
> ldose  <- rep(0:5, 2) - 2
> ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> sex2 <- sex
> sex3 <- factor(rep(c("male", "female", "andro"), times=c(6,4,2)))
> fac3 <- factor(c("lev2", "lev2", "lev1", "lev1", "lev3", "lev3",
+                  "lev2", "lev2", "lev1", "lev1", "lev3", "lev3"))
> facdead <- factor(c("dead2", "dead2", "dead3", "dead1", "dead3", "dead3",
+                     "dead1", "dead2", "dead1", "dead1", "dead3", "dead3"))
> 
> isex <- as.double(sex3) # sex3 as an index
> df1 <- data.frame(sex2, d_=facdead, sex, sex, isex)
> af <-  earth(data.frame(sex3,ldose,fac3,isex), df1, trace=1, pmethod=PMETHOD, degree=2)
x[12,6] with colnames sex3female sex3male ldose fac3lev2 fac3lev3 isex
y[12,7] with colnames sex2 d_dead1 d_dead2 d_dead3 sex sex.1 isex
Forward pass term 1, 2, 4
Reached minimum GRSq -10 at 3 terms (GRSq -14)
After forward pass GRSq -14.447 RSq 0.872
Prune method "none" penalty 3 nprune 3: selected 3 of 3 terms, and 1 of 6 predictors
After backward pass GRSq 0.261 RSq 0.78 
> 
> cat("---misc 3---\n")
---misc 3---
> 
> # strings in input matrices, get converted to factors and a warning issued
> # TODO would like to improve the error message (says 'x' even when 'y')
> # TODO Apr 2013 warning no longer issued (R changed), is that ok?
> 
> ldose  <- rep(0:5, 2) - 2
> ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
> sex2 <- rep(c("male", "female"), times=c(6,6))
> af <-  earth(sex2, sex2, trace=1, pmethod=PMETHOD, degree=2)
x[12,1] with colname male
y[12,2] with colnames female male
Forward pass term 1, 2
Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Prune method "none" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> # test update.earth with a bpairs argument (for now always do forward pass if bpairs used)
> 
> cat("---misc 4---\n")
---misc 4---
> volumei <- as.integer(trees$Volume)
> x1 <- trees$Height
> a <- earth(x1, cbind(volumei, 100-volumei), glm=list(family=binomial, bpairs=c(TRUE,FALSE)))
> update(a, trace=1, glm=list(family=binomial))
update.earth: forcing forward pass because bpairs argument used
update.earth: using 31 by 1 x argument from original call to earth
update.earth: using 31 by 2 y argument from original call to earth
x[31,1] with colname x1
y[31,2] with colnames volumei cbind(volumei,100-volumei)2
Forward pass term 1, 2, 4, 6, 8
RSq changed by less than 0.001 at 7 terms, 5 terms used (DeltaRSq 0.00058)
After forward pass GRSq -0.354 RSq 0.398
Prune method "backward" penalty 2 nprune 5: selected 2 of 5 terms, and 1 of 1 predictors
After backward pass GRSq 0.239 RSq 0.338 
GLM volumei: null.deviance 382.4328 (30 dof)   deviance 255.0788 (29 dof)   iters 4
Earth selected 2 of 5 terms, and 1 of 1 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: x1
Number of terms at each degree of interaction: 1 1 (additive model)
Earth GCV 213.2819    RSS 5393.967    GRSq 0.2394863    RSq 0.337508

GLM null.deviance 382.4328 (30 dof)   deviance 255.0788 (29 dof)   iters 4
> a <- earth(x1, cbind(volumei, 100-volumei), glm=list(family=binomial))
> update(a, trace=1, glm=list(family=binomial, bpairs=c(TRUE,FALSE)))
update.earth: forcing forward pass because bpairs argument used
update.earth: using 31 by 1 x argument from original call to earth
update.earth: using 31 by 2 y argument from original call to earth
x[31,1] with colname x1
y[31,2] with colnames volumei cbind(volumei,100-volumei)2
Forward pass term 1, 2, 4, 6, 8
RSq changed by less than 0.001 at 7 terms, 5 terms used (DeltaRSq 0.00058)
After forward pass GRSq -0.354 RSq 0.398
Prune method "backward" penalty 2 nprune 5: selected 2 of 5 terms, and 1 of 1 predictors
After backward pass GRSq 0.239 RSq 0.338 
GLM volumei: null.deviance 382.4328 (30 dof)   deviance 255.0788 (29 dof)   iters 4
Earth selected 2 of 5 terms, and 1 of 1 predictors 
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: x1
Number of terms at each degree of interaction: 1 1 (additive model)
Earth GCV 213.2819    RSS 5393.967    GRSq 0.2394863    RSq 0.337508

GLM null.deviance 382.4328 (30 dof)   deviance 255.0788 (29 dof)   iters 4
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
