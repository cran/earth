> # test.full.R: test earth
> 
> print(R.version.string)
[1] "R version 3.3.1 (2016-06-21)"
> 
> library(earth)
Loading required package: plotmo
Loading required package: plotrix
Loading required package: TeachingDemos
> library(mda)
Loading required package: class
Loaded mda 0.4-9

> source("check.models.equal.R")
> set.seed(2016)
> data(ozone1)
> data(trees)
> data(etitanic)
> if(!interactive())
+     postscript(paper="letter")
> 
> PRINT.TIME <- FALSE         # FALSE for no time results (for diff against reference)
> PLOT <- TRUE                # TRUE to do plots too, FALSE for speed
> options.old <- options()
> options(warn=1) # print warnings as they occur
> # options(digits=5) # removed because want to check against default
> 
> # test that we got an error as expected from a try() call
> expect.err <- function(object, expected.msg="")
+ {
+     if(class(object)[1] == "try-error") {
+         msg <- attr(object, "condition")$message[1]
+         if(length(grep(expected.msg, msg, fixed=TRUE)))
+             cat("Got error as expected from ",
+                 deparse(substitute(object)), "\n", sep="")
+         else
+             stop(sprintf("Expected: %s\n  Got:      %s",
+                          expected.msg, substr(msg, 1, 1000)))
+     } else
+         stop("did not get expected error for ", expected.msg)
+ }
> printh <- function(x, expect.warning=FALSE, max.print=0) # like print but with a header
+ {
+     cat("===", deparse(substitute(x)), " ", sep="")
+     if(expect.warning)
+         cat(" expect warning -->")
+     else if (NROW(x) > 1)
+         cat("\n")
+     if (max.print > 0)
+         print(head(x, n=max.print))
+     else
+         print(x)
+ }
> 
> print(citation("earth"))

To cite package 'earth' in publications use:

  Stephen Milborrow. Derived from mda:mars by Trevor Hastie and Rob
  Tibshirani. Uses Alan Miller's Fortran utilities with Thomas Lumley's
  leaps wrapper. (2011). earth: Multivariate Adaptive Regression
  Splines. R package version 4.4.6.
  https://CRAN.R-project.org/package=earth

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {earth: Multivariate Adaptive Regression Splines},
    author = {Stephen Milborrow. Derived from mda:mars by Trevor Hastie and Rob Tibshirani. Uses Alan Miller's Fortran utilities with Thomas Lumley's leaps wrapper.},
    year = {2011},
    note = {R package version 4.4.6},
    url = {https://CRAN.R-project.org/package=earth},
  }

ATTENTION: This citation information has been auto-generated from the
package DESCRIPTION file and may need manual editing, see
'help("citation")'.

> 
> #--- test examples from man pages ------------------------------------------------------------
> 
> cat("--- earth.Rd -----------------------------\n")
--- earth.Rd -----------------------------
> example(earth)

earth> earth.mod <- earth(Volume ~ ., data = trees)

earth> plotmo(earth.mod)
 plotmo grid:    Girth Height
                  12.9     76

earth> summary(earth.mod, digits = 2, style = "pmax")
Call: earth(formula=Volume~., data=trees)

Volume =
  29
  -  3.4 * pmax(0,     14 -  Girth) 
  +  6.2 * pmax(0,  Girth -     14) 
  + 0.58 * pmax(0, Height -     75) 

Selected 4 of 5 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 11    RSS 209    GRSq 0.96    RSq 0.97
> 
> set.seed(2015)
> 
>     train.subset <- sample(1:nrow(trees), .8 * nrow(trees))
>     test.subset <- (1:nrow(trees))[-train.subset]
> 
>     earth.model <- earth(Volume ~ ., data = trees[train.subset,])
> 
>     # print R-Squared on the test data
>     print(summary(earth.model, newdata=trees[test.subset,]))
RSq 0.882 on newdata (7 cases)
> 
>     # manually calculate R-Squared on the test data (same as above call to summary)
>     yhat <- predict(earth.model, newdata = trees[test.subset,])
>     y <- trees$Volume[test.subset]
>     printh(1 - sum((y - yhat)^2) / sum((y - mean(y))^2)) # print R-Squared
===1 - sum((y - yhat)^2)/sum((y - mean(y))^2) [1] 0.8821553
> 
> newrsq <- 1 - sum((y - yhat)^2) / sum((y - mean(y))^2)
> stopifnot(abs(summary(earth.model, newdata=trees[test.subset,])$newrsq - newrsq) < 1e-10)
> 
> cars <- earth(mpg ~ ., data = mtcars, pmethod = "none", trace = 4)
Call: earth(formula=mpg~., data=mtcars, pmethod="none", trace=4)

x[32,10]:
              cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4       6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag   6  160 110 3.90 2.875 17.02  0  1    4    4
Datsun 710      4  108  93 3.85 2.320 18.61  1  1    4    1
...             6  258 110 3.08 3.215 19.44  1  0    3    1
Volvo 142E      4  121 109 4.11 2.780 18.60  1  1    4    2

y[32,1]:
     mpg
1   21.0
2   21.0
3   22.8
... 21.4
32  21.4

Forward pass: minspan 5 endspan 10    x[32,10] 2.5 kB    bx[32,21] 5.25 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.8157 0.8602       0.8602    2         disp         145  2   3         1 
4      0.7815 0.8797      0.01956    3           hp         123  4   5         1 
6      0.7601 0.9099      0.03016    6         qsec       18.52  6   7         1 
8      0.6839 0.9260      0.01611    4         drat        3.15  8   9         1 
10     0.5031 0.9374      0.01144    9         gear           4  10  11        1 
12     0.3575 0.9458     0.008417    2         disp       275.8  12            1 
14     0.0073 0.9494     0.003535    6         qsec       17.02  13            1 
16    -0.5893 0.9587     0.009271    7           vs           0< 14            1 
18   -35.8726 0.9616     0.002977   10         carb           2  15  16        1 reject (negative GRSq)

Reached minimum GRSq -10 at 17 terms, 14 terms used (GRSq -36)
After forward pass GRSq -35.873 RSq 0.962
Forward pass complete: 17 terms, 14 terms used

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6706  0.7118     0.6706      1  1 3
          3      0.8157  0.8602     0.1450      1  1 2 3
          4      0.7988  0.8691    -0.0169      2  1 2 3 4
          5      0.7815  0.8797    -0.0173      2  1 2 3 4 5
          6      0.7601  0.8899    -0.0214      4  1 3 4 6 13 14
          7      0.7934  0.9224     0.0332      4  1 3 4 5 6 13 14
          8      0.7852  0.9354    -0.0082      5  1 3 4 5 6 9 13 14
          9      0.7579  0.9433    -0.0272      5  1 3 4 5 6 9 12 13 14
         10      0.6997  0.9472    -0.0582      6  1 3 4 5 6 9 10 12 13 14
         11      0.6132  0.9513    -0.0865      6  1 2 3 4 5 6 9 10 12 13 14
         12      0.4534  0.9539    -0.1598      6  1 2 3 4 5 6 9 10 11 12 13 14
         13      0.1741  0.9579    -0.2793      6  1 2 3 4 5 6 8 9 10 11 12 13 14
chosen   14     -0.5893  0.9587    -0.7634      6  1 2 3 4 5 6 7 8 9 10 11 12 13 14

Prune method "none" penalty 2 nprune null: selected 14 of 14 terms, and 6 of 10 preds
After pruning pass GRSq -0.589 RSq 0.959
> 
> get.used.pred.names <- function(obj) # obj is an earth object
+ {
+   any1 <- function(x) any(x != 0)    # like any but no warning if x is double
+   names(which(apply(obj$dirs[obj$selected.terms,,drop=FALSE],2,any1)))
+ }
> printh(get.used.pred.names(cars))
===get.used.pred.names(cars) 
[1] "disp" "hp"   "drat" "qsec" "vs"   "gear"
> 
> a1 <- earth(survived ~ ., data=etitanic,   # c.f. Harrell "Reg. Mod. Strat." ch. 12
+              degree=2, trace=1,
+              glm=list(family=binomial))
x[1046,6] with colnames pclass2nd pclass3rd sexmale age sibsp parch
y[1046,1] with colname survived
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.406 RSq 0.450
Prune method "backward" penalty 3 nprune null: selected 8 of 17 terms, and 5 of 6 preds
After pruning pass GRSq 0.42 RSq 0.439
GLM survived: null.deviance 1414.62 (1045 dof)   deviance 892.794 (1038 dof)   iters 5
> printh(a1)
===a1 
Earth selected 8 of 17 terms, and 5 of 6 predictors
Termination condition: Reached nk 21
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch-unused
Number of terms at each degree of interaction: 1 3 4
Earth GCV 0.1404529    RSS 141.7629    GRSq 0.4197106    RSq 0.4389834

GLM null.deviance 1414.62 (1045 dof)   deviance 892.794 (1038 dof)   iters 5
> 
> a1a <- earth(etitanic[,-2], etitanic[,2],  # equivalent but using earth.default
+              degree=2, trace=1,
+              glm=list(family=binomial))
x[1046,6] with colnames pclass2nd pclass3rd sexmale age sibsp parch
y[1046,1] with colname etitanic[,2]
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached nk 21
After forward pass GRSq 0.406 RSq 0.450
Prune method "backward" penalty 3 nprune null: selected 8 of 17 terms, and 5 of 6 preds
After pruning pass GRSq 0.42 RSq 0.439
GLM etitanic[,2]: null.deviance 1414.62 (1045 dof)   deviance 892.794 (1038 dof)   iters 5
> printh(a1a)
===a1a 
Earth selected 8 of 17 terms, and 5 of 6 predictors
Termination condition: Reached nk 21
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch-unused
Number of terms at each degree of interaction: 1 3 4
Earth GCV 0.1404529    RSS 141.7629    GRSq 0.4197106    RSq 0.4389834

GLM null.deviance 1414.62 (1045 dof)   deviance 892.794 (1038 dof)   iters 5
> 
> a2 <- earth(pclass ~ ., data=etitanic, trace=1, glm=list(family=binomial))
x[1046,5] with colnames survived sexmale age sibsp parch
y[1046,3] with colnames 1st 2nd 3rd
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14
RSq changed by less than 0.001 at 13 terms, 10 terms used (DeltaRSq 0.00065)
After forward pass GRSq 0.163 RSq 0.195
Prune method "backward" penalty 2 nprune null: selected 8 of 10 terms, and 4 of 5 preds
After pruning pass GRSq 0.167 RSq 0.189
GLM 1st: null.deviance 1223.308 (1045 dof)   deviance 920.8021 (1038 dof)   iters 5
GLM 2nd: null.deviance 1175.305 (1045 dof)   deviance 1147.518 (1038 dof)   iters 5
GLM 3rd: null.deviance 1448.212 (1045 dof)   deviance 1142.756 (1038 dof)   iters 5
> printh(a2)
===a2 
Earth selected 8 of 10 terms, and 4 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 10 terms
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

Earth
          GCV      RSS         GRSq        RSq
1st 0.1483414 150.7467  0.251448718 0.27137124
2nd 0.1885520 191.6094 -0.004971341 0.02177575
3rd 0.1927692 195.8949  0.229032722 0.24955184
All 0.5296626 538.2511  0.166969402 0.18914032

GLM (family binomial, link logit)
    null.deviance   df  deviance   df iters converged
1st      1223.308 1045  920.8021 1038     5         1
2nd      1175.305 1045 1147.5176 1038     5         1
3rd      1448.213 1045 1142.7559 1038     5         1
> 
> ldose <- rep(0:5, 2) - 2 # V&R 4th ed. p. 191
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> pair <- cbind(numdead, numalive=20 - numdead)
> 
> a3 <- earth(pair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=binomial(link=probit), maxit=100))
x[12,2] with colnames sexmale ldose
y[12,2] with colnames numdead numalive
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune null: selected 3 of 3 terms, and 2 of 2 preds
After pruning pass GRSq 0.952 RSq 0.981
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.565963 (9 dof)   iters 4
> printh(a3)
===a3 
Earth selected 3 of 3 terms, and 2 of 2 predictors (pmethod="none")
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 2.376093    RSS 9.702381    GRSq 0.952486    RSq 0.9807588

GLM null.deviance 124.8756 (11 dof)   deviance 5.565963 (9 dof)   iters 4
> 
> numdead2 <- c(2,8,11,12,20,23,0,4,6,16,12,14) # bogus data
> doublepair <- cbind(numdead, numalive=20-numdead,
+                     numdead2=numdead2, numalive2=30-numdead2)
> 
> a4 <- earth(doublepair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family="binomial"))
x[12,2] with colnames sexmale ldose
y[12,4] with colnames numdead numalive numdead2 numalive2
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.658 RSq 0.929
Prune method "none" penalty 2 nprune null: selected 3 of 3 terms, and 2 of 2 preds
After pruning pass GRSq 0.826 RSq 0.929
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 91.62481 (11 dof)   deviance 16.06743 (9 dof)   iters 4
> printh(a4)
===a4 
Earth selected 3 of 3 terms, and 2 of 2 predictors (pmethod="none")
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   2.376093  9.702381 0.9524860 0.9807588
numdead2 15.773761 64.409524 0.7079827 0.8817451
All      18.149854 74.111905 0.8255238 0.9293443

GLM (family binomial, link logit)
         null.deviance df  deviance df iters converged
numdead      124.87559 11  6.757064  9     4         1
numdead2      91.62481 11 16.067427  9     4         1
> 
> counts <- c(18,17,15,20,10,20,25,13,12) # Dobson 1990 p. 93
> outcome <- gl(3,1,9)
> treatment <- gl(3,3)
> 
> a5 <- earth(counts ~ outcome + treatment, trace=1, pmethod="none",
+             glm=list(family=poisson))
x[9,4] with colnames outcome2 outcome3 treatment2 treatment3
y[9,1] with colname counts
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq -6.576 RSq 0.527
Prune method "none" penalty 2 nprune null: selected 3 of 3 terms, and 2 of 4 preds
After pruning pass GRSq -0.894 RSq 0.527
GLM counts: null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
> printh(a5)
===a5 
Earth selected 3 of 3 terms, and 2 of 4 predictors (pmethod="none")
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.33333    GRSq -0.8939394    RSq 0.5265152

GLM null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
> 
> a6 <- earth(numdead ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=gaussian(link=identity)))
x[12,2] with colnames sexmale ldose
y[12,1] with colname numdead
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.907 RSq 0.981
Prune method "none" penalty 2 nprune null: selected 3 of 3 terms, and 2 of 2 preds
After pruning pass GRSq 0.952 RSq 0.981
GLM numdead: null.deviance 504.25 (11 dof)   deviance 9.702381 (9 dof)   iters 2
> printh(a6$coefficients == a6$glm.coefficients)  # all TRUE
===a6$coefficients == a6$glm.coefficients 
            numdead
(Intercept)    TRUE
ldose          TRUE
sexmale        TRUE
> printh(a6)
===a6 
Earth selected 3 of 3 terms, and 2 of 2 predictors (pmethod="none")
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 2.376093    RSS 9.702381    GRSq 0.952486    RSq 0.9807588

GLM null.deviance 504.25 (11 dof)   deviance 9.702381 (9 dof)   iters 2
> 
> remove(ldose)
> remove(sex)
> remove(numdead)
> remove(pair)
> remove(numdead2)
> remove(doublepair)
> remove(counts)
> remove(outcome)
> remove(treatment)
> 
> printh(earth(cbind(Volume,lvol=log(Volume)) ~ ., data=trees))
===earth(cbind(Volume, lvol = log(Volume)) ~ ., data = trees) 
Selected 4 of 5 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

              GCV        RSS      GRSq       RSq
Volume 11.2543915 209.113855 0.9596919 0.9742028
lvol    0.0158825   0.295106 0.9445035 0.9644822
All    11.2702739 209.408961 0.9596764 0.9741929
> attach(trees)
> printh(earth(data.frame(Girth,Height), data.frame(Volume,lvol=log(Volume))))
===earth(data.frame(Girth, Height), data.frame(Volume, lvol = log(Volume))) 
Selected 4 of 5 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

              GCV        RSS      GRSq       RSq
Volume 11.2543915 209.113855 0.9596919 0.9742028
lvol    0.0158825   0.295106 0.9445035 0.9644822
All    11.2702739 209.408961 0.9596764 0.9741929
> detach(trees)
> 
> lm.fit <- lm(O3 ~ log(temp) + humidity*temp, data=ozone1)
> printh(lm.fit)
===lm.fit 

Call:
lm(formula = O3 ~ log(temp) + humidity * temp, data = ozone1)

Coefficients:
  (Intercept)      log(temp)       humidity           temp  humidity:temp  
     94.85623      -31.27411       -0.20050        0.63299        0.00475  

> plotmo(lm.fit, level=.95, trace=-1)
> lm.fit2 <- lm(O3 ~ temp+ibh+doy, data=ozone1)
> printh(lm.fit2)
===lm.fit2 

Call:
lm(formula = O3 ~ temp + ibh + doy, data = ozone1)

Coefficients:
(Intercept)         temp          ibh          doy  
 -7.6740829    0.3785184   -0.0009858   -0.0066324  

> plotmo(lm.fit2, all2=TRUE, clip=FALSE, trace=-1)
> 
> cat("--- print.default of earth object---------\n")
--- print.default of earth object---------
> print.default(cars, digits=3)
$rss
[1] 46.6

$rsq
[1] 0.959

$gcv
[1] 59.6

$grsq
[1] -0.589

$bx
      (Intercept) h(disp-145) h(145-disp) h(hp-123) h(123-hp) h(qsec-18.52)
 [1,]           1        15.0         0.0         0        13          0.00
 [2,]           1        15.0         0.0         0        13          0.00
 [3,]           1         0.0        37.0         0        30          0.09
 [4,]           1       113.0         0.0         0        13          0.92
 [5,]           1       215.0         0.0        52         0          0.00
 [6,]           1        80.0         0.0         0        18          1.70
 [7,]           1       215.0         0.0       122         0          0.00
 [8,]           1         1.7         0.0         0        61          1.48
 [9,]           1         0.0         4.2         0        28          4.38
[10,]           1        22.6         0.0         0         0          0.00
[11,]           1        22.6         0.0         0         0          0.38
[12,]           1       130.8         0.0        57         0          0.00
[13,]           1       130.8         0.0        57         0          0.00
[14,]           1       130.8         0.0        57         0          0.00
[15,]           1       327.0         0.0        82         0          0.00
[16,]           1       315.0         0.0        92         0          0.00
[17,]           1       295.0         0.0       107         0          0.00
[18,]           1         0.0        66.3         0        57          0.95
[19,]           1         0.0        69.3         0        71          0.00
[20,]           1         0.0        73.9         0        58          1.38
[21,]           1         0.0        24.9         0        26          1.49
[22,]           1       173.0         0.0        27         0          0.00
[23,]           1       159.0         0.0        27         0          0.00
[24,]           1       205.0         0.0       122         0          0.00
[25,]           1       255.0         0.0        52         0          0.00
[26,]           1         0.0        66.0         0        57          0.38
[27,]           1         0.0        24.7         0        32          0.00
[28,]           1         0.0        49.9         0        10          0.00
[29,]           1       206.0         0.0       141         0          0.00
[30,]           1         0.0         0.0        52         0          0.00
[31,]           1       156.0         0.0       212         0          0.00
[32,]           1         0.0        24.0         0        14          0.08
      h(18.52-qsec) h(drat-3.15) h(3.15-drat) h(gear-4) h(4-gear) h(disp-275.8)
 [1,]          2.06         0.75         0.00         0         0           0.0
 [2,]          1.50         0.75         0.00         0         0           0.0
 [3,]          0.00         0.70         0.00         0         0           0.0
 [4,]          0.00         0.00         0.07         0         1           0.0
 [5,]          1.50         0.00         0.00         0         1          84.2
 [6,]          0.00         0.00         0.39         0         1           0.0
 [7,]          2.68         0.06         0.00         0         1          84.2
 [8,]          0.00         0.54         0.00         0         0           0.0
 [9,]          0.00         0.77         0.00         0         0           0.0
[10,]          0.22         0.77         0.00         0         0           0.0
[11,]          0.00         0.77         0.00         0         0           0.0
[12,]          1.12         0.00         0.08         0         1           0.0
[13,]          0.92         0.00         0.08         0         1           0.0
[14,]          0.52         0.00         0.08         0         1           0.0
[15,]          0.54         0.00         0.22         0         1         196.2
[16,]          0.70         0.00         0.15         0         1         184.2
[17,]          1.10         0.08         0.00         0         1         164.2
[18,]          0.00         0.93         0.00         0         0           0.0
[19,]          0.00         1.78         0.00         0         0           0.0
[20,]          0.00         1.07         0.00         0         0           0.0
[21,]          0.00         0.55         0.00         0         1           0.0
[22,]          1.65         0.00         0.39         0         1          42.2
[23,]          1.22         0.00         0.00         0         1          28.2
[24,]          3.11         0.58         0.00         0         1          74.2
[25,]          1.47         0.00         0.07         0         1         124.2
[26,]          0.00         0.93         0.00         0         0           0.0
[27,]          1.82         1.28         0.00         1         0           0.0
[28,]          1.62         0.62         0.00         1         0           0.0
[29,]          4.02         1.07         0.00         1         0          75.2
[30,]          3.02         0.47         0.00         1         0           0.0
[31,]          3.92         0.39         0.00         1         0          25.2
[32,]          0.00         0.96         0.00         0         0           0.0
      h(qsec-17.02) vs
 [1,]          0.00  0
 [2,]          0.00  0
 [3,]          1.59  1
 [4,]          2.42  1
 [5,]          0.00  0
 [6,]          3.20  1
 [7,]          0.00  0
 [8,]          2.98  1
 [9,]          5.88  1
[10,]          1.28  1
[11,]          1.88  1
[12,]          0.38  0
[13,]          0.58  0
[14,]          0.98  0
[15,]          0.96  0
[16,]          0.80  0
[17,]          0.40  0
[18,]          2.45  1
[19,]          1.50  1
[20,]          2.88  1
[21,]          2.99  1
[22,]          0.00  0
[23,]          0.28  0
[24,]          0.00  0
[25,]          0.03  0
[26,]          1.88  1
[27,]          0.00  0
[28,]          0.00  1
[29,]          0.00  0
[30,]          0.00  0
[31,]          0.00  0
[32,]          1.58  1

$dirs
              cyl disp hp drat wt qsec vs am gear carb
(Intercept)     0    0  0    0  0    0  0  0    0    0
h(disp-145)     0    1  0    0  0    0  0  0    0    0
h(145-disp)     0   -1  0    0  0    0  0  0    0    0
h(hp-123)       0    0  1    0  0    0  0  0    0    0
h(123-hp)       0    0 -1    0  0    0  0  0    0    0
h(qsec-18.52)   0    0  0    0  0    1  0  0    0    0
h(18.52-qsec)   0    0  0    0  0   -1  0  0    0    0
h(drat-3.15)    0    0  0    1  0    0  0  0    0    0
h(3.15-drat)    0    0  0   -1  0    0  0  0    0    0
h(gear-4)       0    0  0    0  0    0  0  0    1    0
h(4-gear)       0    0  0    0  0    0  0  0   -1    0
h(disp-275.8)   0    1  0    0  0    0  0  0    0    0
h(qsec-17.02)   0    0  0    0  0    1  0  0    0    0
vs              0    0  0    0  0    0  2  0    0    0

$cuts
              cyl disp  hp drat wt qsec vs am gear carb
(Intercept)     0    0   0 0.00  0  0.0  0  0    0    0
h(disp-145)     0  145   0 0.00  0  0.0  0  0    0    0
h(145-disp)     0  145   0 0.00  0  0.0  0  0    0    0
h(hp-123)       0    0 123 0.00  0  0.0  0  0    0    0
h(123-hp)       0    0 123 0.00  0  0.0  0  0    0    0
h(qsec-18.52)   0    0   0 0.00  0 18.5  0  0    0    0
h(18.52-qsec)   0    0   0 0.00  0 18.5  0  0    0    0
h(drat-3.15)    0    0   0 3.15  0  0.0  0  0    0    0
h(3.15-drat)    0    0   0 3.15  0  0.0  0  0    0    0
h(gear-4)       0    0   0 0.00  0  0.0  0  0    4    0
h(4-gear)       0    0   0 0.00  0  0.0  0  0    4    0
h(disp-275.8)   0  276   0 0.00  0  0.0  0  0    0    0
h(qsec-17.02)   0    0   0 0.00  0 17.0  0  0    0    0
vs              0    0   0 0.00  0  0.0  0  0    0    0

$selected.terms
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14

$prune.terms
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0
 [2,]    1    3    0    0    0    0    0    0    0     0     0     0     0
 [3,]    1    2    3    0    0    0    0    0    0     0     0     0     0
 [4,]    1    2    3    4    0    0    0    0    0     0     0     0     0
 [5,]    1    2    3    4    5    0    0    0    0     0     0     0     0
 [6,]    1    3    4    6   13   14    0    0    0     0     0     0     0
 [7,]    1    3    4    5    6   13   14    0    0     0     0     0     0
 [8,]    1    3    4    5    6    9   13   14    0     0     0     0     0
 [9,]    1    3    4    5    6    9   12   13   14     0     0     0     0
[10,]    1    3    4    5    6    9   10   12   13    14     0     0     0
[11,]    1    2    3    4    5    6    9   10   12    13    14     0     0
[12,]    1    2    3    4    5    6    9   10   11    12    13    14     0
[13,]    1    2    3    4    5    6    8    9   10    11    12    13    14
[14,]    1    2    3    4    5    6    7    8    9    10    11    12    13
      [,14]
 [1,]     0
 [2,]     0
 [3,]     0
 [4,]     0
 [5,]     0
 [6,]     0
 [7,]     0
 [8,]     0
 [9,]     0
[10,]     0
[11,]     0
[12,]     0
[13,]     0
[14,]    14

$fitted.values
       mpg
 [1,] 20.4
 [2,] 20.8
 [3,] 24.4
 [4,] 20.0
 [5,] 18.1
 [6,] 17.7
 [7,] 14.7
 [8,] 24.7
 [9,] 23.8
[10,] 18.5
[11,] 18.0
[12,] 16.8
[13,] 16.1
[14,] 14.8
[15,] 10.7
[16,] 11.6
[17,] 13.8
[18,] 30.6
[19,] 30.4
[20,] 31.7
[21,] 21.8
[22,] 16.1
[23,] 18.6
[24,] 13.8
[25,] 17.0
[26,] 30.1
[27,] 26.2
[28,] 31.1
[29,] 16.0
[30,] 18.7
[31,] 14.9
[32,] 21.0

$residuals
          mpg
 [1,]  0.5985
 [2,]  0.2222
 [3,] -1.5897
 [4,]  1.4241
 [5,]  0.6074
 [6,]  0.3738
 [7,] -0.3637
 [8,] -0.2722
 [9,] -1.0463
[10,]  0.7205
[11,] -0.2200
[12,] -0.4350
[13,]  1.1530
[14,]  0.4290
[15,] -0.2985
[16,] -1.1876
[17,]  0.9460
[18,]  1.8033
[19,]  0.0178
[20,]  2.2245
[21,] -0.3183
[22,] -0.6363
[23,] -3.4341
[24,] -0.4700
[25,]  2.2104
[26,] -2.8176
[27,] -0.1547
[28,] -0.6588
[29,] -0.2107
[30,]  0.9699
[31,]  0.0543
[32,]  0.3589

$coefficients
                  mpg
(Intercept)   21.2246
h(disp-145)    0.0215
h(145-disp)    0.1101
h(hp-123)     -0.0365
h(123-hp)      0.0972
h(qsec-18.52)  4.8944
h(18.52-qsec) -0.6719
h(drat-3.15)  -1.3666
h(3.15-drat)  -8.2362
h(gear-4)      2.0743
h(4-gear)     -2.1513
h(disp-275.8) -0.0321
h(qsec-17.02) -4.1119
vs             3.2318

$rss.per.response
[1] 46.6

$rsq.per.response
[1] 0.959

$gcv.per.response
[1] 59.6

$grsq.per.response
[1] -0.589

$rss.per.subset
 [1] 1126.0  324.6  157.5  147.3  135.4  123.9   87.4   72.8   63.8   59.5
[11]   54.8   51.9   47.4   46.6

$gcv.per.subset
 [1] 37.50 12.35  6.91  7.54  8.19  8.99  7.75  8.06  9.08 11.26 14.50 20.50
[13] 30.97 59.59

$leverages
 [1] 0.385 0.343 0.196 0.494 0.209 0.549 0.297 0.792 0.877 0.340 0.322 0.232
[13] 0.241 0.371 0.456 0.323 0.337 0.261 0.572 0.347 0.615 0.550 0.280 0.469
[25] 0.217 0.259 0.640 0.775 0.672 0.615 0.724 0.238

$pmethod
[1] "none"

$nprune
NULL

$penalty
[1] 2

$nk
[1] 21

$thresh
[1] 0.001

$termcond
[1] 3

$weights
NULL

$call
earth(formula = mpg ~ ., data = mtcars, pmethod = "none", trace = 4)

$namesx.org
 [1] "cyl"  "disp" "hp"   "drat" "wt"   "qsec" "vs"   "am"   "gear" "carb"

$namesx
 [1] "cyl"  "disp" "hp"   "drat" "wt"   "qsec" "vs"   "am"   "gear" "carb"

$terms
mpg ~ cyl + disp + hp + drat + wt + qsec + vs + am + gear + carb
attr(,"variables")
list(mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb)
attr(,"factors")
     cyl disp hp drat wt qsec vs am gear carb
mpg    0    0  0    0  0    0  0  0    0    0
cyl    1    0  0    0  0    0  0  0    0    0
disp   0    1  0    0  0    0  0  0    0    0
hp     0    0  1    0  0    0  0  0    0    0
drat   0    0  0    1  0    0  0  0    0    0
wt     0    0  0    0  1    0  0  0    0    0
qsec   0    0  0    0  0    1  0  0    0    0
vs     0    0  0    0  0    0  1  0    0    0
am     0    0  0    0  0    0  0  1    0    0
gear   0    0  0    0  0    0  0  0    1    0
carb   0    0  0    0  0    0  0  0    0    1
attr(,"term.labels")
 [1] "cyl"  "disp" "hp"   "drat" "wt"   "qsec" "vs"   "am"   "gear" "carb"
attr(,"order")
 [1] 1 1 1 1 1 1 1 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb)
attr(,"dataClasses")
      mpg       cyl      disp        hp      drat        wt      qsec        vs 
"numeric" "numeric" "numeric" "numeric" "numeric" "numeric" "numeric" "numeric" 
       am      gear      carb 
"numeric" "numeric" "numeric" 

attr(,"class")
[1] "earth"
> cat("--- done print.default of earth object----\n")
--- done print.default of earth object----
> if (PLOT)
+     plot(cars)
> library(mda)
> (a <- fda(Species~., data=iris, method=earth, keepxy=TRUE))
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 97.97 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> if (PLOT)
+     plot(a)
> printh(summary(a$fit))
===summary(a$fit) 
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE)

                        Theta1     Theta2
(Intercept)          1.2060322 -0.7346235
h(Sepal.Length-5.4) -0.1373750 -0.2294201
h(3.3-Sepal.Width)   0.1830045  0.3597030
h(Petal.Length-1.9) -1.7002724 -0.1836390
h(Petal.Length-3.5)  2.0219035  0.4940619
h(Petal.Length-4.5)  0.5710668  1.2862155
h(Petal.Length-5.3) -0.7975568 -1.4507177
h(Petal.Width-1.5)   2.0119980  3.5355314
h(Petal.Width-1.8)  -1.9863032 -3.4901478

Selected 9 of 15 terms, and 4 of 4 predictors
Termination condition: Reached nk 21
Importance: Petal.Length, Petal.Width, Sepal.Width, Sepal.Length
Number of terms at each degree of interaction: 1 8 (additive model)

             GCV       RSS      GRSq       RSq
Theta1 0.0473001  5.577943 0.9533285 0.9628137
Theta2 0.1234732 14.560786 0.8781676 0.9029281
All    0.1707733 20.138729 0.9157480 0.9328709
> expect.err(try(printh(summary(a$fit, none.such1="xxx"))), "unrecognized argument") # summary.earth unrecognized argument "none.such1"
===summary(a$fit, none.such1 = "xxx") Error : summary.earth: unrecognized argument 'none.such1'
Got error as expected from try(printh(summary(a$fit, none.such1 = "xxx")))
> printh(summary(a$fit, style="bf", none.such2="xxx")) # Warning: format.earth ignored unrecognized argument "none.such2"
===summary(a$fit, style = "bf", none.such2 = "xxx") Warning: format.earth ignored argument 'none.such2'

Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE)

Theta1 =
  1.206032
  -  0.137375 * bf1
  + 0.1830045 * bf2
  -  1.700272 * bf3
  +  2.021903 * bf4
  + 0.5710668 * bf5
  - 0.7975568 * bf6
  +  2.011998 * bf7
  -  1.986303 * bf8

   bf1  h(Sepal.Length-5.4)
   bf2  h(3.3-Sepal.Width)
   bf3  h(Petal.Length-1.9)
   bf4  h(Petal.Length-3.5)
   bf5  h(Petal.Length-4.5)
   bf6  h(Petal.Length-5.3)
   bf7  h(Petal.Width-1.5)
   bf8  h(Petal.Width-1.8)

Theta2 =
  -0.7346235
  - 0.2294201 * bf1
  +  0.359703 * bf2
  -  0.183639 * bf3
  + 0.4940619 * bf4
  +  1.286216 * bf5
  -  1.450718 * bf6
  +  3.535531 * bf7
  -  3.490148 * bf8

   bf1  h(Sepal.Length-5.4)
   bf2  h(3.3-Sepal.Width)
   bf3  h(Petal.Length-1.9)
   bf4  h(Petal.Length-3.5)
   bf5  h(Petal.Length-4.5)
   bf6  h(Petal.Length-5.3)
   bf7  h(Petal.Width-1.5)
   bf8  h(Petal.Width-1.8)

Selected 9 of 15 terms, and 4 of 4 predictors
Termination condition: Reached nk 21
Importance: Petal.Length, Petal.Width, Sepal.Width, Sepal.Length
Number of terms at each degree of interaction: 1 8 (additive model)

             GCV       RSS      GRSq       RSq
Theta1 0.0473001  5.577943 0.9533285 0.9628137
Theta2 0.1234732 14.560786 0.8781676 0.9029281
All    0.1707733 20.138729 0.9157480 0.9328709
> if (PLOT) {
+     plot(a$fit, col.residuals=iris$Species, nresponse=1)
+     plotmo(a$fit, nresponse=1, ylim=c(-1.5,1.5), clip=FALSE, trace=-1)
+     plotmo(a$fit, nresponse=2, ylim=c(-1.5,1.5), clip=FALSE, trace=-1)
+ }
> a <- update(a, nk=3) # not on man page
> printh(a)
===a 
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE, 
    nk = 3)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 94.38 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> printh(summary(a$fit))
===summary(a$fit) 
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE, nk=3)

                      Theta1      Theta2
(Intercept)        -1.300791 -0.74367728
h(1.2-Petal.Width)  2.601323  0.03896856
h(Petal.Width-1.2)  1.351182  2.22366217

Selected 3 of 3 terms, and 1 of 4 predictors
Termination condition: Reached nk 3
Importance: Petal.Width, Sepal.Length-unused, Sepal.Width-unused, ...
Number of terms at each degree of interaction: 1 2 (additive model)

             GCV      RSS      GRSq       RSq
Theta1 0.1190355 16.68481 0.8825464 0.8887680
Theta2 0.2430154 34.06267 0.7602140 0.7729156
All    0.3620509 50.74747 0.8213802 0.8308418
> head(etitanic) # pclass and sex are unordered factors
  pclass survived    sex     age sibsp parch
1    1st        1 female 29.0000     0     0
2    1st        1   male  0.9167     1     2
3    1st        0 female  2.0000     1     2
4    1st        0   male 30.0000     1     2
5    1st        0 female 25.0000     1     2
6    1st        1   male 48.0000     0     0
> earth(pclass ~ ., data=etitanic, trace=2)
x[1046,5] with colnames survived sexmale age sibsp parch
y[1046,3] with colnames 1st 2nd 3rd

Forward pass: minspan 6 endspan 9    x[1046,5] 40.9 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0910 0.0980      0.09797    3          age          26  2   3         1 
4      0.1525 0.1622       0.0642    1     survived           0< 4             1 
6      0.1598 0.1758      0.01368    4        sibsp           1  5   6         1 
8      0.1670 0.1891       0.0133    5        parch           2  7   8         1 
10     0.1664 0.1918     0.002617    3          age          21  9             1 
12     0.1656 0.1941     0.002331    3          age          57  10            1 
14     0.1630 0.1947    0.0006471    3          age        55.5  11            1 reject (small DeltaRSq)

RSq changed by less than 0.001 at 13 terms, 10 terms used (DeltaRSq 0.00065)
After forward pass GRSq 0.163 RSq 0.195
Forward pass complete: 13 terms, 10 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 2 nprune null: selected 8 of 10 terms, and 4 of 5 preds
After pruning pass GRSq 0.167 RSq 0.189
Selected 8 of 10 terms, and 4 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 10 terms
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

          GCV      RSS         GRSq        RSq
1st 0.1483414 150.7467  0.251448718 0.27137124
2nd 0.1885520 191.6094 -0.004971341 0.02177575
3rd 0.1927692 195.8949  0.229032722 0.24955184
All 0.5296626 538.2511  0.166969402 0.18914032
> 
> cat("--- format.earth.Rd ----------------------\n")
--- format.earth.Rd ----------------------
> as.func <- function( # convert expression string to func
+                object, digits = 8, use.names = TRUE, ...)
+   eval(parse(text=paste(
+     "function(x)\n",
+     "{\n",
+     "if(is.vector(x))\n",
+     "  x <- matrix(x, nrow = 1, ncol = length(x))\n",
+     "with(as.data.frame(x),\n",
+     format(object, digits = digits, use.names = use.names, style = "p", ...),
+     ")\n",
+     "}\n", sep = "")))
> a <- earth(Volume ~ ., data = trees)
> my.func <- as.func(a, use.names = FALSE)
> printh(my.func(c(10,80)))     # yields 17.76888
===my.func(c(10, 80)) [1] 17.60359
> printh(predict(a, c(10,80)))  # yields 17.76888, but is slower
===predict(a, c(10, 80))        Volume
[1,] 17.60359
> example(format.earth)

frmt.r> earth.mod <- earth(Volume ~ ., data = trees)

frmt.r> cat(format(earth.mod))
  29.05995
  -  3.419806 * h(14.2-Girth)
  +  6.229514 * h(Girth-14.2)
  + 0.5813644 * h(Height-75)

frmt.r> # yields:
frmt.r> #    37.9
frmt.r> #    -  3.92 * h(16-Girth)
frmt.r> #    +   7.4 * h(Girth-16)
frmt.r> #    + 0.484 * h(Height-75)
frmt.r> 
frmt.r> cat(format(earth.mod, style="pmax")) # default formatting style prior to earth version 1.4
  29.05995
  -  3.419806 * pmax(0,   14.2 -  Girth) 
  +  6.229514 * pmax(0,  Girth -   14.2) 
  + 0.5813644 * pmax(0, Height -     75) 

frmt.r> # yields:
frmt.r> #    37.9
frmt.r> #    -  3.92 * pmax(0,     16 -  Girth)
frmt.r> #    +   7.4 * pmax(0,  Girth -     16)
frmt.r> #    + 0.484 * pmax(0, Height -     75)
frmt.r> 
frmt.r> cat(format(earth.mod, style="C"))
29.05995
  -  3.419806 * max(0, 14.2 - x[0]) 
  +  6.229514 * max(0, x[0] - 14.2) 
  + 0.5813644 * max(0, x[1] -   75) 

frmt.r> # yields (note zero based indexing):
frmt.r> #  37.927
frmt.r> #    -  3.9187 * max(0,   16 - x[0])
frmt.r> #    +  7.4011 * max(0, x[0] -   16)
frmt.r> #    + 0.48411 * max(0, x[1] -   75)
frmt.r> 
frmt.r> cat(format(earth.mod, style="bf"))
  29.05995
  -  3.419806 * bf1
  +  6.229514 * bf2
  + 0.5813644 * bf3

   bf1  h(14.2-Girth)
   bf2  h(Girth-14.2)
   bf3  h(Height-75)

frmt.r> # yields:
frmt.r> #    37.9
frmt.r> #    -  3.92 * bf1
frmt.r> #    +   7.4 * bf2
frmt.r> #    + 0.484 * bf3
frmt.r> #
frmt.r> #     bf1  h(16-Girth)
frmt.r> #     bf2  h(Girth-16)
frmt.r> #     bf3  h(Height-75)
frmt.r> 
frmt.r> 
frmt.r> 
> a <- earth(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.earth
  29.05995
  -  3.419806 * h(14.2-Girth)
  +  6.229514 * h(Girth-14.2)
  + 0.5813644 * h(Height-75)
> cat(format(a, digits=4))
  29.06
  -   3.42 * h(14.2-Girth)
  +   6.23 * h(Girth-14.2)
  + 0.5814 * h(Height-75)
> # cat(format(a, use.names=FALSE))
> cat(format(a, style="pmax"))
  29.05995
  -  3.419806 * pmax(0,   14.2 -  Girth) 
  +  6.229514 * pmax(0,  Girth -   14.2) 
  + 0.5813644 * pmax(0, Height -     75) 
> cat(format(a, style="max"))
  29.05995
  -  3.419806 * max(0,   14.2 -  Girth) 
  +  6.229514 * max(0,  Girth -   14.2) 
  + 0.5813644 * max(0, Height -     75) 
> cat(format(a, style="bf"))
  29.05995
  -  3.419806 * bf1
  +  6.229514 * bf2
  + 0.5813644 * bf3

   bf1  h(14.2-Girth)
   bf2  h(Girth-14.2)
   bf3  h(Height-75)
> cat(format(a, use.names=FALSE, style="p"))
  29.05995
  -  3.419806 * pmax(0,  14.2 - x[,1]) 
  +  6.229514 * pmax(0, x[,1] -  14.2) 
  + 0.5813644 * pmax(0, x[,2] -    75) 
> cat(format(a, use.names=FALSE, style="m"))
  29.05995
  -  3.419806 * max(0,  14.2 - x[,1]) 
  +  6.229514 * max(0, x[,1] -  14.2) 
  + 0.5813644 * max(0, x[,2] -    75) 
> a <- earth(Volume ~ Girth*Height, data = trees, pmethod="none")
> cat(format(a))
  25.24205
  -  0.8905681 * h(13.3-Girth)
  +   2.590203 * h(Girth-13.3)
  - 0.02669905 * h(972.7-Girth:Height)
  + 0.03883467 * h(Girth:Height-972.7)
> cat(format(a, colon.char="*"))
  25.24205
  -  0.8905681 * h(13.3-Girth)
  +   2.590203 * h(Girth-13.3)
  - 0.02669905 * h(972.7-Girth*Height)
  + 0.03883467 * h(Girth*Height-972.7)
> a <- lm(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.lm
  -57.98766
  +  4.708161 * Girth
  + 0.3392512 * Height
> cat(format(a, digits=4))
  -57.99
  +  4.708 * Girth
  + 0.3393 * Height
> cat(format(a, use.names=FALSE))
  -57.98766
  +  4.708161 * x[,1]
  + 0.3392512 * x[,2]
> cat(format(a, style="p"))
  -57.98766
  +  4.708161 * Girth
  + 0.3392512 * Height
> cat(format(a, use.names=FALSE, style="p"))
  -57.98766
  +  4.708161 * x[,1]
  + 0.3392512 * x[,2]
> a <- lm(Volume ~ Girth*Height, data = trees)
> cat(format(a))
  69.39632
  -  5.855848 * Girth
  -  1.297083 * Height
  + 0.1346544 * Girth:Height
> cat(format(a, colon.char="*"))
  69.39632
  -  5.855848 * Girth
  -  1.297083 * Height
  + 0.1346544 * Girth*Height
> cat("--- mars.to.earth.Rd ----------------------\n")
--- mars.to.earth.Rd ----------------------
> example(mars.to.earth)

mrs.t.> if(require(mda)) {
mrs.t.+     mars.mod <- mars(trees[,-3], trees[,3])
mrs.t.+     earth.mod <- mars.to.earth(mars.mod)
mrs.t.+     # the standard earth functions can now be used
mrs.t.+     # note the reconstructed call in the summary
mrs.t.+     summary(earth.mod, digits = 2)
mrs.t.+ }
Converted mars(x=trees[,-3], y=trees[,3])

to earth(x=trees[,-3], y=trees[,3])

Call: earth(x=trees[,-3], y=trees[,3])

              coefficients
(Intercept)           26.3
h(13.8-Girth)         -3.2
h(Girth-13.8)          6.1
h(11.4-Girth)          0.5

Selected 4 of 8 terms, and 2 of 2 predictors
Termination condition: Unknown
Importance: object has no prune.terms, call update() on the model to fix that
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 10    RSS 190    GRSq 0.96    RSq 0.98
> library(mda)
> a <- mars(trees[,-3], trees[,3])
> a <- mars.to.earth(a)
Converted mars(x=trees[,-3], y=trees[,3])

to earth(x=trees[,-3], y=trees[,3])

> summary(a, digits = 2)
Call: earth(x=trees[,-3], y=trees[,3])

              coefficients
(Intercept)           26.3
h(13.8-Girth)         -3.2
h(Girth-13.8)          6.1
h(11.4-Girth)          0.5

Selected 4 of 8 terms, and 2 of 2 predictors
Termination condition: Unknown
Importance: object has no prune.terms, call update() on the model to fix that
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 10    RSS 190    GRSq 0.96    RSq 0.98
> printh(summary(a, digits=2))
===summary(a, digits = 2) 
Call: earth(x=trees[,-3], y=trees[,3])

              coefficients
(Intercept)           26.3
h(13.8-Girth)         -3.2
h(Girth-13.8)          6.1
h(11.4-Girth)          0.5

Selected 4 of 8 terms, and 2 of 2 predictors
Termination condition: Unknown
Importance: object has no prune.terms, call update() on the model to fix that
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 10    RSS 190    GRSq 0.96    RSq 0.98
> printh(summary(a, digits=2, style="bf"))
===summary(a, digits = 2, style = "bf") 
Call: earth(x=trees[,-3], y=trees[,3])

y =
  26
  - 3.2 * bf1
  + 6.1 * bf2
  + 0.5 * bf3

   bf1  h(13.8-Girth)
   bf2  h(Girth-13.8)
   bf3  h(11.4-Girth)

Selected 4 of 8 terms, and 2 of 2 predictors
Termination condition: Unknown
Importance: object has no prune.terms, call update() on the model to fix that
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 10    RSS 190    GRSq 0.96    RSq 0.98
> cat("--- plot.earth.models.Rd ----------------------\n")
--- plot.earth.models.Rd ----------------------
> if (PLOT)
+     example(plot.earth.models)

plt.r.> data(ozone1)

plt.r.> a1 <- earth(O3 ~ .,          data = ozone1, degree = 2)

plt.r.> a2 <- earth(O3 ~ .-wind,     data = ozone1, degree = 2)

plt.r.> a3 <- earth(O3 ~ .-humidity, data = ozone1, degree = 2)

plt.r.> plot.earth.models(list(a1,a2,a3), ylim=c(.65,.85))
> cat("--- plot.earth.Rd ----------------------\n")
--- plot.earth.Rd ----------------------
> if (PLOT) {
+     data(etitanic)
+     a <- earth(survived ~ ., data=etitanic, glm=list(family=binomial))
+     par(mfrow=c(2,2))
+     plot(a$glm.list[[1]], caption="a$glm.list[[1]]")
+     example(plot.earth)
+ }

plt.rt> data(ozone1)

plt.rt> earth.mod <- earth(O3 ~ ., data = ozone1, degree = 2)

plt.rt> plot(earth.mod)
> cat("--- predict.earth.Rd ----------------------\n")
--- predict.earth.Rd ----------------------
> example(predict.earth)

prdct.> data(trees)

prdct.> earth.mod <- earth(Volume ~ ., data = trees)

prdct.> predict(earth.mod)           # same as earth.mod$fitted.values
         Volume
 [1,]  8.883097
 [2,]  9.909039
 [3,] 10.593000
 [4,] 16.406671
 [5,] 20.578818
 [6,] 22.083528
 [7,] 18.116574
 [8,] 18.116574
 [9,] 21.365376
[10,] 18.800535
[11,] 21.467973
[12,] 20.065861
[13,] 20.065861
[14,] 20.510438
[15,] 21.536380
[16,] 24.614206
[17,] 30.427849
[18,] 32.377136
[19,] 27.350050
[20,] 27.692031
[21,] 30.120085
[22,] 31.966775
[23,] 30.928808
[24,] 40.273079
[25,] 43.304662
[26,] 51.859634
[27,] 53.686902
[28,] 55.015978
[29,] 55.638930
[30,] 55.638930
[31,] 75.905218

prdct.> predict(earth.mod, c(10,80)) # yields 16.8
       Volume
[1,] 17.60359
> cat("--- update.earth.Rd ----------------------\n")
--- update.earth.Rd ----------------------
> example(update.earth)

updt.r> data(ozone1)

updt.r> (earth.mod <- earth(O3 ~ ., data = ozone1, degree = 2))
Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085

updt.r> update(earth.mod, formula = O3 ~ . - temp) # requires forward pass and pruning
Selected 15 of 21 terms, and 8 of 8 predictors
Termination condition: Reached nk 21
Importance: ibt, humidity, doy, vh, dpg, vis, ibh, wind
Number of terms at each degree of interaction: 1 9 5
GCV 13.01626    RSS 3409.313    GRSq 0.7978077    RSq 0.8385391

updt.r> update(earth.mod, nprune = 8)              # requires only pruning
Selected 8 of 21 terms, and 6 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibh-unused, ibt, doy, dpg, vis, vh-unused, ...
Number of terms at each degree of interaction: 1 5 2
GCV 14.70227    RSS 4323.013    GRSq 0.7716175    RSq 0.7952674

updt.r> update(earth.mod, penalty=1, ponly=TRUE)   # pruning pass only with a new penalty
Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 12.48074    RSS 3693.401    GRSq 0.8061264    RSq 0.825085
> 
> cat("--- evimp.Rd -----------------------------\n")
--- evimp.Rd -----------------------------
> 
> par(mfrow=c(2,2))
> cat('before calling evimp par("mar", "cex"):\n')
before calling evimp par("mar", "cex"):
> print(par("mar", "cex"))
$mar
[1] 5.1 4.1 4.1 2.1

$cex
[1] 0.83

> 
> example(evimp)

evimp> data(ozone1)

evimp> earth.mod <- earth(O3 ~ ., data=ozone1, degree=2)

evimp> ev <- evimp(earth.mod, trim=FALSE)

evimp> plot(ev)

evimp> print(ev)
         nsubsets   gcv    rss
temp           11 100.0  100.0
humidity        9  35.7   38.9
ibt             7  31.6   34.0
doy             7  31.6   34.0
ibh             6  33.4>  36.0>
dpg             6  27.5   29.8
vis             5  21.4   24.1
wind            2  10.3   12.6
vh              1   5.3    7.7
> 
> cat("--- plot.evimp.Rd ------------------------\n")
--- plot.evimp.Rd ------------------------
> 
> example(plot.evimp)

plt.vm> data(ozone1)

plt.vm> earth.mod <- earth(O3 ~ ., data=ozone1, degree=2)

plt.vm> ev <- evimp(earth.mod)

plt.vm> plot(ev)

plt.vm> print(ev)
         nsubsets   gcv    rss
temp           11 100.0  100.0
humidity        9  35.7   38.9
ibt             7  31.6   34.0
doy             7  31.6   34.0
ibh             6  33.4>  36.0>
dpg             6  27.5   29.8
vis             5  21.4   24.1
wind            2  10.3   12.6
vh              1   5.3    7.7
> 
> rownames(ev)[4] <- "a_long_variable_name"
> 
> plot(ev, main="plot.evimp with various options",
+     cex.var = .8,
+     type.nsubsets = "p",
+     col.nsubsets = "red",
+     lty.nsubsets = 2, # ignored because type.nsubsets="p"
+     type.gcv = "l",
+     col.gcv = "green",
+     lty.gcv = 3,
+     type.rss = "b",
+     col.rss = "blue",
+     lty.rss = 4,
+     cex.legend = .8,
+     x.legend = "topright",
+     rh.col = "pink")
> 
> a <- earth(Volume ~ Girth, data = trees)
> plot(evimp(a), main="plot.evimp with single var in model")
> 
> cat('after calling evimp par("mar", "cex"):\n')
after calling evimp par("mar", "cex"):
> print(par("mar", "cex"))
$mar
[1] 5.1 4.1 4.1 2.1

$cex
[1] 0.83

> par(mfrow=c(1,1))
> 
> cat("--- test predict.earth -------------------\n")
--- test predict.earth -------------------
> 
> a <- earth(Volume ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
===predict(a, c(10, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
  Girth Height
1    10     80
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
  Girth Height
1    10     80
predict.earth: bx[1,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
predict.earth: returning earth predictions 
       Volume
[1,] 17.60359
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
===predict(a, c(10, 10, 80, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    10     80
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    10     80
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           4.2            5
predict.earth: returning earth predictions 

       Volume
[1,] 17.60359
[2,] 17.60359
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
===predict(a, c(10, 11, 80, 81), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    11     81
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    11     81
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           3.2            6
predict.earth: returning earth predictions 

       Volume
[1,] 17.60359
[2,] 21.60476
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

        Volume
[1,]  8.883097
[2,]  9.909039
[3,] 10.593000
[4,] 16.406671
[5,] 20.578818
[6,] 22.083528
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
===predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
  Girth Height
1    10     12
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
  Girth Height
1    10     12
predict.earth: bx[1,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            0
predict.earth: returning earth predictions 
       Volume
[1,] 14.69677
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
===predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),     trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     12
2    10     12
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     12
2    10     12
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            0
2           1             0           4.2            0
predict.earth: returning earth predictions 

       Volume
[1,] 14.69677
[2,] 14.69677
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume
[1,] 17.60359
[2,] 30.25685
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume
[1,] 17.60359
[2,] 30.25685
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume
[1,] 17.60359
[2,] 30.25685
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6a predict(a, xpredict with reversed columns and colnames)\n")
6a predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume
[1,] 17.60359
[2,] 30.25685
> xpredict2 <- cbind(xpredict[,1], xpredict[,2]) # nameless matrix
> cat("6b predict(a, xpredict2)\n")
6b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1))
===predict(a, xpredict2, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    80     10
2    90     12
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    80     10
2    90     12
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1          65.8             0            0
2           1          75.8             0            0
predict.earth: returning earth predictions 

       Volume
[1,] 438.9620
[2,] 501.2571
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, trees$Volume)
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

     trees$Volume
[1,]     8.883097
[2,]     9.909039
[3,]    10.593000
[4,]    16.406671
[5,]    20.578818
[6,]    22.083528
> cat("7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

     trees$Volume
[1,]     17.60359
[2,]     30.25685
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

     trees$Volume
[1,]     17.60359
[2,]     30.25685
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

     trees$Volume
[1,]     17.60359
[2,]     30.25685
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("none.such", "joe")
> cat("10a predict(a, xpredict2)\n")
10a predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
===predict(a, xpredict2, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: none.such joe
    New names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 
     trees$Volume
[1,]     17.60359
[2,]     30.25685
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("Height", "Girth") # reversed
> cat("10b predict(a, xpredict2)\n")
10b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
===predict(a, xpredict2, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    80     10
2    90     12
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1          65.8             0            0
2           1          75.8             0            0
predict.earth: returning earth predictions 
     trees$Volume
[1,]     438.9620
[2,]     501.2571
> 
> cat("--- test predict.earth with multiple response models-------------------\n")
--- test predict.earth with multiple response models-------------------
> 
> a <- earth(cbind(Volume, Volume + 100) ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
===predict(a, c(10, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
  Girth Height
1    10     80
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
  Girth Height
1    10     80
predict.earth: bx[1,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
predict.earth: returning earth predictions 
       Volume cbind(Volume,Volume+100)2
[1,] 17.60359                  117.6036
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
===predict(a, c(10, 10, 80, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    10     80
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    10     80
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           4.2            5
predict.earth: returning earth predictions 

       Volume cbind(Volume,Volume+100)2
[1,] 17.60359                  117.6036
[2,] 17.60359                  117.6036
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
===predict(a, c(10, 11, 80, 81), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    11     81
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    11     81
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           3.2            6
predict.earth: returning earth predictions 

       Volume cbind(Volume,Volume+100)2
[1,] 17.60359                  117.6036
[2,] 21.60476                  121.6048
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

        Volume cbind(Volume,Volume+100)2
[1,]  8.883097                  108.8831
[2,]  9.909039                  109.9090
[3,] 10.593000                  110.5930
[4,] 16.406671                  116.4067
[5,] 20.578818                  120.5788
[6,] 22.083528                  122.0835
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
===predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[1,2]:
  Girth Height
1    10     12
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,2]:
  Girth Height
1    10     12
predict.earth: bx[1,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            0
predict.earth: returning earth predictions 
       Volume cbind(Volume,Volume+100)2
[1,] 14.69677                  114.6968
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
===predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),     trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     12
2    10     12
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     12
2    10     12
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            0
2           1             0           4.2            0
predict.earth: returning earth predictions 

       Volume cbind(Volume,Volume+100)2
[1,] 14.69677                  114.6968
[2,] 14.69677                  114.6968
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume cbind(Volume,Volume+100)2
[1,] 17.60359                  117.6036
[2,] 30.25685                  130.2568
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume cbind(Volume,Volume+100)2
[1,] 17.60359                  117.6036
[2,] 30.25685                  130.2568
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume cbind(Volume,Volume+100)2
[1,] 17.60359                  117.6036
[2,] 30.25685                  130.2568
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6 predict(a, xpredict with reversed columns and colnames)\n")
6 predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

       Volume cbind(Volume,Volume+100)2
[1,] 17.60359                  117.6036
[2,] 30.25685                  130.2568
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, cbind(trees$Volume, trees$Volume+100))
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

            y1       y2
[1,]  8.883097 108.8831
[2,]  9.909039 109.9090
[3,] 10.593000 110.5930
[4,] 16.406671 116.4067
[5,] 20.578818 120.5788
[6,] 22.083528 122.0835
> cat("7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

           y1       y2
[1,] 17.60359 117.6036
[2,] 30.25685 130.2568
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

           y1       y2
[1,] 17.60359 117.6036
[2,] 30.25685 130.2568
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 

           y1       y2
[1,] 17.60359 117.6036
[2,] 30.25685 130.2568
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("10 predict(a, xpredict)\n")
10 predict(a, xpredict)
> printh(predict(a, xpredict, trace=1), expect.warning=TRUE)
===predict(a, xpredict, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x[2,2]:
  Girth Height
1    10     80
2    12     90
predict.earth: bx[2,4]:
  (Intercept) h(Girth-14.2) h(14.2-Girth) h(Height-75)
1           1             0           4.2            5
2           1             0           2.2           15
predict.earth: returning earth predictions 
           y1       y2
[1,] 17.60359 117.6036
[2,] 30.25685 130.2568
> 
> cat("--- earth.predict with NAs, with formula interface ---\n")
--- earth.predict with NAs, with formula interface ---
> 
> predict.with.message <- function(message, earth.model, newdata) {
+     cat("predict.earth  ", message, ":\n", sep="")
+     print(predict(earth.model, newdata=newdata, trace=1))
+     cat("\n")
+ }
> 
> iris.earth <- earth(Petal.Width ~ Sepal.Length + Sepal.Width + Petal.Length, data=iris)
> x <- iris[1,]
> predict.with.message("formula interface and vector", iris.earth, newdata=x)
predict.earth  formula interface and vector:
get.earth.x from model.matrix.earth from predict.earth: x[1,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
predict.earth: bx[1,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                  0                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2562505

> x$Sepal.Width <- as.numeric(NA)
> predict.with.message("formula interface and vector with NA", iris.earth, newdata=x)
predict.earth  formula interface and vector with NA:
get.earth.x from model.matrix.earth from predict.earth: x[1,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1          NA          1.4         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  Sepal.Length Sepal.Width Petal.Length
1          5.1          NA          1.4
predict.earth: bx[1,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                 NA                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]          NA

> x <- iris[1,]
> x$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("formula interface and vector with NA in unused variable", iris.earth, newdata=x)
predict.earth  formula interface and vector with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x[1,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4          NA  setosa
  Species is a factor with levels: setosa versicolor virginica
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[1,3]:
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
predict.earth: bx[1,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                  0                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2562505

> 
> x <- iris[1:3,]
> predict.with.message("formula interface and matrix", iris.earth, newdata=x)
predict.earth  formula interface and matrix:
get.earth.x from model.matrix.earth from predict.earth: x[3,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[3,3]:
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
2          4.9         3.0          1.4
3          4.7         3.2          1.3
predict.earth: bx[3,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                0.0                   0
2           1               4.6                0.5                   0
3           1               4.7                0.3                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
2                 2.0                   0                   0
3                 2.2                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
2                   0                   0
3                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2562505
[2,]   0.1733787
[3,]   0.1880121

> x[2,]$Sepal.Width <- as.numeric(NA)
> predict.with.message("formula interface and matrix with NA", iris.earth, newdata=x)
predict.earth  formula interface and matrix with NA:
get.earth.x from model.matrix.earth from predict.earth: x[3,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9          NA          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[3,3]:
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
2          4.9          NA          1.4
3          4.7         3.2          1.3
predict.earth: bx[3,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                0.0                   0
2           1               4.6                 NA                   0
3           1               4.7                0.3                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
2                 2.0                   0                   0
3                 2.2                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
2                   0                   0
3                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2562505
[2,]          NA
[3,]   0.1880121

> x <- iris[1:3,]
> x[2,]$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("formula interface and matrix with NA in unused variable", iris.earth, newdata=x)
predict.earth  formula interface and matrix with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x[3,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4          NA  setosa
3          4.7         3.2          1.3         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
get.earth.x from model.matrix.earth from predict.earth: after call to model.frame: data[3,3]:
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
2          4.9         3.0          1.4
3          4.7         3.2          1.3
predict.earth: bx[3,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                0.0                   0
2           1               4.6                0.5                   0
3           1               4.7                0.3                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
2                 2.0                   0                   0
3                 2.2                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
2                   0                   0
3                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2562505
[2,]   0.1733787
[3,]   0.1880121

> 
> cat("--- earth.predict with NAs, with matrix interface ---\n")
--- earth.predict with NAs, with matrix interface ---
> 
> iris.earth <- earth(iris[,1:3], iris[,4])
> x <- iris[1,]
> predict.with.message("default interface and vector", iris.earth, newdata=x)
predict.earth  default interface and vector:
get.earth.x from model.matrix.earth from predict.earth: x[1,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
predict.earth: bx[1,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                  0                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2562505

> x$Sepal.Width <- as.numeric(NA)
> predict.with.message("default interface and vector with NA", iris.earth, newdata=x)
predict.earth  default interface and vector with NA:
get.earth.x from model.matrix.earth from predict.earth: x[1,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1          NA          1.4         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
predict.earth: bx[1,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                 NA                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
predict.earth: returning earth predictions 
     iris[,4]
[1,]       NA

> x <- iris[1,]
> x$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("default interface and vector with NA in unused variable", iris.earth, newdata=x)
predict.earth  default interface and vector with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x[1,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4          NA  setosa
  Species is a factor with levels: setosa versicolor virginica
predict.earth: bx[1,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                  0                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2562505

> 
> x <- iris[1:3,]
> predict.with.message("default interface and matrix", iris.earth, newdata=x)
predict.earth  default interface and matrix:
get.earth.x from model.matrix.earth from predict.earth: x[3,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
predict.earth: bx[3,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                0.0                   0
2           1               4.6                0.5                   0
3           1               4.7                0.3                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
2                 2.0                   0                   0
3                 2.2                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
2                   0                   0
3                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2562505
[2,] 0.1733787
[3,] 0.1880121

> x[2,]$Sepal.Width <- as.numeric(NA)
> predict.with.message("default interface and matrix with NA", iris.earth, newdata=x)
predict.earth  default interface and matrix with NA:
get.earth.x from model.matrix.earth from predict.earth: x[3,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9          NA          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
predict.earth: bx[3,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                0.0                   0
2           1               4.6                 NA                   0
3           1               4.7                0.3                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
2                 2.0                   0                   0
3                 2.2                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
2                   0                   0
3                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2562505
[2,]        NA
[3,] 0.1880121

> x <- iris[1:3,]
> x[2,]$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("default interface and matrix with NA in unused variable", iris.earth, newdata=x)
predict.earth  default interface and matrix with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x[3,5]:
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4          NA  setosa
3          4.7         3.2          1.3         0.2  setosa
  Species is a factor with levels: setosa versicolor virginica
predict.earth: bx[3,9]:
  (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
1           1               4.6                0.0                   0
2           1               4.6                0.5                   0
3           1               4.7                0.3                   0
  h(6.9-Sepal.Length) h(Sepal.Length-7.2) h(Petal.Length-5.3)
1                 1.8                   0                   0
2                 2.0                   0                   0
3                 2.2                   0                   0
  h(Petal.Length-4.7) h(Petal.Length-5.5)
1                   0                   0
2                   0                   0
3                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2562505
[2,] 0.1733787
[3,] 0.1880121

> 
> cat("--- test reorder.earth ----------------------\n")
--- test reorder.earth ----------------------
> a <- earth(O3 ~ ., data = ozone1, degree = 2)
> earth:::reorder.earth(a, decomp = "none")
 [1]  1  2  3  4  5  6  7  8  9 10 11 12
> earth:::reorder.earth(a)   # defaults to decomp = "anova"
 [1]  1  2 10  8  5  4 12  9  3  6  7 11
> a$selected.terms[earth:::reorder.earth(a)]
 [1]  1  2 17 13  9  8 21 14  7 10 11 19
> 
> cat("--- tests with ozone data ----------------------\n")
--- tests with ozone data ----------------------
> 
> ozone.test <- function(itest, sModel, x, y, degree=2, nk=51,
+                     plotit=PLOT, trace=0, smooth.col="red")
+ {
+     fite <- earth(x, y, degree=degree, nk=nk, trace=trace)
+     fitm <- mars(x, y, degree=degree, nk=nk)
+ 
+     cat("itest",
+         sprintf("%-3d", itest),
+         sprintf("%-32s", sModel),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk),
+         "nTerms",  sprintf("%-2d", sum(fite$selected.terms != 0)),
+         "of", sprintf("%-3d", nrow(fite$dirs)),
+         "GRSq", sprintf("%4.2g", fite$grsq),
+         "GRSq ratio", fite$grsq/mars.to.earth(fitm)$grsq,
+         "\n")
+     caption <- paste("itest ", itest, ": ", sModel, " degree=", degree, " nk=", nk, sep="")
+     printh(summary(fite))
+     printh(summary(fite, style="bf"))
+     if(plotit) {
+         fitme <- mars.to.earth(fitm)
+         plotmo(fite, caption=paste("EARTH", caption), trace=-1)
+         plotmo(fitme, caption=paste("MARS", caption), trace=-1)
+         plot(fite, npoints=500, smooth.col=smooth.col, caption=paste("EARTH", caption), info=TRUE)
+         plot(fitme, caption=paste("MARS", caption), info=TRUE)
+         fitme <- update(fitme)  # generate model selection data
+         plot.earth.models(list(fite, fitme), caption=paste(itest, ": Compare earth to mars ", sModel, sep=""))
+     }
+     fite
+ }
> data(ozone1)
> attach(ozone1)
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- 1; ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=1, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

itest 1   doy ~ wind+humidity+temp+vis     degree 1  nk 21  nTerms 7  of 15  GRSq  0.2 GRSq ratio 1.209183 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

               coefficients
(Intercept)       68.211814
h(3-wind)         58.202580
h(28-humidity)     8.904095
h(humidity-28)     1.514544
h(temp-45)        45.704313
h(temp-48)      -118.146795
h(temp-49)        73.558997

Selected 7 of 15 terms, and 3 of 4 predictors
Termination condition: Reached nk 21
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 8737.327    RSS 2660622    GRSq 0.2004306    RSq 0.2576942
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  68.21181
  +   58.20258 * bf1
  +   8.904095 * bf2
  +   1.514544 * bf3
  +   45.70431 * bf4
  -   118.1468 * bf5
  +     73.559 * bf6

   bf1  h(3-wind)
   bf2  h(28-humidity)
   bf3  h(humidity-28)
   bf4  h(temp-45)
   bf5  h(temp-48)
   bf6  h(temp-49)

Selected 7 of 15 terms, and 3 of 4 predictors
Termination condition: Reached nk 21
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 8737.327    RSS 2660622    GRSq 0.2004306    RSq 0.2576942
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

Selected 7 of 15 terms, and 3 of 4 predictors
Termination condition: Reached nk 21
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 8737.327    RSS 2660622    GRSq 0.2004306    RSq 0.2576942
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; a91 <- ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

itest 2   doy ~ wind+humidity+temp+vis     degree 2  nk 21  nTerms 10 of 20  GRSq 0.17 GRSq ratio 0.9365432 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                   130.291709
h(3-wind)                      56.324090
h(28-humidity)                 15.639545
h(humidity-28)                  2.108507
h(49-temp)                     -8.918573
h(wind-3) * h(44-temp)          1.473267
h(23-humidity) * h(temp-49)    -4.977131
h(28-humidity) * h(temp-53)     1.856655
h(humidity-28) * h(vis-200)    -0.022851
h(temp-49) * h(vis-120)         0.024712

Selected 10 of 20 terms, and 4 of 4 predictors
Termination condition: Reached nk 21
Importance: wind, temp, humidity, vis
Number of terms at each degree of interaction: 1 4 5
GCV 9046.094    RSS 2575183    GRSq 0.1721748    RSq 0.2815314
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  130.2917
  +    56.32409 * bf1
  +    15.63955 * bf2
  +    2.108507 * bf3
  -    8.918573 * bf4
  +    1.473267 * bf5 * bf6
  -    4.977131 * bf7 * bf8
  +    1.856655 * bf2 * bf9
  -  0.02285106 * bf3 * bf10
  +  0.02471206 * bf8 * bf11

   bf1  h(3-wind)
   bf2  h(28-humidity)
   bf3  h(humidity-28)
   bf4  h(49-temp)
   bf5  h(wind-3)
   bf6  h(44-temp)
   bf7  h(23-humidity)
   bf8  h(temp-49)
   bf9  h(temp-53)
  bf10  h(vis-200)
  bf11  h(vis-120)

Selected 10 of 20 terms, and 4 of 4 predictors
Termination condition: Reached nk 21
Importance: wind, temp, humidity, vis
Number of terms at each degree of interaction: 1 4 5
GCV 9046.094    RSS 2575183    GRSq 0.1721748    RSq 0.2815314
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

> 
> # this is a basic test of RegressAndFix (because this generates lin dep bx cols)
> 
> cat("--Expect warning from mda::mars: NAs introduced by coercion\n") # why do we get a warning?
--Expect warning from mda::mars: NAs introduced by coercion
> x.global <- cbind(wind, exp(humidity))
> y <- doy
> # smooth.col is 0 else get loess errors
> itest <- itest+1; ozone.test(itest, "doy ~ wind+exp(humidity)", x.global, y, degree=1, nk=21, smooth.col=0)
Warning in storage.mode(tagx) <- "integer" :
  NAs introduced by coercion to integer range
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

itest 3   doy ~ wind+exp(humidity)         degree 1  nk 21  nTerms 3  of 7   GRSq  0.1 GRSq ratio 1.318534 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

            coefficients
(Intercept)    202.17924
h(3-wind)       50.04004
h(wind-9)      -61.15513

Selected 3 of 7 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 7 terms
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.564    RSS 3143644    GRSq 0.1012101    RSq 0.1229323
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  202.1792
  + 50.04004 * bf1
  - 61.15513 * bf2

   bf1  h(3-wind)
   bf2  h(wind-9)

Selected 3 of 7 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 7 terms
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.564    RSS 3143644    GRSq 0.1012101    RSq 0.1229323
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

Selected 3 of 7 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 7 terms
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.564    RSS 3143644    GRSq 0.1012101    RSq 0.1229323
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~.", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

itest 4   O3~.                             degree 2  nk 21  nTerms 12 of 21  GRSq 0.79 GRSq ratio 1.014924 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  13.21699
  +   0.3726072 * bf1
  -  0.04550995 * bf2
  +  0.02224623 * bf3
  -   0.1223029 * bf4
  -  0.02402354 * bf5
  -  0.01044957 * bf6 * bf1
  -  0.01808982 * bf7 * bf3
  -  0.02227539 * bf8 * bf1
  -  0.01682493 * bf1 * bf9
  + 0.004123235 * bf1 * bf10
  - 0.000102163 * bf11 * bf12

   bf1  h(temp-58)
   bf2  h(194-ibt)
   bf3  h(200-vis)
   bf4  h(96-doy)
   bf5  h(doy-96)
   bf6  h(5730-vh)
   bf7  h(wind-7)
   bf8  h(55-humidity)
   bf9  h(dpg-52)
  bf10  h(52-dpg)
  bf11  h(1105-ibh)
  bf12  h(21-dpg)

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~., nk=51", x.global, y, degree=2, nk=51)
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

itest 5   O3~., nk=51                      degree 2  nk 51  nTerms 25 of 46  GRSq 0.81 GRSq ratio 1.006346 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                    68.254338
h(temp-58)                      0.361808
h(10-dpg)                      -0.037457
h(dpg-10)                      -0.043446
h(ibt-281)                      0.276811
h(vis-17)                      -0.293855
h(200-vis)                     -0.247686
h(vis-200)                      0.321231
h(96-doy)                      -0.111486
h(doy-96)                      -0.023111
h(5730-vh) * h(temp-58)        -0.009559
h(vh-5850) * h(doy-96)          0.000494
h(wind-7) * h(200-vis)         -0.012406
h(55-humidity) * h(temp-58)    -0.018386
h(humidity-55) * h(temp-58)     0.005696
h(temp-71) * h(1105-ibh)        0.000423
h(temp-58) * h(dpg-52)         -0.013575
h(temp-72) * h(doy-96)         -0.003615
h(1105-ibh) * h(21-dpg)        -0.000100
h(ibt-194) * h(vis-80)          0.014133
h(ibt-194) * h(vis-70)         -0.008274
h(ibt-194) * h(vis-100)        -0.006492
h(230-ibt) * h(vis-17)         -0.000179
h(260-ibt) * h(200-vis)        -0.000331
h(ibt-260) * h(200-vis)        -0.001086

Selected 25 of 46 terms, and 9 of 9 predictors
Termination condition: Reached nk 51
Importance: temp, ibt, vis, doy, ibh, dpg, humidity, wind, vh
Number of terms at each degree of interaction: 1 9 15
GCV 12.35626    RSS 2709.428    GRSq 0.80806    RSq 0.8716848
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  68.25434
  +    0.3618078 * bf1
  -   0.03745668 * bf2
  -   0.04344561 * bf3
  +    0.2768106 * bf4
  -    0.2938554 * bf5
  -    0.2476858 * bf6
  +    0.3212311 * bf7
  -    0.1114864 * bf8
  -   0.02311108 * bf9
  -  0.009559369 * bf10 * bf1
  + 0.0004937219 * bf11 * bf9
  -   0.01240617 * bf12 * bf6
  -   0.01838558 * bf13 * bf1
  +  0.005696166 * bf14 * bf1
  + 0.0004227812 * bf15 * bf16
  -   0.01357508 * bf1 * bf17
  -  0.003615445 * bf18 * bf9
  - 0.0001000355 * bf16 * bf19
  +   0.01413322 * bf20 * bf21
  -  0.008274048 * bf20 * bf22
  -  0.006492333 * bf20 * bf23
  - 0.0001792429 * bf24 * bf5
  - 0.0003309519 * bf25 * bf6
  -  0.001086437 * bf26 * bf6

   bf1  h(temp-58)
   bf2  h(10-dpg)
   bf3  h(dpg-10)
   bf4  h(ibt-281)
   bf5  h(vis-17)
   bf6  h(200-vis)
   bf7  h(vis-200)
   bf8  h(96-doy)
   bf9  h(doy-96)
  bf10  h(5730-vh)
  bf11  h(vh-5850)
  bf12  h(wind-7)
  bf13  h(55-humidity)
  bf14  h(humidity-55)
  bf15  h(temp-71)
  bf16  h(1105-ibh)
  bf17  h(dpg-52)
  bf18  h(temp-72)
  bf19  h(21-dpg)
  bf20  h(ibt-194)
  bf21  h(vis-80)
  bf22  h(vis-70)
  bf23  h(vis-100)
  bf24  h(230-ibt)
  bf25  h(260-ibt)
  bf26  h(ibt-260)

Selected 25 of 46 terms, and 9 of 9 predictors
Termination condition: Reached nk 51
Importance: temp, ibt, vis, doy, ibh, dpg, humidity, wind, vh
Number of terms at each degree of interaction: 1 9 15
GCV 12.35626    RSS 2709.428    GRSq 0.80806    RSq 0.8716848
Converted mars(x=x, y=y, degree=degree, nk=nk)

to earth(x=x, y=y, degree=degree, nk=nk)

Selected 25 of 46 terms, and 9 of 9 predictors
Termination condition: Reached nk 51
Importance: temp, ibt, vis, doy, ibh, dpg, humidity, wind, vh
Number of terms at each degree of interaction: 1 9 15
GCV 12.35626    RSS 2709.428    GRSq 0.80806    RSq 0.8716848
> 
> detach(ozone1)
> 
> cat("--- fast mars -----------------------------------\n")
--- fast mars -----------------------------------
> 
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 0, fast.beta = 1))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 0,     fast.beta = 1) 
Selected 15 of 31 terms, and 9 of 9 predictors
Termination condition: Reached nk 31
Importance: temp, ibt, humidity, doy, dpg, vis, wind, ibh, vh
Number of terms at each degree of interaction: 1 5 9
GCV 13.22659    RSS 3464.405    GRSq 0.7945405    RSq 0.83593
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 0, fast.beta = 0))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 0,     fast.beta = 0) 
Selected 15 of 31 terms, and 9 of 9 predictors
Termination condition: Reached nk 31
Importance: temp, ibt, humidity, doy, dpg, vis, wind, ibh, vh
Number of terms at each degree of interaction: 1 5 9
GCV 13.22659    RSS 3464.405    GRSq 0.7945405    RSq 0.83593
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 1))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 5,     fast.beta = 1) 
Selected 11 of 17 terms, and 7 of 9 predictors
Termination condition: RSq changed by less than 0.001 at 17 terms
Importance: humidity, ibt, doy, temp, dpg, ibh, wind, vh-unused, ...
Number of terms at each degree of interaction: 1 8 2
GCV 14.15189    RSS 3963.216    GRSq 0.780167    RSq 0.8123069
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 0))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 5,     fast.beta = 0) 
Selected 11 of 17 terms, and 6 of 9 predictors
Termination condition: RSq changed by less than 0.001 at 17 terms
Importance: humidity, ibt, doy, ibh, vis, dpg, temp-unused, vh-unused, ...
Number of terms at each degree of interaction: 1 6 4
GCV 13.89191    RSS 3890.408    GRSq 0.7842055    RSq 0.815755
> 
> cat("--- plot.earth and plot.earth.models ------------\n")
--- plot.earth and plot.earth.models ------------
> 
> a <- earth(O3 ~ ., data=ozone1) # formula interface
> 
> if (PLOT)
+     plot(a, caption="plot.earth test 1", col.rsq=3, smooth.col=4, qqline.col="pink",
+          col.vline=1, col.npreds=0, nresiduals=100, cum.grid="grid",
+          grid.col="lightblue", col.sel.grid="lightgreen")
> 
> set.seed(1)
> if (PLOT) {
+     plot(a, caption="plot.earth test 2", which=c(3,4,1), ylim=c(.2,.9),
+          id.n=20, legend.pos=c(10,.6), pch=20, lty.vline=1, cex.legend=1,
+          grid.col="lightblue")
+ 
+     plot(a, caption="plot.earth test 3", which=2, main="test main")
+ }
> 
> a1 <- earth(ozone1[,c(2:4,10)], ozone1[,1])     # x,y interface
> 
> if (PLOT) {
+     plot(a, caption="plot.earth test 4", id.n=1)
+     set.seed(1)
+     plot.earth.models(a, which=1, ylim=c(.4,.8), jitter=.01)
+ 
+     plot.earth.models(a1)
+ 
+     plot.earth.models(list(a, a1), col.cum=c(3,4),  col.grsq=c(1,2), col.rsq=c(3,4),
+          col.npreds=1, col.vline=1, lty.vline=3,
+          legend.pos=c(5,.4), legend.text=c("a", "b", "c"), cex.legend=1.3)
+ }
> 
> cat("--- plot.earth args -----------------------------\n")
--- plot.earth args -----------------------------
> 
> test.plot.earth.args <- function()
+ {
+     caption <- "test earth args"
+     printh(caption)
+ 
+     argtest <- earth(ozone1[,c(2:4,10)], ozone1[,1])
+ 
+     old.par <- par(no.readonly=TRUE)
+     on.exit(par(old.par))
+     par(mfrow=c(2,3))
+     par(cex = 0.8)
+     par(mar = c(3, 3, 3, 0.5)) # small margins and text to pack figs in
+     par(mgp = c(1.6, 0.6, 0))  # flatten axis elements
+     oma <- par("oma") # make space for caption
+     oma[3] <- 2.4
+     par(oma=oma)
+     par(cex.main=1)
+ 
+     plot(argtest, do.par=FALSE, which=1,
+          main="default")
+ 
+     mtext(caption, outer=TRUE, font=2)
+ 
+     plot(argtest, do.par=FALSE, which=1,
+          col.rsq=3, col.grsq=2,
+          col.npreds="blue", grid.col="lightblue",
+          main=sprintf("%s\n%s",
+             "col.rsq=3, col.grsq=2, ",
+             "col.npreds=\"lightblue\", col.sel.grid=\"gray\""))
+ 
+     plot(argtest, do.par=FALSE, which=1,
+          col.vline="pink", legend.pos="topleft",
+          lty.grsq=2, lty.npreds=1, lty.vline=1,
+          main=sprintf("%s\n%s",
+             "col.vline=\"pink\", legend.pos=\"topleft\", ",
+             "lty.grsq=2, lty.npreds=1, lty.vline=1"))
+ 
+     plot(argtest, do.par=FALSE, which=1,
+          legend.pos=NA, col.npreds=0,
+          main="legend.pos=NA, col.npreds=0")
+ 
+     plot(argtest, do.par=FALSE, which=1,
+          legend.pos=0,
+          main="legend.pos=0")
+ }
> test.plot.earth.args()
===caption [1] "test earth args"
> 
> cat("--- test minspan --------------------------------\n")
--- test minspan --------------------------------
> 
> a.minspan2 <- earth(O3 ~ ., data=ozone1, minspan=2)
> printh(summary(a.minspan2))
===summary(a.minspan2) 
Call: earth(formula=O3~., data=ozone1, minspan=2)

               coefficients
(Intercept)       37.206815
h(5740-vh)        -0.020094
h(54-humidity)    -0.130146
h(temp-58)         0.322610
h(1046-ibh)       -0.003655
h(dpg-12)         -0.092232
h(ibt-120)         0.038616
h(vis-17)         -0.372533
h(80-vis)         -0.319300
h(vis-80)          0.365130
h(89-doy)         -0.144947
h(doy-159)        -0.032265

Selected 12 of 19 terms, and 8 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, vh, humidity, dpg, doy, ibh, vis, ibt, wind-unused
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.47406    RSS 4133.834    GRSq 0.7751625    RSq 0.8042266
> 
> a.minspan0 <- earth(O3 ~ ., data=ozone1, minspan=0)
> printh(summary(a.minspan0))
===summary(a.minspan0) 
Call: earth(formula=O3~., data=ozone1, minspan=0)

               coefficients
(Intercept)      14.1595171
h(5860-vh)       -0.0137728
h(wind-3)        -0.3377222
h(54-humidity)   -0.1349547
h(temp-58)        0.2791320
h(1105-ibh)      -0.0033837
h(dpg-10)        -0.0991581
h(ibt-120)        0.0326330
h(150-vis)        0.0231881
h(96-doy)        -0.1105145
h(doy-96)         0.0406468
h(doy-158)       -0.0836732

Selected 12 of 20 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, dpg, doy, vh, ibh, vis, ibt, wind
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.61004    RSS 4172.671    GRSq 0.7730502    RSq 0.8023874
> 
> a.minspan.minus1 <- earth(O3 ~ ., data=ozone1, minspan=-1)
> printh(summary(a.minspan.minus1))
===summary(a.minspan.minus1) 
Call: earth(formula=O3~., data=ozone1, minspan=-1)

               coefficients
(Intercept)      14.8317540
ibh               0.0035879
h(5760-vh)       -0.0131360
h(64-humidity)   -0.0630395
h(temp-62)        0.3670405
h(ibh-823)       -0.0043888
h(dpg-24)        -0.1188100
h(120-vis)        0.0359176
h(206-doy)       -0.0486385
h(doy-206)       -0.0585411

Selected 10 of 19 terms, and 7 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, ibh, humidity, dpg, vis, doy, vh, wind-unused, ...
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 16.16163    RSS 4736.877    GRSq 0.748948    RSq 0.7756673
> 
> a.minspan.minus3 <- earth(O3 ~ ., data=ozone1, minspan=-3)
> printh(summary(a.minspan.minus3))
===summary(a.minspan.minus3) 
Call: earth(formula=O3~., data=ozone1, minspan=-3)

               coefficients
(Intercept)      13.5336798
h(5690-vh)       -0.0169026
h(vh-5690)        0.0155040
h(wind-3)        -0.2790195
h(64-humidity)   -0.0997117
h(temp-62)        0.5474683
h(temp-72)       -0.3244650
h(dpg-24)        -0.1084691
h(ibt-107)        0.0171885
h(150-vis)        0.0232805
h(119-doy)       -0.1064486
h(doy-119)       -0.0334354

Selected 12 of 20 terms, and 8 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, dpg, vis, doy, vh, humidity, ibh-unused, wind, ibt
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.82868    RSS 4235.117    GRSq 0.7696538    RSq 0.79943
> 
> a.endspan80 <- earth(O3 ~ ., data=ozone1, endspan=80)
> printh(summary(a.endspan80))
===summary(a.endspan80) 
Call: earth(formula=O3~., data=ozone1, endspan=80)

               coefficients
(Intercept)      14.7832332
h(5770-vh)       -0.0160418
h(wind-3)        -0.3028539
h(55-humidity)   -0.1303358
h(temp-58)        0.3179697
h(1046-ibh)      -0.0041830
h(dpg-10)        -0.0933000
h(ibt-121)        0.0371643
h(150-vis)        0.0223985
h(118-doy)       -0.0989561
h(doy-147)       -0.0367509

Selected 11 of 20 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, doy, humidity, dpg, ibh, vh, vis, ibt, wind
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 14.31885    RSS 4142.964    GRSq 0.7775735    RSq 0.8037943
> 
> cat("--- test multiple responses ---------------------\n")
--- test multiple responses ---------------------
> 
> # this uses the global matrix data.global (data.global[,1:2] is the response)
> 
> test.two.responses <- function(itest, func1, func2,
+     degree=2, nk=51, plotit=PLOT, test.rsq=TRUE, trace=0, minspan=0,
+     test.mars.to.earth=FALSE, pmethod="backward")
+ {
+     if(typeof(func1) == "character")
+         funcnames <- paste("multiple responses", func1, func2)
+     else
+         funcnames <- paste("multiple responses", deparse(substitute(func1)), deparse(substitute(func2)))
+     cat("itest", sprintf("%-3d", itest), funcnames,
+         " degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk), "\n\n")
+     gc()
+     fite <- earth(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+                 degree=degree, trace=trace, nk=nk, pmethod=pmethod, minspan=minspan)
+     printh(fite)
+     caption <- paste("itest ", itest, ": ", funcnames, " degree=", degree, " nk=", nk, sep="")
+     if(plotit) {
+         if(typeof(func1) == "character") {
+             plotmo(fite, caption=caption, nresponse=1, trace=-1)
+             plotmo(fite, nresponse=2, trace=-1)
+         } else {
+             plotmo(fite, func=func1, caption=caption, nresponse=1)
+             plotmo(fite, func=func2, nresponse=2)
+         }
+         plot(fite, caption=caption, nresponse=1)
+         plot(fite, nresponse=2)
+     }
+     cat("\n")
+     if(test.mars.to.earth) {
+         cat("Testing mars.to.earth with a multiple response model\n")
+         fitm <- mars(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+                      degree=degree, trace=(trace!=0), nk=nk)
+         fitme <- mars.to.earth(fitm)
+         printh(fitme)
+         printh(summary(fitme))
+         if(plotit) {
+             plotmo(fitm, func=func1, caption=caption, nresponse=1, clip=FALSE)
+             plotmo(fitm, func=func2, nresponse=2, clip=FALSE)
+         }
+ # TODO following code causes error "nk" not found, looking in wrong environment?
+ #       cat("Expect warnings because of weights in the mars model\n")
+ #       fitm <- mars(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+ #                    degree=degree, trace=(trace!=0), nk=nk, wp=c(1,2))
+ #       fitme <- mars.to.earth(fitm)
+ #       printh(fitme)
+ #       printh(summary(fitme))
+     }
+     fite
+ }
> 
> N <- 100
> set.seed(1)
> x1 <- runif(N, -1, 1)
> x2 <- runif(N, -1, 1)
> x3 <- runif(N, -1, 1)
> x4 <- runif(N, -1, 1)
> x5 <- runif(N, -1, 1)
> 
> func1 <- function(x)
+ {
+     sin(3 * x[,1]) + x[,2]
+ }
> func7 <- function(x)    # just one predictor
+ {
+     sin(5 * x[,1])
+ }
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1", "func7", "x1", "x2")
> # expect pmethod="ex" cannot be used with multiple response models
> expect.err(try(test.two.responses(itest, func1, func7, nk=51, degree=1, pmethod="ex")), "not allowed with multiple response models")
itest 5   multiple responses func1 func7  degree 1  nk 51  

Error : pmethod="exhaustive" is not allowed with multiple response models
       (y has 2 columns, use trace=4 to see y)
Got error as expected from try(test.two.responses(itest, func1, func7, nk = 51, degree = 1,     pmethod = "ex"))
> # expect pmethod="seq" cannot be used with multiple response models
> expect.err(try(test.two.responses(itest, func1, func7, nk=51, degree=1, pmethod="seq")), "not allowed with multiple response models")
itest 5   multiple responses func1 func7  degree 1  nk 51  

Error : pmethod="seqrep" is not allowed with multiple response models
       (y has 2 columns, use trace=4 to see y)
Got error as expected from try(test.two.responses(itest, func1, func7, nk = 51, degree = 1,     pmethod = "seq"))
> itest <- itest+1; a <- test.two.responses(itest, func1, func7, nk=51, degree=1)
itest 6   multiple responses func1 func7  degree 1  nk 51  

===fite 
Selected 9 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

              GCV       RSS      GRSq       RSq
func1 0.002626520 0.1809409 0.9969000 0.9978211
func7 0.007889046 0.5434764 0.9846251 0.9891931
All   0.010515566 0.7244173 0.9922701 0.9945668
 plotmo grid:    x1         x2
        -0.02437858 0.03719751
 plotmo grid:    x1         x2
        -0.02437858 0.03719751

> printh(summary(a))
===summary(a) 
Call: earth(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
            pmethod=pmethod, trace=trace, degree=degree, nk=nk,
            minspan=minspan)

                      func1      func7
(Intercept)      -1.4159357 -0.6824246
h(-0.468983-x1)   1.4219106  3.9942993
h(x1- -0.468983)  1.8463556 -1.4788784
h(x1- -0.235224)  0.9882662  5.9409061
h(x1-0.209867)   -0.8510911 -4.4376027
h(x1-0.425029)   -2.5321006 -4.8071373
h(x1-0.739382)   -2.1198279  2.4557576
h(-0.329025-x2)  -1.0346040 -0.0308457
h(x2- -0.329025)  0.9870580 -0.0232994

Selected 9 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

              GCV       RSS      GRSq       RSq
func1 0.002626520 0.1809409 0.9969000 0.9978211
func7 0.007889046 0.5434764 0.9846251 0.9891931
All   0.010515566 0.7244173 0.9922701 0.9945668
> printh(summary(a, style="bf"))
===summary(a, style = "bf") 
Call: earth(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
            pmethod=pmethod, trace=trace, degree=degree, nk=nk,
            minspan=minspan)

func1 =
  -1.415936
  +  1.421911 * bf1
  +  1.846356 * bf2
  + 0.9882662 * bf3
  - 0.8510911 * bf4
  -  2.532101 * bf5
  -  2.119828 * bf6
  -  1.034604 * bf7
  +  0.987058 * bf8

   bf1  h(-0.468983-x1)
   bf2  h(x1--0.468983)
   bf3  h(x1--0.235224)
   bf4  h(x1-0.209867)
   bf5  h(x1-0.425029)
   bf6  h(x1-0.739382)
   bf7  h(-0.329025-x2)
   bf8  h(x2--0.329025)

func7 =
  -0.6824246
  +   3.994299 * bf1
  -   1.478878 * bf2
  +   5.940906 * bf3
  -   4.437603 * bf4
  -   4.807137 * bf5
  +   2.455758 * bf6
  - 0.03084575 * bf7
  - 0.02329942 * bf8

   bf1  h(-0.468983-x1)
   bf2  h(x1--0.468983)
   bf3  h(x1--0.235224)
   bf4  h(x1-0.209867)
   bf5  h(x1-0.425029)
   bf6  h(x1-0.739382)
   bf7  h(-0.329025-x2)
   bf8  h(x2--0.329025)

Selected 9 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

              GCV       RSS      GRSq       RSq
func1 0.002626520 0.1809409 0.9969000 0.9978211
func7 0.007889046 0.5434764 0.9846251 0.9891931
All   0.010515566 0.7244173 0.9922701 0.9945668
> if (PLOT) {
+     plotmo(a, nresponse=1, trace=-1)     # test generation of caption based on response name
+     plotmo(a, nresponse=2, trace=-1)
+     plot(a, nresponse=1)
+     plot(a, nresponse=2)
+ }
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1",
+    "a.very.long.in.fact.extremely.long.response.name",
+    "x1.a.very.long.in.fact.extremely.long.predictor.name",
+    "x2")
> itest <- itest+1; a <- test.two.responses(itest, func1, func7, nk=51, degree=3)
itest 7   multiple responses func1 func7  degree 3  nk 51  

===fite 
Selected 9 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1.a.very.long.in.fact.extremely.long.predictor.name, x2
Number of terms at each degree of interaction: 1 8 (additive model)

                                                         GCV       RSS
func1                                            0.002899230 0.1809409
a.very.long.in.fact.extremely.long.response.name 0.008708162 0.5434764
All                                              0.011607392 0.7244173
                                                      GRSq       RSq
func1                                            0.9965782 0.9978211
a.very.long.in.fact.extremely.long.response.name 0.9830287 0.9891931
All                                              0.9914675 0.9945668
 plotmo grid:    x1.a.very.long.in.fact.extremely.long.predictor.name
                                                          -0.02437858
         x2
 0.03719751
 plotmo grid:    x1.a.very.long.in.fact.extremely.long.predictor.name
                                                          -0.02437858
         x2
 0.03719751

> printh(summary(a))
===summary(a) 
Call: earth(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
            pmethod=pmethod, trace=trace, degree=degree, nk=nk,
            minspan=minspan)

                                                                        func1
(Intercept)                                                        -1.4159357
h(-0.468983-x1.a.very.long.in.fact.extremely.long.predictor.name)   1.4219106
h(x1.a.very.long.in.fact.extremely.long.predictor.name- -0.468983)  1.8463556
h(x1.a.very.long.in.fact.extremely.long.predictor.name- -0.235224)  0.9882662
h(x1.a.very.long.in.fact.extremely.long.predictor.name-0.209867)   -0.8510911
h(x1.a.very.long.in.fact.extremely.long.predictor.name-0.425029)   -2.5321006
h(x1.a.very.long.in.fact.extremely.long.predictor.name-0.739382)   -2.1198279
h(-0.329025-x2)                                                    -1.0346040
h(x2- -0.329025)                                                    0.9870580
                                                                   a.very.long.in.fact.extremely.long.response.name
(Intercept)                                                                                              -0.6824246
h(-0.468983-x1.a.very.long.in.fact.extremely.long.predictor.name)                                         3.9942993
h(x1.a.very.long.in.fact.extremely.long.predictor.name- -0.468983)                                       -1.4788784
h(x1.a.very.long.in.fact.extremely.long.predictor.name- -0.235224)                                        5.9409061
h(x1.a.very.long.in.fact.extremely.long.predictor.name-0.209867)                                         -4.4376027
h(x1.a.very.long.in.fact.extremely.long.predictor.name-0.425029)                                         -4.8071373
h(x1.a.very.long.in.fact.extremely.long.predictor.name-0.739382)                                          2.4557576
h(-0.329025-x2)                                                                                          -0.0308457
h(x2- -0.329025)                                                                                         -0.0232994

Selected 9 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1.a.very.long.in.fact.extremely.long.predictor.name, x2
Number of terms at each degree of interaction: 1 8 (additive model)

                                                         GCV       RSS
func1                                            0.002899230 0.1809409
a.very.long.in.fact.extremely.long.response.name 0.008708162 0.5434764
All                                              0.011607392 0.7244173
                                                      GRSq       RSq
func1                                            0.9965782 0.9978211
a.very.long.in.fact.extremely.long.response.name 0.9830287 0.9891931
All                                              0.9914675 0.9945668
> print(evimp(a))
                                                     nsubsets   gcv    rss
x1.a.very.long.in.fact.extremely.long.predictor.name        8 100.0  100.0
x2                                                          6  65.6   62.4
> print.default(evimp(a))
                                                     col used nsubsets
x1.a.very.long.in.fact.extremely.long.predictor.name   1    1        8
x2                                                     2    1        6
                                                           gcv gcv.match
x1.a.very.long.in.fact.extremely.long.predictor.name 100.00000         1
x2                                                    65.60412         1
                                                           rss rss.match
x1.a.very.long.in.fact.extremely.long.predictor.name 100.00000         1
x2                                                    62.37599         1
attr(,"class")
[1] "evimp"
attr(,"sqrt")
[1] TRUE
> 
> eqn56 <- function(x) # Friedman MARS paper equation 56
+ {
+     0.1 * exp(4*x[,1]) +
+     4 / (1 + exp(-20*(x[,2]-0.5))) +
+     3 * x[,3] +
+     2 * x[,4] +
+     x[,5]
+ }
> neg.eqn56 <- function(x)
+ {
+     -eqn56(x)
+ }
> 
> eqn56noise <- function(x)
+ {
+     set.seed(ncol(x))
+     eqn56(x) + rnorm(nrow(x),0,1)
+ }
> 
> neg.eqn56noise <- function(x)
+ {
+     -eqn56noise(x)
+ }
> 
> robot.arm <- function(x) # Friedman Fast MARS paper
+ {
+     l1     <- x[,1]
+     l2     <- x[,2]
+     theta1 <- x[,3]
+     theta2 <- x[,4]
+     phi    <- x[,5]
+ 
+     x1 <- l1 * cos(theta1) - l2 * cos(theta1 + theta2) * cos(phi)
+     y <-  l1 * sin(theta1) - l2 * sin(theta1 + theta2) * cos(phi)
+     z <-  l2 *  sin(theta2) * sin(phi)
+ 
+     sqrt(x1^2 + y^2 + z^2)
+ }
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56=eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = c("", "neg.eqn56noise", "x1", "x2", "x3", "x4", "x5")
> itest <- itest+1; a <- test.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=1)
itest 8   multiple responses eqn56 neg.eqn56noise  degree 1  nk 51  

===fite 
Selected 12 of 22 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 22 terms
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 11 (additive model)

                           GCV       RSS      GRSq       RSq
data.global[,1:2][1] 0.1186568  7.035159 0.9859153 0.9914796
neg.eqn56noise       1.0576805 62.709877 0.8846994 0.9302502
All                  1.1763373 69.745036 0.9331542 0.9595624
 plotmo grid:    x1         x2         x3          x4          x5
        -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241
 plotmo grid:    x1         x2         x3          x4          x5
        -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241

> print(evimp(a))
   nsubsets   gcv    rss
x3       11 100.0  100.0
x2       10  82.5   81.2
x4        9  59.0   57.8
x1        8  48.0   46.6
x5        6  33.7   32.2
> print.default(evimp(a))
   col used nsubsets       gcv gcv.match       rss rss.match
x3   3    1       11 100.00000         1 100.00000         1
x2   2    1       10  82.46294         1  81.21481         1
x4   4    1        9  58.98392         1  57.75405         1
x1   1    1        8  47.99407         1  46.58408         1
x5   5    1        6  33.69458         1  32.15406         1
attr(,"class")
[1] "evimp"
attr(,"sqrt")
[1] TRUE
> 
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56=eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = NULL
> itest <- itest+1; a70 <- test.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=2)
itest 9   multiple responses eqn56 neg.eqn56noise  degree 2  nk 51  

===fite 
Selected 11 of 36 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 36 terms
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 10 (additive model)

                           GCV       RSS      GRSq       RSq
data.global[,1:2][1] 0.1491246  8.166063 0.9822988 0.9901100
data.global[,1:2][2] 1.2644713 69.242451 0.8621565 0.9229843
All                  1.4135959 77.408514 0.9196719 0.9551192
 plotmo grid:    x1         x2         x3          x4          x5
        -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241
 plotmo grid:    x1         x2         x3          x4          x5
        -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241

> printh(summary(a70))
===summary(a70) 
Call: earth(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
            pmethod=pmethod, trace=trace, degree=degree, nk=nk,
            minspan=minspan)

                 data.global[,1:2][1] data.global[,1:2][2]
(Intercept)                 0.2818910            -0.199523
h(0.565866-x1)             -0.5573832             0.701461
h(x1-0.565866)              8.6735609            -6.756016
h(x2-0.266987)              5.6617262            -3.485078
h(x2-0.458619)             24.7167189           -41.977152
h(x2-0.516206)            -26.6087010            42.046569
h(x3-0.109801)              2.5861859            -2.829496
h(0.26284-x3)              -2.9626317             2.501109
h(-0.303396-x4)            -3.1086768             3.484234
h(x4-0.124354)              2.6383691            -2.972662
h(x5- -0.859935)            0.9423879            -0.854188

Selected 11 of 36 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 36 terms
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 10 (additive model)

                           GCV       RSS      GRSq       RSq
data.global[,1:2][1] 0.1491246  8.166063 0.9822988 0.9901100
data.global[,1:2][2] 1.2644713 69.242451 0.8621565 0.9229843
All                  1.4135959 77.408514 0.9196719 0.9551192
> printh(summary(a70, style="bf"))
===summary(a70, style = "bf") 
Call: earth(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
            pmethod=pmethod, trace=trace, degree=degree, nk=nk,
            minspan=minspan)

data.global[,1:2][1] =
  0.281891
  -  0.5573832 * bf1
  +   8.673561 * bf2
  +   5.661726 * bf3
  +   24.71672 * bf4
  -    26.6087 * bf5
  +   2.586186 * bf6
  -   2.962632 * bf7
  -   3.108677 * bf8
  +   2.638369 * bf9
  +  0.9423879 * bf10

   bf1  h(0.565866-x1)
   bf2  h(x1-0.565866)
   bf3  h(x2-0.266987)
   bf4  h(x2-0.458619)
   bf5  h(x2-0.516206)
   bf6  h(x3-0.109801)
   bf7  h(0.26284-x3)
   bf8  h(-0.303396-x4)
   bf9  h(x4-0.124354)
  bf10  h(x5--0.859935)

data.global[,1:2][2] =
  -0.1995226
  +  0.7014611 * bf1
  -   6.756016 * bf2
  -   3.485078 * bf3
  -   41.97715 * bf4
  +   42.04657 * bf5
  -   2.829496 * bf6
  +   2.501109 * bf7
  +   3.484234 * bf8
  -   2.972662 * bf9
  -  0.8541879 * bf10

   bf1  h(0.565866-x1)
   bf2  h(x1-0.565866)
   bf3  h(x2-0.266987)
   bf4  h(x2-0.458619)
   bf5  h(x2-0.516206)
   bf6  h(x3-0.109801)
   bf7  h(0.26284-x3)
   bf8  h(-0.303396-x4)
   bf9  h(x4-0.124354)
  bf10  h(x5--0.859935)

Selected 11 of 36 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 36 terms
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 10 (additive model)

                           GCV       RSS      GRSq       RSq
data.global[,1:2][1] 0.1491246  8.166063 0.9822988 0.9901100
data.global[,1:2][2] 1.2644713 69.242451 0.8621565 0.9229843
All                  1.4135959 77.408514 0.9196719 0.9551192
> 
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                                        (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robot.arm(x.global), eqn56(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global)    <- c(                "l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "eqn56", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.two.responses(itest, robot.arm, eqn56, nk=51, degree=1)
itest 10  multiple responses robot.arm eqn56  degree 1  nk 51  

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.06212730 3.877365 0.6674660 0.7882518
eqn56 0.04559835 2.845793 0.9990475 0.9993935
All   0.10772566 6.723158 0.9977586 0.9985727
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174

Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.06212730 3.877365 0.6674660 0.7882518
eqn56 0.04559835 2.845793 0.9990475 0.9993935
All   0.10772566 6.723158 0.9977586 0.9985727
> itest <- itest+1; test.two.responses(itest, robot.arm, eqn56, nk=51, degree=2, test.mars.to.earth=TRUE)
itest 11  multiple responses robot.arm eqn56  degree 2  nk 51  

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.07080652 3.877365 0.6210109 0.7882518
eqn56 0.05196847 2.845793 0.9989145 0.9993935
All   0.12277499 6.723158 0.9974454 0.9985727
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174

Testing mars.to.earth with a multiple response model
Converted mars(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
               degree=degree, nk=nk, trace.mars=(trace!=0))

to earth(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
                degree=degree, nk=nk)

===fitme 
Selected 14 of 14 terms, and 5 of 5 predictors
Termination condition: Unknown
Importance: object has no prune.terms, call update() on the model to fix that
Number of terms at each degree of interaction: 1 11 2

             GCV      RSS      GRSq       RSq
arm   0.06354264 2.810014 0.6598905 0.8465412
eqn56 0.02822229 1.248060 0.9994105 0.9997340
All   0.09176492 4.058074 0.9997770 0.9998994
===summary(fitme) 
Call: earth(x=data.global[,c(-1,-2),drop=FALSE], y=data.global[,1:2],
            degree=degree, nk=nk)

                                          arm      eqn56
(Intercept)                        1.21455366 17.9497354
h(l1-0.48208)                      0.74838045  3.1350878
h(0.712515-l1)                    -0.29309259 -1.2345462
h(l1-0.712515)                     0.45693753  8.6324286
h(0.689194-l2)                    -0.56638468 -6.5226645
h(l2-0.689194)                     0.80658229  0.0048442
h(2.05469-theta1)                  0.04949653 -2.9820177
h(theta1-2.05469)                  0.01153761  3.0259557
h(3.53226-theta2)                 -0.14968401 -1.9869680
h(theta2-3.53226)                 -0.26441106  2.0236977
h(-0.0748075-phi)                 -0.14373035 -0.9622197
h(phi- -0.0748075)                -0.22638721  0.9964946
h(0.48208-l1)                     -0.18021728 -0.0612455
h(l1-0.48208) * h(theta2-1.51306) -2.04353916 -0.4060211

Selected 14 of 14 terms, and 5 of 5 predictors
Termination condition: Unknown
Importance: object has no prune.terms, call update() on the model to fix that
Number of terms at each degree of interaction: 1 11 2

             GCV      RSS      GRSq       RSq
arm   0.06354264 2.810014 0.6598905 0.8465412
eqn56 0.02822229 1.248060 0.9994105 0.9997340
All   0.09176492 4.058074 0.9997770 0.9998994
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174
Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.07080652 3.877365 0.6210109 0.7882518
eqn56 0.05196847 2.845793 0.9989145 0.9993935
All   0.12277499 6.723158 0.9974454 0.9985727
> itest <- itest+1; test.two.responses(itest, robot.arm, eqn56, nk=201, degree=1)
itest 12  multiple responses robot.arm eqn56  degree 1  nk 201 

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.06212730 3.877365 0.6674660 0.7882518
eqn56 0.04559835 2.845793 0.9990475 0.9993935
All   0.10772566 6.723158 0.9977586 0.9985727
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174

Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.06212730 3.877365 0.6674660 0.7882518
eqn56 0.04559835 2.845793 0.9990475 0.9993935
All   0.10772566 6.723158 0.9977586 0.9985727
> itest <- itest+1; test.two.responses(itest, robot.arm, eqn56, nk=201, degree=2)
itest 13  multiple responses robot.arm eqn56  degree 2  nk 201 

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.07080652 3.877365 0.6210109 0.7882518
eqn56 0.05196847 2.845793 0.9989145 0.9993935
All   0.12277499 6.723158 0.9974454 0.9985727
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174

Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.07080652 3.877365 0.6210109 0.7882518
eqn56 0.05196847 2.845793 0.9989145 0.9993935
All   0.12277499 6.723158 0.9974454 0.9985727
> itest <- itest+1; test.two.responses(itest, robot.arm, eqn56, nk=201, degree=10)
itest 14  multiple responses robot.arm eqn56  degree 10 nk 201 

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.07080652 3.877365 0.6210109 0.7882518
eqn56 0.05196847 2.845793 0.9989145 0.9993935
All   0.12277499 6.723158 0.9974454 0.9985727
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174
 plotmo grid:    l1       l2   theta1   theta2         phi
          0.4878107 1.018599 2.375682 2.907589 -0.06541174

Selected 11 of 11 terms, and 5 of 5 predictors
Termination condition: RSq changed by less than 0.001 at 11 terms
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

             GCV      RSS      GRSq       RSq
arm   0.07080652 3.877365 0.6210109 0.7882518
eqn56 0.05196847 2.845793 0.9989145 0.9993935
All   0.12277499 6.723158 0.9974454 0.9985727
> 
> attach(ozone1)
> x.global <- cbind(                wind, humidity, temp, ibh, dpg, ibt, vis)
> data.global <- cbind(O3, doy, vh, wind, humidity, temp, ibh, dpg, ibt, vis)
> itest <- itest+1; test.two.responses(itest, "O3", "doy", nk=51, degree=2)
itest 15  multiple responses O3 doy  degree 2  nk 51  

===fite 
Selected 13 of 47 terms, and 8 of 8 predictors
Termination condition: Reached nk 51
Importance: wind, vh, ibh, temp, dpg, vis, humidity, ibt
Number of terms at each degree of interaction: 1 5 7

          GCV        RSS      GRSq       RSq
O3    22.9046    6205.13 0.6442040 0.7061325
doy 6853.8813 1856799.52 0.3727883 0.4819583
All 6876.7859 1863004.66 0.3743779 0.4832712

Selected 13 of 47 terms, and 8 of 8 predictors
Termination condition: Reached nk 51
Importance: wind, vh, ibh, temp, dpg, vis, humidity, ibt
Number of terms at each degree of interaction: 1 5 7

          GCV        RSS      GRSq       RSq
O3    22.9046    6205.13 0.6442040 0.7061325
doy 6853.8813 1856799.52 0.3727883 0.4819583
All 6876.7859 1863004.66 0.3743779 0.4832712
> detach(ozone1)
> 
> cat("--- formula based multiple response -------------\n")
--- formula based multiple response -------------
> 
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> if (PLOT) {
+     plotmo(a2, nresponse=1, trace=-1)                  # TODO1 delete
+     plotmo(a2, nresponse=1, trace=-1) # test generation of caption based on response name
+     plotmo(a2, nresponse=2, trace=-1)
+     plot(a2, nresponse=1) # TODO delete
+     plot(a2, nresponse=1)
+     plot(a2, nresponse=2)
+ }
> 
> cat("--- test plot.earth.models with multiple responses ---\n")
--- test plot.earth.models with multiple responses ---
> 
> set.seed(1)
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> b2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=1)
> if (PLOT) {
+     plot.earth.models(list(a, a2), caption="plot.earth.models with multiple responses, list(a,a2)")
+     plot.earth.models(list(a2, a), caption="plot.earth.models with multiple responses, list(a2,a)",
+                       col.rsq=c(2,3), col.npreds=c(2,3))
+     plot.earth.models(list(a2, b2), caption="plot.earth.models with multiple responses, list(a2,b2)",
+                       col.rsq=c(2,3), col.npreds=c(4,5), jitter=.01, legend.pos="topleft")
+ }
> 
> cat("--- subset --------------------------------------\n")
--- subset --------------------------------------
> 
> set.seed(9)
> train.subset <- sample(1:nrow(ozone1), .8 * nrow(ozone1))
> test.subset <- (1:nrow(ozone1))[-train.subset]
> 
> # all the following models should be identical
> a <- earth(ozone1[,-1], ozone1[,1], subset=train.subset, nprune=7, degree=2)
> printh(a)
===a 
Selected 7 of 21 terms, and 4 of 9 predictors
Termination condition: Reached nk 21
Importance: humidity, ibt, doy, temp, vh-unused, wind-unused, ibh-unused, ...
Number of terms at each degree of interaction: 1 5 1
GCV 15.60427    RSS 3635.322    GRSq 0.7561022    RSq 0.7831299
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[,-1], ozone1[,1], subset=train.subset)", trace=-1)
> 
> a <- earth(ozone1[train.subset,-1], ozone1[train.subset,1], nprune=7, degree=2)
> printh(a)
===a 
Selected 7 of 21 terms, and 4 of 9 predictors
Termination condition: Reached nk 21
Importance: humidity, ibt, doy, temp, vh-unused, wind-unused, ibh-unused, ...
Number of terms at each degree of interaction: 1 5 1
GCV 15.60427    RSS 3635.322    GRSq 0.7561022    RSq 0.7831299
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[train.subset,-1], ozone1[train.subset,1]", trace=-1)
> 
> a <- earth(O3 ~ ., data=ozone1, subset=train.subset, nprune=7, degree=2)
> printh(a)
===a 
Selected 7 of 21 terms, and 4 of 9 predictors
Termination condition: Reached nk 21
Importance: humidity, ibt, doy, temp, vh-unused, wind-unused, ibh-unused, ...
Number of terms at each degree of interaction: 1 5 1
GCV 15.60427    RSS 3635.322    GRSq 0.7561022    RSq 0.7831299
> if (PLOT)
+     plotmo(a, caption="test subset: earth(O3 ~ ., data=ozone1, subset=train.subset", trace=-1)
> 
> y <- ozone1[test.subset, 1]
> yhat <- predict(a, newdata = ozone1[test.subset, -1])
> printh(1 - sum((y - yhat)^2)/sum((y - mean(y))^2)) # print RSquared
===1 - sum((y - yhat)^2)/sum((y - mean(y))^2) [1] 0.7931236
> 
> cat("--- update -------------------------\n")
--- update -------------------------
> 
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> printh(update(a, penalty = -1, ponly=TRUE))
===update(a, penalty = -1, ponly = TRUE) 
Selected 21 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 10 10
GCV 10.85657    RSS 3582.667    GRSq 0.8303292    RSq 0.8303292
> printh(update(a, penalty = 10, ponly=TRUE))
===update(a, penalty = 10, ponly = TRUE) 
Selected 11 of 21 terms, and 8 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 17.30867    RSS 3795.372    GRSq 0.7311301    RSq 0.8202558
> a <- earth(O3 ~ ., data=ozone1, nk=31, pmethod="n", degree=2)
> a.none <- printh(update(a, nprune=10, pmethod="n"))
===update(a, nprune = 10, pmethod = "n") 
Selected 10 of 31 terms, and 5 of 9 predictors (pmethod="none")
Termination condition: Reached nk 31
Importance: temp, ibt-unused, humidity, doy, dpg, vis-unused, wind-unused, ...
Number of terms at each degree of interaction: 1 6 3
GCV 14.03861    RSS 3996.421    GRSq 0.7819266    RSq 0.8107343
> printh(update(a.none, pmethod="b"))
===update(a.none, pmethod = "b") 
Selected 10 of 31 terms, and 8 of 9 predictors
Termination condition: Reached nk 31
Importance: temp, ibt, humidity, doy, dpg, vis, wind, ibh, vh-unused
Number of terms at each degree of interaction: 1 5 4
GCV 14.03861    RSS 3996.421    GRSq 0.7819266    RSq 0.8107343
> printh(update(a.none, nprune=4, pmethod="e"))
===update(a.none, nprune = 4, pmethod = "e") 
Selected 4 of 31 terms, and 3 of 9 predictors
Termination condition: Reached nk 31
Importance: temp, ibh, humidity, vh-unused, wind-unused, dpg-unused, ...
Number of terms at each degree of interaction: 1 2 1
GCV 18.56782    RSS 5815.792    GRSq 0.7115708    RSq 0.7245711
> a.updated <- update(a.none, nprune=10, pmethod="b")
> printh(a.updated)
===a.updated 
Selected 10 of 31 terms, and 8 of 9 predictors
Termination condition: Reached nk 31
Importance: temp, ibt, humidity, doy, dpg, vis, wind, ibh, vh-unused
Number of terms at each degree of interaction: 1 5 4
GCV 14.03861    RSS 3996.421    GRSq 0.7819266    RSq 0.8107343
> a.backwards <- update(a, nprune=10, pmethod="b")
> printh(a.backwards)
===a.backwards 
Selected 10 of 31 terms, and 8 of 9 predictors
Termination condition: Reached nk 31
Importance: temp, ibt, humidity, doy, dpg, vis, wind, ibh, vh-unused
Number of terms at each degree of interaction: 1 5 4
GCV 14.03861    RSS 3996.421    GRSq 0.7819266    RSq 0.8107343
> printh(all.equal(a.updated$bx, a.backwards$bx))
===all.equal(a.updated$bx, a.backwards$bx) [1] TRUE
> a <- earth(O3 ~ ., data=ozone1, nk=31, nprune=10, pmethod="b", degree=2)
> printh(a)
===a 
Selected 10 of 31 terms, and 8 of 9 predictors
Termination condition: Reached nk 31
Importance: temp, ibt, humidity, doy, dpg, vis, wind, ibh, vh-unused
Number of terms at each degree of interaction: 1 5 4
GCV 14.03861    RSS 3996.421    GRSq 0.7819266    RSq 0.8107343
> printh(all.equal(a$bx, a.backwards$bx))
===all.equal(a$bx, a.backwards$bx) [1] TRUE
> 
> cat("--- Force.xtx.prune -----------------------------\n")
--- Force.xtx.prune -----------------------------
> 
> expect.err(try(earth(Volume ~ ., data = trees, Force.xtx.prune=TRUE, pmethod="ex")), "not allowed with") # pmethod="ex" cannot be used with Force.xtx.prune
Error : pmethod="exhaustive" is not allowed with 'eval.subsets.xtx'
Got error as expected from try(earth(Volume ~ ., data = trees, Force.xtx.prune = TRUE, pmethod = "ex"))
> 
> m1 <- earth(Volume ~ ., data = trees)
> m2 <- earth(Volume ~ ., data = trees, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 1", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 1 (m1$rsq 0.9742029 != m1$rsq 0.9742029) [but within numerical tolerances]
> 
> m1 <- earth(O3 ~ wind+temp, data = ozone1, nk=51)
> m2 <- earth(O3 ~ wind+temp, data = ozone1, nk=51, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 2", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 2 (m1$rsq 0.6647086 != m1$rsq 0.6647086) [but within numerical tolerances]
> 
> # TODO The following exposes a bug in leaps(?).  It is described in
> # check.one.term.per.step in the earth R code.  The test is commented out
> # because this bug causes a discrepancy with Force.xtx.prune (although
> # usually the bug does not cause any problems).
> #
> # m1 <- earth(O3 ~ ., data = ozone1, nk=51, degree=2, trace=5)
> # m2 <- earth(O3 ~ ., data = ozone1, nk=51, degree=2, Force.xtx.prune=TRUE)
> # check.models.equal(m1, m2, "Force.xtx.prune test 3", check.subsets=FALSE)
> 
> cat("--- extractAIC.earth ----------------------------\n")
--- extractAIC.earth ----------------------------
> 
> a <-earth(O3 ~ ., data=ozone1, degree=2)
> cat("Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC\n")
Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC
> printh(drop1(a), expect.warning=TRUE)
===drop1(a)  expect warning -->Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Single term deletions

Model:
O3 ~ vh + wind + humidity + temp + ibh + dpg + ibt + vis + doy
            Df    AIC
<none>         13.408
vh         0.0 13.486
wind       2.5 13.887
humidity -10.0 15.191
temp      -7.5 13.016
ibh        0.0 12.836
dpg        0.0 14.800
ibt       -7.5 13.736
vis       -7.5 14.785
doy       -2.5 15.353
> printh(drop1(a, warn=FALSE)) # repeat but with warnings suppressed
===drop1(a, warn = FALSE) 
Single term deletions

Model:
O3 ~ vh + wind + humidity + temp + ibh + dpg + ibt + vis + doy
            Df    AIC
<none>         13.408
vh         0.0 13.486
wind       2.5 13.887
humidity -10.0 15.191
temp      -7.5 13.016
ibh        0.0 12.836
dpg        0.0 14.800
ibt       -7.5 13.736
vis       -7.5 14.785
doy       -2.5 15.353
> 
> cat("--- fda and mda with earth -----------------------------------\n")
--- fda and mda with earth -----------------------------------
> 
> am <- fda(Species ~ ., data=iris, method=mars, degree=1, keepxy=TRUE)
> printh(am)
===am 
Call:
fda(formula = Species ~ ., data = iris, method = mars, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.73 100.00 

Training Misclassification Error: 0.02667 ( N = 150 )
> a <- fda(Species ~ ., data=iris, method=earth, degree=1, keepxy=TRUE)
> printh(a)
===a 
Call:
fda(formula = Species ~ ., data = iris, method = earth, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 97.97 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> printh(confusion(a))
===confusion(a) 
            true
predicted    setosa versicolor virginica
  setosa         50          0         0
  versicolor      0         47         3
  virginica       0          3        47
> if (PLOT) {
+     par(mar=c(3, 3, 2, .5))  # small margins and text to pack figs in
+     par(mgp=c(1.6, 0.6, 0))  # flatten axis elements
+     par(oma=c(0,0,4,0))      # make space for caption
+     layout(rbind(c(1,1,0,0), c(2,3,4,5), c(6,7,8,9)), heights=c(2,1,1))
+     plot(a)
+     plotmo(a$fit, nresponse=1, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE, trace=-1)
+     plotmo(a$fit, nresponse=2, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE, trace=-1)
+     mtext("fda test", outer=TRUE, font=2, line=1.5, cex=1)
+ }
> 
> data(glass)
> set.seed(123)
> samp <- sample(c(1:214), size=100, replace=FALSE)
> glass.train <- glass[samp,]
> glass.test <- glass[-samp,]
> am <- mda(Type ~ ., data=glass.train, method=mars,  keepxy=TRUE, degree=2)
> a <-  mda(Type ~ ., data=glass.train, method=earth, keepxy=TRUE, degree=2, keep.fitted=TRUE)
> printh(am)
===am 
Call:
mda(formula = Type ~ ., data = glass.train, method = mars, keepxy = TRUE, 
    degree = 2)

Dimension: 13 

Percent Between-Group Variance Explained:
 v1  v2  v3  v4  v5  v6  v7  v8  v9 v10 v11 v12 v13 
100 100 100 100 100 100 100 100 100 100 100 100 100 

Training Misclassification Error: 0.25 ( N = 100 )

Deviance: 213.874 
> printh(a)
===a 
Call:
mda(formula = Type ~ ., data = glass.train, method = earth, keep.fitted = TRUE, 
    keepxy = TRUE, degree = 2)

Dimension: 12 

Percent Between-Group Variance Explained:
    v1     v2     v3     v4     v5     v6     v7     v8     v9    v10    v11 
 65.54  84.85  91.55  95.01  96.73  98.04  99.00  99.88 100.00 100.00 100.00 
   v12 
100.00 

Training Misclassification Error: 0.29 ( N = 100 )

Deviance: 213.021 
> cat("mda with mars  ", attr(confusion(am), "error"), "\n")
mda with mars   0.25 
> cat("mda with earth ", attr(confusion(a),  "error"), "\n")
mda with earth  0.29 
> if (PLOT) {
+     plot(a$fit, caption="mda on glass data", nresponse=1)
+     plotmo(a$fit, nresponse=9, clip=FALSE, ylim=NA, caption="mda on glass data", trace=-1)
+ }
> 
> cat("\n---- update and keepxy, formula interface --------------------------\n")

---- update and keepxy, formula interface --------------------------
> 
> new.trees <- trees + c(1,2,3,4)
> new.trees <- new.trees[, -c(20:23)]
> a.formula <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees)
> cat("\nupdate(a, trace=1)\n")

update(a, trace=1)
> a.formula.1update <- update(a.formula, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x[31,2] with colnames Girth Height
y[31,1] with colname Volume
31 cases after taking subset
Skipped forward pass
Prune method "backward" penalty 2 nprune null: selected 4 of 5 terms, and 2 of 2 preds
After pruning pass GRSq 0.96 RSq 0.974
> a.formula.1  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees)
> check.models.equal(a.formula.1update, a.formula.1, msg="a1update a1")
check.models.equal identical: a1update a1

> 
> cat("\nupdate(a.formula, data=new.trees, trace=1)\n")

update(a.formula, data=new.trees, trace=1)
> a.formula.2update <- update(a.formula, data=new.trees, trace=1)
update.earth: using 31 by 1 subset argument from original call to earth
x[31,2] with colnames Girth Height
y[31,1] with colname Volume
31 cases after taking subset
Forward pass term 1, 2, 4, 6, 8, 10, 12
RSq changed by less than 0.001 at 11 terms, 8 terms used (DeltaRSq 0.00016)
After forward pass GRSq 0.735 RSq 0.942
Prune method "backward" penalty 2 nprune null: selected 5 of 8 terms, and 2 of 2 preds
After pruning pass GRSq 0.886 RSq 0.938
> a.formula.2  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = new.trees)
> check.models.equal(a.formula.2update, a.formula.2, msg="a2update a2")
check.models.equal identical: a2update a2

> 
> cat("\nupdate(a.formula, wp=2, trace=1)\n")

update(a.formula, wp=2, trace=1)
> a.formula.3update <- update(a.formula, wp=2, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x[31,2] with colnames Girth Height
y[31,1] with colname Volume
31 cases after taking subset
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms (DeltaRSq 0.00087)
After forward pass GRSq 0.947 RSq 0.976
Prune method "backward" penalty 2 nprune null: selected 4 of 5 terms, and 2 of 2 preds
After pruning pass GRSq 0.96 RSq 0.974
> a.formula.3  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees, wp=2)
> check.models.equal(a.formula.3update, a.formula.3, msg="a3update a3")
check.models.equal identical: a3update a3

> 
> cat("\nupdate(a.formula, subset=subset.new, trace=1)\n")

update(a.formula, subset=subset.new, trace=1)
> subset.new <- rep(TRUE, nrow(trees))
> subset.new[1:4] = FALSE
> a.formula.4update <- update(a.formula, subset=subset.new, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
x[31,2] with colnames Girth Height
y[31,1] with colname Volume
27 cases after taking subset
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms (DeltaRSq 0.00037)
After forward pass GRSq 0.925 RSq 0.972
Prune method "backward" penalty 2 nprune null: selected 4 of 5 terms, and 2 of 2 preds
After pruning pass GRSq 0.947 RSq 0.969
> a.formula.4  <- earth(Volume ~ ., data = trees, subset=subset.new)
> check.models.equal(a.formula.4update, a.formula.4, msg="a4update a4")
check.models.equal identical: a4update a4

> 
> # now use keepxy=TRUE
> 
> a.formula <- earth(Volume ~ ., wp=1, data = trees, keepxy=TRUE)
> 
> cat("\nupdate(a.formula, trace=1)\n")

update(a.formula, trace=1)
> a.formula.5update <- update(a.formula, trace=1)
update.earth: using 31 by 3 data saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
x[31,2] with colnames Girth Height
y[31,1] with colname Volume
Skipped forward pass
Prune method "backward" penalty 2 nprune null: selected 4 of 5 terms, and 2 of 2 preds
After pruning pass GRSq 0.96 RSq 0.974
> a.formula.5  <- earth(Volume ~ ., wp=1, data = trees, keepxy=TRUE)
> check.models.equal(a.formula.5update, a.formula.5, msg="a5update a5")
check.models.equal identical: a5update a5

> 
> cat("\nupdate(a.formula, data=new.trees, trace=1)\n")

update(a.formula, data=new.trees, trace=1)
> a.formula.6update <- update(a.formula, data=new.trees, trace=1)
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
x[31,2] with colnames Girth Height
y[31,1] with colname Volume
Forward pass term 1, 2, 4, 6, 8, 10, 12
RSq changed by less than 0.001 at 11 terms, 8 terms used (DeltaRSq 0.00016)
After forward pass GRSq 0.735 RSq 0.942
Prune method "backward" penalty 2 nprune null: selected 5 of 8 terms, and 2 of 2 preds
After pruning pass GRSq 0.886 RSq 0.938
> a.formula.6  <- earth(Volume ~ ., wp=1, data = new.trees, keepxy=TRUE)
> check.models.equal(a.formula.6update, a.formula.6, msg="a6update a6")
check.models.equal identical: a6update a6

> 
> cat("\nupdate(a.formula, wp=2, trace=1)\n")

update(a.formula, wp=2, trace=1)
> a.formula.7update <- update(a.formula, wp=2, trace=1)
update.earth: using 31 by 3 data saved by keepxy in original call to earth
x[31,2] with colnames Girth Height
y[31,1] with colname Volume
Forward pass term 1, 2, 4, 6
RSq changed by less than 0.001 at 5 terms (DeltaRSq 0.00087)
After forward pass GRSq 0.947 RSq 0.976
Prune method "backward" penalty 2 nprune null: selected 4 of 5 terms, and 2 of 2 preds
After pruning pass GRSq 0.96 RSq 0.974
> a.formula.7  <- earth(Volume ~ ., wp=2, data = trees, keepxy=TRUE)
> check.models.equal(a.formula.7update, a.formula.7, msg="a7update a7")
check.models.equal identical: a7update a7

> 
> cat("\n----- update and keepxy, matrix interface--------------------------\n")

----- update and keepxy, matrix interface--------------------------
> 
> Volume <- trees$Volume
> x <- cbind(trees$Height, trees$Volume)
> colnames(x) <- c("Height", "Volume")
> 
> new.x <- cbind(new.trees$Height, new.trees$Volume)
> colnames(new.x) <- c("Height", "Volume")
> 
> a <- earth(x, Volume, subset=rep(TRUE, nrow(trees)))
> cat("\nupdate(a, trace=1)\n")

update(a, trace=1)
> a1update <- update(a, trace=1)
update.earth: using 31 by 2 x argument from original call to earth
update.earth: using 31 by 1 y argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x[31,2] with colnames Height Volume
y[31,1] with colname Volume
31 cases after taking subset
Skipped forward pass
Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 2 preds
After pruning pass GRSq 1 RSq 1
> a1  <- earth(x, Volume, subset=rep(TRUE, nrow(trees)))
> check.models.equal(a1update, a1, msg="a1update a1")
check.models.equal identical: a1update a1

> 
> cat("\nupdate(a, x=new.x, trace=1)\n")

update(a, x=new.x, trace=1)
> a2update <- update(a, x=new.x, trace=1)
update.earth: using 31 by 1 y argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x[31,2] with colnames Height Volume
y[31,1] with colname Volume
31 cases after taking subset
Forward pass term 1, 2, 4
RSq changed by less than 0.001 at 3 terms (DeltaRSq 0.00028)
After forward pass GRSq 0.992 RSq 0.996
Prune method "backward" penalty 2 nprune null: selected 3 of 3 terms, and 1 of 2 preds
After pruning pass GRSq 0.994 RSq 0.995
> a2  <- earth(new.x, Volume, subset=rep(TRUE, nrow(trees)))
> check.models.equal(a2update, a2, msg="a2update a2")
check.models.equal identical: a2update a2

> 
> cat("\nupdate(a, wp=2, trace=0)\n")

update(a, wp=2, trace=0)
> a3update <- update(a, wp=2, trace=0)
> a3  <- earth(x, Volume, subset=rep(TRUE, nrow(trees)), wp=2)
> check.models.equal(a3update, a3, msg="a3update a3")
check.models.equal identical: a3update a3

> 
> cat("\nupdate(a, subset=subset.new, trace=4)\n")

update(a, subset=subset.new, trace=4)
> subset.new <- rep(TRUE, nrow(trees))
> subset.new[1:4] = FALSE
> a4update <- update(a, subset=subset.new, trace=4)
update.earth: using 31 by 2 x argument from original call to earth
update.earth: using 31 by 1 y argument from original call to earth
Call: earth(x=x, y=Volume, subset=subset.new, trace=4)

x[31,2]:
    Height Volume
1       70   10.3
2       65   10.3
3       63   10.2
...     72   16.4
31      87   77.0

y[31,1]:
    Volume
1     10.3
2     10.3
3     10.2
...   16.4
31    77.0

27 cases after taking subset

Forward pass: minspan 4 endspan 8    x[27,2] 432 B    bx[27,21] 4.43 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      1.0000 1.0000            1    2       Volume        15.6< 2             1 final (max RSq)

Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 3 terms, 2 terms used

EvalSubsetsUsingXtx:
nTerms iTerm DeltaRss    RSq
     2     2   6527.9 -0.0000 min

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 2 preds
After pruning pass GRSq 1 RSq 1
> a4  <- earth(x, Volume, subset=subset.new)
> check.models.equal(a4update, a4, msg="a4update a4")
check.models.equal identical: a4update a4

> 
> # now use keepxy=TRUE
> 
> a <- earth(x, Volume, wp=1, keepxy=TRUE)
> 
> cat("\nupdate(a, trace=4)\n")

update(a, trace=4)
> a5update <- update(a, trace=4)
update.earth: using 31 by 2 x saved by keepxy in original call to earth
update.earth: using 31 by 1 y saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
Call: earth(x=matrix[31,2], y=c(10.3,10.3,10...), wp=1, keepxy=TRUE, trace=4,
            Object=a)

x[31,2]:
    Height Volume
1       70   10.3
2       65   10.3
3       63   10.2
...     72   16.4
31      87   77.0

y[31,1]:
    Volume
1     10.3
2     10.3
3     10.2
...   16.4
31    77.0

Skipped forward pass
EvalSubsetsUsingXtx:
nTerms iTerm DeltaRss    RSq
     2     2   8106.1 -0.0000 min

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 2 preds
After pruning pass GRSq 1 RSq 1
> a5  <- earth(x, Volume, wp=1, keepxy=TRUE)
> check.models.equal(a5update, a5, msg="a5update a5")
check.models.equal identical: a5update a5

> 
> cat("\nupdate(a, x=new.x, trace=4)\n")

update(a, x=new.x, trace=4)
> a6update <- update(a, x=new.x, trace=4)
update.earth: using 31 by 1 y saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
Call: earth(x=new.x, y=c(10.3,10.3,10...), wp=1, keepxy=TRUE, trace=4)

x[31,2]:
    Height Volume
1       74   13.3
2       66   14.3
3       65   11.2
...     75   18.4
31      89   78.0

y[31,1]:
    Volume
1     10.3
2     10.3
3     10.2
...   16.4
31    77.0

Forward pass: minspan 4 endspan 8    x[31,2] 496 B    bx[31,21] 5.09 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.9938 0.9954       0.9954    2       Volume        37.3  2   3         1 
4      0.9919 0.9956    0.0002782    1       Height          75  4   5         1 reject (small DeltaRSq)

RSq changed by less than 0.001 at 3 terms (DeltaRSq 0.00028)
After forward pass GRSq 0.992 RSq 0.996
Forward pass complete: 3 terms

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.7964  0.8226     0.7964      1  1 2
chosen    3      0.9938  0.9954     0.1974      1  1 2 3

Prune method "backward" penalty 2 nprune null: selected 3 of 3 terms, and 1 of 2 preds
After pruning pass GRSq 0.994 RSq 0.995
> a6  <- earth(new.x, Volume, wp=1, keepxy=TRUE)
> check.models.equal(a6update, a6, msg="\"allowed\" function a6update a6")
check.models.equal identical: "allowed" function a6update a6

> 
> cat("\nupdate(a, wp=2)\n")

update(a, wp=2)
> a7update <- update(a, wp=2)
> a7  <- earth(x, Volume, wp=2, keepxy=TRUE)
> check.models.equal(a7update, a7, msg="\"allowed\" function a7update a7")
check.models.equal identical: "allowed" function a7update a7

> 
> cat("--- \"allowed\" argument -----------------\n")
--- "allowed" argument -----------------
> 
> example1  <- function(degree, pred, parents)
+ {
+     pred != 2  # disallow predictor 2, which is "Height"
+ }
> a1 <- earth(Volume ~ ., data = trees, allowed = example1)
> printh(summary(a1))
===summary(a1) 
Call: earth(formula=Volume~., data=trees, allowed=example1)

              coefficients
(Intercept)      30.656747
h(14.2-Girth)    -3.569047
h(Girth-14.2)     6.757306

Selected 3 of 3 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: Girth, Height-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 14.3391    RSS 312.6848    GRSq 0.948644    RSq 0.9614259
> 
> example1a  <- function(degree, pred, parents, namesx)
+ {
+     namesx[pred] != "Height"  # disallow "Height"
+ }
> a1a <- earth(Volume ~ ., data = trees, allowed = example1a)
> check.models.equal(a1, a1a, msg="\"allowed\" function a1 a1a")
check.models.equal identical: "allowed" function a1 a1a

> 
> iheight <- 0
> example1b  <- function(degree, pred, parents, namesx, first)
+ {
+     if (first) {
+         iheight <<- which(namesx == "Height") # note use of <<- not <-
+         if (length(iheight) != 1)
+             stop("could not find Height in ", paste(namesx, collapse=" "))
+     }
+     pred != iheight
+ }
> a1b <- earth(Volume ~ ., data = trees, allowed = example1b)
> check.models.equal(a1, a1a, msg="\"allowed\" function a1 a1b")
check.models.equal identical: "allowed" function a1 a1b

> 
> example2 <- function(degree, pred, parents)
+ {
+     # disallow humidity in terms of degree > 1
+     # 3 is the "humidity" column in the input matrix
+     if (degree > 1 && (pred == 3 || parents[3]))
+         return(FALSE)
+     TRUE
+ }
> a2 <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example2)
> printh(summary(a2))
===summary(a2) 
Call: earth(formula=O3~., data=ozone1, degree=2, allowed=example2)

                         coefficients
(Intercept)                14.8457466
h(5860-vh)                 -0.0157499
h(vh-5860)                  0.2637241
h(temp-58)                  0.5296758
h(ibh-1105)                -0.0004860
h(10-dpg)                  -0.0560986
h(dpg-10)                  -0.0761112
h(150-vis)                  0.0504424
h(96-doy)                  -0.1184470
h(doy-158)                 -0.0302548
h(vh-5860) * h(dpg- -15)   -0.0038034
h(vh-5860) * h(-15-dpg)    -0.0093059
h(temp-58) * h(dpg-52)     -0.0160364
h(temp-58) * h(52-dpg)     -0.0047659
h(72-temp) * h(150-vis)    -0.0012431
h(temp-72) * h(150-vis)    -0.0042689

Selected 16 of 20 terms, and 6 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, doy, dpg, vis, vh, ibh, wind-unused, humidity-unused, ...
Number of terms at each degree of interaction: 1 9 6
GCV 15.17392    RSS 3907.158    GRSq 0.764291    RSq 0.8149617
> example3 <- function(degree, pred, parents)
+ {
+     # allow only humidity and temp in terms of degree > 1
+     # 3 and 4 are the "humidity" and "temp" columns
+     allowed.set = c(3,4)
+     if (degree > 1 && (all(allowed.set != pred) || any(parents[-allowed.set])))
+         return(FALSE)
+     TRUE
+ }
> a3 <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example3)
> printh(summary(a3))
===summary(a3) 
Call: earth(formula=O3~., data=ozone1, degree=2, allowed=example3)

                            coefficients
(Intercept)                   13.4717045
h(5850-vh)                    -0.0142141
h(wind-6)                     -0.5690100
h(temp-58)                     0.2832302
h(1105-ibh)                   -0.0029012
h(10-dpg)                     -0.0691576
h(dpg-10)                     -0.0903813
h(ibt-115)                     0.0446509
h(200-vis)                     0.0181357
h(96-doy)                     -0.1237491
h(doy-150)                    -0.0313603
h(55-humidity) * h(temp-58)   -0.0173091

Selected 12 of 20 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, dpg, vis, doy, humidity, ibh, vh, ibt, wind
Number of terms at each degree of interaction: 1 10 1
GCV 13.8999    RSS 3828.887    GRSq 0.7840813    RSq 0.8186686
> 
> ihumidity <- 0
> itemp <- 0
> example3a  <- function(degree, pred, parents, namesx, first)
+ {
+     if (first) {
+         ihumidity <<- which(namesx == "humidity") # note use of <<- not <-
+         if (length(ihumidity) != 1)
+             stop("could not find humidity in ", paste(namesx, collapse=" "))
+         itemp <<- which(namesx == "temp") # note use of <<- not <-
+         if (length(itemp) != 1)
+             stop("could not find temp in ", paste(namesx, collapse=" "))
+     }
+     # allow only humidity and temp in terms of degree > 1
+     allowed.set = c(ihumidity, itemp)
+     if (degree > 1 &&
+            (all(allowed.set != pred) || any(parents[-allowed.set])))
+         return(FALSE)
+     TRUE
+ }
> a3a <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example3)
> check.models.equal(a3, a3a, msg="\"allowed\" function a3 a3a")
check.models.equal identical: "allowed" function a3 a3a

> 
> #--- no predictor in PREDICTORS is allowed to interact with any predictor in PARENTS
> #--- but all other interactions are allowed
> 
> PREDICTORS <- c("age")
> PARENTS <- c("survived", "parch")
> 
> example4 <- function(degree, pred, parents, namesx)
+ {
+     if (degree > 1) {
+         predictor <- namesx[pred]
+         parents   <- namesx[parents != 0]
+         if((any(predictor %in% PREDICTORS) && any(parents %in% PARENTS)) ||
+            (any(predictor %in% PARENTS)    && any(parents %in% PREDICTORS))) {
+             return(FALSE)
+         }
+     }
+     TRUE
+ }
> a4.allowed <- earth(sex~., data=etitanic, degree=2, allowed=example4)
> printh(summary(a4.allowed))
===summary(a4.allowed) 
Call: earth(formula=sex~., data=etitanic, degree=2, allowed=example4)

                        coefficients
(Intercept)               0.74841883
pclass3rd                -0.44966704
survived                 -0.62673470
h(15-age)                 0.03878154
pclass2nd * survived     -0.16200218
pclass3rd * survived      0.31810348
pclass3rd * h(20-age)    -0.02792432
pclass3rd * h(4-parch)    0.08607338
h(3-sibsp) * h(4-parch)   0.01835222
h(sibsp-3) * h(4-parch)   0.08911862

Selected 10 of 16 terms, and 6 of 6 predictors
Termination condition: Reached nk 21
Importance: survived, parch, sibsp, pclass3rd, age, pclass2nd
Number of terms at each degree of interaction: 1 3 6
GCV 0.1525303    RSS 152.4583    GRSq 0.3475741    RSq 0.3753665
> plotmo(a4.allowed, caption="a4.allowed")
 plotmo grid:    pclass survived age sibsp parch
                    1st        0  28     0     0
> 
> #--- predictors in PREDICTORS are allowed to interact with predictors in PARENTS
> #--- but no other interactions are allowed
> 
> PREDICTORS <- c("age")
> PARENTS    <- c("survived", "parch")
> 
> example5 <- function(degree, pred, parents, namesx)
+ {
+     if (degree <= 1)
+         return(TRUE)
+     predictor <- namesx[pred]
+     parents   <- namesx[parents != 0]
+     if((any(predictor %in% PREDICTORS) && any(parents %in% PARENTS)) ||
+        (any(predictor %in% PARENTS)    && any(parents %in% PREDICTORS))) {
+         return(TRUE)
+     }
+     FALSE
+ }
> a5.allowed <- earth(sex~., data=etitanic, degree=2, allowed=example5)
> printh(summary(a5.allowed))
===summary(a5.allowed) 
Call: earth(formula=sex~., data=etitanic, degree=2, allowed=example5)

                       coefficients
(Intercept)              0.34721404
h(2-sibsp)               0.06347988
h(sibsp-2)               0.10099095
h(4-parch)               0.11453239
survived * h(age-15)     0.15093805
survived * h(age-11.5)  -0.15199742
h(25-age) * h(4-parch)  -0.00419678

Selected 7 of 17 terms, and 4 of 6 predictors
Termination condition: Reached nk 21
Importance: survived, parch, age, sibsp, pclass2nd-unused, ...
Number of terms at each degree of interaction: 1 3 3
GCV 0.1561245    RSS 158.3485    GRSq 0.3322006    RSq 0.3512343
> plotmo(a5.allowed, caption="a5.allowed")
 plotmo grid:    pclass survived age sibsp parch
                    1st        0  28     0     0
> 
> # "allowed" function checks, these check error handling by forcing an error
> 
> expect.err(try(earth(Volume ~ ., data = trees, allowed = 99)), "argument is not a function")
Error : your 'allowed' argument is not a function
Got error as expected from try(earth(Volume ~ ., data = trees, allowed = 99))
> 
> example7  <- function(degree, pred) pred!=2
> expect.err(try(earth(Volume ~ ., data = trees, allowed = example7)), "function does not have the correct number of arguments")
Error : your 'allowed' function does not have the correct number of arguments
  The 'allowed' function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
Got error as expected from try(earth(Volume ~ ., data = trees, allowed = example7))
> 
> example8  <- function(degree, pred, parents99) pred!=2
> expect.err(try(earth(Volume ~ ., data = trees, allowed = example8)), "function needs the following arguments")
Error :   The 'allowed' function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
  You have:
      degree pred parents99
Got error as expected from try(earth(Volume ~ ., data = trees, allowed = example8))
> 
> example9  <- function(degree, pred, parents, namesx99) pred!=2
> expect.err(try(earth(Volume ~ ., data = trees, allowed = example9)), "function needs the following arguments")
Error :   The 'allowed' function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
  You have:
      degree pred parents namesx99
Got error as expected from try(earth(Volume ~ ., data = trees, allowed = example9))
> 
> cat("--- beta cache -------------------------\n")
--- beta cache -------------------------
> 
> a1 <- earth(O3 ~ ., data = ozone1, degree = 3)
> a2 <- earth(O3 ~ ., data = ozone1, degree = 3, Use.beta.cache=FALSE)
> a1$call <- NULL
> a2$call <- NULL
> stopifnot(identical(a1, a2))
> 
> cat("--- test \"call\" printing in earth.default and summary.earth ---\n")
--- test "call" printing in earth.default and summary.earth ---
> # we want to make sure that long x or y aren't printed but short ones are
> 
> x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> a <- earth(x = x, y=y, trace=5)
Call: earth(x=x, y=y, trace=5)

x[101,1]:
    x
1   0
2   1
3   2
4   3
5   4
6   5
7   6
8   7
9   8
10  9
11  0
12  1
13  2
14  3
15  4
16  5
17  6
18  7
19  8
20  9
21  0
22  1
23  2
24  3
25  4
26  5
27  6
28  7
29  8
30  9
31  0
32  1
33  2
34  3
35  4
36  5
37  6
38  7
39  8
40  9
41  0
42  1
43  2
44  3
45  4
46  5
47  6
48  7
49  8
50  9
51  0
52  1
53  2
54  3
55  4
56  5
57  6
58  7
59  8
60  9
61  0
62  1
63  2
64  3
65  4
66  5
67  6
68  7
69  8
70  9
71  0
72  1
73  2
74  3
75  4
76  5
77  6
78  7
79  8
80  9
81  0
82  1
83  2
84  3
85  4
86  5
87  6
88  7
89  8
90  9
91  0
92  1
93  2
94  3
95  4
96  5
97  6
98  7
99  8
100 9
101 0
       x        
 Min.   :0.000  
 1st Qu.:2.000  
 Median :4.000  
 Mean   :4.455  
 3rd Qu.:7.000  
 Max.   :9.000  

y[101,1]:
    y
1   0
2   1
3   2
4   3
5   4
6   5
7   6
8   7
9   8
10  9
11  0
12  1
13  2
14  3
15  4
16  5
17  6
18  7
19  8
20  9
21  0
22  1
23  2
24  3
25  4
26  5
27  6
28  7
29  8
30  9
31  0
32  1
33  2
34  3
35  4
36  5
37  6
38  7
39  8
40  9
41  0
42  1
43  2
44  3
45  4
46  5
47  6
48  7
49  8
50  9
51  0
52  1
53  2
54  3
55  4
56  5
57  6
58  7
59  8
60  9
61  0
62  1
63  2
64  3
65  4
66  5
67  6
68  7
69  8
70  9
71  0
72  1
73  2
74  3
75  4
76  5
77  6
78  7
79  8
80  9
81  0
82  1
83  2
84  3
85  4
86  5
87  6
88  7
89  8
90  9
91  0
92  1
93  2
94  3
95  4
96  5
97  6
98  7
99  8
100 9
101 0
       y        
 Min.   :0.000  
 1st Qu.:2.000  
 Median :4.000  
 Mean   :4.455  
 3rd Qu.:7.000  
 Max.   :9.000  

maxmem 0.0 GB
earth.c version 4.4.5
BetaCache 3.45 kB
Forward pass: minspan 4 endspan 7    x[101,1] 808 B    bx[101,21] 16.6 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      1.0000 1.0000            1    1            x           0< 2             1 final (max RSq)

Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 3 terms, 2 terms used

EvalSubsetsUsingXtx:
nTerms iTerm DeltaRss    RSq
     2     2   845.05 -0.0000 min

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 1 preds
After pruning pass GRSq 1 RSq 1
> 
> a.longx  <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y=y,
+                   trace=4)
Call: earth(x=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...), y=y,
            trace=4)

x[101,1]:
    x
1   0
2   1
3   2
... 3
101 0

y[101,1]:
    y
1   0
2   1
3   2
... 3
101 0

Forward pass: minspan 4 endspan 7    x[101,1] 808 B    bx[101,21] 16.6 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      1.0000 1.0000            1    1            x           0< 2             1 final (max RSq)

Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 3 terms, 2 terms used

EvalSubsetsUsingXtx:
nTerms iTerm DeltaRss    RSq
     2     2   845.05 -0.0000 min

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 1 preds
After pruning pass GRSq 1 RSq 1
> 
> a.longy  <- earth(x = x,
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: earth(x=x, y=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...),
            trace=4)

x[101,1]:
    x
1   0
2   1
3   2
... 3
101 0

y[101,1]:
    y
1   0
2   1
3   2
... 3
101 0

Forward pass: minspan 4 endspan 7    x[101,1] 808 B    bx[101,21] 16.6 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      1.0000 1.0000            1    1            x           0< 2             1 final (max RSq)

Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 3 terms, 2 terms used

EvalSubsetsUsingXtx:
nTerms iTerm DeltaRss    RSq
     2     2   845.05 -0.0000 min

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 1 preds
After pruning pass GRSq 1 RSq 1
> 
> a.longxy <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: earth(x=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...),
            y=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...), trace=4)

x[101,1]:
    x
1   0
2   1
3   2
... 3
101 0

y[101,1]:
    y
1   0
2   1
3   2
... 3
101 0

Forward pass: minspan 4 endspan 7    x[101,1] 808 B    bx[101,21] 16.6 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      1.0000 1.0000            1    1            x           0< 2             1 final (max RSq)

Reached maximum RSq 0.9990 at 3 terms, 2 terms used (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 3 terms, 2 terms used

EvalSubsetsUsingXtx:
nTerms iTerm DeltaRss    RSq
     2     2   845.05 -0.0000 min

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 1 preds
After pruning pass GRSq 1 RSq 1
> printh(summary(a))
===summary(a) 
Call: earth(x=x, y=y, trace=5)

             coefficients
(Intercept) -7.070164e-16
x            1.000000e+00

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: Reached maximum RSq 0.9990 at 2 terms
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0    RSS 0    GRSq 1    RSq 1
> printh(summary(a.longx))
===summary(a.longx) 
Call: earth(x=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...), y=y,
            trace=4)

             coefficients
(Intercept) -7.070164e-16
x            1.000000e+00

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: Reached maximum RSq 0.9990 at 2 terms
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0    RSS 0    GRSq 1    RSq 1
> printh(summary(a.longy))
===summary(a.longy) 
Call: earth(x=x, y=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...),
            trace=4)

             coefficients
(Intercept) -7.070164e-16
x            1.000000e+00

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: Reached maximum RSq 0.9990 at 2 terms
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0    RSS 0    GRSq 1    RSq 1
> printh(summary(a.longxy))
===summary(a.longxy) 
Call: earth(x=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...),
            y=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...), trace=4)

             coefficients
(Intercept) -7.070164e-16
x            1.000000e+00

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: Reached maximum RSq 0.9990 at 2 terms
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0    RSS 0    GRSq 1    RSq 1
> printh(summary(a.longxy, style="bf"))
===summary(a.longxy, style = "bf") 
Call: earth(x=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...),
            y=c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,...), trace=4)

y =
  -7.070164e-16
  + 1 * bf1

   bf1  x

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: Reached maximum RSq 0.9990 at 2 terms
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0    RSS 0    GRSq 1    RSq 1
> 
> cat("--- factors with x,y interface -------------------------\n")
--- factors with x,y interface -------------------------
> # this also tests for integer variables in the input matrix
> data(etitanic)
> attach(etitanic)
> a1 <- earth(pclass, sex, degree=2, trace=2)        # x=unordered y=unordered
x[1046,2] with colnames 2nd 3rd
y[1046,1] with colname male

Forward pass: minspan 6 endspan 8    x[1046,2] 16.3 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0133 0.0180      0.01797    2          3rd           0< 2             1 
4      0.0116 0.0210     0.003025    1          2nd           0< 3             1 
6      0.0068 0.0210            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.007 RSq 0.021
Forward pass complete: 5 terms, 3 terms used
Prune method "backward" penalty 3 nprune null: selected 2 of 3 terms, and 1 of 2 preds
After pruning pass GRSq 0.0133 RSq 0.018
> printh(summary(a1))
===summary(a1) 
Call: earth(x=pclass, y=sex, trace=2, degree=2)

            coefficients
(Intercept)    0.5669725
3rd            0.1296343

Selected 2 of 3 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: 3rd, 2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.2306901    RSS 239.6897    GRSq 0.01325722    RSq 0.01797283
> printh(summary(a1, style="bf"))
===summary(a1, style = "bf") 
Call: earth(x=pclass, y=sex, trace=2, degree=2)

male =
  0.5669725
  + 0.1296343 * bf1

   bf1  3rd

Selected 2 of 3 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: 3rd, 2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.2306901    RSS 239.6897    GRSq 0.01325722    RSq 0.01797283
> if (PLOT)
+     plot(a1)
> a2 <- earth(sex, pclass, degree=2, trace=2)        # x=unordered y=unordered
x[1046,1] with colname male
y[1046,3] with colnames 1st 2nd 3rd

Forward pass: minspan 5 endspan 7    x[1046,1] 8.17 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0073 0.0120      0.01202    1         male           0< 2             1 
4      0.0025 0.0120            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 3 terms, 2 terms used (DeltaRSq 0)
After forward pass GRSq 0.003 RSq 0.012
Forward pass complete: 3 terms, 2 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 3 nprune null: selected 2 of 2 terms, and 1 of 1 preds
After pruning pass GRSq 0.00728 RSq 0.012
> printh(summary(a2))
===summary(a2) 
Call: earth(x=sex, y=pclass, trace=2, degree=2)

                   1st         2nd       3rd
(Intercept)  0.3427835  0.26546392 0.3917526
male        -0.1133002 -0.02534234 0.1386426

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: RSq changed by less than 0.001 at 2 terms
Importance: male
Number of terms at each degree of interaction: 1 1 (additive model)

          GCV      RSS         GRSq          RSq
1st 0.1961073 203.7578  0.010414990 0.0151441824
2nd 0.1883694 195.7180 -0.003997793 0.0008002778
3rd 0.2467207 256.3457  0.013257223 0.0179728324
All 0.6311974 655.8215  0.007279765 0.0120239411
> if (PLOT)
+     plot(a2, nresponse=1)
> a3 <- earth(pclass, age, degree=2, trace=2)        # x=unordered y=numeric
x[1046,2] with colnames 2nd 3rd
y[1046,1] with colname age

Forward pass: minspan 6 endspan 8    x[1046,2] 16.3 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.1094 0.1136       0.1136    2          3rd           0< 2             1 
4      0.1640 0.1720      0.05838    1          2nd           0< 3             1 
6      0.1600 0.1720            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.160 RSq 0.172
Forward pass complete: 5 terms, 3 terms used
Prune method "backward" penalty 3 nprune null: selected 3 of 3 terms, and 2 of 2 preds
After pruning pass GRSq 0.164 RSq 0.172
> printh(summary(a3))
===summary(a3) 
Call: earth(x=pclass, y=age, trace=2, degree=2)

            coefficients
(Intercept)    39.159918
2nd            -9.653213
3rd           -14.343551

Selected 3 of 3 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: 3rd, 2nd
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 173.8417    RSS 179758.3    GRSq 0.1640128    RSq 0.1719935
> if (PLOT)
+     plot(a3, nresponse=1)
> a4 <- earth(age, pclass, degree=2, trace=2)        # x=numeric y=unordered
x[1046,1] with colname age
y[1046,3] with colnames 1st 2nd 3rd

Forward pass: minspan 5 endspan 7    x[1046,1] 8.17 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0893 0.0980      0.09797    1          age          26  2   3         1 
4      0.0891 0.1021     0.004178    1          age          55  4             1 
6      0.0881 0.1055     0.003357    1          age          16  5             1 
8      0.0849 0.1067      0.00116    1          age          44  6             1 
10     0.0813 0.1075    0.0008104    1          age          48  7             1 reject (small DeltaRSq)

RSq changed by less than 0.001 at 9 terms, 6 terms used (DeltaRSq 0.00081)
After forward pass GRSq 0.081 RSq 0.107
Forward pass complete: 9 terms, 6 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 3 nprune null: selected 2 of 6 terms, and 1 of 1 preds
After pruning pass GRSq 0.093 RSq 0.0974
> printh(summary(a4))
===summary(a4) 
Call: earth(x=age, y=pclass, trace=2, degree=2)

                   1st           2nd         3rd
(Intercept) 0.06439450  0.2563335580  0.67927195
h(age-16)   0.01388561 -0.0004566659 -0.01342895

Selected 2 of 6 terms, and 1 of 1 predictors
Termination condition: RSq changed by less than 0.001 at 6 terms
Importance: age
Number of terms at each degree of interaction: 1 1 (additive model)

          GCV      RSS         GRSq        RSq
1st 0.1670033 173.5184  0.157277818 0.16130516
2nd 0.1884855 195.8387 -0.004616749 0.00018428
3rd 0.2211945 229.8237  0.115347486 0.11957521
All 0.5766834 599.1808  0.093017132 0.09735157
> if (PLOT)
+     plot(a4, nresponse=1)
> a5 <- earth(etitanic[,c(2:4)], pclass, degree=2, trace=2)  # x=mixed  y=unordered
x[1046,3] with colnames survived sexmale age
y[1046,3] with colnames 1st 2nd 3rd

Forward pass: minspan 6 endspan 8    x[1046,3] 24.5 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0893 0.0980      0.09797    3          age          26  2   3         1 
4      0.1500 0.1622       0.0642    1     survived           0< 4             1 
6      0.1557 0.1758      0.01364    3          age          16  5   6     4   2 
8      0.1603 0.1842     0.008445    2      sexmale           0< 7         4   2 
10     0.1631 0.1909     0.006652    2      sexmale           0< 8             1 
12     0.1616 0.1934      0.00253    3          age          57  9             1 
14     0.1599 0.1956     0.002212    2      sexmale           0< 10        2   2 
16     0.1541 0.1980     0.002352    3          age           5  11  12   10   2 
18     0.1529 0.2008     0.002846    3          age           2  13            1 
20     0.1495 0.2016    0.0007302    3          age          12  14        4   2 reject (small DeltaRSq)

RSq changed by less than 0.001 at 19 terms, 13 terms used (DeltaRSq 0.00073)
After forward pass GRSq 0.149 RSq 0.202
Forward pass complete: 19 terms, 13 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 3 nprune null: selected 7 of 13 terms, and 3 of 3 preds
After pruning pass GRSq 0.165 RSq 0.189
> printh(summary(a5))
===summary(a5) 
Call: earth(x=etitanic[,c(2:4)], y=pclass, trace=2, degree=2)

                             1st          2nd         3rd
(Intercept)          -0.02151789  0.210092649  0.81142524
survived              0.36119246  0.144874864 -0.50606732
sexmale               0.07967096  0.115755401 -0.19542636
h(26-age)            -0.00070712 -0.013836973  0.01454409
h(age-26)             0.01592910 -0.003659393 -0.01226971
survived * sexmale   -0.07745396 -0.293062401  0.37051636
survived * h(16-age) -0.02037404  0.038860933 -0.01848689

Selected 7 of 13 terms, and 3 of 3 predictors
Termination condition: RSq changed by less than 0.001 at 13 terms
Importance: age, survived, sexmale
Number of terms at each degree of interaction: 1 4 2

          GCV      RSS       GRSq        RSq
1st 0.1502539 152.3942 0.24179781 0.26340816
2nd 0.1834402 186.0532 0.02227456 0.05014178
3rd 0.1970609 199.8680 0.21186826 0.23433166
All 0.5307550 538.3155 0.16525132 0.18904341
> if (PLOT)
+     plot(a5, nresponse=1)
> a6 <- earth(etitanic[,c(1,3,4,5,6)], survived, degree=2, trace=2)  # x=mixed y=unordered
x[1046,6] with colnames pclass2nd pclass3rd sexmale age sibsp parch
y[1046,1] with colname survived

Forward pass: minspan 6 endspan 9    x[1046,6] 49 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.2860 0.2894       0.2894    3      sexmale           0< 2             1 
4      0.3297 0.3361      0.04669    2    pclass3rd           0< 3             1 
6      0.3588 0.3710      0.03488    4          age          16  4   5     2   2 
8      0.3962 0.4106      0.03954    1    pclass2nd           0< 6         2   2 
10     0.4143 0.4338       0.0232    5        sibsp           4  7   8     4   2 
12     0.4133 0.4383     0.004574    6        parch           1  9   10        1 
14     0.4150 0.4427      0.00437    2    pclass3rd           0< 11        2   2 
16     0.4116 0.4449     0.002169    5        sibsp           1  12  13    2   2 
18     0.4087 0.4477     0.002807    4          age          17  14  15   13   2 
20     0.4056 0.4502     0.002549    4          age          32  16  17        1 final (reached nk 21)

Reached nk 21
After forward pass GRSq 0.406 RSq 0.450
Forward pass complete: 21 terms, 17 terms used
Prune method "backward" penalty 3 nprune null: selected 8 of 17 terms, and 5 of 6 preds
After pruning pass GRSq 0.42 RSq 0.439
> printh(summary(a6))
===summary(a6) 
Call: earth(x=etitanic[,c(1,3,4,5,6)], y=survived, trace=2, degree=2)

                       coefficients
(Intercept)              0.96170950
pclass3rd               -0.81545352
sexmale                 -0.57003496
h(age-32)               -0.00471938
pclass2nd * sexmale     -0.26568920
pclass3rd * sexmale      0.19310203
pclass3rd * h(4-sibsp)   0.10222181
sexmale * h(16-age)      0.04505232

Selected 8 of 17 terms, and 5 of 6 predictors
Termination condition: Reached nk 21
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch-unused
Number of terms at each degree of interaction: 1 3 4
GCV 0.1404529    RSS 141.7629    GRSq 0.4197106    RSq 0.4389834
> if (PLOT)
+     plot(a6)
> a7 <- earth(etitanic[,c(2,3,5,6)], etitanic[,c(1,4)], degree=2, trace=2)  # x=mixed y=mixed
x[1046,4] with colnames survived sexmale sibsp parch
y[1046,4] with colnames pclass1st pclass2nd pclass3rd age

Forward pass: minspan 6 endspan 9    x[1046,4] 32.7 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0813 0.0901      0.09011    4        parch           2  2   3         1 
4      0.1049 0.1219      0.03183    3        sibsp           1  4   5         1 
6      0.1068 0.1323      0.01034    4        parch           1  6   7     4   2 
8      0.1089 0.1385     0.006171    4        parch           4  8             1 
10     0.1093 0.1431      0.00463    3        sibsp           2  9             1 
12     0.1043 0.1466     0.003515    4        parch           1  10  11    5   2 
14     0.1024 0.1491     0.002463    2      sexmale           0< 12        3   2 
16     0.0998 0.1507     0.001651    1     survived           0< 13        4   2 
18     0.0974 0.1526     0.001929    1     survived           0< 14       10   2 
20     0.0944 0.1540     0.001385    4        parch           1  15            1 final (reached nk 21)

Reached nk 21
After forward pass GRSq 0.094 RSq 0.154
Forward pass complete: 21 terms, 15 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 3 nprune null: selected 7 of 15 terms, and 2 of 4 preds
After pruning pass GRSq 0.113 RSq 0.138
> printh(summary(a7))
===summary(a7) 
Call: earth(x=etitanic[,c(2,3,5,6)], y=etitanic[,c(1,4)], trace=2, degree=2)

                          pclass1st   pclass2nd   pclass3rd        age
(Intercept)              0.36758408  0.35266924  0.27974668  22.291896
h(sibsp-1)              -0.12882542 -0.08036041  0.20918583  -7.715668
h(2-parch)              -0.04851620 -0.05326897  0.10178517   4.853565
h(parch-2)              -0.03888370 -0.12184854  0.16073223  13.049389
h(parch-4)              -0.16812822  0.04401127  0.12411695 -18.899871
h(sibsp-1) * h(parch-1)  0.05211343 -0.02136815 -0.03074529   4.418743
h(sibsp-1) * h(1-parch)  0.06525217  0.09912874 -0.16438091   7.403960

Selected 7 of 15 terms, and 2 of 4 predictors
Termination condition: Reached nk 21
Importance: sibsp, parch, survived-unused, sexmale-unused
Number of terms at each degree of interaction: 1 4 2

                 GCV        RSS        GRSq        RSq
pclass1st   0.200320    203.173 -0.01084030 0.01797077
pclass2nd   0.189624    192.326 -0.01068680 0.01811990
pclass3rd   0.243908    247.383  0.02450493 0.05230858
age       184.482965 187110.877  0.11283993 0.13812585
All       185.116817 187753.758  0.11250542 0.13780087
> if (PLOT)
+     plot(a7, nresponse=1)
> 
> cat("--- factors with formula interface -------------------------\n")
--- factors with formula interface -------------------------
> # these correspond to the models above (except a7 which is a multiple response model)
> a1f <- earth(sex ~ pclass, degree=2, trace=2)        # x=unordered y=unordered
x[1046,2] with colnames pclass2nd pclass3rd
y[1046,1] with colname male

Forward pass: minspan 6 endspan 8    x[1046,2] 16.3 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0133 0.0180      0.01797    2    pclass3rd           0< 2             1 
4      0.0116 0.0210     0.003025    1    pclass2nd           0< 3             1 
6      0.0068 0.0210            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.007 RSq 0.021
Forward pass complete: 5 terms, 3 terms used
Prune method "backward" penalty 3 nprune null: selected 2 of 3 terms, and 1 of 2 preds
After pruning pass GRSq 0.0133 RSq 0.018
> printh(summary(a1f))
===summary(a1f) 
Call: earth(formula=sex~pclass, trace=2, degree=2)

            coefficients
(Intercept)    0.5669725
pclass3rd      0.1296343

Selected 2 of 3 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: pclass3rd, pclass2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.2306901    RSS 239.6897    GRSq 0.01325722    RSq 0.01797283
> printh(summary(a1f, style="bf"))
===summary(a1f, style = "bf") 
Call: earth(formula=sex~pclass, trace=2, degree=2)

male =
  0.5669725
  + 0.1296343 * bf1

   bf1  pclass3rd

Selected 2 of 3 terms, and 1 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: pclass3rd, pclass2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.2306901    RSS 239.6897    GRSq 0.01325722    RSq 0.01797283
> if (PLOT)
+     plot(a1f)
> a2f <- earth(pclass ~ sex, degree=2, trace=2)        # x=unordered y=unordered
x[1046,1] with colname sexmale
y[1046,3] with colnames 1st 2nd 3rd

Forward pass: minspan 5 endspan 7    x[1046,1] 8.17 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0073 0.0120      0.01202    1      sexmale           0< 2             1 
4      0.0025 0.0120            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 3 terms, 2 terms used (DeltaRSq 0)
After forward pass GRSq 0.003 RSq 0.012
Forward pass complete: 3 terms, 2 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 3 nprune null: selected 2 of 2 terms, and 1 of 1 preds
After pruning pass GRSq 0.00728 RSq 0.012
> printh(summary(a2f))
===summary(a2f) 
Call: earth(formula=pclass~sex, trace=2, degree=2)

                   1st         2nd       3rd
(Intercept)  0.3427835  0.26546392 0.3917526
sexmale     -0.1133002 -0.02534234 0.1386426

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: RSq changed by less than 0.001 at 2 terms
Importance: sexmale
Number of terms at each degree of interaction: 1 1 (additive model)

          GCV      RSS         GRSq          RSq
1st 0.1961073 203.7578  0.010414990 0.0151441824
2nd 0.1883694 195.7180 -0.003997793 0.0008002778
3rd 0.2467207 256.3457  0.013257223 0.0179728324
All 0.6311974 655.8215  0.007279765 0.0120239411
> if (PLOT)
+     plot(a2f, nresponse=1)
> a3f <- earth(age ~ pclass, degree=2, trace=2)        # x=unordered y=numeric
x[1046,2] with colnames pclass2nd pclass3rd
y[1046,1] with colname age

Forward pass: minspan 6 endspan 8    x[1046,2] 16.3 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.1094 0.1136       0.1136    2    pclass3rd           0< 2             1 
4      0.1640 0.1720      0.05838    1    pclass2nd           0< 3             1 
6      0.1600 0.1720            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 5 terms, 3 terms used (DeltaRSq 0)
After forward pass GRSq 0.160 RSq 0.172
Forward pass complete: 5 terms, 3 terms used
Prune method "backward" penalty 3 nprune null: selected 3 of 3 terms, and 2 of 2 preds
After pruning pass GRSq 0.164 RSq 0.172
> printh(summary(a3f))
===summary(a3f) 
Call: earth(formula=age~pclass, trace=2, degree=2)

            coefficients
(Intercept)    39.159918
pclass2nd      -9.653213
pclass3rd     -14.343551

Selected 3 of 3 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 3 terms
Importance: pclass3rd, pclass2nd
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 173.8417    RSS 179758.3    GRSq 0.1640128    RSq 0.1719935
> if (PLOT)
+     plot(a3f)
> a4f <- earth(pclass ~ age, degree=2, trace=2)        # x=numeric y=unordered
x[1046,1] with colname age
y[1046,3] with colnames 1st 2nd 3rd

Forward pass: minspan 5 endspan 7    x[1046,1] 8.17 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0893 0.0980      0.09797    1          age          26  2   3         1 
4      0.0891 0.1021     0.004178    1          age          55  4             1 
6      0.0881 0.1055     0.003357    1          age          16  5             1 
8      0.0849 0.1067      0.00116    1          age          44  6             1 
10     0.0813 0.1075    0.0008104    1          age          48  7             1 reject (small DeltaRSq)

RSq changed by less than 0.001 at 9 terms, 6 terms used (DeltaRSq 0.00081)
After forward pass GRSq 0.081 RSq 0.107
Forward pass complete: 9 terms, 6 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 3 nprune null: selected 2 of 6 terms, and 1 of 1 preds
After pruning pass GRSq 0.093 RSq 0.0974
> printh(summary(a4f))
===summary(a4f) 
Call: earth(formula=pclass~age, trace=2, degree=2)

                   1st           2nd         3rd
(Intercept) 0.06439450  0.2563335580  0.67927195
h(age-16)   0.01388561 -0.0004566659 -0.01342895

Selected 2 of 6 terms, and 1 of 1 predictors
Termination condition: RSq changed by less than 0.001 at 6 terms
Importance: age
Number of terms at each degree of interaction: 1 1 (additive model)

          GCV      RSS         GRSq        RSq
1st 0.1670033 173.5184  0.157277818 0.16130516
2nd 0.1884855 195.8387 -0.004616749 0.00018428
3rd 0.2211945 229.8237  0.115347486 0.11957521
All 0.5766834 599.1808  0.093017132 0.09735157
> if (PLOT)
+     plot(a4f, nresponse=1)
> a5f <- earth(pclass ~ survived + sex + age, data=etitanic, degree=2, trace=2)  # x=mixed y=unordered
x[1046,3] with colnames survived sexmale age
y[1046,3] with colnames 1st 2nd 3rd

Forward pass: minspan 6 endspan 8    x[1046,3] 24.5 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.0893 0.0980      0.09797    3          age          26  2   3         1 
4      0.1500 0.1622       0.0642    1     survived           0< 4             1 
6      0.1557 0.1758      0.01364    3          age          16  5   6     4   2 
8      0.1603 0.1842     0.008445    2      sexmale           0< 7         4   2 
10     0.1631 0.1909     0.006652    2      sexmale           0< 8             1 
12     0.1616 0.1934      0.00253    3          age          57  9             1 
14     0.1599 0.1956     0.002212    2      sexmale           0< 10        2   2 
16     0.1541 0.1980     0.002352    3          age           5  11  12   10   2 
18     0.1529 0.2008     0.002846    3          age           2  13            1 
20     0.1495 0.2016    0.0007302    3          age          12  14        4   2 reject (small DeltaRSq)

RSq changed by less than 0.001 at 19 terms, 13 terms used (DeltaRSq 0.00073)
After forward pass GRSq 0.149 RSq 0.202
Forward pass complete: 19 terms, 13 terms used
Using EvalSubsetsUsingXtx because this is a multiple response model
Prune method "backward" penalty 3 nprune null: selected 7 of 13 terms, and 3 of 3 preds
After pruning pass GRSq 0.165 RSq 0.189
> printh(summary(a5f))
===summary(a5f) 
Call: earth(formula=pclass~survived+sex+age, data=etitanic, trace=2, degree=2)

                             1st          2nd         3rd
(Intercept)          -0.02151789  0.210092649  0.81142524
survived              0.36119246  0.144874864 -0.50606732
sexmale               0.07967096  0.115755401 -0.19542636
h(26-age)            -0.00070712 -0.013836973  0.01454409
h(age-26)             0.01592910 -0.003659393 -0.01226971
survived * sexmale   -0.07745396 -0.293062401  0.37051636
survived * h(16-age) -0.02037404  0.038860933 -0.01848689

Selected 7 of 13 terms, and 3 of 3 predictors
Termination condition: RSq changed by less than 0.001 at 13 terms
Importance: age, survived, sexmale
Number of terms at each degree of interaction: 1 4 2

          GCV      RSS       GRSq        RSq
1st 0.1502539 152.3942 0.24179781 0.26340816
2nd 0.1834402 186.0532 0.02227456 0.05014178
3rd 0.1970609 199.8680 0.21186826 0.23433166
All 0.5307550 538.3155 0.16525132 0.18904341
> if (PLOT)
+     plot(a5f, nresponse=1)
> a6f <- earth(survived ~ ., data=etitanic, degree=2, trace=2)  # x=mixed y=unordered
x[1046,6] with colnames pclass2nd pclass3rd sexmale age sibsp parch
y[1046,1] with colname survived

Forward pass: minspan 6 endspan 9    x[1046,6] 49 kB    bx[1046,21] 172 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.2860 0.2894       0.2894    3      sexmale           0< 2             1 
4      0.3297 0.3361      0.04669    2    pclass3rd           0< 3             1 
6      0.3588 0.3710      0.03488    4          age          16  4   5     2   2 
8      0.3962 0.4106      0.03954    1    pclass2nd           0< 6         2   2 
10     0.4143 0.4338       0.0232    5        sibsp           4  7   8     4   2 
12     0.4133 0.4383     0.004574    6        parch           1  9   10        1 
14     0.4150 0.4427      0.00437    2    pclass3rd           0< 11        2   2 
16     0.4116 0.4449     0.002169    5        sibsp           1  12  13    2   2 
18     0.4087 0.4477     0.002807    4          age          17  14  15   13   2 
20     0.4056 0.4502     0.002549    4          age          32  16  17        1 final (reached nk 21)

Reached nk 21
After forward pass GRSq 0.406 RSq 0.450
Forward pass complete: 21 terms, 17 terms used
Prune method "backward" penalty 3 nprune null: selected 8 of 17 terms, and 5 of 6 preds
After pruning pass GRSq 0.42 RSq 0.439
> printh(summary(a6f))
===summary(a6f) 
Call: earth(formula=survived~., data=etitanic, trace=2, degree=2)

                       coefficients
(Intercept)              0.96170950
pclass3rd               -0.81545352
sexmale                 -0.57003496
h(age-32)               -0.00471938
pclass2nd * sexmale     -0.26568920
pclass3rd * sexmale      0.19310203
pclass3rd * h(4-sibsp)   0.10222181
sexmale * h(16-age)      0.04505232

Selected 8 of 17 terms, and 5 of 6 predictors
Termination condition: Reached nk 21
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch-unused
Number of terms at each degree of interaction: 1 3 4
GCV 0.1404529    RSS 141.7629    GRSq 0.4197106    RSq 0.4389834
> if (PLOT)
+     plot(a6f)
> detach(etitanic)
> 
> # basic test with ordered factors
> ff <- factor(substring("statistics", 1:10, 1:10), levels=letters, ordered=TRUE)
> ff <- c(ff, ff, ff)
> vowels = (ff == 1 | ff == 9) * 3
> printh(head(ff))
===head(ff) 
[1] 19 20  1 20  9 19
> printh(head(vowels))
===head(vowels) 
[1] 0 0 3 0 3 0
> a8 <- earth(ff, vowels, degree=1, trace=2)        # x=ordered y=numeric
x[30,1] with colname ff
y[30,1] with colname vowels

Forward pass: minspan 3 endspan 7    x[30,1] 240 B    bx[30,21] 4.92 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.5906 0.6958       0.6958    1           ff           9  2   3         1 
4      0.5250 0.7012     0.005454    1           ff          19  4             1 
6      0.4302 0.7012            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 5 terms, 4 terms used (DeltaRSq 0)
After forward pass GRSq 0.430 RSq 0.701
Forward pass complete: 5 terms, 4 terms used
Prune method "backward" penalty 2 nprune null: selected 3 of 4 terms, and 1 of 1 preds
After pruning pass GRSq 0.591 RSq 0.696
> printh(summary(a8))
===summary(a8) 
Call: earth(x=ff, y=vowels, trace=2, degree=1)

            coefficients
(Intercept)    2.7464305
h(9-ff)       -0.1445003
h(ff-9)       -0.2609730

Selected 3 of 4 terms, and 1 of 1 predictors
Termination condition: RSq changed by less than 0.001 at 4 terms
Importance: ff
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 0.828019    RSS 17.2504    GRSq 0.5906149    RSq 0.6957602
> if (PLOT)
+     plot(a8, nresponse=1)
> a9 <- earth(vowels, ff, degree=1, trace=2)        # x=numeric y=ordered
x[30,1] with colname vowels
y[30,1] with colname ff

Forward pass: minspan 3 endspan 7    x[30,1] 240 B    bx[30,21] 4.92 kB

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Par Deg
1      0.0000 0.0000                    (Intercept)
2      0.3877 0.4693       0.4693    1       vowels           0< 2             1 
4      0.2858 0.4693            0    -                                       reject (no DeltaRsq)

RSq changed by less than 0.001 at 3 terms, 2 terms used (DeltaRSq 0)
After forward pass GRSq 0.286 RSq 0.469
Forward pass complete: 3 terms, 2 terms used
Prune method "backward" penalty 2 nprune null: selected 2 of 2 terms, and 1 of 1 preds
After pruning pass GRSq 0.388 RSq 0.469
> if (PLOT)
+     plot(a9, nresponse=1)
> printh(summary(a9))
===summary(a9) 
Call: earth(x=vowels, y=ff, trace=2, degree=1)

            coefficients
(Intercept)    17.142857
vowels         -3.603175

Selected 2 of 2 terms, and 1 of 1 predictors
Termination condition: RSq changed by less than 0.001 at 2 terms
Importance: vowels
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 34.2622    RSS 832.5714    GRSq 0.38772    RSq 0.4692603
> 
> cat("--- wp argument---------------------------------\n")
--- wp argument---------------------------------
> set.seed(79)
> NWP <- 100
> x1 <- runif(NWP)
> x2 <- runif(NWP)
> y1 <- (x1 > .5) + .3 * runif(1)
> y2 <- sin(3 * x2) + .3 * runif(1)
> myw <- 10
> m <- mars(cbind(x1,x2), cbind(y1, y2))
> me1 <- mars.to.earth(m)
Converted mars(x=cbind(x1,x2), y=cbind(y1,y2))

to earth(x=cbind(x1,x2), y=cbind(y1,y2))

> printh(me1)
===me1 
Selected 7 of 13 terms, and 2 of 2 predictors
Termination condition: Unknown
Importance: object has no prune.terms, call update() on the model to fix that
Number of terms at each degree of interaction: 1 6 (additive model)

             GCV        RSS      GRSq       RSq
y1  0.0212617234 1.60929985 0.9166455 0.9356280
y2  0.0006116807 0.04629811 0.9940111 0.9953750
All 0.0218734041 1.65559796 0.9390624 0.9529398
> e1 <- earth(cbind(x1,x2), cbind(y1, y2))
> printh(e1)
===e1 
Selected 7 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

             GCV        RSS      GRSq       RSq
y1  0.0252890017 1.91412454 0.9008570 0.9234350
y2  0.0007586223 0.05742013 0.9925725 0.9942639
All 0.0260476241 1.97154466 0.9270808 0.9436868
> e2 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(1,1))
> printh(e2)
===e2 
Selected 7 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

             GCV        RSS      GRSq       RSq
y1  0.0252890017 1.91412454 0.9008570 0.9234350
y2  0.0007586223 0.05742013 0.9925725 0.9942639
All 0.0260476241 1.97154466 0.9270808 0.9436868
> e1$call <- NULL
> e2$call <- NULL
> e1$wp <- NULL
> e2$wp <- NULL
> stopifnot(identical(e1, e2))
> e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(.001,1))
> printh(e3)
===e3 
Selected 6 of 7 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 7 terms
Importance: x2, x1
Number of terms at each degree of interaction: 1 5 (additive model)

            GCV       RSS      GRSq       RSq
y1  0.058039265 4.5972902 0.7724629 0.8161084
y2  0.000297713 0.0235818 0.9970851 0.9976443
All 0.000710793 0.0563019 0.9965256 0.9971920
> wp <- c(1, 2)
> e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=wp)
> printh(e3)
===e3 
Selected 7 of 9 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 9 terms
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

             GCV        RSS      GRSq       RSq
y1  0.0252890017 1.91412454 0.9008570 0.9234350
y2  0.0007586223 0.05742013 0.9925725 0.9942639
All 0.0178708309 1.35264319 0.9416429 0.9549327
> m3 <- mars(cbind(x1,x2), cbind(y1, y2),  wp=wp)
> cat("response weights: wp", wp, "earth gcv", e3$gcv,
+     "mars gcv", m3$gcv, "mars gcv*length(wp)",
+     m3$gcv * length(wp), "\n")
response weights: wp 1 2 earth gcv 0.01787083 mars gcv 0.007495028 mars gcv*length(wp) 0.01499006 
> 
> e4 <- earth(cbind(O3, O3) ~ ., data=ozone1, wp=c(1, .01))
> printh(e4) # both sub models should be the same
===e4 
Selected 12 of 20 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, dpg, doy, vh, vis, ibt, ibh, wind
Number of terms at each degree of interaction: 1 11 (additive model)

          GCV      RSS      GRSq       RSq
O3   14.61004 4172.671 0.7730502 0.8023874
O3.1 14.61004 4172.671 0.7730502 0.8023874
All  29.22008 8345.342 0.7730502 0.8023874
> printh(summary(e4))
===summary(e4) 
Call: earth(formula=cbind(O3,O3)~., data=ozone1, wp=c(1,0.01))

                       O3       O3.1
(Intercept)    14.1595171 14.1595171
h(5860-vh)     -0.0137728 -0.0137728
h(wind-3)      -0.3377222 -0.3377222
h(54-humidity) -0.1349547 -0.1349547
h(temp-58)      0.2791320  0.2791320
h(1105-ibh)    -0.0033837 -0.0033837
h(dpg-10)      -0.0991581 -0.0991581
h(ibt-120)      0.0326330  0.0326330
h(150-vis)      0.0231881  0.0231881
h(96-doy)      -0.1105145 -0.1105145
h(doy-96)       0.0406468  0.0406468
h(doy-158)     -0.0836732 -0.0836732

Selected 12 of 20 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, dpg, doy, vh, vis, ibt, ibh, wind
Number of terms at each degree of interaction: 1 11 (additive model)

          GCV      RSS      GRSq       RSq
O3   14.61004 4172.671 0.7730502 0.8023874
O3.1 14.61004 4172.671 0.7730502 0.8023874
All  29.22008 8345.342 0.7730502 0.8023874
> 
> # wp with formula interface
> e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(1, 1))
> printh(e5)
===e5 
Selected 12 of 19 terms, and 8 of 8 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, dpg, doy, vh, vis, ibh, ibt
Number of terms at each degree of interaction: 1 11 (additive model)

           GCV       RSS      GRSq       RSq
O3   14.902776 4256.2781 0.7685029 0.7984278
wind  3.488862  996.4297 0.2238615 0.3241907
All  18.391639 5252.7078 0.7329545 0.7674747
> printh(summary(e5))
===summary(e5) 
Call: earth(formula=cbind(O3,wind)~., data=ozone1, wp=c(1,1))

                       O3       wind
(Intercept)    10.5988809  5.6114349
h(5610-vh)     -0.0201264  0.0125912
h(vh-5610)      0.0181809 -0.0060755
h(54-humidity) -0.1506629  0.0119373
h(temp-56)      0.2646075  0.0550381
h(1105-ibh)    -0.0034196 -0.0008298
h(dpg-13)      -0.0954378  0.0046173
h(ibt-120)      0.0336582 -0.0045594
h(150-vis)      0.0217267 -0.0006158
h(96-doy)      -0.1307894 -0.0090201
h(doy-158)     -0.0418477  0.0043672
h(doy-312)      0.0359320 -0.0570514

Selected 12 of 19 terms, and 8 of 8 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, dpg, doy, vh, vis, ibh, ibt
Number of terms at each degree of interaction: 1 11 (additive model)

           GCV       RSS      GRSq       RSq
O3   14.902776 4256.2781 0.7685029 0.7984278
wind  3.488862  996.4297 0.2238615 0.3241907
All  18.391639 5252.7078 0.7329545 0.7674747
> e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(.3, 1))
> printh(e5)
===e5 
Selected 11 of 19 terms, and 7 of 8 predictors
Termination condition: Reached nk 21
Importance: temp, ibh, doy, humidity, dpg, vh, vis, ibt-unused
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV       RSS      GRSq       RSq
O3   15.271877 4418.7094 0.7627693 0.7907353
wind  3.410203  986.6958 0.2413602 0.3307925
All  12.295025 3557.3978 0.6643222 0.7038936
> printh(summary(e5))
===summary(e5) 
Call: earth(formula=cbind(O3,wind)~., data=ozone1, wp=c(0.3,1))

                       O3       wind
(Intercept)     7.4506335  4.6371421
h(5610-vh)     -0.0141304  0.0118244
h(vh-5610)      0.0175637 -0.0038642
h(humidity-23)  0.0838361  0.0071938
h(temp-55)      0.3675094  0.0292957
h(ibh-1105)    -0.0004039  0.0002864
h(dpg-13)      -0.0862256  0.0011425
h(150-vis)      0.0197846 -0.0005190
h(96-doy)      -0.1367936 -0.0089124
h(doy-150)     -0.0391186  0.0036656
h(doy-294)      0.0273699 -0.0421686

Selected 11 of 19 terms, and 7 of 8 predictors
Termination condition: Reached nk 21
Importance: temp, ibh, doy, humidity, dpg, vh, vis, ibt-unused
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV       RSS      GRSq       RSq
O3   15.271877 4418.7094 0.7627693 0.7907353
wind  3.410203  986.6958 0.2413602 0.3307925
All  12.295025 3557.3978 0.6643222 0.7038936
> # wp with factors
> e6 <- earth(pclass ~ ., data=etitanic, degree=2, wp=c(.001,.001,1))
> printh(e6)
===e6 
Selected 9 of 18 terms, and 5 of 5 predictors
Termination condition: Reached nk 21
Importance: age, survived, sexmale, sibsp, parch
Number of terms at each degree of interaction: 1 5 3

          GCV      RSS      GRSq        RSq
1st 0.1498185 150.4809 0.2439951 0.27265613
2nd 0.1876176 188.4472 0.0000000 0.03791987
3rd 0.1888766 189.7117 0.2446010 0.27323905
All 0.5665090 569.0139 0.2444172 0.27306228
> printh(summary(e6))
===summary(e6) 
Call: earth(formula=pclass~., data=etitanic, wp=c(0.001,0.001,1), degree=2)

                                1st          2nd         3rd
(Intercept)            -0.013576232  0.282485118  0.73109111
survived                0.312918412  0.174952174 -0.48787059
sexmale                 0.073351259  0.149478916 -0.22283017
h(age-9)                0.011822473 -0.003165402 -0.00865707
h(1-sibsp)             -0.090396669 -0.045506746  0.13590342
h(parch-2)             -0.120345986 -0.075313793  0.19565978
survived * sexmale     -0.077447025 -0.291809662  0.36925669
h(21-age) * h(sibsp-1) -0.001063853 -0.008028212  0.00909206
h(57-age) * h(2-parch) -0.001527820 -0.001150068  0.00267789

Selected 9 of 18 terms, and 5 of 5 predictors
Termination condition: Reached nk 21
Importance: age, survived, sexmale, sibsp, parch
Number of terms at each degree of interaction: 1 5 3

          GCV      RSS      GRSq        RSq
1st 0.1498185 150.4809 0.2439951 0.27265613
2nd 0.1876176 188.4472 0.0000000 0.03791987
3rd 0.1888766 189.7117 0.2446010 0.27323905
All 0.5665090 569.0139 0.2444172 0.27306228
> e7 <- earth(pclass ~ ., data=etitanic, degree=2, wp=c(1,.001,.001))
> printh(e7)
===e7 
Selected 8 of 17 terms, and 4 of 5 predictors
Termination condition: Reached nk 21
Importance: age, parch, survived, sibsp, sexmale-unused
Number of terms at each degree of interaction: 1 3 4

          GCV      RSS        GRSq        RSq
1st 0.1446768 146.0263  0.26994041 0.29418743
2nd 0.1903255 192.1007 -0.01442347 0.01926795
3rd 0.1977757 199.6204  0.20900943 0.23528011
All 0.4343262 438.3772  0.26959508 0.29385356
> printh(summary(e7))
===summary(e7) 
Call: earth(formula=pclass~., data=etitanic, wp=c(1,0.001,0.001), degree=2)

                                1st          2nd         3rd
(Intercept)              0.11122944  0.208223042  0.68054751
survived                 0.36895988 -0.129640255 -0.23931962
h(age-44)                0.03812399 -0.007721391 -0.03040260
h(2-parch)               0.17926095  0.072120537 -0.25138149
survived * h(52-age)    -0.00527271  0.006970050 -0.00169734
h(48-age) * h(2-parch)  -0.00631659 -0.002155682  0.00847228
h(age-48) * h(2-parch)  -0.02034190  0.002942071  0.01739983
h(1-sibsp) * h(1-parch) -0.13130286 -0.036388271  0.16769113

Selected 8 of 17 terms, and 4 of 5 predictors
Termination condition: Reached nk 21
Importance: age, parch, survived, sibsp, sexmale-unused
Number of terms at each degree of interaction: 1 3 4

          GCV      RSS        GRSq        RSq
1st 0.1446768 146.0263  0.26994041 0.29418743
2nd 0.1903255 192.1007 -0.01442347 0.01926795
3rd 0.1977757 199.6204  0.20900943 0.23528011
All 0.4343262 438.3772  0.26959508 0.29385356
> if (PLOT)
+     plot(e7, pt.col=as.numeric(etitanic$pclass)+1, nresponse=1)
> 
> cat("--- earth.regress ---------------------------------\n")
--- earth.regress ---------------------------------
> 
> msg = "earth.regress with trees data, single response, no weights"
> cat("Test:", msg, "\n")
Test: earth.regress with trees data, single response, no weights 
> 
> data(trees)
> y <- trees$Volume
> x <- cbind(trees$Girth, trees$Height)
> colnames(x) <- c("girth", "height")
> 
> a.lm <- lm(y ~ x)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2)
> if (is.null(dim(a.lm$coefficients)))
+     dim(a.lm$coefficients) <- c(length(a.lm$coefficients), 1)
> a <- earth:::earth.regress(x, y)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]"))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]"))
> 
> msg = "earth.regress with ozone1 data, multiple responses, no weights"
> cat("Test:", msg, "\n")
Test: earth.regress with ozone1 data, multiple responses, no weights 
> 
> data(ozone1)
> y <- cbind(ozone1$O3, ozone1$O3 ^ 2)
> colnames(y) <- c("O3", "O32")
> x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp)
> colnames(x) <- c("wind", "humidity", "temp")
> 
> a.lm <- lm(y ~ x)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2)
> a <- earth:::earth.regress(x, y)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]"))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]", sep=""))
> 
> # msg = "earth.regress with ozone1 data, multiple responses with case weights"
> # cat("Test:", msg, "\n")
> #
> # # options(digits=10)
> # weights. <- rep(.5, nrow(x))
> # weights.[1] <- 1
> # weights.[2] <- 2
> # weights.[3] <- 3
> # weights.[4] <- 4
> # weights.[5] <- 5
> # a.lm <- lm(y ~ x, weights=weights.)
> # # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> # a.lm.rss <- sum(a.lm$residuals^2)
> # a <- earth:::earth.regress(x, y, weights=weights.)
> # rownames(a.lm$coefficients) <- rownames(a$coefficients)
> # check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]", sep=""))
> 
> # msg = "earth.regress case weights with zero weights 1"
> # cat("Test:", msg, "\n")
> #
> # weights. <- rep(1, nrow(x))
> # weights.[2] <- 0
> # weights.[4] <- 0
> # a.lm <- lm(y ~ x, weights=weights.)
> # # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> # a.lm.rss <- sum(a.lm$residuals^2)
> # a <- earth:::earth.regress(x, y, weights=weights.)
> # rownames(a.lm$coefficients) <- rownames(a$coefficients)
> # # options(digits=10)
> # check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> #
> # msg = "earth.regress case weights with zero weights 2"
> # cat("Test:", msg, "\n")
> # weights. <- rep(1, nrow(x))
> # weights.[5] <- 0
> # weights.[6] <- 0
> # weights.[7] <- 0
> # weights.[21] <- 0
> # weights.[22] <- 0
> # weights.[23] <- 0
> # weights.[24] <- 0
> # weights.[25] <- 0
> # weights.[26] <- 0
> # weights.[27] <- 0
> # a.lm <- lm(y ~ x, weights=weights.)
> # # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> # a.lm.rss <- sum(a.lm$residuals^2)
> # a <- earth:::earth.regress(x, y, weights=weights.)
> # rownames(a.lm$coefficients) <- rownames(a$coefficients)
> # check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> #
> # msg = "earth.regress case weights with zero weights and missing columns 1"
> # cat("Test:", msg, "\n")
> # x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp, ozone1$wind^2, ozone1$humidity^2, ozone1$temp^2)
> # weights. <- rep(1, nrow(x))
> # weights.[5] <- 0
> # weights.[6] <- 0
> # weights.[7] <- 0
> # weights.[21] <- 0
> # weights.[22] <- 0
> # weights.[23] <- 0
> # weights.[24] <- 0
> # weights.[25] <- 0
> # weights.[26] <- 0
> # weights.[27] <- 0
> # colnames(x) <- c("wind", "humidity", "temp", "wind2", "humidity2", "temp2")
> # used.cols = as.logical(c(1,0,1,0,1,1))
> # x.missing <- x[,used.cols]
> # a.lm <- lm(y ~ x.missing, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> # a.lm.rss <- sum(a.lm$residuals^2)
> # a <- earth:::earth.regress(x, y, weights=weights., used.cols=used.cols)
> # rownames(a.lm$coefficients) <- rownames(a$coefficients)
> # check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> #
> # msg = "earth.regress case weights with zero weights and missing columns 2"
> # cat("Test:", msg, "\n")
> # x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp, ozone1$wind^2, ozone1$humidity^2, ozone1$temp^2)
> # weights. <- rep(1, nrow(x))
> # weights.[5] <- .1
> # weights.[6] <- .2
> # weights.[7] <- 1.9
> # weights.[21] <- .59
> # colnames(x) <- c("wind", "humidity", "temp", "wind2", "humidity2", "temp2")
> # used.cols = as.logical(c(0,1,0,0,1,0))
> # x.missing <- x[,used.cols]
> # a.lm <- lm(y ~ x.missing, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> # a.lm.rss <- sum(a.lm$residuals^2)
> # a <- earth:::earth.regress(x, y, weights=weights., used.cols=used.cols)
> # rownames(a.lm$coefficients) <- rownames(a$coefficients)
> # check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> # check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> cat("---standard method functions ------------------------\n")
---standard method functions ------------------------
> 
> short.etitanic <- etitanic[seq(from=1, to=1000, by=20),]
> a1 <- earth(pclass ~ ., data=short.etitanic, glm=list(family=binomial), trace=0)
> printh(variable.names(a1))
===variable.names(a1) 
[1] "survived" "sexmale"  "age"      "sibsp"    "parch"   
> printh(case.names(a1))
===case.names(a1) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> printh(case.names(a1, use.names=FALSE))
===case.names(a1, use.names = FALSE) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> 
> named.short.etitanic <- short.etitanic
> rownames(named.short.etitanic) <- paste("xx", 1:nrow(named.short.etitanic))
> a2 <- earth(pclass ~ ., data=named.short.etitanic, glm=list(family=binomial), trace=0)
> printh(variable.names(a2))
===variable.names(a2) 
[1] "survived" "sexmale"  "age"      "sibsp"    "parch"   
> printh(case.names(a2))
===case.names(a2) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> printh(case.names(a2, use.names=FALSE))
===case.names(a2, use.names = FALSE) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> 
> printh(deviance(a1), expect.warning=TRUE)
===deviance(a1)  expect warning -->Warning: deviance.earth: returning earth (not GLM) deviance
[1] 25.48701
> printh(deviance(a1, warn=FALSE))
===deviance(a1, warn = FALSE) [1] 25.48701
> printh(effects(a1), expect.warning=TRUE)
===effects(a1)  expect warning -->Warning: effects.earth: returning NULL
NULL
> printh(effects(a1, warn=FALSE))
===effects(a1, warn = FALSE) NULL
> printh(family(a1))
===family(a1) 

Family: binomial 
Link function: logit 

> printh(anova(a1), expect.warning=TRUE)
===anova(a1)  expect warning -->Warning: anova.earth: returning NULL
NULL
> printh(anova(a1, warn=FALSE))
===anova(a1, warn = FALSE) NULL
> printh(family(a1))
===family(a1) 

Family: binomial 
Link function: logit 

> 
> # TODO removed because causes different results on different machines
> # cat("--- thresh=0 -----------------------------------------\n")
> #
> # a.no.thresh <- earth(O3 ~ ., data = ozone1, thresh=0, nk=1000, degree=2, trace=4)
> # printh(a.no.thresh)
> # printh(summary(a.no.thresh))
> # plotmo(a.no.thresh, degree1=1, degree2=c(4,9,16), clip=0, , caption="test with thresh=0", trace=-1)
> 
> # test the way plotmo gets the data with earth with a formula interface
> # use strange data name se to make sure eval gets correct environment (don't pick up se in plotmo)
> se <- ozone1
> a <- earth(O3 ~ ., data=se, degree=2, keepxy=0)
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=se, keepxy=0, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> plotmo(a, trace=2, caption="getdata earth test1")
using the environment saved with the earth model: R_GlobalEnv
plotmo trace 2: plotmo(object=a, caption="getdata earth test1", trace=2)
object$call is earth(formula=O3~., data=se, keepxy=0, degree=2)
--plotmo_x for earth object
object$x is NULL (and it has no colnames)
object$call is earth(formula=O3~., data=se, keepxy=0, degree=2)
formula(object) is O3~vh+wind+humidity+temp+ibh+dpg+ibt+vis+doy
naked formula is the same
formula is valid, now looking for data for the model.frame
object$model is NULL (and it has no colnames)
object$data is NULL (and it has no colnames)
argument 2 of the call is 'data'
eval(call$data, R_GlobalEnv)
call$data is usable and has column names O3 vh wind humidity temp ibh dpg ibt vis doy
na.action(object) is "na.fail"
stats::model.frame(O3~vh+wind+humidi..., data=call$data, na.action="na.fail")
model.frame[,-1] is usable and has column names vh wind humidity temp ibh dpg ibt vis doy
plotmo_x returned[330,9]:
      vh wind humidity temp  ibh dpg ibt vis doy
1   5710    4       28   40 2693 -25  87 250  33
2   5700    3       37   45  590 -24 128 100  34
3   5760    3       51   54 1450  25 139  60  35
... 5720    4       69   35 1568  15 121  60  36
330 5550    4       85   39 5000   8  44 100 390

----Metadata: plotmo_predict with nresponse=NULL and newdata=NULL
calling predict.earth with NULL newdata
stats::predict(earth.object, NULL, type="response")
predict returned[330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976
predict after processing with nresponse=NULL is [330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976

----Metadata: plotmo_fitted with nresponse=NULL
stats::fitted(object=earth.object)
fitted(object) returned[330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976
fitted(object) after processing with nresponse=NULL is [330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976

----Metadata: plotmo_y with nresponse=NULL
--plotmo_y with nresponse=NULL for earth object
object$y is NULL (and it has no colnames)
object$call is earth(formula=O3~., data=se, keepxy=0, degree=2)
formula(object) is O3~vh+wind+humidity+temp+ibh+dpg+ibt+vis+doy
naked formula is the same
formula is valid, now looking for data for the model.frame
object$model is NULL (and it has no colnames)
object$data is NULL (and it has no colnames)
argument 2 of the call is 'data'
eval(call$data, R_GlobalEnv)
call$data is usable and has column names O3 vh wind humidity temp ibh dpg ibt vis doy
na.action(object) is "na.fail"
stats::model.frame(O3~vh+wind+humidi..., data=call$data, na.action="na.fail")
model.frame[,1] is usable and has column name O3
plotmo_y returned[330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
plotmo_y after processing with nresponse=NULL is [330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
converted nresponse=NA to nresponse=1
nresponse=1 (was NA) ncol(fitted) 1 ncol(predict) 1 ncol(y) 1

----Metadata: plotmo_y with nresponse=1
--plotmo_y with nresponse=1 for earth object
object$y is NULL (and it has no colnames)
object$call is earth(formula=O3~., data=se, keepxy=0, degree=2)
formula(object) is O3~vh+wind+humidity+temp+ibh+dpg+ibt+vis+doy
formula is valid, now looking for data for the model.frame
object$model is NULL (and it has no colnames)
object$data is NULL (and it has no colnames)
argument 2 of the call is 'data'
eval(call$data, R_GlobalEnv)
call$data is usable and has column names O3 vh wind humidity temp ibh dpg ibt vis doy
na.action(object) is "na.fail"
stats::model.frame(O3~vh+wind+humidi..., data=call$data, na.action="na.fail")
model.frame[,1] is usable and has column name O3
got model response from model.frame(O3~vh+wind+humidi..., data=call$data, na.action="na.fail")
plotmo_y returned[330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
plotmo_y after processing with nresponse=1 is [330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
got response name "O3" from yhat
resp.levs is NULL

----Metadata: done

number of x values: vh 53 wind 11 humidity 65 temp 63 ibh 196 dpg 128 ibt 193...

----plotmo_singles for earth object
singles: 4 temp, 7 ibt, 8 vis, 9 doy 

----plotmo_pairs for earth object
pairs:
     [,1]         [,2]    
[1,] "1 vh"       "4 temp"
[2,] "2 wind"     "8 vis" 
[3,] "3 humidity" "4 temp"
[4,] "4 temp"     "6 dpg" 
[5,] "5 ibh"      "6 dpg" 

graphics::par(mfrow=c(3,3), mgp=c(1.5,0.4,0), tcl=-0.3, font.main=2,
              mar=c(3,2,1.2,0.8), oma=c(0,0,4,0), cex.main=1.2, cex.lab=1,
              cex.axis=1, cex=0.66)

----Figuring out ylim
--get.ylim.by.dummy.plots
--plot.degree1(draw.plot=FALSE)

 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5

degree1 plot 1 temp
newdata[50,9]:
      vh wind humidity     temp    ibh dpg   ibt vis   doy
1   5760    5       64 25.00000 2112.5  24 167.5 120 205.5
2   5760    5       64 26.38776 2112.5  24 167.5 120 205.5
3   5760    5       64 27.77551 2112.5  24 167.5 120 205.5
... 5760    5       64 29.16327 2112.5  24 167.5 120 205.5
50  5760    5       64 93.00000 2112.5  24 167.5 120 205.5
stats::predict(earth.object, data.frame[50,9], type="response")
predict returned[50,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
50  28.24212
predict after processing with nresponse=1 is [50,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
50  28.24212
Reducing trace level for subsequent degree1 plots
degree1 plot 2 ibt
degree1 plot 3 vis
degree1 plot 4 doy
--plot.degree2(draw.plot=FALSE)
degree2 plot 1 vh:temp
newdata[400,9]:
          vh wind humidity temp    ibh dpg   ibt vis   doy
1   5320.000    5       64   25 2112.5  24 167.5 120 205.5
2   5353.158    5       64   25 2112.5  24 167.5 120 205.5
3   5386.316    5       64   25 2112.5  24 167.5 120 205.5
... 5419.474    5       64   25 2112.5  24 167.5 120 205.5
400 5950.000    5       64   93 2112.5  24 167.5 120 205.5
stats::predict(earth.object, data.frame[400,9], type="response")
predict returned[400,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
400 28.24212
predict after processing with nresponse=1 is [400,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
400 28.24212
Reducing trace level for subsequent degree2 plots
degree2 plot 2 wind:vis
degree2 plot 3 humidity:temp
degree2 plot 4 temp:dpg
degree2 plot 5 ibh:dpg
--done get.ylim.by.dummy.plots

ylim c(-15.89, 38.55)    clip TRUE

--plot.degree1(draw.plot=TRUE)
graphics::plot.default(x=c(25,26.39,27.7...), y=c(11.16,11.16,1...), type="n",
                       main="1 temp", xlab="", ylab="", xaxt="s", yaxt="s",
                       xlim=c(25,93), ylim=c(-15.89,38.55))
--plot.degree2(draw.plot=TRUE)
persp(vh:temp) theta -35
persp(wind:vis) theta 145
persp(humidity:temp) theta -35
persp(temp:dpg) theta 235
persp(ibh:dpg) theta 235
> a <- earth(O3 ~ ., data=se, degree=2, keepxy=1)
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=se, keepxy=1, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> plotmo(a, trace=1, caption="getdata earth test2")
stats::predict(earth.object, NULL, type="response")
stats::fitted(object=earth.object)
got model response from object$y

 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5

> a <- earth(O3 ~ ., data=se, degree=2, keepxy=1)
> se <- NULL
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=se, keepxy=1, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> plotmo(a, trace=2, caption="getdata earth test3")
using the environment saved with the earth model: R_GlobalEnv
plotmo trace 2: plotmo(object=a, caption="getdata earth test3", trace=2)
object$call is earth(formula=O3~., data=se, keepxy=1, degree=2)
--plotmo_x for earth object
object$x is NULL (and it has no colnames)
object$call is earth(formula=O3~., data=se, keepxy=1, degree=2)
formula(object) is O3~vh+wind+humidity+temp+ibh+dpg+ibt+vis+doy
naked formula is the same
formula is valid, now looking for data for the model.frame
object$model is NULL (and it has no colnames)
object$data is usable and has column names O3 vh wind humidity temp ibh dpg ibt vis doy
na.action(object) is "na.fail"
stats::model.frame(O3~vh+wind+humidi..., data=object$data, na.action="na.fail")
model.frame[,-1] is usable and has column names vh wind humidity temp ibh dpg ibt vis doy
plotmo_x returned[330,9]:
      vh wind humidity temp  ibh dpg ibt vis doy
1   5710    4       28   40 2693 -25  87 250  33
2   5700    3       37   45  590 -24 128 100  34
3   5760    3       51   54 1450  25 139  60  35
... 5720    4       69   35 1568  15 121  60  36
330 5550    4       85   39 5000   8  44 100 390

----Metadata: plotmo_predict with nresponse=NULL and newdata=NULL
calling predict.earth with NULL newdata
stats::predict(earth.object, NULL, type="response")
predict returned[330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976
predict after processing with nresponse=NULL is [330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976

----Metadata: plotmo_fitted with nresponse=NULL
stats::fitted(object=earth.object)
fitted(object) returned[330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976
fitted(object) after processing with nresponse=NULL is [330,1]:
           O3
1   0.6423433
2   2.4875500
3   6.3679385
... 5.6710623
330 1.5521976

----Metadata: plotmo_y with nresponse=NULL
--plotmo_y with nresponse=NULL for earth object
object$y is usable and has column name O3
plotmo_y returned[330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
plotmo_y after processing with nresponse=NULL is [330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
converted nresponse=NA to nresponse=1
nresponse=1 (was NA) ncol(fitted) 1 ncol(predict) 1 ncol(y) 1

----Metadata: plotmo_y with nresponse=1
--plotmo_y with nresponse=1 for earth object
object$y is usable and has column name O3
got model response from object$y
plotmo_y returned[330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
plotmo_y after processing with nresponse=1 is [330,1]:
    O3
1    3
2    5
3    5
...  6
330  1
got response name "O3" from yhat
resp.levs is NULL

----Metadata: done

number of x values: vh 53 wind 11 humidity 65 temp 63 ibh 196 dpg 128 ibt 193...

----plotmo_singles for earth object
singles: 4 temp, 7 ibt, 8 vis, 9 doy 

----plotmo_pairs for earth object
pairs:
     [,1]         [,2]    
[1,] "1 vh"       "4 temp"
[2,] "2 wind"     "8 vis" 
[3,] "3 humidity" "4 temp"
[4,] "4 temp"     "6 dpg" 
[5,] "5 ibh"      "6 dpg" 

graphics::par(mfrow=c(3,3), mgp=c(1.5,0.4,0), tcl=-0.3, font.main=2,
              mar=c(3,2,1.2,0.8), oma=c(0,0,4,0), cex.main=1.2, cex.lab=1,
              cex.axis=1, cex=0.66)

----Figuring out ylim
--get.ylim.by.dummy.plots
--plot.degree1(draw.plot=FALSE)

 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5

degree1 plot 1 temp
newdata[50,9]:
      vh wind humidity     temp    ibh dpg   ibt vis   doy
1   5760    5       64 25.00000 2112.5  24 167.5 120 205.5
2   5760    5       64 26.38776 2112.5  24 167.5 120 205.5
3   5760    5       64 27.77551 2112.5  24 167.5 120 205.5
... 5760    5       64 29.16327 2112.5  24 167.5 120 205.5
50  5760    5       64 93.00000 2112.5  24 167.5 120 205.5
stats::predict(earth.object, data.frame[50,9], type="response")
predict returned[50,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
50  28.24212
predict after processing with nresponse=1 is [50,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
50  28.24212
Reducing trace level for subsequent degree1 plots
degree1 plot 2 ibt
degree1 plot 3 vis
degree1 plot 4 doy
--plot.degree2(draw.plot=FALSE)
degree2 plot 1 vh:temp
newdata[400,9]:
          vh wind humidity temp    ibh dpg   ibt vis   doy
1   5320.000    5       64   25 2112.5  24 167.5 120 205.5
2   5353.158    5       64   25 2112.5  24 167.5 120 205.5
3   5386.316    5       64   25 2112.5  24 167.5 120 205.5
... 5419.474    5       64   25 2112.5  24 167.5 120 205.5
400 5950.000    5       64   93 2112.5  24 167.5 120 205.5
stats::predict(earth.object, data.frame[400,9], type="response")
predict returned[400,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
400 28.24212
predict after processing with nresponse=1 is [400,1]:
          O3
1   11.16010
2   11.16010
3   11.16010
... 11.16010
400 28.24212
Reducing trace level for subsequent degree2 plots
degree2 plot 2 wind:vis
degree2 plot 3 humidity:temp
degree2 plot 4 temp:dpg
degree2 plot 5 ibh:dpg
--done get.ylim.by.dummy.plots

ylim c(-15.89, 38.55)    clip TRUE

--plot.degree1(draw.plot=TRUE)
graphics::plot.default(x=c(25,26.39,27.7...), y=c(11.16,11.16,1...), type="n",
                       main="1 temp", xlab="", ylab="", xaxt="s", yaxt="s",
                       xlim=c(25,93), ylim=c(-15.89,38.55))
--plot.degree2(draw.plot=TRUE)
persp(vh:temp) theta -35
persp(wind:vis) theta 145
persp(humidity:temp) theta -35
persp(temp:dpg) theta 235
persp(ibh:dpg) theta 235
> se <- ozone1
> a <- earth(O3 ~ ., data=se, degree=2, keepxy=0)
> se <- NULL
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=se, keepxy=0, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> expect.err(try(plotmo(a, trace=0, caption="getdata earth test4")), "cannot get the original model predictors")

Looked unsuccessfully for the original predictors in the following places:

(1) object$x: NULL

(2) model.frame: object 'O3' not found

(3) object$call$x: NULL

Error : cannot get the original model predictors (use trace=2 for details)
Got error as expected from try(plotmo(a, trace = 0, caption = "getdata earth test4"))
> 
> # test the way plotmo gets the data with earth with the default interface
> se <- ozone1
> a <- earth(se[,2:10], se[,1], degree=2, keepxy=0)
> printh(summary(a))
===summary(a) 
Call: earth(x=se[,2:10], y=se[,1], keepxy=0, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> plotmo(a, trace=0, caption="getdata earth test5")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> a <- earth(se[,2:10], se[,1], degree=2, keepxy=1)
> printh(summary(a))
===summary(a) 
Call: earth(x=se[,2:10], y=se[,1], keepxy=1, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> plotmo(a, trace=0, caption="getdata earth test6")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> a <- earth(se[,2:10], se[,1], degree=2, keepxy=1)
> se <- NULL
> printh(summary(a))
===summary(a) 
Call: earth(x=se[,2:10], y=se[,1], keepxy=1, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> plotmo(a, trace=0, caption="getdata earth test7")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> se <- ozone1
> a <- earth(se[,2:10], se[,1], degree=2, keepxy=0)
> se <- NULL
> expect.err(try(plotmo(a, trace=0, caption="getdata earth test8")), "cannot get the original model predictors")

Looked unsuccessfully for the original predictors in the following places:

(1) object$x: NULL

(2) model.frame: no formula in object$call

(3) object$call$x: NULL

Error : cannot get the original model predictors (use trace=2 for details)
Got error as expected from try(plotmo(a, trace = 0, caption = "getdata earth test8"))
> se <- ozone1
> a <- earth(se[,2:10], se[,1], degree=2, keepxy=0)
> # TODO error message could be improved here
> se$vh <- NULL # vh is unused (but plotmo still needs it --- why?)
> expect.err(try(plotmo(a, trace=0, caption="getdata earth test9")), "cannot get the original model predictors") # plotmo.x.default cannot get the x matrix

Looked unsuccessfully for the original predictors in the following places:

(1) object$x: NULL

(2) model.frame: no formula in object$call

(3) object$call$x: undefined columns selected

Error : cannot get the original model predictors (use trace=2 for details)
Got error as expected from try(plotmo(a, trace = 0, caption = "getdata earth test9"))
> se <- ozone1
> a <- earth(se[,2:10], se[,1], degree=2, keepxy=TRUE)
> se$vh <- NULL # vh is unused (but plotmo still needs it --- why?)
> printh(summary(a))
===summary(a) 
Call: earth(x=se[,2:10], y=se[,1], keepxy=TRUE, degree=2)

                            coefficients
(Intercept)                   13.2169900
h(temp-58)                     0.3726072
h(194-ibt)                    -0.0455100
h(200-vis)                     0.0222462
h(96-doy)                     -0.1223029
h(doy-96)                     -0.0240235
h(5730-vh) * h(temp-58)       -0.0104496
h(wind-7) * h(200-vis)        -0.0180898
h(55-humidity) * h(temp-58)   -0.0222754
h(temp-58) * h(dpg-52)        -0.0168249
h(temp-58) * h(52-dpg)         0.0041232
h(1105-ibh) * h(21-dpg)       -0.0001022

Selected 12 of 21 terms, and 9 of 9 predictors
Termination condition: Reached nk 21
Importance: temp, humidity, ibt, doy, ibh, dpg, vis, wind, vh
Number of terms at each degree of interaction: 1 5 6
GCV 13.40805    RSS 3693.401    GRSq 0.7917216    RSq 0.825085
> plotmo(a, trace=0, caption="getdata earth test9")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> 
> # test the way plotmo gets the data with lm
> se <- ozone1
> a <- lm(O3 ~ ., data=se)
> printh(summary(a))
===summary(a) 

Call:
lm(formula = O3 ~ ., data = se)

Residuals:
     Min       1Q   Median       3Q      Max 
-12.1011  -2.9289  -0.2715   2.7080  13.3687 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 20.3135755 29.5193067   0.688  0.49186    
vh          -0.0054271  0.0053985  -1.005  0.31551    
wind        -0.0545832  0.1348425  -0.405  0.68590    
humidity     0.0809741  0.0188394   4.298 2.29e-05 ***
temp         0.2755492  0.0497912   5.534 6.52e-08 ***
ibh         -0.0002338  0.0002956  -0.791  0.42944    
dpg         -0.0033629  0.0112805  -0.298  0.76581    
ibt          0.0296411  0.0136088   2.178  0.03013 *  
vis         -0.0079910  0.0037503  -2.131  0.03387 *  
doy         -0.0091194  0.0027745  -3.287  0.00113 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 4.441 on 320 degrees of freedom
Multiple R-squared:  0.7012,	Adjusted R-squared:  0.6927 
F-statistic: 83.42 on 9 and 320 DF,  p-value: < 2.2e-16

> plotmo(a, trace=0, caption="getdata lm test1")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> a <- lm(O3 ~ ., data=se, x=1)
> printh(summary(a))
===summary(a) 

Call:
lm(formula = O3 ~ ., data = se, x = 1)

Residuals:
     Min       1Q   Median       3Q      Max 
-12.1011  -2.9289  -0.2715   2.7080  13.3687 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 20.3135755 29.5193067   0.688  0.49186    
vh          -0.0054271  0.0053985  -1.005  0.31551    
wind        -0.0545832  0.1348425  -0.405  0.68590    
humidity     0.0809741  0.0188394   4.298 2.29e-05 ***
temp         0.2755492  0.0497912   5.534 6.52e-08 ***
ibh         -0.0002338  0.0002956  -0.791  0.42944    
dpg         -0.0033629  0.0112805  -0.298  0.76581    
ibt          0.0296411  0.0136088   2.178  0.03013 *  
vis         -0.0079910  0.0037503  -2.131  0.03387 *  
doy         -0.0091194  0.0027745  -3.287  0.00113 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 4.441 on 320 degrees of freedom
Multiple R-squared:  0.7012,	Adjusted R-squared:  0.6927 
F-statistic: 83.42 on 9 and 320 DF,  p-value: < 2.2e-16

> plotmo(a, trace=0, caption="getdata lm test2")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> a <- lm(O3 ~ ., data=se, y=1)
> printh(summary(a))
===summary(a) 

Call:
lm(formula = O3 ~ ., data = se, y = 1)

Residuals:
     Min       1Q   Median       3Q      Max 
-12.1011  -2.9289  -0.2715   2.7080  13.3687 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 20.3135755 29.5193067   0.688  0.49186    
vh          -0.0054271  0.0053985  -1.005  0.31551    
wind        -0.0545832  0.1348425  -0.405  0.68590    
humidity     0.0809741  0.0188394   4.298 2.29e-05 ***
temp         0.2755492  0.0497912   5.534 6.52e-08 ***
ibh         -0.0002338  0.0002956  -0.791  0.42944    
dpg         -0.0033629  0.0112805  -0.298  0.76581    
ibt          0.0296411  0.0136088   2.178  0.03013 *  
vis         -0.0079910  0.0037503  -2.131  0.03387 *  
doy         -0.0091194  0.0027745  -3.287  0.00113 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 4.441 on 320 degrees of freedom
Multiple R-squared:  0.7012,	Adjusted R-squared:  0.6927 
F-statistic: 83.42 on 9 and 320 DF,  p-value: < 2.2e-16

> plotmo(a, trace=0, caption="getdata lm test3")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> a <- lm(O3 ~ ., data=se, x=1, y=1)
> printh(summary(a))
===summary(a) 

Call:
lm(formula = O3 ~ ., data = se, x = 1, y = 1)

Residuals:
     Min       1Q   Median       3Q      Max 
-12.1011  -2.9289  -0.2715   2.7080  13.3687 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 20.3135755 29.5193067   0.688  0.49186    
vh          -0.0054271  0.0053985  -1.005  0.31551    
wind        -0.0545832  0.1348425  -0.405  0.68590    
humidity     0.0809741  0.0188394   4.298 2.29e-05 ***
temp         0.2755492  0.0497912   5.534 6.52e-08 ***
ibh         -0.0002338  0.0002956  -0.791  0.42944    
dpg         -0.0033629  0.0112805  -0.298  0.76581    
ibt          0.0296411  0.0136088   2.178  0.03013 *  
vis         -0.0079910  0.0037503  -2.131  0.03387 *  
doy         -0.0091194  0.0027745  -3.287  0.00113 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 4.441 on 320 degrees of freedom
Multiple R-squared:  0.7012,	Adjusted R-squared:  0.6927 
F-statistic: 83.42 on 9 and 320 DF,  p-value: < 2.2e-16

> plotmo(a, trace=0, caption="getdata lm test3")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> a <- lm(O3 ~ ., data=se, x=0, y=1, model=F)
> se <- 99
> expect.err(try(plotmo(a, trace=0, caption="getdata lm test4")), "cannot get the original model predictors")

Looked unsuccessfully for the original predictors in the following places:

(1) object$x: NULL

(2) model.frame: object 'O3' not found

(3) object$call$x: less than three rows

Error : cannot get the original model predictors (use trace=2 for details)
Got error as expected from try(plotmo(a, trace = 0, caption = "getdata lm test4"))
> se <- ozone1
> a <- lm(O3 ~ ., data=se, x=1, y=1)
> se <- 77
> printh(summary(a))
===summary(a) 

Call:
lm(formula = O3 ~ ., data = se, x = 1, y = 1)

Residuals:
     Min       1Q   Median       3Q      Max 
-12.1011  -2.9289  -0.2715   2.7080  13.3687 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 20.3135755 29.5193067   0.688  0.49186    
vh          -0.0054271  0.0053985  -1.005  0.31551    
wind        -0.0545832  0.1348425  -0.405  0.68590    
humidity     0.0809741  0.0188394   4.298 2.29e-05 ***
temp         0.2755492  0.0497912   5.534 6.52e-08 ***
ibh         -0.0002338  0.0002956  -0.791  0.42944    
dpg         -0.0033629  0.0112805  -0.298  0.76581    
ibt          0.0296411  0.0136088   2.178  0.03013 *  
vis         -0.0079910  0.0037503  -2.131  0.03387 *  
doy         -0.0091194  0.0027745  -3.287  0.00113 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 4.441 on 320 degrees of freedom
Multiple R-squared:  0.7012,	Adjusted R-squared:  0.6927 
F-statistic: 83.42 on 9 and 320 DF,  p-value: < 2.2e-16

> plotmo(a, trace=0, caption="getdata lm test5")
 plotmo grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
               5760    5       64   62 2112.5  24 167.5 120 205.5
> se <- ozone1
> a <- lm(O3 ~ ., data=se, model=F)
> se$wind <- NULL
> expect.err(try(plotmo(a, trace=0, caption="getdata lm test6")), "cannot get the original model predictors")

Looked unsuccessfully for the original predictors in the following places:

(1) object$x: NULL

(2) model.frame: object 'wind' not found

(3) object$call$x: NULL

Error : cannot get the original model predictors (use trace=2 for details)
Got error as expected from try(plotmo(a, trace = 0, caption = "getdata lm test6"))
> 
> cat("test fixed.point warning in print.summary.earth\n")
test fixed.point warning in print.summary.earth
> options(digits=3)
> et <- etitanic
> et$age <- 1000 * et$age
> a <- earth(survived~., data=et)
> print(summary(a))
Call: earth(formula=survived~., data=et)

             coefficients
(Intercept)        1.0258
pclass2nd         -0.2165
pclass3rd         -0.3552
sexmale           -0.4903
h(11000-age)       0.0000
h(age-11000)       0.0000
h(sibsp-1)        -0.0926

Selected 7 of 10 terms, and 5 of 6 predictors
Termination condition: RSq changed by less than 0.001 at 10 terms
Importance: sexmale, pclass3rd, age, pclass2nd, sibsp, parch-unused
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 0.152    RSS 155    GRSq 0.372    RSq 0.386
> print(summary(a, fixed.point=FALSE))
Call: earth(formula=survived~., data=et)

             coefficients
(Intercept)      1.03e+00
pclass2nd       -2.17e-01
pclass3rd       -3.55e-01
sexmale         -4.90e-01
h(11000-age)     2.92e-05
h(age-11000)    -4.45e-06
h(sibsp-1)      -9.26e-02

Selected 7 of 10 terms, and 5 of 6 predictors
Termination condition: RSq changed by less than 0.001 at 10 terms
Importance: sexmale, pclass3rd, age, pclass2nd, sibsp, parch-unused
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 0.152    RSS 155    GRSq 0.372    RSq 0.386
> options(digits=7) # back to default
> 
> cat("--- summary earth with new data ----------------------\n")
--- summary earth with new data ----------------------
> a.trees <- earth(Volume~., data=trees)
> cat("summary(a.trees, newdata=trees)\n")
summary(a.trees, newdata=trees)
> print(summary(a.trees, newdata=trees))
RSq 0.974 on newdata (31 cases)
> cat("summary(a.trees, newdata=trees[1:5,])\n")
summary(a.trees, newdata=trees[1:5,])
> a.trees.summary <- print(summary(a.trees, newdata=trees[1:5,]))
RSq 0.919 on newdata (5 cases)
> 
> a.xy.trees <- earth(trees[,1:2], trees[,3])
> cat("summary(a.xy.trees, newdata=trees[1:5,])\n")
summary(a.xy.trees, newdata=trees[1:5,])
> a.xy.trees.summary <- print(summary(a.xy.trees, newdata=trees[1:5,]))
Assuming response trees[,3] implies that the response column is 3
RSq 0.919 on newdata (5 cases)
> stopifnot(a.xy.trees.summary$newrsq == a.trees.summary$newrsq)
> 
> a.xy1.trees <- earth(trees[,1:2], trees$Volume)
> cat("summary(a.xy1.trees, newdata=trees[1:5,])\n")
summary(a.xy1.trees, newdata=trees[1:5,])
> a.xy1.trees.summary <- print(summary(a.xy1.trees, newdata=trees[1:5,]))
RSq 0.919 on newdata (5 cases)
> stopifnot(a.xy1.trees.summary$newrsq == a.trees.summary$newrsq)
> 
> cat("--- ../../tests/test.earth.R -------------------------\n")
--- ../../tests/test.earth.R -------------------------
> 
> options(options.old)
> source("../../tests/test.earth.R")
Call: earth(formula=Volume~., data=trees)

              coefficients
(Intercept)         29.060
h(14.2-Girth)       -3.420
h(Girth-14.2)        6.230
h(Height-75)         0.581

Selected 4 of 5 terms, and 2 of 2 predictors
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 11.3    RSS 209    GRSq 0.96    RSq 0.974
> 
> cat("--- check that spurious warn gone: non-integer #successes in a binomial glm ---\n")
--- check that spurious warn gone: non-integer #successes in a binomial glm ---
> 
> library(segmented) # for down data
> data(down)
> fit.e <- earth(cases/births~age, data=down, weights=down$births, glm=list(family="binomial"))
> summary(fit.e)
Call: earth(formula=cases/births~age, data=down, weights=down$births,
            glm=list(family="binomial"))

GLM coefficients
            cases/births
(Intercept)       -6.943
h(age-36.5)        0.709
h(age-39.5)       -0.484

Earth selected 3 of 5 terms, and 1 of 1 predictors
Termination condition: RSq changed by less than 0.001 at 5 terms
Importance: age
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 0.0124    RSS 0.259    GRSq 0.867    RSq 0.901

GLM null.deviance 625 (29 dof)   deviance 69.6 (27 dof)   iters 4
> 
> # test nk=1, 2, and 3
> cat("nk=1\n")
nk=1
> par(mfrow = c(2, 2), mar = c(3, 3, 3, 1), mgp = c(1.5, 0.5, 0))
> a.nk1 <- earth(Volume~., data=trees, nk=1)
> plot(a.nk1, which=1, main="nk=1")
> print(a.nk1)
Selected 1 of 1 terms, and 0 of 2 predictors
Termination condition: Reached nk 1
Importance: Girth-unused, Height-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 279    RSS 8106    GRSq 0    RSq 0
> cat("nk=2\n")
nk=2
> a.nk2 <- earth(Volume~., data=trees, nk=2)
> print(summary(a.nk2))
Call: earth(formula=Volume~., data=trees, nk=2)

            coefficients
(Intercept)         30.2

Selected 1 of 1 terms, and 0 of 2 predictors
Termination condition: Reached nk 2
Importance: Girth-unused, Height-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 279    RSS 8106    GRSq 0    RSq 0
> plot(a.nk2, which=1, main="nk=2")
> cat("nk=3\n")
nk=3
> a.nk3 <- earth(Volume~., data=trees, nk=3)
> plot(a.nk3, which=1, main="nk=3")
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
