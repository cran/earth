> # test.weights.R
> 
> library(earth)
Loading required package: plotmo
Loading required package: plotrix
> library(mda)
Loading required package: class
Loaded mda 0.4-4

> check.equal <- function(x, y, msg="")
+ {
+     diff <- x - y
+     if (any(abs(diff) > 1e-8)) {
+         cat(msg, "\n1st matrix:\n", sep="")
+         print(x)
+         cat("\n2nd matrix:\n")
+         print(y)
+         cat("\ndiff:\n")
+         print(diff)
+         stop("check.equal failed for ", msg, call.=FALSE)
+     }
+ }
> check.models.equal <- function(lm.mod, earth.mod)
+ {
+     lm.mod.name <- deparse(substitute(lm.mod))
+     earth.mod.name <- deparse(substitute(earth.mod))
+     msg <- sprintf("%s vs %s", lm.mod.name, earth.mod.name)
+     check.equal(lm.mod$coefficients,       earth.mod$coefficients, msg=sprintf("%s coefficients", msg))
+     check.equal(lm.mod$rss,                earth.mod$rss,          msg=sprintf("%s rss", msg))
+     check.equal(lm.mod$residuals,          earth.mod$residuals,    msg=sprintf("%s residuals", msg))
+     check.equal(summary(lm.mod)$r.squared, earth.mod$rsq,          msg=sprintf("%s rsq", msg))
+ }
> if(!interactive())
+     postscript(paper="letter")
> 
> # artifical data
> xxx <- 1:9
> yyy <- 1:9
> yyy[5] <- 9
> data <- data.frame(x=xxx, y=yyy)
> colnames(data) <- c("x", "y")
> 
> # Check against a linear model with weights, using linpreds.
> # This also checks the backward pass's handling of weights.
> 
> lm1 <- lm(y~., data=data)
> a1 <- earth(y~., data=data, linpreds=TRUE)
> check.models.equal(lm1, a1)
> 
> weights <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> lm2 <- lm(y~., data=data, weights=weights)
> a2  <- earth(y~., data=data, linpreds=TRUE, weights=weights)
> check.models.equal(lm2, a2)
> 
> weights <- c(1, 2, 3, 1, 2, 3, 1, 2, 3)
> lm3 <- lm(y~., data=data, weights=weights)
> a3  <- earth(y~., data=data, linpreds=TRUE, weights=weights, trace=-1)
> check.models.equal(lm3, a3)
> 
> lm4 <- lm(y~., data=data, weights=.1 * weights)
> a4  <- earth(y~., data=data, linpreds=TRUE, weights=.1 * weights,
+              minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=-1)
> check.models.equal(lm4, a4)
> 
> # We want to see the effect only on the forward pass, so disable the
> # backward pass with penalty=-1.  This also prevents "termination of the
> # forward pass with a negative GRSq" with this artifical data.
> #
> # We can't use thresh=0, because then very small weights will still cause a usable
> # reduction in RSq (remember that weights of zero are changed to very small weights
> # in the current implementation).  So instead we use thresh=1e-8.
> # This is a problem only with this very artifical data.  With real data, we
> # want to use the standard thresh=.001, even with weights.
> 
> cat("=== a5.noweights ===\n")
=== a5.noweights ===
> a5.noweights <- earth(y~., data=data,
+                       minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=3)
x is a 9 by 1 matrix: 1=x
y is a 9 by 1 matrix: 1=y

Forward pass: minspan 1 endspan 1

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.8768 0.8768       0.8768    1            x           5  2   3   
4      0.9138 0.9138      0.03695    1            x           4  4       
6      0.9630 0.9630      0.04927    1            x           7  5       
8      1.0000 1.0000      0.03695    1            x           6  6       

Reached maximum RSq 1.0000 at 9 terms (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 9 terms (6 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.6259  0.6259     0.6259      1  
          3      0.8768  0.8768     0.2509      1  
          4      0.9326  0.9326     0.0558      1  
          5      1.0000  1.0000     0.0674      1  
chosen    6      1.0000  1.0000     0.0000      1  

Prune method "backward" penalty -1 nprune 6: selected 6 of 6 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> par(mfrow = c(2, 2))
> par(mar = c(3, 3, 3, 1))
> par(mgp = c(1.5, 0.5, 0))
> plotmo(a5.noweights, col.response=2, do.par=F, main="a5.noweights", grid="gray")
> 
> cat("=== a6.azeroweight ===\n")
=== a6.azeroweight ===
> a6.azeroweight  <- earth(y~., data=data, weights=c(1, 1, 1, 1, 0, 1, 1, 1, 1),
+                          minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=3)
x is a 9 by 1 matrix: 1=x
y is a 9 by 1 matrix: 1=y
weights is a 9 by 1 matrix: 1=UNNAMED

Forward pass: minspan 1 endspan 1

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      1.0000 1.0000            1    1            x           5  2   3   

Reached maximum RSq 1.0000 at 3 terms (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 3 terms

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.8571  0.8571     0.8571      1  
chosen    3      1.0000  1.0000     0.1429      1  

Prune method "backward" penalty -1 nprune 3: selected 3 of 3 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
Warning message:
support of weights is provisional in this version of earth 
> plotmo(a6.azeroweight, col.response=2, do.par=F, main="a6.azeroweight", grid="gray")
> 
> cat("=== a7.asmallweight ===\n") # different set of weights (pick up notch in data, but with different forward pass RSq's)
=== a7.asmallweight ===
> a7.asmallweight  <- earth(y~., data=data, weights=c(1, 1, 1, 1, .5, 1, 1, 1, 1),
+                           minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=3)
x is a 9 by 1 matrix: 1=x
y is a 9 by 1 matrix: 1=y
weights is a 9 by 1 matrix: 1=UNNAMED

Forward pass: minspan 1 endspan 1

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.9056 0.9056       0.9056    1            x           5  2   3   
4      0.9259 0.9259      0.02022    1            x           6  4       
6      1.0000 1.0000      0.07415    1            x           4  5       

Reached maximum RSq 1.0000 at 7 terms (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 7 terms (5 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.8500  0.8500     0.8500      1  
          3      0.9243  0.9243     0.0743      1  
          4      0.9323  0.9323     0.0080      1  
chosen    5      1.0000  1.0000     0.0677      1  

Prune method "backward" penalty -1 nprune 5: selected 5 of 5 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
Warning message:
support of weights is provisional in this version of earth 
> plotmo(a7.asmallweight, col.response=2, do.par=F, main="a7.asmallweight", grid="gray")
> 
> cat("=== a7.xy.asmallweight ===\n") # x,y interface
=== a7.xy.asmallweight ===
> a7.xy.asmallweight  <- earth(xxx, yyy, weights=c(1, 1, 1, 1, .5, 1, 1, 1, 1),
+                           minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=3)
x is a 9 by 1 matrix: 1=xxx
y is a 9 by 1 matrix: 1=yyy
weights is a 9 by 1 matrix: 1=UNNAMED

Forward pass: minspan 1 endspan 1

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                    (Intercept)
2      0.9056 0.9056       0.9056    1          xxx           5  2   3   
4      0.9259 0.9259      0.02022    1          xxx           6  4       
6      1.0000 1.0000      0.07415    1          xxx           4  5       

Reached maximum RSq 1.0000 at 7 terms (RSq 1.0000)
After forward pass GRSq 1.000 RSq 1.000
Forward pass complete: 7 terms (5 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.8500  0.8500     0.8500      1  
          3      0.9243  0.9243     0.0743      1  
          4      0.9323  0.9323     0.0080      1  
chosen    5      1.0000  1.0000     0.0677      1  

Prune method "backward" penalty -1 nprune 5: selected 5 of 5 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
Warning message:
support of weights is provisional in this version of earth 
> check.models.equal(a7.xy.asmallweight, a7.xy.asmallweight)
> 
> cat("=== a8 ===\n")
=== a8 ===
> par(mfrow = c(2, 2)) # new page
> par(mar = c(3, 3, 3, 1))
> par(mgp = c(1.5, 0.5, 0))
> data$y <- c(0, 0, 0, 1, 0, 1, 1, 1, 1) != 0
> 
> # glm models first without weights
> a8 <- earth(y~., data=data,
+             linpreds=TRUE, glm=list(family=binomial),
+             minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=-1)
> plotmo(a8,
+        col.response=2, do.par=F, main="a8 glm no weights\ntype=\"response\"",
+        grid="gray", ylim=c(-.2, 1.2))
> plotmo(a8, type="earth",
+        col.response=2, do.par=F, main="a8 glm no weights\ntype=\"earth\"",
+        grid="gray", ylim=c(-.2, 1.2))
> glm <- glm(y~., data=data, family=binomial)
> stopifnot(coefficients(a8$glm.list[[1]]) == coefficients(glm))
> 
> cat("=== a8.weights ===\n")
=== a8.weights ===
> # now glm models with weights
> glm.weights <- c(.8,1,1,.5,1,1,1,1,1)
> a8.weights <- earth(y~., data=data,
+                     linpreds=TRUE, glm=list(family=binomial),
+                     weights=glm.weights,
+                     minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=-1)
Warning message:
In eval(expr, envir, enclos) : non-integer #successes in a binomial glm!
> plotmo(a8.weights, type="response",
+        col.response=2, do.par=F, main="a8.weights glm\ntype=\"response\"",
+        grid="gray", ylim=c(-.2, 1.2))
> plotmo(a8.weights, type="earth",
+        col.response=2, do.par=F, main="a8.weights glm\ntype=\"earth\"",
+        grid="gray", ylim=c(-.2, 1.2))
> glm <- glm(y~., data=data, weights=glm.weights, family=binomial)
Warning message:
In eval(expr, envir, enclos) : non-integer #successes in a binomial glm!
> # TODO this fails if a weight is 0 in glm.weights
> stopifnot(coefficients(a8.weights$glm.list[[1]]) == coefficients(glm))
> 
> # multivariate models
> 
> noise <- .01 * c(1,2,3,2,1,3,5,2,0)
> data <- data.frame(x1=c(1,2,3,4,5,6,7,8,9), x2=c(1,2,3,3,3,6,7,8,9), y=(1:9)+noise)
> data[5,] <- c(5, 5, 6)
> colnames(data) <- c("x1", "x2", "y")
> 
> weights <- c(3, 2, 1, 1, 2, 3, 1, 2, 3)
> lm20 <- lm(y~., data=data, weights=weights)
> a20  <- earth(y~., data=data, linpreds=TRUE, weights=weights,
+               minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=-1)
> check.models.equal(lm20, a20)
> 
> a21.noweights <- earth(y~., data=data, # no weights for comparison
+                        minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=-1)
> plotmo(a21.noweights, col.resp=2, trace=-1, caption="a21.noweights")
> 
> weights <- c(1, 1, 1, 1, .5, 1, 1, 1, 1)
> a10  <- earth(y~., data=data, weights=weights,
+               minspan=1, endspan=1, penalty=-1, thresh=1e-8, trace=-1)
> plotmo(a10, col.resp=2, trace=-1, caption="a10")
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
