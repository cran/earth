> # test.big: test earth with a biggish model
> 
> library(earth)
Loading required package: plotmo
Loading required package: plotrix
Loading required package: TeachingDemos
> if(!interactive())
+     postscript(paper="letter")
> options(warn=1)
> options(digits=3)
> printf <- function(format, ...) cat(sprintf(format, ...)) # like c printf
> set.seed(2015)
> 
> p <- 100
> n <- 20000 # big enough to cross ten-thousand-cases barrier in plotres and plotmo
> 
> # p <- 100; n <- 9e6  # Out of memory (could not allocate 15 GB)
>                       # earth 4.4.0 on windows 64 bit system, 2.9 GHz i7, 32 gig ram, SSD drive:
>                       # malloc 14.976 GB: bxOrthCenteredT   nMaxTerms 201 nCases 10000000  sizeof(double) 8
> 
> # p <- 100; n <- 8e6  # ok
>                       # 51 minutes to build model, additional 1.5 minutes for plotmo and plotres
> 
> # p <- 100; n <- 10e6 # Error in forward.pass: Out of memory (could not allocate 15 GB)
>                       # ok with nk=21, 42 minutes to build model
> 
> # p <- 2; n <- 60e6   # ok
> 
> # p <- 2; n <- 80e6   # ok (but not enough memory to get leverages)
>                       # 18 minutes to build model, additional 8 minutes for plotmo and plotres
> 
> # p <- 2; n <- 100e6  # Error in leaps.setup: Reached total allocation of 32673Mb
>                       # ok with memory.limit(size=64000) but lots of mem thrashing, slow (53 mins)
>                       # ok with nk=11 and memory.limit(size=64000), not so much thrashing
> 
> cat("creating x\n")
creating x
> ran <- function() runif(n, min=-1, max=1)
> set.seed(2015)
> x <- matrix(ran(), ncol=1)
> if(p >= 2)
+     x <- cbind(x, ran())
> if(p >= 3)
+     x <- cbind(x, ran())
> if(p >= 4) {
+     # xran saves time generating x, ok because func uses only columns x1, x2, and x3
+     xran <- ran()
+     x <- cbind(x, matrix(xran, nrow=n, ncol=p-3))
+ }
> colnames(x) <- paste("x", 1:ncol(x), sep="")
> func <- function(x) # additive, no interactions
+ {
+     y <- sin(4 * x[,1])
+     if(p > 1)
+         y <- y + x[,2]
+     if(p > 2)
+         y <- y + 2 * x[,3]^2 - 1
+     y
+ }
> cat("creating y\n")
creating y
> y <- func(x)
> cat("calling earth\n")
calling earth
> start.time <- proc.time()
> a <- earth(x, y, degree=1, trace=1.5)
x[20000,100] with colnames x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x1...
y[20000,1] with colname y
maxmem 0.1 GB
malloc    400  B: nUses			*pnPreds 100 sizeof(int)
malloc    804  B: nDegree		nMaxTerms 201 sizeof(int) 4
calloc      4  B: iDirs			nMaxTerms 201 nPreds 100 sizeof(int) 4
malloc    804  B: BoolFullSet		nMaxTerms 201 sizeof(bool) 4
malloc      8 MB: xOrder		nRows 20000 nCols 100 sizeof(int) 4
malloc     31 MB: BetaCacheGlobal	nMaxTerms 201 nMaxTerms 201 nPreds 100 sizeof(double) 8
malloc     31 MB: bxOrth		nCases 20000 nMaxTerms 201 sizeof(double) 8
malloc     31 MB: bxOrthCenteredT	nMaxTerms 201 nCases 20000 sizeof(double) 8
malloc      2 kB: bxOrthMean		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: yMean			nResp 1 sizeof(double) 8
Forward pass term 1
malloc      6 kB: Q			nMaxTerms 201 sizeof(tQueue) 32
malloc      6 kB: SortedQ		nMaxTerms 201 sizeof(tQueue) 32
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 2
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 4
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 6
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 8
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 10
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 12
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 14
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 16
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 18
malloc    156 kB: xbx			nCases 20000 sizeof(double) 8
malloc      2 kB: CovSx			nMaxTerms 201 sizeof(double) 8
calloc      8  B: CovCol		nMaxTerms 201 sizeof(double) 8
calloc      8  B: ycboSum		nMaxTerms 201 nResp 1 sizeof(double) 8
malloc      8  B: ybxSum		nResp 1 sizeof(double) 8
Forward pass term 20

RSq changed by less than 0.001 at 19 terms, 13 terms used (DeltaRSq 0.00083)
After forward pass GRSq 0.998 RSq 0.998
malloc    804  B: iPivots		nTerms 201 sizeof(int) 4
malloc      2 MB: xUsed			nCases 20000 nUsedCols 13 sizeof(double) 8
malloc    156 kB: Residuals		nCases 20000 nResp 1 sizeof(double) 8
malloc    104  B: qraux			nUsedCols 13 sizeof(double) 8
malloc      2 MB: work			nCases 20000 nUsedCols 13 sizeof(double) 8
Prune method "backward" penalty 2 nprune null: selected 13 of 13 terms, and 3 of 100 preds
After pruning pass GRSq 0.997 RSq 0.997
Getting leverages
> if(interactive())
+     printf("n %g p %g: earth time %.3f seconds (%.3f minutes)\n",
+         n, p,
+         (proc.time() - start.time)[3],
+         (proc.time() - start.time)[3] / 60)
> cat("print(summary(a1)):\n")
print(summary(a1)):
> print(summary(a))
Call: earth(x=x, y=y, trace=1.5, degree=1)

                   coefficients
(Intercept)              -1.864
h(-0.605996-x1)           3.831
h(x1- -0.605996)         -1.520
h(x1- -0.367173)          3.457
h(x1- -0.213966)          1.590
h(x1-0.279639)           -3.198
h(x1-0.477618)           -3.757
h(0.9314-x2)             -1.000
h(x2-0.9314)              0.965
h(x3- -0.521916)          1.905
h(-0.00672783-x3)         3.041
h(x3- -0.00672783)       -0.702
h(x3-0.598746)            2.184

Selected 13 of 13 terms, and 3 of 100 predictors
Termination condition: RSq changed by less than 0.001 at 13 terms
Importance: x2, x3, x1, x4-unused, x5-unused, x6-unused, x7-unused, ...
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.00302    RSS 60.2    GRSq 0.997    RSq 0.997
> invisible(gc())
> cat("calling plotmo\n")
calling plotmo
> plotmo(a, trace=-1)
> invisible(gc())
> cat("calling plotres\n")
calling plotres
> set.seed(2015) # TODO this is necessary, why?
> plot(a, trace=1)
stats::residuals(object=earth.object, type="response")
stats::fitted(object=earth.object)
got model response from object$call$y
using 10000 of 20000 residuals, forcing id.n=0 because of that (implementation restriction)

training rsq 1.00
> if(interactive())
+     printf("n %g p %g: total time %.3f seconds (%.3f minutes)\n",
+          n, p,
+         (proc.time() - start.time)[3],
+         (proc.time() - start.time)[3] / 60)
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
