> # test.earth.full.R: test earth
> 
> print(R.version.string)
[1] "R version 2.6.2  (2008-03-12 Ra 1.0.6)"
> 
> library(earth)
Loading required package: leaps
> library(mda)
Loading required package: class
> data(ozone1)
> data(trees)
> 
> PRINT.TIME <- FALSE         # FALSE for no time results (for diff against reference)
> PLOT <- TRUE                # TRUE to do plots too, FALSE for speed
> options.old <- options()
> options(digits = 5)
> 
> #--- test examples from man pages ------------------------------------------------------------
> 
> cat("--- earth.Rd -----------------------------\n")
--- earth.Rd -----------------------------
> example(earth)

earth> a <- earth(Volume ~ ., data = trees)

earth> summary(a, digits = 2)
Call:
earth(formula = Volume ~ ., data = trees)

Expression:
  23 
  +  5.7 * pmax(0,  Girth -     13) 
  -  2.9 * pmax(0,     13 -  Girth) 
  + 0.72 * pmax(0, Height -     76) 
Number of cases: 31
Selected 4 of 5 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 3 (additive model)
GCV: 11          RSS: 213         GRSq: 0.96      RSq: 0.97
> 
> a <- earth(mpg ~ ., data = mtcars, pmethod = "none", trace = 4)
Call: earth.default(x=x,y=y,trace=4,pmethod="none")

Predictors 1=cyl 2=disp 3=hp 4=drat 5=wt 6=qsec 7=vs 8=am 9=gear 10=carb 

Forward pass: model matrix[32,10]   y[32,1]   minspan 5   endspan 12

         GRSq    RSq     DeltaRSq       RSS Pred PredName         Cut  Terms   Parents
1      0.0000 0.0000                   1126                            1
2      0.8115 0.8570        0.857    161.05    2     disp       167.6  2   3   
4      0.7730 0.8750      0.01805   140.723    3       hp         123  4   5   
6      0.7366 0.9011      0.02604   111.402    5       wt       3.215  6   7   
8      0.6073 0.9081     0.006994   103.526    9     gear           4  8   9   
10     0.3158 0.9139     0.005793   97.0024    6     qsec        17.6  10  11  
12    -0.5621 0.9203     0.006493   89.6915    1      cyl           6  12  13  
14    -6.5107 0.9297     0.009312   79.2055    4     drat        3.69  14  15  
16   -49.6655 0.9473      0.01762   59.3671   10     carb           2  16  17  reject term

GRSq: -49.67 RSq: 0.9473
Reached min GRSq (GRSq -49.6655 < -10)
Forward pass complete: 15 terms

Subset size         GCV         GRSq      RSq  nPreds  Terms (index into bx)
          1     37.4958       0.0000   0.0000       0  1
          2     9.36723       0.7502   0.7814       1  1 3
          3     6.78912       0.8189   0.8626       2  1 3 6
          4     6.94253       0.8148   0.8796       3  1 3 6 11
          5     7.63454       0.7964   0.8879       4  1 3 6 8 11
          6     8.05986       0.7850   0.9014       5  1 3 5 6 8 11
          7     8.97024       0.7608   0.9101       6  1 3 5 6 8 11 13
          8     10.6832       0.7151   0.9143       7  1 3 5 6 8 11 13 15
          9     13.1259       0.6499   0.9180       7  1 2 3 5 6 8 11 13 15
         10     16.8094       0.5517   0.9212       7  1 2 3 5 6 8 11 13 14 15
         11     22.3808       0.4031   0.9248       7  1 2 3 5 6 7 8 11 13 14 15
         12     32.5056       0.1331   0.9269       7  1 2 3 5 6 7 8 10 11 13 14 15
         13     52.5395      -0.4012   0.9286       7  1 2 3 5 6 7 8 9 10 11 13 14 15
         14      102.21      -1.7259   0.9291       7  1 2 3 4 5 6 7 8 9 10 11 13 14 15
chosen   15      281.62      -6.5107   0.9297       7  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

Prune method "none" penalty 2 nprune 15: selected 15 of 15 terms, and 7 of 10 predictors
GRSq: -6.511 RSq: 0.9297 
> 
> set.seed(1)
> train.subset <- sample(1:nrow(trees), .8 * nrow(trees))
> test.subset <- (1:nrow(trees))[-train.subset]
> a <- earth(Volume ~ ., data = trees[train.subset, ])
> yhat <- predict(a, newdata = trees[test.subset, ])
> y <- trees$Volume[test.subset]
> print(1 - sum((y - yhat)^2) / sum((y - mean(y))^2)) # print R-Squared
[1] 0.9464
> cat("--- print.default of earth object---------\n")
--- print.default of earth object---------
> print.default(a, digits=3)
$bx
      (Intercept) h(Girth-8.6) h(Height-63)
 [1,]           1          2.5           17
 [2,]           1          2.8           13
 [3,]           1          4.3           22
 [4,]           1          8.7           18
 [5,]           1          2.2           20
 [6,]           1          7.4            9
 [7,]           1          9.3           17
 [8,]           1          4.3           11
 [9,]           1          3.4           12
[10,]           1          0.0            2
[11,]           1          2.1           18
[12,]           1          1.9            9
[13,]           1          3.1            6
[14,]           1          2.4            3
[15,]           1          5.1            8
[16,]           1          2.4           12
[17,]           1          2.7           16
[18,]           1          9.4           17
[19,]           1          5.4           15
[20,]           1          2.6           12
[21,]           1          5.9           11
[22,]           1          0.2            0
[23,]           1          8.9           19
[24,]           1          5.6           17

$dirs
             Girth Height
(Intercept)      0      0
h(Girth-8.6)     1      0
h(Height-63)     0      1

$cuts
             Girth Height
(Intercept)    0.0      0
h(Girth-8.6)   8.6      0
h(Height-63)   0.0     63

$selected.terms
[1] 1 2 3

$prune.terms
     [,1] [,2] [,3]
[1,]    1    0    0
[2,]    1    2    0
[3,]    1    2    3

$rss
[1] 250

$rsq
[1] 0.947

$gcv
[1] 16.6

$grsq
[1] 0.923

$rss.per.response
[1] 250

$rsq.per.response
[1] 0.947

$gcv.per.response
[1] 16.6

$grsq.per.response
[1] 0.923

$rss.per.subset
[1] 4739  310  250

$gcv.per.subset
[1] 215.0  16.9  16.6

$fitted.values
    [,1]
9  21.44
12 21.58
17 31.41
26 50.69
6  20.98
24 41.80
28 53.18
16 27.96
15 24.07
2   5.06
5  19.88
4  16.13
14 20.79
7  16.58
19 30.75
8  19.40
11 22.06
29 53.65
21 34.35
10 20.33
23 35.43
3   5.37
27 51.94
22 35.91

$residuals
     [,1]
9   1.165
12 -0.581
17  2.393
26  4.708
6  -1.276
24 -3.501
28  5.120
16 -5.756
15 -4.969
2   5.240
5  -1.082
4   0.275
14  0.514
7  -0.978
19 -5.050
8  -1.200
11  2.145
29 -2.146
21  0.154
10 -0.434
23  0.874
3   4.833
27  3.760
22 -4.207

$coefficients
              [,1]
(Intercept)  4.433
h(Girth-8.6) 4.668
h(Height-63) 0.314

$penalty
[1] 2

$ppenalty
[1] 2

$call
earth(formula = Volume ~ ., data = trees[train.subset, ])

$terms
Volume ~ Girth + Height
attr(,"variables")
list(Volume, Girth, Height)
attr(,"factors")
       Girth Height
Volume     0      0
Girth      1      0
Height     0      1
attr(,"term.labels")
[1] "Girth"  "Height"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(Volume, Girth, Height)
attr(,"dataClasses")
   Volume     Girth    Height 
"numeric" "numeric" "numeric" 

attr(,"class")
[1] "earth"
> cat("--- done print.default of earth object----\n")
--- done print.default of earth object----
> if (PLOT)
+     plot(a)
> library(mda)
> (a <- fda(Species~., data=iris, method=earth, keepxy=TRUE))
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.48 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> if (PLOT)
+     plot(a)
> print(summary(a$fit))
Call:
earth(x = x, y = Theta, weights = weights, keepxy = TRUE)

Response 1 expression:
  -2.2069 
  - 0.20364 * pmax(0, Sepal.Length -          5.4) 
  +  1.4514 * pmax(0, Petal.Length -          3.7) 
  - 0.46331 * pmax(0, Petal.Length -          4.5) 
  +  1.1239 * pmax(0,          4.5 - Petal.Length) 
  -   0.844 * pmax(0, Petal.Length -          5.3) 
  +  2.1799 * pmax(0,  Petal.Width -          1.6) 
  -  2.5721 * pmax(0,  Petal.Width -          1.9) 

Response 2 expression:
  -0.68339 
  -   0.34847 * pmax(0, Sepal.Length -          5.4) 
  +   0.31415 * pmax(0, Petal.Length -          3.7) 
  +    1.4470 * pmax(0, Petal.Length -          4.5) 
  - 0.0050081 * pmax(0,          4.5 - Petal.Length) 
  -    1.5256 * pmax(0, Petal.Length -          5.3) 
  +    3.7874 * pmax(0,  Petal.Width -          1.6) 
  -    4.4817 * pmax(0,  Petal.Width -          1.9) 
Number of cases: 150
Selected 8 of 13 terms, and 3 of 4 predictors
Number of terms at each degree of interaction: 1 7 (additive model)

Response 1  GCV: 0.06421        RSS: 7.8015         GRSq: 0.93664      RSq: 0.94799
Response 2  GCV: 0.12583        RSS: 15.288         GRSq: 0.87584      RSq: 0.89808
All         GCV: 0.19004        RSS: 23.090         GRSq: 0.90624      RSq: 0.92303
> if (PLOT) {
+     plot(a$fit)
+     plotmo(a$fit, ycolumn=1, ylim=c(-1.5,1.5), clip=FALSE)
+     plotmo(a$fit, ycolumn=2, ylim=c(-1.5,1.5), clip=FALSE)
+ }
> a <- update(a, nk=3) # not on man page
> print(a)
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE, 
    nk = 3)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 94.38 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> print(summary(a$fit))
Call:
earth(x = x, y = Theta, weights = weights, keepxy = TRUE, nk = 3)

Response 1 expression:
  -1.3008 
  + 1.3512 * pmax(0, Petal.Width -         1.2) 
  + 2.6013 * pmax(0,         1.2 - Petal.Width) 

Response 2 expression:
  -0.74368 
  +   2.2237 * pmax(0, Petal.Width -         1.2) 
  + 0.038969 * pmax(0,         1.2 - Petal.Width) 
Number of cases: 150
Selected 3 of 3 terms, and 1 of 4 predictors
Number of terms at each degree of interaction: 1 2 (additive model)

Response 1  GCV: 0.11904        RSS: 16.685         GRSq: 0.88255      RSq: 0.88877
Response 2  GCV: 0.24302        RSS: 34.063         GRSq: 0.76021      RSq: 0.77292
All         GCV: 0.36205        RSS: 50.747         GRSq: 0.82138      RSq: 0.83084
> 
> cat("--- format.earth.Rd ----------------------\n")
--- format.earth.Rd ----------------------
> as.func <- function( # convert expression string to func
+                object, digits = 8, use.names = TRUE, ...)
+   eval(parse(text=paste(
+     "function(x)\n",
+     "{\n",
+     "if(is.vector(x))\n",
+     "  x <- matrix(x, nrow = 1, ncol = length(x))\n",
+     "with(as.data.frame(x),\n",
+     format(object, digits = digits, use.names = use.names, ...),
+     ")\n",
+     "}\n", sep = "")))
> a <- earth(Volume ~ ., data = trees)
> my.func <- as.func(a, use.names = FALSE)
> print(my.func(c(10,80)))     # yields 17.76888
[1] 17.769
> print(predict(a, c(10,80)))  # yields 17.76888, but is slower
       [,1]
[1,] 17.769
> example(format.earth)

frmt.r> a <- earth(Volume ~ ., data = trees)

frmt.r> cat(format(a))
  23.208 
  +   5.746 * pmax(0,  Girth -   12.9) 
  -  2.8665 * pmax(0,   12.9 -  Girth) 
  + 0.71834 * pmax(0, Height -     76) 

frmt.r> # yields:
frmt.r> #    23.2 
frmt.r> #    +  5.75 * pmax(0,  Girth -   12.9) 
frmt.r> #    -  2.87 * pmax(0,   12.9 -  Girth) 
frmt.r> #    + 0.718 * pmax(0, Height -     76) 
frmt.r> 
frmt.r> cat(format(a, use.names = FALSE, add.labels = TRUE))
  23.208  # 1
  +   5.746 * pmax(0, x[,1] -  12.9)  # 2
  -  2.8665 * pmax(0,  12.9 - x[,1])  # 3
  + 0.71834 * pmax(0, x[,2] -    76)  # 4
> cat(format(a)) # basic tests of format.earth
  23.208 
  +   5.746 * pmax(0,  Girth -   12.9) 
  -  2.8665 * pmax(0,   12.9 -  Girth) 
  + 0.71834 * pmax(0, Height -     76) 
> cat(format(a, digits=4))
  23.21 
  +  5.746 * pmax(0,  Girth -   12.9) 
  -  2.866 * pmax(0,   12.9 -  Girth) 
  + 0.7183 * pmax(0, Height -     76) 
> cat(format(a, use.names=FALSE))
  23.208 
  +   5.746 * pmax(0, x[,1] -  12.9) 
  -  2.8665 * pmax(0,  12.9 - x[,1]) 
  + 0.71834 * pmax(0, x[,2] -    76) 
> cat(format(a, add.labels=TRUE))
  23.208  # 1
  +   5.746 * pmax(0,  Girth -   12.9)  # 2
  -  2.8665 * pmax(0,   12.9 -  Girth)  # 3
  + 0.71834 * pmax(0, Height -     76)  # 4
> cat(format(a, use.names=FALSE, add.labels=TRUE))
  23.208  # 1
  +   5.746 * pmax(0, x[,1] -  12.9)  # 2
  -  2.8665 * pmax(0,  12.9 - x[,1])  # 3
  + 0.71834 * pmax(0, x[,2] -    76)  # 4
> a <- lm(Volume ~ ., data = trees)
> # cat(format(a)) # basic tests of format.lm
> # cat(format(a, digits=4))
> # cat(format(a, use.names=FALSE))
> # cat(format(a, add.labels=TRUE))
> # cat(format(a, use.names=FALSE, add.labels=TRUE))
> cat("--- mars.to.earth.Rd ----------------------\n")
--- mars.to.earth.Rd ----------------------
> example(mars.to.earth) # doesn't do anything
> library(mda)
> a <- mars(trees[,-3], trees[,3])
> a <- mars.to.earth(a)
> summary(a, digits = 2)
Call:
earth(x = trees[, -3], y = trees[, 3])

Expression:
  20 
  +  5.4 * pmax(0,  Girth -     12) 
  -  2.6 * pmax(0,     12 -  Girth) 
  + 0.72 * pmax(0, Height -     76) 
Number of cases: 31
Selected 4 of 5 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 3 (additive model)
GCV: 13          RSS: 251         GRSq: 0.95      RSq: 0.97
> print(summary(a, digits=2))
Call:
earth(x = trees[, -3], y = trees[, 3])

Expression:
  20 
  +  5.4 * pmax(0,  Girth -     12) 
  -  2.6 * pmax(0,     12 -  Girth) 
  + 0.72 * pmax(0, Height -     76) 
Number of cases: 31
Selected 4 of 5 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 3 (additive model)
GCV: 13          RSS: 251         GRSq: 0.95      RSq: 0.97
> cat("--- plot.earth.models.Rd ----------------------\n")
--- plot.earth.models.Rd ----------------------
> if (PLOT)
+     example(plot.earth.models)

plt.r.> data(ozone1)

plt.r.> a1 <- earth(O3 ~ .,          data = ozone1, degree = 2)

plt.r.> a2 <- earth(O3 ~ .-wind,     data = ozone1, degree = 2, nk = 31)

plt.r.> a3 <- earth(O3 ~ .-humidity, data = ozone1, degree = 2, nk = 31)

plt.r.> plot.earth.models(list(a1,a2,a3), rlim=c(.6,.8))
> cat("--- plot.earth.Rd ----------------------\n")
--- plot.earth.Rd ----------------------
> if (PLOT)
+     example(plot.earth)

plt.rt> data(ozone1)

plt.rt> a <- earth(O3 ~ ., data = ozone1, degree = 2)

plt.rt> plot(a, col.npreds = 1, cum.grid = "none")
> cat("--- predict.earth.Rd ----------------------\n")
--- predict.earth.Rd ----------------------
> example(predict.earth)

prdct.> data(trees)

prdct.> a <- earth(Volume ~ ., data = trees)

prdct.> predict(a)           # same as a$fitted.values
     [,1]
1  10.023
2  10.883
3  11.456
4  16.329
5  20.494
6  22.217
7  17.762
8  17.762
9  20.922
10 18.335
11 20.777
12 18.909
13 18.909
14 19.769
15 20.628
16 23.208
17 29.673
18 32.690
19 27.805
20 28.380
21 30.965
22 33.551
23 32.402
24 41.021
25 43.463
26 52.082
27 53.950
28 54.811
29 55.386
30 55.386
31 75.354

prdct.> predict(a, c(10,80)) # yields 17.76888
       [,1]
[1,] 17.769
> cat("--- update.earth.Rd ----------------------\n")
--- update.earth.Rd ----------------------
> example(update.earth)

updt.r> data(ozone1)

updt.r> (a <- earth(O3 ~ ., data = ozone1, degree = 2))
Selected 11 of 21 terms, and 8 of 9 predictors
Number of terms at each degree of interaction: 1 5 5
GCV: 13.434         RSS: 3762.2         GRSq: 0.79132      RSq: 0.82183

updt.r> # yields:
updt.r> #    Selected 11 of 21 terms, and 8 of 9 predictors
updt.r> #    Number of terms at each degree of interaction: 1 5 5
updt.r> #    GCV: 13.43422   RSS: 3762.234   GRSq: 0.7913151   RSq: 0.8218252
updt.r> 
updt.r> update(a, formula = O3 ~ . - temp) # requires forward pass and pruning
Selected 15 of 21 terms, and 8 of 8 predictors
Number of terms at each degree of interaction: 1 5 9
GCV: 13.146         RSS: 3443.3         GRSq: 0.7958       RSq: 0.83693

updt.r> # yields:
updt.r> #    Selected 15 of 21 terms, and 8 of 8 predictors
updt.r> #    Number of terms at each degree of interaction: 1 5 9
updt.r> #    GCV: 13.14588   RSS: 3443.265   GRSq: 0.7957941   RSq: 0.8369311
updt.r> 
updt.r> update(a, nprune = 8)              # requires only pruning
Selected 8 of 21 terms, and 6 of 9 predictors
Number of terms at each degree of interaction: 1 5 2
GCV: 15.079         RSS: 4433.9         GRSq: 0.76576      RSq: 0.79002

updt.r> # yields:
updt.r> #    Selected 8 of 21 terms, and 6 of 9 predictors
updt.r> #    Number of terms at each degree of interaction: 1 5 2
updt.r> #    GCV: 15.07944   RSS: 4433.915   GRSq: 0.7657586   RSq: 0.7900152
updt.r> 
updt.r> update(a, penalty=1, ponly=TRUE)   # pruning pass only with a new penalty
Selected 13 of 21 terms, and 8 of 9 predictors
Number of terms at each degree of interaction: 1 5 7
GCV: 12.538         RSS: 3674.7         GRSq: 0.80524      RSq: 0.82597
> 
> cat("--- test predict.earth -------------------\n")
--- test predict.earth -------------------
> a <- earth(Volume ~ ., data = trees)
> predict(a, c(10,80))
       [,1]
[1,] 17.769
> predict(a)
     [,1]
1  10.023
2  10.883
3  11.456
4  16.329
5  20.494
6  22.217
7  17.762
8  17.762
9  20.922
10 18.335
11 20.777
12 18.909
13 18.909
14 19.769
15 20.628
16 23.208
17 29.673
18 32.690
19 27.805
20 28.380
21 30.965
22 33.551
23 32.402
24 41.021
25 43.463
26 52.082
27 53.950
28 54.811
29 55.386
30 55.386
31 75.354
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> predict(a, xpredict)
       [,1]
[1,] 17.769
[2,] 30.685
> colnames(xpredict) <- c("Girth", "Height")
> predict(a, xpredict)
       [,1]
[1,] 17.769
[2,] 30.685
> predict(a, as.data.frame(xpredict))
       [,1]
[1,] 17.769
[2,] 30.685
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> predict(a, xpredict)
       [,1]
[1,] 17.769
[2,] 30.685
> # repeat but with x,y (not formula) call to earth
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, trees$Volume)
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> predict(a, xpredict)
       [,1]
[1,] 17.769
[2,] 30.685
> colnames(xpredict) <- c("Girth", "Height")
> predict(a, xpredict)
       [,1]
[1,] 17.769
[2,] 30.685
> predict(a, as.data.frame(xpredict))
       [,1]
[1,] 17.769
[2,] 30.685
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> predict(a, xpredict)
       [,1]
[1,] 408.76
[2,] 466.22
Warning message:
the variable names in 'data' do not match those in 'object'
  data:        Height Girth
  object$dirs: Girth Height 
> 
> cat("--- test reorder.earth ----------------------\n")
--- test reorder.earth ----------------------
> a <- earth(O3 ~ ., data = ozone1, degree = 2)
> earth:::reorder.earth(a, decomp = "none")
 [1]  1  2  3  4  5  6  7  8  9 10 11
> earth:::reorder.earth(a)   # defaults to decomp = "anova"
 [1]  1  2 11  8  3  4  9  5  6  7 10
> a$selected.terms[earth:::reorder.earth(a)]
 [1]  1  2 19 13  6  7 14  9 10 11 17
> 
> cat("--- test model building capabilities ----------------------\n")
--- test model building capabilities ----------------------
> itest <- 0
> N <- 100
> set.seed(1)
> x1 <- runif(N, -1, 1)
> x2 <- runif(N, -1, 1)
> x3 <- runif(N, -1, 1)
> x4 <- runif(N, -1, 1)
> x5 <- runif(N, -1, 1)
> x6 <- runif(N, -1, 1)
> x7 <- runif(N, -1, 1)
> x8 <- runif(N, -1, 1)
> x9 <- runif(N, -1, 1)
> x10 <- runif(N, -1, 1)
> 
> make.func <- function(
+     obj      = stop("no 'obj' arg"),
+     digits   = 14,
+     use.names = TRUE,   # use predictor names, else "x[,1]" etc
+     ...)                # extra args passed onto format, eg add.labels=TRUE
+ {
+     s <- paste(
+         "function(x)\n",
+         "{\n",
+         "if(is.vector(x))\n",
+         "  x <- matrix(x, nrow=1, ncol=length(x))\n",
+         "with(as.data.frame(x),\n",
+         format(obj, digits=digits, use.names=use.names, ...),
+         ")\n",
+         "}\n", sep="")
+ 
+     eval.parent(parse(text=s))
+ }
> 
> # this cross checks that RSq and GRSq claimed by
> # the model versus an independent calc of RSq and GRSq
> 
> test.model.rsq <- function(object, x, y, MarsFunc, nCases, nUsedTerms, penalty, RefFunc=NULL, ...)
+ {
+     y1 <- RefFunc(x, ...)
+     rss <- sum((y1 - MarsFunc(x))^2)
+     rss.null <- sum((y - mean(y))^2)
+     gcv.null <- earth:::get.gcv(rss.null, 1, penalty, nCases)
+     gcv <- earth:::get.gcv(rss, nUsedTerms, penalty, nCases)
+     if(is.finite(object$rsq))
+         if(!isTRUE(all.equal(object$rsq, 1 - rss/rss.null)))
+             cat("\nWarning: RSq mismatch object$rsq", object$rsq, "calculated RSq", 1 - rss/rss.null)
+         else if(!isTRUE(all.equal(object$grsq, 1 - gcv/gcv.null)))
+             cat("\nWarning GRSq mismatch object$grsq", object$grsq, "calculated GRSq", 1 - gcv/gcv.null)
+ }
> 
> # this uses the global matrix data.global (data.global[,1] is the response)
> 
> test.earth <- function(itest, func, degree=2, nk=51, plotit=PLOT,
+                        test.rsq=TRUE, trace=0, linpreds=FALSE)
+ {
+     cat("itest", sprintf("%-3d", itest), sprintf("%-32s", deparse(substitute(func))),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk))
+     if(trace)
+         cat("\n")
+     gc()
+     earthTime <- system.time(fite <- earth(data.global[,-1], data.global[,1],
+                                         degree=degree, trace=trace, nk=nk,
+                                         pmethod="b", fast.k=-1, linpreds=linpreds))
+     funca <- make.func(fite)
+     nCases <- nrow(data.global)
+     penalty <- ifelse(degree>1,3,2)
+     nUsedTerms <- sum(fite$selected.terms!=0)
+     cat(" nTerms",  sprintf("%-2d", nUsedTerms), "of", sprintf("%-3d ", nrow(fite$dirs)))
+     if(PRINT.TIME)
+         cat(" time", earthTime[1])
+     cat("GRSq", sprintf("%4.2g", fite$grsq))
+     caption <- paste("itest ", itest, ": ", deparse(substitute(func)),
+                         " degree=", degree, " nk=", nk, sep="")
+     if(test.rsq)
+         test.model.rsq(fite, x=data.global[,-1, drop=FALSE], y=data.global[,1], MarsFunc=funca,
+             nCases=nCases, nUsedTerms=nUsedTerms, penalty=penalty, RefFunc=func)
+     if(plotit) {
+         plotmo(fite, func=func, caption=caption)
+         plot(fite, nresiduals=500, caption=caption)
+     }
+     cat("\n")
+     fite
+ }
> 
> ozone.test <- function(itest, sModel, x, y, degree=2, nk=51,
+                     plotit=PLOT, trace=0, col.loess="lightblue")
+ {
+     fite <- earth(x, y, degree=degree, nk=nk, trace=trace)
+     fitm <- mars(x, y, degree=degree, nk=nk)
+ 
+     cat("itest",
+         sprintf("%-3d", itest),
+         sprintf("%-32s", sModel),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk),
+         "nTerms",  sprintf("%-2d", sum(fite$selected.terms != 0)),
+         "of", sprintf("%-3d", nrow(fite$dirs)),
+         "GRSq", sprintf("%4.2g", fite$grsq),
+         "GRSq ratio", fite$grsq/mars.to.earth(fitm)$grsq,
+         "\n")
+     caption <- paste("itest ", itest, ": ", sModel, " degree=", degree, " nk=", nk, sep="")
+     if(plotit) {
+         fitme <- mars.to.earth(fitm)
+         plotmo(fite, caption=paste("EARTH", caption))
+         plotmo(fitme, caption=paste("MARS", caption))
+         plot(fite, nresiduals=500, col.loess=col.loess, caption=paste("EARTH", caption))
+         plot(fitme, caption=paste("MARS", caption))
+         fitme <- update(fitme)  # generate model selection data
+         plot.earth.models(list(fite, fitme), caption=paste(itest, ": Compare earth to mars ", sModel, sep=""))
+     }
+     fite
+ }
> 
> funcNoise <- function(x)    # noise
+ {
+     rnorm(1)
+ }
> x <- cbind(x1)
> data.global <- cbind(funcNoise(x), x1)
> # plotit=FALSE because there is only an intercept
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=1, plotit=FALSE, test.rsq=FALSE)
itest 1   funcNoise                        degree 1  nk 5   nTerms 1  of 2   GRSq    0
Selected 1 of 2 terms, and 0 of 1 predictors
Number of terms at each degree of interaction: 1 (intercept only model)
GCV: 4.2165e-40     RSS: 4.1326e-38     GRSq: 0            RSq: 0    
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=2, plotit=FALSE, test.rsq=FALSE)
itest 2   funcNoise                        degree 2  nk 5   nTerms 1  of 2   GRSq    0
Selected 1 of 2 terms, and 0 of 1 predictors
Number of terms at each degree of interaction: 1 (intercept only model)
GCV: 4.2165e-40     RSS: 4.1326e-38     GRSq: 0            RSq: 0    
> itest <- itest+1; test.earth(itest, funcNoise, nk=51, degree=1, plotit=FALSE, test.rsq=FALSE)
itest 3   funcNoise                        degree 1  nk 51  nTerms 1  of 2   GRSq    0
Selected 1 of 2 terms, and 0 of 1 predictors
Number of terms at each degree of interaction: 1 (intercept only model)
GCV: 4.2165e-40     RSS: 4.1326e-38     GRSq: 0            RSq: 0    
> itest <- itest+1; test.earth(itest, funcNoise, nk=51, degree=2, plotit=FALSE, test.rsq=FALSE)
itest 4   funcNoise                        degree 2  nk 51  nTerms 1  of 2   GRSq    0
Selected 1 of 2 terms, and 0 of 1 predictors
Number of terms at each degree of interaction: 1 (intercept only model)
GCV: 4.2165e-40     RSS: 4.1326e-38     GRSq: 0            RSq: 0    
> 
> func1 <- function(x)
+ {
+     sin(3 * x[,1]) + x[,2]
+ }
> x.global <- cbind(                    x1, x2)
> data.global <- cbind(func1(x.global), x1, x2)
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=1)
itest 5   func1                            degree 1  nk 5   nTerms 4  of 5   GRSq 0.86
Selected 4 of 5 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 3 (additive model)
GCV: 0.11681        RSS: 10.103         GRSq: 0.86214      RSq: 0.87834
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=2)
itest 6   func1                            degree 2  nk 5   nTerms 4  of 5   GRSq 0.86
Selected 4 of 5 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 3 (additive model)
GCV: 0.12067        RSS: 10.103         GRSq: 0.85758      RSq: 0.87834
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=1)
itest 7   func1                            degree 1  nk 51  nTerms 8  of 8   GRSq    1
Selected 8 of 8 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 7 (additive model)
GCV: 0.0024854      RSS: 0.17957        GRSq: 0.99707      RSq: 0.99784
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=2)
itest 8   func1                            degree 2  nk 51  nTerms 8  of 8   GRSq    1
Selected 8 of 8 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 7 (additive model)
GCV: 0.0027035      RSS: 0.17957        GRSq: 0.9968       RSq: 0.99784
> 
> func7 <- function(x)    # just one predictor
+ {
+     sin(5 * x[,1])
+ }
> x.global <- cbind(                    x1)
> data.global <- cbind(func7(x.global), x1)
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=1)
itest 9   func7                            degree 1  nk 5   nTerms 4  of 4   GRSq 0.76
Selected 4 of 4 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 3 (additive model)
GCV: 0.12312        RSS: 10.648         GRSq: 0.76006      RSq: 0.78826
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=2)
itest 10  func7                            degree 2  nk 5   nTerms 4  of 4   GRSq 0.75
Selected 4 of 4 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 3 (additive model)
GCV: 0.12719        RSS: 10.648         GRSq: 0.75213      RSq: 0.78826
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=1)
itest 11  func7                            degree 1  nk 51  nTerms 6  of 7   GRSq 0.97
Selected 6 of 7 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 5 (additive model)
GCV: 0.016831       RSS: 1.3332         GRSq: 0.9672       RSq: 0.97349
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=2)
itest 12  func7                            degree 2  nk 51  nTerms 6  of 7   GRSq 0.97
Selected 6 of 7 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 5 (additive model)
GCV: 0.017818       RSS: 1.3332         GRSq: 0.96527      RSq: 0.97349
> 
> func8 <- function(x)
+ {
+     ret <- 0
+     for (i in 1:5)
+         ret <- ret + sin(2 * x[,i])
+     ret + x[,1]*cos(4 * x[,2]) + (x[,3]-2)* x[,4]
+ }
> 
> func8noise <- function(x)
+ {
+     func8(x) + rnorm(nrow(x),0,1)
+ }
> 
> x.global <- cbind(                    x1,  x2,  x3,  x4,  x5)
> data.global <- cbind(func8(x.global), x1,  x2,  x3,  x4,  x5)
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=1)
itest 13  func8                            degree 1  nk 11  nTerms 11 of 11  GRSq 0.89
Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.30906        RSS: 19.288         GRSq: 0.89366      RSq: 0.93228
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=2)
itest 14  func8                            degree 2  nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.35224        RSS: 19.288         GRSq: 0.8788       RSq: 0.93228
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=10)
itest 15  func8                            degree 10 nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.35224        RSS: 19.288         GRSq: 0.8788       RSq: 0.93228
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=1)
itest 16  func8                            degree 1  nk 51  nTerms 14 of 18  GRSq 0.91
Selected 14 of 18 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 13 (additive model)
GCV: 0.27109        RSS: 14.446         GRSq: 0.90672      RSq: 0.94928
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=2)
itest 17  func8                            degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 14 5
GCV: 0.053549       RSS: 1.4202         GRSq: 0.98157      RSq: 0.99501
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=10)
itest 18  func8                            degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 14 5
GCV: 0.053549       RSS: 1.4202         GRSq: 0.98157      RSq: 0.99501
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=1,  test.rsq=FALSE)
itest 19  func8noise                       degree 1  nk 11  nTerms 11 of 11  GRSq 0.89
Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.30906        RSS: 19.288         GRSq: 0.89366      RSq: 0.93228
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=2,  test.rsq=FALSE)
itest 20  func8noise                       degree 2  nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.35224        RSS: 19.288         GRSq: 0.8788       RSq: 0.93228
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=10, test.rsq=FALSE)
itest 21  func8noise                       degree 10 nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.35224        RSS: 19.288         GRSq: 0.8788       RSq: 0.93228
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=1,  test.rsq=FALSE)
itest 22  func8noise                       degree 1  nk 51  nTerms 14 of 18  GRSq 0.91
Selected 14 of 18 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 13 (additive model)
GCV: 0.27109        RSS: 14.446         GRSq: 0.90672      RSq: 0.94928
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=2,  test.rsq=FALSE)
itest 23  func8noise                       degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 14 5
GCV: 0.053549       RSS: 1.4202         GRSq: 0.98157      RSq: 0.99501
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=10, test.rsq=FALSE)
itest 24  func8noise                       degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 14 5
GCV: 0.053549       RSS: 1.4202         GRSq: 0.98157      RSq: 0.99501
> 
> eqn56 <- function(x) # Friedman MARS paper equation 56
+ {
+     0.1 * exp(4*x[,1]) +
+     4 / (1 + exp(-20*(x[,2]-0.5))) +
+     3 * x[,3] +
+     2 * x[,4] +
+     x[,5]
+ }
> 
> neg.eqn56 <- function(x)
+ {
+     -eqn56(x)
+ }
> 
> eqn56noise <- function(x)
+ {
+     eqn56(x) + rnorm(nrow(x),0,1)
+ }
> 
> neg.eqn56noise <- function(x)
+ {
+     -eqn56noise(x)
+ }
> 
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=1)
itest 25  eqn56                            degree 1  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.33706        RSS: 22.115         GRSq: 0.95999      RSq: 0.97322
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=2)
itest 26  eqn56                            degree 2  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.37788        RSS: 22.115         GRSq: 0.95514      RSq: 0.97322
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=10)
itest 27  eqn56                            degree 10 nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.37788        RSS: 22.115         GRSq: 0.95514      RSq: 0.97322
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=1)
itest 28  eqn56                            degree 1  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 12 (additive model)
GCV: 0.034777       RSS: 1.9562         GRSq: 0.99587      RSq: 0.99763
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=2)
itest 29  eqn56                            degree 2  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 12 (additive model)
GCV: 0.041088       RSS: 1.9562         GRSq: 0.99512      RSq: 0.99763
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=10)
itest 30  eqn56                            degree 10 nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 12 (additive model)
GCV: 0.041088       RSS: 1.9562         GRSq: 0.99512      RSq: 0.99763
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=1,  test.rsq=FALSE)
itest 31  eqn56noise                       degree 1  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.33706        RSS: 22.115         GRSq: 0.95999      RSq: 0.97322
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=2,  test.rsq=FALSE)
itest 32  eqn56noise                       degree 2  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.37788        RSS: 22.115         GRSq: 0.95514      RSq: 0.97322
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=10, test.rsq=FALSE)
itest 33  eqn56noise                       degree 10 nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.37788        RSS: 22.115         GRSq: 0.95514      RSq: 0.97322
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=1,  test.rsq=FALSE)
itest 34  eqn56noise                       degree 1  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 12 (additive model)
GCV: 0.034777       RSS: 1.9562         GRSq: 0.99587      RSq: 0.99763
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=2,  test.rsq=FALSE)
itest 35  eqn56noise                       degree 2  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 12 (additive model)
GCV: 0.041088       RSS: 1.9562         GRSq: 0.99512      RSq: 0.99763
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=10, test.rsq=FALSE)
itest 36  eqn56noise                       degree 10 nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors
Number of terms at each degree of interaction: 1 12 (additive model)
GCV: 0.041088       RSS: 1.9562         GRSq: 0.99512      RSq: 0.99763
> 
> robotArm <- function(x) # Friedman Fast MARS paper
+ {
+     l1     <- x[,1]
+     l2     <- x[,2]
+     theta1 <- x[,3]
+     theta2 <- x[,4]
+     phi    <- x[,5]
+ 
+     x1 <- l1 * cos(theta1) - l2 * cos(theta1 + theta2) * cos(phi)
+     y <-  l1 * sin(theta1) - l2 * sin(theta1 + theta2) * cos(phi)
+     z <-  l2 *  sin(theta2) * sin(phi)
+ 
+     sqrt(x1^2 + y^2 + z^2)
+ }
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                       (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robotArm(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global) <- c("l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.earth(itest, robotArm, nk=51, degree=1)
itest 37  robotArm                         degree 1  nk 51  nTerms 10 of 17  GRSq 0.79
Selected 10 of 17 terms, and 4 of 5 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.038486       RSS: 2.5250         GRSq: 0.794        RSq: 0.8621
> itest <- itest+1; test.earth(itest, robotArm, nk=51, degree=10)
itest 38  robotArm                         degree 10 nk 51  nTerms 19 of 38  GRSq 0.85
Selected 19 of 38 terms, and 4 of 5 predictors
Number of terms at each degree of interaction: 1 10 8
GCV: 0.028232       RSS: 0.82325        GRSq: 0.84889      RSq: 0.95504
> itest <- itest+1; test.earth(itest, robotArm, nk=201, degree=1)
itest 39  robotArm                         degree 1  nk 201 nTerms 10 of 17  GRSq 0.79
Selected 10 of 17 terms, and 4 of 5 predictors
Number of terms at each degree of interaction: 1 9 (additive model)
GCV: 0.038486       RSS: 2.5250         GRSq: 0.794        RSq: 0.8621
> itest <- itest+1; test.earth(itest, robotArm, nk=201, degree=10)
itest 40  robotArm                         degree 10 nk 201 nTerms 19 of 38  GRSq 0.85
Selected 19 of 38 terms, and 4 of 5 predictors
Number of terms at each degree of interaction: 1 10 8
GCV: 0.028232       RSS: 0.82325        GRSq: 0.84889      RSq: 0.95504
> 
> cat("--- linear predictors -------------------------\n")
--- linear predictors -------------------------
> 
> # Build a linear-only earth model and an identical lm model to compare predict().
> # The somewhat strange args are to force the models to use the same predictors.
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 41  
> a <- earth(O3 ~ ., linpreds=TRUE, data = ozone1, pmethod="none", thresh=1e-10)
> print(summary(a))
Call:
earth(formula = O3 ~ ., data = ozone1, linpreds = TRUE, pmethod = "none", 
    thresh = 1e-10)

Expression:
  -9.2941 
  -   0.027242 * wind                         
  +   0.083265 * humidity                     
  +    0.26496 * temp                         
  - 0.00032299 * ibh                          
  -  0.0026598 * dpg                          
  +   0.023592 * ibt                          
  -  0.0077189 * vis                          
  -  0.0093787 * doy                          
Number of cases: 330
Selected 9 of 9 terms, and 8 of 9 predictors (8 linear predictors)
Number of terms at each degree of interaction: 1 8 (additive model)
GCV: 21.323         RSS: 6330.2         GRSq: 0.66878      RSq: 0.70021
> alin <- lm(O3 ~ . - vh, data = ozone1)
> print(summary(alin))

Call:
lm(formula = O3 ~ . - vh, data = ozone1)

Residuals:
    Min      1Q  Median      3Q     Max 
-12.008  -2.866  -0.222   2.764  13.453 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -9.294094   1.996850   -4.65  4.8e-06 ***
wind        -0.027242   0.132073   -0.21  0.83671    
humidity     0.083265   0.018701    4.45  1.2e-05 ***
temp         0.264955   0.048664    5.44  1.0e-07 ***
ibh         -0.000323   0.000282   -1.15  0.25282    
dpg         -0.002660   0.011259   -0.24  0.81340    
ibt          0.023592   0.012206    1.93  0.05415 .  
vis         -0.007719   0.003741   -2.06  0.03987 *  
doy         -0.009379   0.002763   -3.39  0.00077 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 4.44 on 321 degrees of freedom
Multiple R-squared:  0.7,	Adjusted R-squared: 0.693 
F-statistic: 93.7 on 8 and 321 DF,  p-value: <2e-16 

> stopifnot(all.equal(as.double(predict(a)), as.double(predict(alin))))
> newdata <- data.frame(
+         vh = c(5700,5701,5702),
+         wind = c(3,4,5),
+         humidity = c(30,40,50),
+         temp = c(31,42,53),
+         ibh = c(1000, 1000, 1000),
+         dpg = c(-10, 0, 10),
+         ibt = c(90, 80, 60),
+         vis = c(100, 110, 120),
+         doy= c(12, 34, 56))
> apred <- as.double(predict(a, newdata=newdata))
> alinpred <- as.double(predict(alin, newdata=newdata))
> stopifnot(all.equal(apred, alinpred))
> # print(head(predict(a, type="terms")))
> print(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
[1] 0 1 2 3 4 5 6 7 8
> 
> # test with mixed linear and standard predictors
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 42  
> a <- earth(O3 ~ ., linpreds=c(3, 8), data = ozone1, degree=2, trace=4)  # 3,8 is humidity,vis
Call: earth.default(x=x,y=y,trace=4,degree=2,linpreds=..1)

Predictors 1=vh 2=wind 3=humidity 4=temp 5=ibh 6=dpg 7=ibt 8=vis 9=doy 
Linear predictors 3=humidity 8=vis 

Forward pass: model matrix[330,9]   y[330,1]   minspan 8   endspan 15

         GRSq    RSq     DeltaRSq       RSS Pred PredName         Cut  Terms   Parents
1      0.0000 0.0000              2.112e+04                            1
2      0.6493 0.6599       0.6599   7181.92    4     temp          58  2   3   
4      0.6903 0.7088      0.04898   6147.78    5      ibh        1108  4   5   
6      0.7102 0.7361      0.02722   5573.05    9      doy          92  6   7   
8      0.7332 0.7608      0.02475   5050.46    3 humidity          19< 8       2   
10     0.7526 0.7852      0.02443   4534.62    6      dpg          10  9   10  
12     0.7577 0.7965      0.01128    4296.5    1       vh        5890  11  12  
14     0.7644 0.8054     0.008854   4109.54    8      vis           0< 13      
16     0.7654 0.8127     0.007305   3955.29    4     temp          72  14  15  6   
18     0.7679 0.8209      0.00825    3781.1    7      ibt         250  16  17  2   
20     0.7696 0.8284     0.007421   3624.39    2     wind           6  18  19  5   

GRSq: 0.7696 RSq: 0.8284
Reached max number of terms 21
Forward pass complete: 21 terms (19 terms used)

Subset size         GCV         GRSq      RSq  nPreds  Terms (index into bx)
          1     64.3756       0.0000   0.0000       0  1
          2     21.1094       0.6721   0.6771       2  1 8
          3     20.9755       0.6742   0.6840       3  1 6 8
          4     19.9276       0.6904   0.7044       2  1 2 3 4
          5     16.9346       0.7369   0.7527       4  1 4 6 7 8
          6     16.1165       0.7496   0.7683       5  1 4 6 7 8 9
          7     15.6239       0.7573   0.7789       6  1 6 7 8 9 12 13
          8     14.8093       0.7700   0.7938       6  1 6 7 8 9 10 12 13
          9     14.6658       0.7722   0.7990       6  1 6 7 8 9 10 12 13 14
         10     14.4686       0.7752   0.8049       6  1 6 7 8 9 10 11 12 13 14
         11     14.2229       0.7791   0.8114       7  1 6 7 8 9 10 11 12 13 14 17
         12     13.9698       0.7830   0.8178       9  1 6 7 8 9 10 11 12 13 14 17 18
chosen   13     13.7634       0.7862   0.8234       9  1 4 6 7 8 9 10 11 12 13 14 17 18
         14     13.8542       0.7848   0.8252       9  1 4 6 7 8 9 10 11 12 13 14 16 17 18
         15     13.9342       0.7835   0.8272       9  1 4 6 7 8 9 10 11 12 13 14 16 17 18 19
         16     14.1293       0.7805   0.8277       9  1 3 4 6 7 8 9 10 11 12 13 14 16 17 18 19
         17     14.3403       0.7772   0.8281       9  1 2 3 4 6 7 8 9 10 11 12 13 14 16 17 18 19
         18     14.5811       0.7735   0.8282       9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 17 18 19
         19      14.829       0.7696   0.8284       9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19

Prune method "backward" penalty 3 nprune 19: selected 13 of 19 terms, and 9 of 9 predictors
GRSq: 0.7862 RSq: 0.8234 
> print(summary(a))
Call:
earth(formula = O3 ~ ., data = ozone1, linpreds = c(3, 8), degree = 2, 
    trace = 4)

Expression:
  18.702 
  -   0.010174 * vis                          
  +    0.16857 * pmax(0,       vh -     5890) 
  -   0.017241 * pmax(0,     5890 -       vh) 
  - 0.00050336 * pmax(0,      ibh -     1108) 
  -   0.077525 * pmax(0,      dpg -       10) 
  -   0.066723 * pmax(0,       10 -      dpg) 
  -   0.022911 * pmax(0,      doy -       92) 
  -    0.14034 * pmax(0,       92 -      doy) 
  +   0.009468 * humidity                     * pmax(0,     temp -       58) 
  -  0.0054216 * pmax(0,     wind -        6) * pmax(0,     1108 -      ibh) 
  -  0.0028338 * pmax(0,     temp -       58) * pmax(0,      250 -      ibt) 
  -  0.0037201 * pmax(0,     temp -       72) * pmax(0,      doy -       92) 
Number of cases: 330
Selected 13 of 19 terms, and 9 of 9 predictors (2 linear predictors)
Number of terms at each degree of interaction: 1 8 4
GCV: 13.763         RSS: 3728.7         GRSq: 0.7862       RSq: 0.82341
> if (PLOT) {
+     plot(a)
+     plotmo(a)
+ }
> print(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
 [1] 0 2 3 2 4 5 6 6 6 6 7 9 9 9 9 9 9 9 9
> print(earth:::get.nterms.per.degree(a))

0 1 2 
1 8 4 
> # print(head(predict(a, type="terms")))
> 
> # this is a good example because it has linear preds in both 1 and 2 degree terms
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56,     nk=21, degree=2, linpreds=c(3,5))
itest 43  eqn56                            degree 2  nk 21  nTerms 11 of 12  GRSq    1
Selected 11 of 12 terms, and 5 of 10 predictors (2 linear predictors)
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.037481       RSS: 2.0525         GRSq: 0.99555      RSq: 0.99751
> # check symmetry by using negative of eqn56
> itest <- itest+1; data.global <- cbind(neg.eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> test.earth(itest, neg.eqn56, nk=21, degree=2, linpreds=c(3,5))
itest 44  neg.eqn56                        degree 2  nk 21  nTerms 11 of 12  GRSq    1
Selected 11 of 12 terms, and 5 of 10 predictors (2 linear predictors)
Number of terms at each degree of interaction: 1 10 (additive model)
GCV: 0.037481       RSS: 2.0525         GRSq: 0.99555      RSq: 0.99751
> 
> cat("--- tests with ozone data ----------------------\n")
--- tests with ozone data ----------------------
> 
> data(ozone1)
> attach(ozone1)
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=1, nk=21)
itest 45  doy ~ wind+humidity+temp+vis     degree 1  nk 21  nTerms 6  of 15  GRSq 0.18 GRSq ratio 1.3289 
Selected 6 of 15 terms, and 3 of 4 predictors
Number of terms at each degree of interaction: 1 5 (additive model)
GCV: 8981           RSS: 2769457        GRSq: 0.17813      RSq: 0.22733
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=2, nk=21)
itest 46  doy ~ wind+humidity+temp+vis     degree 2  nk 21  nTerms 10 of 20  GRSq 0.22 GRSq ratio 1.7656 
Selected 10 of 20 terms, and 3 of 4 predictors
Number of terms at each degree of interaction: 1 2 7
GCV: 8563.3         RSS: 2437753        GRSq: 0.21635      RSq: 0.31987
> 
> # this is a basic test of RegressAndFix (because this generates lin dep bx cols)
> 
> cat("--Expect warning from mda::mars: NAs introduced by coercion\n") # why do we get a warning?
--Expect warning from mda::mars: NAs introduced by coercion
> x.global <- cbind(wind, exp(humidity))
> y <- doy
> # col.loess is 0 else get loess errors
> itest <- itest+1; ozone.test(itest, "doy ~ wind+exp(humidity)", x.global, y, degree=1, nk=21, col.loess=0)
itest 47  doy ~ wind+exp(humidity)         degree 1  nk 21  nTerms 3  of 5   GRSq  0.1 GRSq ratio 1.6351 
Selected 3 of 5 terms, and 1 of 2 predictors
Number of terms at each degree of interaction: 1 2 (additive model)
GCV: 9825.3         RSS: 3144854        GRSq: 0.10086      RSq: 0.12259
Warning message:
In storage.mode(tagx) <- "integer" : NAs introduced by coercion
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~.", x.global, y, degree=2, nk=21)
itest 48  O3~.                             degree 2  nk 21  nTerms 11 of 21  GRSq 0.79 GRSq ratio 1.0105 
Selected 11 of 21 terms, and 8 of 9 predictors
Number of terms at each degree of interaction: 1 5 5
GCV: 13.434         RSS: 3762.2         GRSq: 0.79132      RSq: 0.82183
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~., nk=51", x.global, y, degree=2, nk=51)
itest 49  O3~., nk=51                      degree 2  nk 51  nTerms 28 of 50  GRSq 0.81 GRSq ratio 1.0110 
Selected 28 of 50 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 9 18
GCV: 12.434         RSS: 2576.6         GRSq: 0.80685      RSq: 0.87798
> 
> detach(ozone1)
> 
> cat("--- fast mars -----------------------------------\n")
--- fast mars -----------------------------------
> 
> print(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = -1, fast.beta = 1))
Selected 17 of 31 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 5 11
GCV: 13.383         RSS: 3387.3         GRSq: 0.7921       RSq: 0.83958
> print(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = -1, fast.beta = 0))
Selected 17 of 31 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 5 11
GCV: 13.383         RSS: 3387.3         GRSq: 0.7921       RSq: 0.83958
> print(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 1))
Selected 17 of 30 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 8 8
GCV: 12.977         RSS: 3284.4         GRSq: 0.79842      RSq: 0.84445
> print(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 0))
Selected 11 of 31 terms, and 8 of 9 predictors
Number of terms at each degree of interaction: 1 5 5
GCV: 13.434         RSS: 3762.2         GRSq: 0.79132      RSq: 0.82183
> 
> cat("--- plot.earth and plot.earth.models ------------\n")
--- plot.earth and plot.earth.models ------------
> 
> a <- earth(O3 ~ ., data=ozone1) # formula interface
> 
> if (PLOT)
+     plot(a, caption="plot.earth test 1", col.rsq=3, col.loess=4, col.qq="pink",
+          col.vline=1, col.npreds=0, nresiduals=100, cum.grid="grid")
> 
> set.seed(1)
> if (PLOT) {
+     plot(a, caption="plot.earth test 2", which=c(3,4,1), rlim=c(.2,.9),
+          jitter=.01, id.n=5, legend.pos=c(10,.4), pch=20, lty.vline=1)
+ 
+     plot(a, caption="plot.earth test 3", which=c(2), main="test main")
+ }
> 
> a1 <- earth(ozone1[,c(2:4,10)], ozone1[,1])     # x,y interface
> 
> if (PLOT) {
+     plot(a, caption="plot.earth test 4", id.n=1)
+     set.seed(1)
+     plot.earth.models(a, which=1, rlim=c(.4,.8), jitter=.01)
+ 
+     plot.earth.models(a1)
+ 
+     plot.earth.models(list(a, a1), col.cum=c(3,4),  col.grsq=c(1,2), col.rsq=c(3,4),
+          col.npreds=1, col.vline=1, lty.vline=3,
+          legend.pos=c(5,.4), legend.text=c("a", "b", "c"))
+ }
> 
> cat("--- test minspan --------------------------------\n")
--- test minspan --------------------------------
> 
> a <- earth(O3 ~ ., data=ozone1, minspan=2)
> print(summary(a))
Call:
earth(formula = O3 ~ ., data = ozone1, minspan = 2)

Expression:
  12.575 
  -  0.016503 * pmax(0,     5740 -       vh) 
  -   0.33442 * pmax(0,     wind -        3) 
  -   0.13353 * pmax(0,       54 - humidity) 
  +   0.31902 * pmax(0,     temp -       58) 
  - 0.0042594 * pmax(0,     1046 -      ibh) 
  -   0.10069 * pmax(0,      dpg -       12) 
  +  0.037322 * pmax(0,      ibt -      120) 
  +  0.044582 * pmax(0,       80 -      vis) 
  +  0.041911 * pmax(0,      doy -       89) 
  -   0.11515 * pmax(0,       89 -      doy) 
  -   0.08339 * pmax(0,      doy -      159) 
Number of cases: 330
Selected 12 of 20 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 11 (additive model)
GCV: 14.684         RSS: 4193.7         GRSq: 0.7719       RSq: 0.80139
> 
> a <- earth(O3 ~ ., data=ozone1, minspan=0)
> print(summary(a))
Call:
earth(formula = O3 ~ ., data = ozone1, minspan = 0)

Expression:
  13.997 
  -  0.013777 * pmax(0,     5860 -       vh) 
  -   0.34494 * pmax(0,     wind -        3) 
  -   0.13130 * pmax(0,       55 - humidity) 
  +    0.2781 * pmax(0,     temp -       58) 
  - 0.0033010 * pmax(0,     1108 -      ibh) 
  -  0.099809 * pmax(0,      dpg -       10) 
  +  0.032502 * pmax(0,      ibt -      121) 
  +  0.023215 * pmax(0,      150 -      vis) 
  +  0.041344 * pmax(0,      doy -       92) 
  -   0.11683 * pmax(0,       92 -      doy) 
  -    0.0848 * pmax(0,      doy -      159) 
Number of cases: 330
Selected 12 of 20 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 11 (additive model)
GCV: 14.590         RSS: 4166.9         GRSq: 0.77336      RSq: 0.80266
> 
> cat("--- test multiple responses ---------------------\n")
--- test multiple responses ---------------------
> 
> # this uses the global matrix data.global (data.global[,1:2] is the response)
> 
> test.earth.two.responses <- function(itest, func1, func2,
+     degree=2, nk=51, plotit=PLOT, test.rsq=TRUE, trace=0, minspan=0,
+     test.mars.to.earth=FALSE)
+ {
+     if(typeof(func1) == "character")
+         funcnames <- paste("multiple responses", func1, func2)
+     else
+         funcnames <- paste("multiple responses", deparse(substitute(func1)), deparse(substitute(func2)))
+     cat("itest", sprintf("%-3d", itest), funcnames,
+         " degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk), "\n\n")
+     gc()
+     fite <- earth(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+                 degree=degree, trace=trace, nk=nk, pmethod="b", fast.k=-1, minspan=minspan)
+     print(fite)
+     caption <- paste("itest ", itest, ": ", funcnames, " degree=", degree, " nk=", nk, sep="")
+     if(plotit) {
+         if(typeof(func1) == "character") {
+             plotmo(fite, caption=caption)
+             plotmo(fite, ycolumn=2)
+         } else {
+             plotmo(fite, func=func1, caption=caption)
+             plotmo(fite, func=func2, ycolumn=2)
+         }
+         plot(fite, caption=caption)
+         plot(fite, ycolumn=2)
+     }
+     cat("\n")
+ #     if(test.mars.to.earth) {
+ #         cat("Testing mars.to.earth with a multiple response model\n")
+ #         fitm <- mars(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+ #                      degree=degree, trace=(trace!=0), nk=nk)
+ #         fitme <- mars.to.earth(fitm)
+ #         print(fitme)
+ #         print(summary(fitme))
+ #         if(plotit) {
+ #             plotmo(fitm, func=func1, caption=caption)
+ #             plotmo(fitm, func=func2, ycolumn=2)
+ #         }
+ #     }
+     fite
+ }
> 
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1", "func7", "x1", "x2")
> itest <- itest+1; a <- test.earth.two.responses(itest, func1, func7, nk=51, degree=1)
itest 50  multiple responses func1 func7  degree 1  nk 51  

Selected 9 of 9 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 8 (additive model)

func1       GCV: 0.0022734      RSS: 0.15662        GRSq: 0.99732      RSq: 0.99811
func7       GCV: 0.010258       RSS: 0.7067         GRSq: 0.98         RSq: 0.98595
All         GCV: 0.012532       RSS: 0.86332        GRSq: 0.99079      RSq: 0.99352

> print(summary(a))
Call:
earth(x = data.global[, c(-1, -2), drop = FALSE], y = data.global[, 
    1:2], trace = trace, nk = nk, degree = degree, minspan = minspan, 
    fast.k = -1, pmethod = "b")

func1 expression:
  -1.4319 
  +  1.8550 * pmax(0,       x1 - -0.46898) 
  +  1.4272 * pmax(0, -0.46898 -       x1) 
  +  1.0448 * pmax(0,       x1 - -0.22777) 
  -  1.1687 * pmax(0,       x1 -  0.19913) 
  -  1.7967 * pmax(0,       x1 -  0.43524) 
  -   2.042 * pmax(0,       x1 -  0.64189) 
  + 0.99082 * pmax(0,       x2 - -0.34245) 
  -  1.0445 * pmax(0, -0.34245 -       x2) 

func7 expression:
  -0.6897 
  -   1.3624 * pmax(0,       x1 - -0.46898) 
  +   4.0094 * pmax(0, -0.46898 -       x1) 
  +   5.9408 * pmax(0,       x1 - -0.22777) 
  -   4.5221 * pmax(0,       x1 -  0.19913) 
  -   5.2785 * pmax(0,       x1 -  0.43524) 
  +   1.9712 * pmax(0,       x1 -  0.64189) 
  - 0.019681 * pmax(0,       x2 - -0.34245) 
  - 0.017876 * pmax(0, -0.34245 -       x2) 
Number of cases: 100
Selected 9 of 9 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 8 (additive model)

func1       GCV: 0.0022734      RSS: 0.15662        GRSq: 0.99732      RSq: 0.99811
func7       GCV: 0.010258       RSS: 0.7067         GRSq: 0.98         RSq: 0.98595
All         GCV: 0.012532       RSS: 0.86332        GRSq: 0.99079      RSq: 0.99352
> if (PLOT) {
+     plotmo(a, ycolumn=1)     # test generation of caption based on response name
+     plotmo(a, ycolumn=2)
+     plot(a, ycolumn=1)
+     plot(a, ycolumn=2)
+ }
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1", "a.very.long.in.fact.extremely.long.name", "x1", "x2")
> itest <- itest+1; a <- test.earth.two.responses(itest, func1, func7, nk=51, degree=3)
itest 51  multiple responses func1 func7  degree 3  nk 51  

Selected 9 of 9 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 8 (additive model)

func1                                    GCV: 0.0025095      RSS: 0.15662        GRSq: 0.99704      RSq: 0.99811
a.very.long.in.fact.extremely.long.name  GCV: 0.011324       RSS: 0.7067         GRSq: 0.97793      RSq: 0.98595
All                                      GCV: 0.013833       RSS: 0.86332        GRSq: 0.98983      RSq: 0.99352

> print(summary(a))
Call:
earth(x = data.global[, c(-1, -2), drop = FALSE], y = data.global[, 
    1:2], trace = trace, nk = nk, degree = degree, minspan = minspan, 
    fast.k = -1, pmethod = "b")

func1 expression:
  -1.4319 
  +  1.8550 * pmax(0,       x1 - -0.46898) 
  +  1.4272 * pmax(0, -0.46898 -       x1) 
  +  1.0448 * pmax(0,       x1 - -0.22777) 
  -  1.1687 * pmax(0,       x1 -  0.19913) 
  -  1.7967 * pmax(0,       x1 -  0.43524) 
  -   2.042 * pmax(0,       x1 -  0.64189) 
  + 0.99082 * pmax(0,       x2 - -0.34245) 
  -  1.0445 * pmax(0, -0.34245 -       x2) 

a.very.long.in.fact.extremely.long.name expression:
  -0.6897 
  -   1.3624 * pmax(0,       x1 - -0.46898) 
  +   4.0094 * pmax(0, -0.46898 -       x1) 
  +   5.9408 * pmax(0,       x1 - -0.22777) 
  -   4.5221 * pmax(0,       x1 -  0.19913) 
  -   5.2785 * pmax(0,       x1 -  0.43524) 
  +   1.9712 * pmax(0,       x1 -  0.64189) 
  - 0.019681 * pmax(0,       x2 - -0.34245) 
  - 0.017876 * pmax(0, -0.34245 -       x2) 
Number of cases: 100
Selected 9 of 9 terms, and 2 of 2 predictors
Number of terms at each degree of interaction: 1 8 (additive model)

func1                                    GCV: 0.0025095      RSS: 0.15662        GRSq: 0.99704      RSq: 0.99811
a.very.long.in.fact.extremely.long.name  GCV: 0.011324       RSS: 0.7067         GRSq: 0.97793      RSq: 0.98595
All                                      GCV: 0.013833       RSS: 0.86332        GRSq: 0.98983      RSq: 0.99352
> 
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = c("", "neg.eqn56noise", "x1", "x2", "x3", "x4", "x5")
> itest <- itest+1; a <- test.earth.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=1)
itest 52  multiple responses eqn56 neg.eqn56noise  degree 1  nk 51  

Selected 12 of 15 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 11 (additive model)

Response 1      GCV: 0.090205       RSS: 5.3482         GRSq: 0.9893       RSq: 0.99352
neg.eqn56noise  GCV: 1.0512         RSS: 62.323         GRSq: 0.8988       RSq: 0.93878
All             GCV: 1.1414         RSS: 67.671         GRSq: 0.93932      RSq: 0.9633

> 
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = NULL
> itest <- itest+1; a <- test.earth.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=2)
itest 53  multiple responses eqn56 neg.eqn56noise  degree 2  nk 51  

Selected 11 of 38 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 8 2

Response 1  GCV: 0.11567        RSS: 6.3343         GRSq: 0.98627      RSq: 0.99233
Response 2  GCV: 1.4933         RSS: 81.775         GRSq: 0.83909      RSq: 0.9101
All         GCV: 1.609          RSS: 88.11          GRSq: 0.90912      RSq: 0.94922

> 
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                                        (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robotArm(x.global), eqn56(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global)    <- c(                "l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "eqn56", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=51, degree=1)
itest 54  multiple responses robotArm eqn56  degree 1  nk 51  

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.068291       RSS: 4.262          GRSq: 0.63448      RSq: 0.76724
eqn56       GCV: 0.047013       RSS: 2.9341         GRSq: 0.99902      RSq: 0.99937
All         GCV: 0.11530        RSS: 7.1961         GRSq: 0.9976       RSq: 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.068291       RSS: 4.262          GRSq: 0.63448      RSq: 0.76724
eqn56       GCV: 0.047013       RSS: 2.9341         GRSq: 0.99902      RSq: 0.99937
All         GCV: 0.11530        RSS: 7.1961         GRSq: 0.9976       RSq: 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=51, degree=2, test.mars.to.earth=TRUE)
itest 55  multiple responses robotArm eqn56  degree 2  nk 51  

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.077831       RSS: 4.262          GRSq: 0.58341      RSq: 0.76724
eqn56       GCV: 0.053581       RSS: 2.9341         GRSq: 0.99888      RSq: 0.99937
All         GCV: 0.13141        RSS: 7.1961         GRSq: 0.99727      RSq: 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.077831       RSS: 4.262          GRSq: 0.58341      RSq: 0.76724
eqn56       GCV: 0.053581       RSS: 2.9341         GRSq: 0.99888      RSq: 0.99937
All         GCV: 0.13141        RSS: 7.1961         GRSq: 0.99727      RSq: 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=1)
itest 56  multiple responses robotArm eqn56  degree 1  nk 201 

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.068291       RSS: 4.262          GRSq: 0.63448      RSq: 0.76724
eqn56       GCV: 0.047013       RSS: 2.9341         GRSq: 0.99902      RSq: 0.99937
All         GCV: 0.11530        RSS: 7.1961         GRSq: 0.9976       RSq: 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.068291       RSS: 4.262          GRSq: 0.63448      RSq: 0.76724
eqn56       GCV: 0.047013       RSS: 2.9341         GRSq: 0.99902      RSq: 0.99937
All         GCV: 0.11530        RSS: 7.1961         GRSq: 0.9976       RSq: 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=2)
itest 57  multiple responses robotArm eqn56  degree 2  nk 201 

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.077831       RSS: 4.262          GRSq: 0.58341      RSq: 0.76724
eqn56       GCV: 0.053581       RSS: 2.9341         GRSq: 0.99888      RSq: 0.99937
All         GCV: 0.13141        RSS: 7.1961         GRSq: 0.99727      RSq: 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.077831       RSS: 4.262          GRSq: 0.58341      RSq: 0.76724
eqn56       GCV: 0.053581       RSS: 2.9341         GRSq: 0.99888      RSq: 0.99937
All         GCV: 0.13141        RSS: 7.1961         GRSq: 0.99727      RSq: 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=10)
itest 58  multiple responses robotArm eqn56  degree 10 nk 201 

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.077831       RSS: 4.262          GRSq: 0.58341      RSq: 0.76724
eqn56       GCV: 0.053581       RSS: 2.9341         GRSq: 0.99888      RSq: 0.99937
All         GCV: 0.13141        RSS: 7.1961         GRSq: 0.99727      RSq: 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors
Number of terms at each degree of interaction: 1 10 (additive model)

arm         GCV: 0.077831       RSS: 4.262          GRSq: 0.58341      RSq: 0.76724
eqn56       GCV: 0.053581       RSS: 2.9341         GRSq: 0.99888      RSq: 0.99937
All         GCV: 0.13141        RSS: 7.1961         GRSq: 0.99727      RSq: 0.99847
> 
> attach(ozone1)
> x.global <- cbind(                wind, humidity, temp, ibh, dpg, ibt, vis)
> data.global <- cbind(O3, doy, vh, wind, humidity, temp, ibh, dpg, ibt, vis)
> itest <- itest+1; test.earth.two.responses(itest, "O3", "doy", nk=51, degree=2)
itest 59  multiple responses O3 doy  degree 2  nk 51  

Selected 21 of 49 terms, and 8 of 8 predictors
Number of terms at each degree of interaction: 1 9 11

O3          GCV: 21.816         RSS: 5145.9         GRSq: 0.66112      RSq: 0.7563
doy         GCV: 7414.6         RSS: 1748968        GRSq: 0.32148      RSq: 0.51204
All         GCV: 7436.4         RSS: 1754113        GRSq: 0.32347      RSq: 0.51347

Selected 21 of 49 terms, and 8 of 8 predictors
Number of terms at each degree of interaction: 1 9 11

O3          GCV: 21.816         RSS: 5145.9         GRSq: 0.66112      RSq: 0.7563
doy         GCV: 7414.6         RSS: 1748968        GRSq: 0.32148      RSq: 0.51204
All         GCV: 7436.4         RSS: 1754113        GRSq: 0.32347      RSq: 0.51347
> detach(ozone1)
> 
> cat("--- formula based multiple response -------------\n")
--- formula based multiple response -------------
> 
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> if (PLOT) {
+     plotmo(a2)                  # test generation of caption based on response name
+     plotmo(a2, ycolumn=1)
+     plotmo(a2, ycolumn=2)
+     plot(a2)
+     plot(a2, ycolumn=1)
+     plot(a2, ycolumn=2)
+ }
> 
> cat("--- test plot.earth.models with multiple responses ---\n")
--- test plot.earth.models with multiple responses ---
> 
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> b2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=1)
> if (PLOT) {
+     plot.earth.models(list(a, a2), caption="plot.earth.models with multiple responses, list(a,a2)")
+     plot.earth.models(list(a2, a), caption="plot.earth.models with multiple responses, list(a2,a)")
+     plot.earth.models(list(a2, b2), caption="plot.earth.models with multiple responses, list(a2,b2)")
+ }
> 
> cat("--- subset --------------------------------------\n")
--- subset --------------------------------------
> 
> set.seed(9)
> train.subset <- sample(1:nrow(ozone1), .8 * nrow(ozone1))
> test.subset <- (1:nrow(ozone1))[-train.subset]
> 
> # all the following models should be identical
> a <- earth(ozone1[,-1], ozone1[,1], subset=train.subset, nprune=7, degree=2)
> print(a)
Selected 7 of 21 terms, and 5 of 9 predictors
Number of terms at each degree of interaction: 1 5 1
GCV: 15.906         RSS: 3705.7         GRSq: 0.75138      RSq: 0.77893
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[,-1], ozone1[,1], subset=train.subset)")
> 
> a <- earth(ozone1[train.subset,-1], ozone1[train.subset,1], nprune=7, degree=2)
> print(a)
Selected 7 of 21 terms, and 5 of 9 predictors
Number of terms at each degree of interaction: 1 5 1
GCV: 15.906         RSS: 3705.7         GRSq: 0.75138      RSq: 0.77893
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[train.subset,-1], ozone1[train.subset,1]")
> 
> a <- earth(O3 ~ ., data=ozone1, subset=train.subset, nprune=7, degree=2)
> print(a)
Selected 7 of 21 terms, and 5 of 9 predictors
Number of terms at each degree of interaction: 1 5 1
GCV: 15.906         RSS: 3705.7         GRSq: 0.75138      RSq: 0.77893
> if (PLOT)
+     plotmo(a, caption="test subset: earth(O3 ~ ., data=ozone1, subset=train.subset")
> 
> y <- ozone1[test.subset, 1]
> yhat <- predict(a, newdata = ozone1[test.subset, -1])
> print(1 - sum((y - yhat)^2)/sum((y - mean(y))^2)) # print RSquared
[1] 0.72193
> 
> cat("--- update -------------------------\n")
--- update -------------------------
> 
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> print(update(a, penalty = -1, ponly=TRUE))
Selected 21 of 21 terms, and 8 of 9 predictors
Number of terms at each degree of interaction: 1 10 10
GCV: 10.759         RSS: 3550.6         GRSq: 0.83185      RSq: 0.83185
> print(update(a, penalty = 10, ponly=TRUE))
Selected 10 of 21 terms, and 7 of 9 predictors
Number of terms at each degree of interaction: 1 5 4
GCV: 17.157         RSS: 3931.8         GRSq: 0.73349      RSq: 0.8138
> a <- earth(O3 ~ ., data=ozone1, nk=31, pmethod="n", degree=2)
> a.none <- print(update(a, nprune=10, pmethod="n"))
Selected 10 of 31 terms, and 5 of 9 predictors
Number of terms at each degree of interaction: 1 6 3
GCV: 13.812         RSS: 3931.8         GRSq: 0.78545      RSq: 0.8138
> print(update(a.none, pmethod="b"))
Selected 10 of 31 terms, and 7 of 9 predictors
Number of terms at each degree of interaction: 1 5 4
GCV: 13.812         RSS: 3931.8         GRSq: 0.78545      RSq: 0.8138
> print(update(a.none, nprune=4, pmethod="e"))
Selected 4 of 31 terms, and 3 of 9 predictors
Number of terms at each degree of interaction: 1 2 1
GCV: 18.568         RSS: 5815.9         GRSq: 0.71157      RSq: 0.72457
> a.updated <- update(a.none, nprune=10, pmethod="b")
> print(a.updated)
Selected 10 of 31 terms, and 7 of 9 predictors
Number of terms at each degree of interaction: 1 5 4
GCV: 13.812         RSS: 3931.8         GRSq: 0.78545      RSq: 0.8138
> a.backwards <- update(a, nprune=10, pmethod="b")
> print(a.backwards)
Selected 10 of 31 terms, and 7 of 9 predictors
Number of terms at each degree of interaction: 1 5 4
GCV: 13.812         RSS: 3931.8         GRSq: 0.78545      RSq: 0.8138
> print(all.equal(a.updated$bx, a.backwards$bx))
[1] TRUE
> a <- earth(O3 ~ ., data=ozone1, nk=31, nprune=10, pmethod="b", degree=2)
> print(a)
Selected 10 of 31 terms, and 7 of 9 predictors
Number of terms at each degree of interaction: 1 5 4
GCV: 13.812         RSS: 3931.8         GRSq: 0.78545      RSq: 0.8138
> print(all.equal(a$bx, a.backwards$bx))
[1] TRUE
> 
> cat("--- Force.xtx.prune -----------------------------\n")
--- Force.xtx.prune -----------------------------
> 
> a <- earth(Volume ~ ., data = trees)
> a1 <- earth(Volume ~ ., data = trees, Force.xtx.prune=TRUE)
> print(all.equal(a$bx, a1$bx))
[1] TRUE
> 
> a <- earth(O3 ~ ., data = ozone1, nk=51)
> a1 <- earth(O3 ~ ., data = ozone1, nk=51, Force.xtx.prune=TRUE)
> print(all.equal(a$bx, a1$bx))
[1] TRUE
> 
> cat("--- extractAIC.earth ----------------------------\n")
--- extractAIC.earth ----------------------------
> 
> a <-earth(O3 ~ ., data=ozone1, degree=2)
> cat("Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC\n")
Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC
> print(drop1(a))
Single term deletions

Model:
O3 ~ vh + wind + humidity + temp + ibh + dpg + ibt + vis + doy
            Df  AIC
<none>         13.4
vh         0.0 13.4
wind      -2.5 13.4
humidity -12.5 15.2
temp     -10.0 13.2
ibh        0.0 13.0
dpg        0.0 14.7
ibt       -5.0 13.9
vis       -2.5 13.9
doy       -2.5 15.6
Warning messages:
1: extractAIC.earth: returning GCV instead of AIC 
2: extractAIC.earth: returning GCV instead of AIC 
3: extractAIC.earth: returning GCV instead of AIC 
4: extractAIC.earth: returning GCV instead of AIC 
5: extractAIC.earth: returning GCV instead of AIC 
6: extractAIC.earth: returning GCV instead of AIC 
7: extractAIC.earth: returning GCV instead of AIC 
8: extractAIC.earth: returning GCV instead of AIC 
9: extractAIC.earth: returning GCV instead of AIC 
10: extractAIC.earth: returning GCV instead of AIC 
> 
> cat("--- fda and mda with earth -----------------------------------\n")
--- fda and mda with earth -----------------------------------
> 
> am <- fda(Species ~ ., data=iris, method=mars, degree=1, keepxy=TRUE)
> print(am)
Call:
fda(formula = Species ~ ., data = iris, method = mars, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 95.31 100.00 

Training Misclassification Error: 0.02 ( N = 150 )
> a <- fda(Species ~ ., data=iris, method=earth, degree=1, keepxy=TRUE)
> print(a)
Call:
fda(formula = Species ~ ., data = iris, method = earth, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.48 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> print(confusion(a))
            true
object       setosa versicolor virginica
  setosa         50          0         0
  versicolor      0         47         3
  virginica       0          3        47
attr(,"error")
[1] 0.04
> if (PLOT) {
+     par(mar=c(3, 3, 2, .5))  # small margins and text to pack figs in
+     par(mgp=c(1.6, 0.6, 0))  # flatten axis elements
+     par(oma=c(0,0,4,0))      # make space for caption
+     layout(rbind(c(1,1,0,0), c(2,3,4,5), c(6,7,8,9)), heights=c(2,1,1))
+     plot(a)
+     plotmo(a$fit, ycolumn=1, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE)
+     plotmo(a$fit, ycolumn=2, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE)
+     mtext("fda test", outer=TRUE, font=2, line=1.5, cex=1)
+ }
> 
> data(glass)
> set.seed(123)
> samp <- sample(c(1:214), size=100, replace=FALSE)
> glass.train <- glass[samp,]
> glass.test <- glass[-samp,]
> am <- mda(Type ~ ., data=glass.train, method=mars,  keepxy=TRUE, degree=2)
> a <-  mda(Type ~ ., data=glass.train, method=earth, keepxy=TRUE, degree=2)
> print(am)
Call:
mda(formula = Type ~ ., data = glass.train, method = mars, keepxy = TRUE, 
    degree = 2)

Dimension: 8 

Percent Between-Group Variance Explained:
    v1     v2     v3     v4     v5     v6     v7     v8 
 44.62  75.74  84.36  91.27  95.96  98.38  99.40 100.00 

Training Misclassification Error: 0.32 ( N = 100 )

Deviance: 151.38 
> print(a)
Call:
mda(formula = Type ~ ., data = glass.train, method = earth, keepxy = TRUE, 
    degree = 2)

Dimension: 12 

Percent Between-Group Variance Explained:
    v1     v2     v3     v4     v5     v6     v7     v8     v9    v10    v11 
 74.26  95.64  97.61  98.58  99.12  99.44  99.73  99.90  99.96 100.00 100.00 
   v12 
100.00 

Training Misclassification Error: 0.32 ( N = 100 )

Deviance: 174.79 
> cat("mda with mars  ", attr(confusion(am), "error"), "\n")
mda with mars   0.32 
> cat("mda with earth ", attr(confusion(a),  "error"), "\n")
mda with earth  0.32 
> if (PLOT)
+     plotmo(a$fit, ycolumn=9, clip=FALSE, ylim=NA)
> 
> cat("--- \"allowed\" argument -----------------\n")
--- "allowed" argument -----------------
> 
> example1  <- function(degree, pred, parents)
+ {
+     pred != 2  # disallow predictor 2, which is "Height"
+ }
> a1 <- earth(Volume ~ ., data = trees, allowed = example1)
> print(summary(a1))
Call:
earth(formula = Volume ~ ., data = trees, allowed = example1)

Expression:
  24.753 
  +  6.146 * pmax(0, Girth -  12.9) 
  - 3.1318 * pmax(0,  12.9 - Girth) 
Number of cases: 31
Selected 3 of 3 terms, and 1 of 2 predictors
Number of terms at each degree of interaction: 1 2 (additive model)
GCV: 15.896         RSS: 346.64         GRSq: 0.94307      RSq: 0.95724
> example2 <- function(degree, pred, parents)
+ {
+     # disallow humidity in terms of degree > 1
+     # 3 is the "humidity" column in the input matrix
+     if (degree > 1 && (pred == 3 || parents[3]))
+         return(FALSE)
+     TRUE
+ }
> a <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example2)
> print(summary(a))
Call:
earth(formula = O3 ~ ., data = ozone1, degree = 2, allowed = example2)

Expression:
  14.809 
  +    0.26254 * pmax(0,   vh - 5860) 
  -   0.015887 * pmax(0, 5860 -   vh) 
  +     0.5262 * pmax(0, temp -   58) 
  - 0.00049648 * pmax(0,  ibh - 1108) 
  -    0.07556 * pmax(0,  dpg -   10) 
  -   0.056802 * pmax(0,   10 -  dpg) 
  +    0.05031 * pmax(0,  150 -  vis) 
  -    0.12802 * pmax(0,   92 -  doy) 
  -   0.029923 * pmax(0,  doy -  159) 
  -  0.0038632 * pmax(0,   vh - 5860) * pmax(0,  dpg -  -15) 
  -  0.0093564 * pmax(0,   vh - 5860) * pmax(0,  -15 -  dpg) 
  -   0.018301 * pmax(0, temp -   58) * pmax(0,  dpg -   54) 
  -  0.0045106 * pmax(0, temp -   58) * pmax(0,   54 -  dpg) 
  -   0.004125 * pmax(0, temp -   72) * pmax(0,  150 -  vis) 
  -  0.0012468 * pmax(0,   72 - temp) * pmax(0,  150 -  vis) 
Number of cases: 330
Selected 16 of 20 terms, and 6 of 9 predictors
Number of terms at each degree of interaction: 1 9 6
GCV: 15.195         RSS: 3912.6         GRSq: 0.76397      RSq: 0.8147
> example3 <- function(degree, pred, parents)
+ {
+     # allow only humidity and temp in terms of degree > 1
+     # 3 and 4 are the "humidity" and "temp" columns
+     allowed.set = c(3,4)
+     if (degree > 1 && (all(pred != allowed.set) || any(parents[-allowed.set])))
+         return(FALSE)
+     TRUE
+ }
> a <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example3)
> print(summary(a))
Call:
earth(formula = O3 ~ ., data = ozone1, degree = 2, allowed = example3)

Expression:
  12.278 
  -  0.013150 * pmax(0,     5860 -       vh) 
  -   0.57372 * pmax(0,     wind -        6) 
  +   0.25970 * pmax(0,     temp -       58) 
  - 0.0027595 * pmax(0,     1108 -      ibh) 
  -  0.099122 * pmax(0,      dpg -       10) 
  -  0.067401 * pmax(0,       10 -      dpg) 
  +  0.044777 * pmax(0,      ibt -      116) 
  +  0.018038 * pmax(0,      200 -      vis) 
  +  0.043212 * pmax(0,      doy -       92) 
  -   0.10567 * pmax(0,       92 -      doy) 
  -  0.080236 * pmax(0,      doy -      149) 
  -  0.017449 * pmax(0,       55 - humidity) * pmax(0,     temp -       58) 
Number of cases: 330
Selected 13 of 20 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 11 1
GCV: 13.895         RSS: 3764.4         GRSq: 0.78415      RSq: 0.82172
> 
> # "allowed" function checks, these check error handling by forcing an error
> 
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = 99))
Error in check.allowed.arg(allowed) : 
  the given "allowed" argument is not a function
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example7  <- function(degree, pred) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example7))
Error in check.allowed.arg(allowed) : 
  the "allowed" function needs the following arguments "degree" "pred" "parents"
You have "degree" "pred"
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example8  <- function(degree, pred, parents99) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example8))
Error in check.allowed.arg(allowed) : 
  the "allowed" function needs the following arguments "degree" "pred" "parents"
You have "degree" "pred" "parents99"
> if (class(z) != "try-error")
+     stop("test failed")
> 
> cat("--- beta cache -------------------------\n")
--- beta cache -------------------------
> 
> a1 <- earth(O3 ~ ., data = ozone1, degree = 3)
> a2 <- earth(O3 ~ ., data = ozone1, degree = 3, Use.beta.cache=FALSE)
> a1$call <- NULL
> a2$call <- NULL
> stopifnot(identical(a1, a2))
> 
> cat("--- test \"call\" printing in earth.default and summary.earth ---\n")
--- test "call" printing in earth.default and summary.earth ---
> # we want to make sure that long x or y aren't printed but short ones are
> 
> x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> a <- earth(x = x, y=y, trace=4)
Call: earth.default(x=x,y=y,trace=4)

Forward pass: model matrix[101,1]   y[101,1]   minspan 7   endspan 13

         GRSq    RSq     DeltaRSq       RSS Pred        Cut  Terms   Parents
1      0.0000 0.0000                    845                  1
2      1.0000 1.0000            1         0    1          0< 2       

GRSq: 1 RSq: 1
Reached max RSq (RSq 1 > 0.999)
Forward pass complete: 3 terms (2 terms used)

Subset size         GCV         GRSq      RSq  nPreds  Terms (index into bx)
          1       8.535       0.0000   0.0000       0  1
chosen    2 7.15814e-31       1.0000   1.0000       1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
GRSq: 1 RSq: 1 
> 
> a.longx  <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y=y,
+                   trace=4)
Call: too long to display

Forward pass: model matrix[101,1]   y[101,1]   minspan 7   endspan 13

         GRSq    RSq     DeltaRSq       RSS Pred        Cut  Terms   Parents
1      0.0000 0.0000                    845                  1
2      1.0000 1.0000            1         0    1          0< 2       

GRSq: 1 RSq: 1
Reached max RSq (RSq 1 > 0.999)
Forward pass complete: 3 terms (2 terms used)

Subset size         GCV         GRSq      RSq  nPreds  Terms (index into bx)
          1       8.535       0.0000   0.0000       0  1
chosen    2 7.15814e-31       1.0000   1.0000       1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
GRSq: 1 RSq: 1 
> 
> a.longy  <- earth(x = x,
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: too long to display

Forward pass: model matrix[101,1]   y[101,1]   minspan 7   endspan 13

         GRSq    RSq     DeltaRSq       RSS Pred        Cut  Terms   Parents
1      0.0000 0.0000                    845                  1
2      1.0000 1.0000            1         0    1          0< 2       

GRSq: 1 RSq: 1
Reached max RSq (RSq 1 > 0.999)
Forward pass complete: 3 terms (2 terms used)

Subset size         GCV         GRSq      RSq  nPreds  Terms (index into bx)
          1       8.535       0.0000   0.0000       0  1
chosen    2 7.15814e-31       1.0000   1.0000       1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
GRSq: 1 RSq: 1 
> 
> a.longxy <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: too long to display

Forward pass: model matrix[101,1]   y[101,1]   minspan 7   endspan 13

         GRSq    RSq     DeltaRSq       RSS Pred        Cut  Terms   Parents
1      0.0000 0.0000                    845                  1
2      1.0000 1.0000            1         0    1          0< 2       

GRSq: 1 RSq: 1
Reached max RSq (RSq 1 > 0.999)
Forward pass complete: 3 terms (2 terms used)

Subset size         GCV         GRSq      RSq  nPreds  Terms (index into bx)
          1       8.535       0.0000   0.0000       0  1
chosen    2 7.15814e-31       1.0000   1.0000       1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
GRSq: 1 RSq: 1 
> print(summary(a))
Call:
earth(x = x, y = y, trace = 4)

Expression:
  -9.8941e-16 
  + 1 * pmax(0, x[,1] -     0) 
Number of cases: 101
Selected 2 of 2 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 1 (additive model)
GCV: 7.1581e-31     RSS: 6.8066e-29     GRSq: 1            RSq: 1    
> print(summary(a.longx))
Call:
earth(x = "[102,1] too long to display", y = y, trace = 4)

Expression:
  -9.8941e-16 
  + 1 * pmax(0, x[,1] -     0) 
Number of cases: 101
Selected 2 of 2 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 1 (additive model)
GCV: 7.1581e-31     RSS: 6.8066e-29     GRSq: 1            RSq: 1    
> print(summary(a.longy))
Call:
earth(x = x, y = "[102,1] too long to display", trace = 4)

Expression:
  -9.8941e-16 
  + 1 * pmax(0, x[,1] -     0) 
Number of cases: 101
Selected 2 of 2 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 1 (additive model)
GCV: 7.1581e-31     RSS: 6.8066e-29     GRSq: 1            RSq: 1    
> print(summary(a.longxy))
Call:
earth(x = "[102,1] too long to display", y = "[102,1] too long to display", 
    trace = 4)

Expression:
  -9.8941e-16 
  + 1 * pmax(0, x[,1] -     0) 
Number of cases: 101
Selected 2 of 2 terms, and 1 of 1 predictors
Number of terms at each degree of interaction: 1 1 (additive model)
GCV: 7.1581e-31     RSS: 6.8066e-29     GRSq: 1            RSq: 1    
> 
> # cat("--- factors with x,y interface -------------------------\n")
> # # this also tests for integer variables in the input matrix
> # data(titanic1)
> # attach(titanic1)
> # a1 <- earth(pclass, sex, degree=2, trace=2)        # x=unordered y=unordered
> # print(summary(a1))
> # if (PLOT)
> #     plot(a1)
> # a2 <- earth(sex, pclass, degree=2, trace=2)        # x=unordered y=unordered
> # print(summary(a2))
> # if (PLOT)
> #     plot(a2)
> # a3 <- earth(pclass, age, degree=2, trace=2)        # x=unordered y=numeric
> # print(summary(a3))
> # if (PLOT)
> #     plot(a3)
> # a4 <- earth(age, pclass, degree=2, trace=2)        # x=numeric y=unordered
> # print(summary(a4))
> # if (PLOT)
> #     plot(a4)
> # a5 <- earth(titanic1[,c(2:4)], pclass, degree=2, trace=2)  # x=mixed  y=unordered
> # print(summary(a5))
> # if (PLOT)
> #     plot(a5)
> # a6 <- earth(titanic1[,c(1,3,4,5,6)], survived, degree=2, trace=2)  # x=mixed y=unordered
> # print(summary(a6))
> # if (PLOT)
> #     plot(a6)
> # a7 <- earth(titanic1[,c(2,3,5,6)], titanic1[,c(1,4)], degree=2, trace=2)  # x=mixed y=mixed
> # print(summary(a7))
> # if (PLOT)
> #     plot(a7)
> # 
> # cat("--- factors with formula interface -------------------------\n")
> # # these correspond to the models above (except a7 which is a multiple response model)
> # a1f <- earth(sex ~ pclass, degree=2, trace=2)        # x=unordered y=unordered
> # print(summary(a1f))
> # if (PLOT)
> #     plot(a1f)
> # a2f <- earth(pclass ~ sex, degree=2, trace=2)        # x=unordered y=unordered
> # print(summary(a2f))
> # if (PLOT)
> #     plot(a2f)
> # a3f <- earth(age ~ pclass, degree=2, trace=2)        # x=unordered y=numeric
> # print(summary(a3f))
> # if (PLOT)
> #     plot(a3f)
> # a4f <- earth(pclass ~ age, degree=2, trace=2)        # x=numeric y=unordered
> # print(summary(a4f))
> # if (PLOT)
> #     plot(a4f)
> # a5f <- earth(pclass ~ survived + sex + age, data=titanic1, degree=2, trace=2)  # x=mixed y=unordered
> # print(summary(a5f))
> # if (PLOT)
> #     plot(a5f)
> # a6f <- earth(survived ~ ., data=titanic1, degree=2, trace=2)  # x=mixed y=unordered
> # print(summary(a6f))
> # if (PLOT)
> #     plot(a6f)
> # detach(titanic1)
> # 
> # # basic test with ordered factors
> # ff <- factor(substring("statistics", 1:10, 1:10), levels=letters, ordered=TRUE)
> # ff <- c(ff, ff, ff)
> # vowels = (ff == 1 | ff == 9) * 3
> # print(head(ff))
> # print(head(vowels))
> # a8 <- earth(ff, vowels, degree=1, trace=2)        # x=ordered y=numeric
> # print(summary(a8))
> # if (PLOT)
> #     plot(a8)
> # a9 <- earth(vowels, ff, degree=1, trace=2)        # x=numeric y=ordered
> # if (PLOT)
> #     plot(a9)
> # print(summary(a9))
> # 
> # cat("--- wp argument---------------------------------\n")
> # set.seed(79)
> # NWP = 100
> # x1 <- runif(NWP)
> # x2 <- runif(NWP)
> # y1 <- (x1 > .5) + .3 * runif(1)
> # y2 <- sin(3 * x2) + .3 * runif(1)
> # myw = 10
> # m <- mars(cbind(x1,x2), cbind(y1, y2))
> # me1 <- mars.to.earth(m)
> # print(me1)
> # e1 <- earth(cbind(x1,x2), cbind(y1, y2))
> # print(e1)
> # e2 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(1,1))
> # print(e2)
> # e1$call = NULL
> # e2$call = NULL
> # stopifnot(identical(e1, e2))
> # e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(.001,1))
> # print(e3)
> # e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(1, .01))
> # print(e3)
> # e4 <- earth(cbind(O3, O3) ~ ., data=ozone1, wp=c(1, .01))
> # print(e4) # both sub models should be the same
> # print(summary(e4))
> # # wp with formula interface
> # e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(1, 1))
> # print(e5)
> # print(summary(e5))
> # e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(.3, 1))
> # print(e5)
> # print(summary(e5))
> # # wp with factors
> # e6 <- earth(pclass ~ ., data=titanic1, degree=2, wp=c(.001,.001,1))
> # print(e6)
> # print(summary(e6))
> # e7 <- earth(pclass ~ ., data=titanic1, degree=2, wp=c(1,.001,.001))
> # print(e7)
> # print(summary(e7))
> # if (PLOT)
> #     plot(e7)
> 
> cat("--- ../../tests/test.earth.R -------------------------\n")
--- ../../tests/test.earth.R -------------------------
> 
> options(options.old)
> source("../../tests/test.earth.R")
Call: earth.default(x=x,y=y,trace=4,degree=2)

Predictors 1=vh 2=wind 3=humidity 4=temp 5=ibh 6=dpg 7=ibt 8=vis 9=doy 

Forward pass: model matrix[330,9]   y[330,1]   minspan 8   endspan 15

         GRSq    RSq     DeltaRSq       RSS Pred PredName         Cut  Terms   Parents
1      0.0000 0.0000              2.112e+04                            1
2      0.6493 0.6599       0.6599   7181.92    4     temp          58  2   3   
4      0.6903 0.7088      0.04898   6147.78    5      ibh        1108  4   5   
6      0.7102 0.7361      0.02722   5573.05    9      doy          92  6   7   
8      0.7295 0.7614      0.02532   5038.41    3 humidity          55  8   9   2   
10     0.7546 0.7904      0.02906    4424.8    6      dpg          54  10  11  2   
12     0.7597 0.8015      0.01109   4190.65    8      vis         200  12  13  
14     0.7632 0.8109     0.009396   3992.24    2     wind           7  14  15  13  
16     0.7640 0.8179      0.00697   3845.07    6      dpg          44  16  17  5   
18     0.7685 0.8275     0.009595   3642.46    7      ibt         234  18  19  
20     0.7662 0.8318     0.004351   3550.59    9      doy         159  20  21  2   

GRSq: 0.7662 RSq: 0.8318
Reached max number of terms 21
Forward pass complete: 21 terms

Subset size         GCV         GRSq      RSq  nPreds  Terms (index into bx)
          1     64.3756       0.0000   0.0000       0  1
          2     23.1254       0.6408   0.6462       1  1 2
          3     19.8917       0.6910   0.7003       2  1 2 4
          4     19.1727       0.7022   0.7156       3  1 2 9 19
          5     18.5807       0.7114   0.7286       4  1 2 6 9 19
          6     16.8746       0.7379   0.7574       4  1 2 6 7 9 19
          7     15.6677       0.7566   0.7783       5  1 2 6 7 9 11 19
          8     15.0794       0.7658   0.7900       6  1 2 6 7 9 11 13 19
          9     14.3402       0.7772   0.8035       7  1 2 6 7 9 11 13 17 19
         10     13.8116       0.7855   0.8138       7  1 2 6 7 9 10 11 13 17 19
chosen   11     13.4342       0.7913   0.8218       8  1 2 6 7 9 10 11 13 14 17 19
         12     13.5372       0.7897   0.8234       8  1 2 6 7 9 10 11 13 14 17 19 20
         13     13.5644       0.7893   0.8260       8  1 2 6 7 9 10 11 13 14 17 19 20 21
         14     13.7185       0.7869   0.8269       8  1 2 5 6 7 9 10 11 13 14 17 19 20 21
         15     13.8221       0.7853   0.8285       8  1 2 5 6 7 9 10 11 13 14 16 17 19 20 21
         16     13.9597       0.7832   0.8298       8  1 2 5 6 7 9 10 11 13 14 15 16 17 19 20 21
         17     14.1209       0.7806   0.8307       8  1 2 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         18     14.3315       0.7774   0.8312       8  1 2 4 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         19     14.5533       0.7739   0.8315       8  1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         20     14.7946       0.7702   0.8318       8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21
         21     15.0524       0.7662   0.8318       8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21

Prune method "backward" penalty 3 nprune 21: selected 11 of 21 terms, and 8 of 9 predictors
GRSq: 0.7913 RSq: 0.8218 
Selected 11 of 21 terms, and 8 of 9 predictors
Number of terms at each degree of interaction: 1 5 5
GCV: 13.4         RSS: 3762         GRSq: 0.791      RSq: 0.822
Call:
earth(formula = O3 ~ ., data = ozone1, degree = 2, trace = 4)

Expression:
  15 
  +    0.313 * pmax(0,     temp -       58) 
  -    0.046 * pmax(0,      234 -      ibt) 
  +   0.0221 * pmax(0,      200 -      vis) 
  -   0.0237 * pmax(0,      doy -       92) 
  -    0.134 * pmax(0,       92 -      doy) 
  -   0.0186 * pmax(0,     wind -        7) * pmax(0,      200 -      vis) 
  -   0.0219 * pmax(0,       55 - humidity) * pmax(0,     temp -       58) 
  -   0.0189 * pmax(0,     temp -       58) * pmax(0,      dpg -       54) 
  +  0.00416 * pmax(0,     temp -       58) * pmax(0,       54 -      dpg) 
  - 7.74e-05 * pmax(0,     1108 -      ibh) * pmax(0,       44 -      dpg) 
Number of cases: 330
Selected 11 of 21 terms, and 8 of 9 predictors
Number of terms at each degree of interaction: 1 5 5
GCV: 13.4         RSS: 3762         GRSq: 0.791      RSq: 0.822
Selected 5 of 21 terms, and 4 of 9 predictors
Number of terms at each degree of interaction: 1 3 1
GCV: 18.6         RSS: 5730         GRSq: 0.711      RSq: 0.729

0 1 2 
1 3 1 
[1] 0 1 1 1 1 1 1 2 2
[1] "1" "2" "3"
[1] "vh"       "wind"     "humidity"
[1] 5730
[1] 1 2 5 3 4
     [,1]
[1,] 6.63
Selected 12 of 20 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 11 (additive model)
GCV: 14.6731         RSS: 4190.68         GRSq: 0.77207       RSq: 0.801534
Call:
earth(formula = O3 ~ ., data = ozone1, degree = 1, minspan = 1)

Expression:
  12.5618 
  -  0.0164945 * pmax(0,     5740 -       vh) 
  -   0.333539 * pmax(0,     wind -        3) 
  -   0.133342 * pmax(0,       54 - humidity) 
  +   0.318748 * pmax(0,     temp -       58) 
  - 0.00442377 * pmax(0,     1023 -      ibh) 
  -   0.100506 * pmax(0,      dpg -       12) 
  +  0.0372147 * pmax(0,      ibt -      120) 
  +  0.0446173 * pmax(0,       80 -      vis) 
  +  0.0419030 * pmax(0,      doy -       89) 
  -   0.114964 * pmax(0,       89 -      doy) 
  -  0.0833327 * pmax(0,      doy -      159) 
Number of cases: 330
Selected 12 of 20 terms, and 9 of 9 predictors
Number of terms at each degree of interaction: 1 11 (additive model)
GCV: 14.6731         RSS: 4190.68         GRSq: 0.77207       RSq: 0.801534
> 
> if(!interactive())
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher)
