> # test.earth.full.R: test earth
> 
> print(R.version.string)
[1] "R version 2.7.0  (2008-06-28 Ra 1.1.0)"
> 
> library(earth)
Loading required package: leaps
> library(mda)
Loading required package: class
> source("check.models.equal.R")
> data(ozone1)
> data(trees)
> data(etitanic)
> if(!interactive())
+     postscript()
> 
> PRINT.TIME <- FALSE         # FALSE for no time results (for diff against reference)
> PLOT <- TRUE                # TRUE to do plots too, FALSE for speed
> options.old <- options()
> options(warn=1) # print warnings as they occur
> options(digits=5)
> 
> printh <- function(x, expect.warning=FALSE, max.print=0) # like print but with a header
+ {
+     cat("===", deparse(substitute(x)))
+     if(expect.warning)
+         cat(" expect warning -->")
+     else if (NROW(x) > 1)
+         cat("\n")
+     if (max.print > 0)
+         print(head(x, n=max.print))
+     else
+         print(x)
+ }
> 
> #--- test examples from man pages ------------------------------------------------------------
> 
> cat("--- earth.Rd -----------------------------\n")
--- earth.Rd -----------------------------
> example(earth)

earth> a <- earth(Volume ~ ., data = trees)

earth> summary(a, digits = 2, style = "pmax")
Call: earth(formula=Volume~., data=trees)

Volume =
  23
  +  5.7 * pmax(0,  Girth -     13) 
  -  2.9 * pmax(0,     13 -  Girth) 
  + 0.72 * pmax(0, Height -     76) 

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 11    RSS 213    GRSq 0.96    RSq 0.97
> 
> a <- earth(mpg ~ ., data = mtcars, pmethod = "none", trace = 4)
Call: earth(formula=mpg~., data=mtcars, trace=4, pmethod="none")
x is a 32 by 10 matrix: 1=cyl, 2=disp, 3=hp, 4=drat, 5=wt, 6=qsec, 7=vs, 8=am, 9=gear, 10=carb
First few rows of x are
                  cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4           6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag       6  160 110 3.90 2.875 17.02  0  1    4    4
Datsun 710          4  108  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive      6  258 110 3.08 3.215 19.44  1  0    3    1
Hornet Sportabout   8  360 175 3.15 3.440 17.02  0  0    3    2
Valiant             6  225 105 2.76 3.460 20.22  1  0    3    1
y is a 32 by 1 matrix: 1=mpg
First few rows of y are
      mpg
[1,] 21.0
[2,] 21.0
[3,] 22.8
[4,] 21.4
[5,] 18.7
[6,] 18.1
Approximate memory use after expanding x and y matrices: 0.05 MBytes
Forward pass: minspan 5 endspan 12

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.8115 0.8570        0.857    2         disp       167.6  2   3   
4      0.7730 0.8750      0.01805    3           hp         123  4   5   
6      0.7366 0.9011      0.02604    5           wt       3.215  6   7   
8      0.6073 0.9081     0.006994    9         gear           4  8   9   
10     0.3158 0.9139     0.005793    6         qsec        17.6  10  11  
12    -0.5621 0.9203     0.006493    1          cyl           6  12  13  
14    -6.5107 0.9297     0.009312    4         drat        3.69  14  15  
16   -49.6655 0.9473      0.01762   10         carb           2  16  17  reject term

Reached min GRSq (GRSq -49.6655 < -10)
After forward pass GRSq -49.67 RSq 0.9473
Forward pass complete: 15 terms

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.7502  0.7814     0.7502      1  1 3
          3      0.8189  0.8626     0.0688      2  1 3 6
          4      0.8148  0.8796    -0.0041      3  1 3 6 11
          5      0.7964  0.8879    -0.0185      4  1 3 6 8 11
          6      0.7850  0.9014    -0.0113      5  1 3 5 6 8 11
          7      0.7608  0.9101    -0.0243      6  1 3 5 6 8 11 13
          8      0.7151  0.9143    -0.0457      7  1 3 5 6 8 11 13 15
          9      0.6499  0.9180    -0.0651      7  1 2 3 5 6 8 11 13 15
         10      0.5517  0.9212    -0.0982      7  1 2 3 5 6 8 11 13 14 15
         11      0.4031  0.9248    -0.1486      7  1 2 3 5 6 7 8 11 13 14 15
         12      0.1331  0.9269    -0.2700      7  1 2 3 5 6 7 8 10 11 13 14 15
         13     -0.4012  0.9286    -0.5343      7  1 2 3 5 6 7 8 9 10 11 13 14 15
         14     -1.7259  0.9291    -1.3247      7  1 2 3 4 5 6 7 8 9 10 11 13 14 15
chosen   15     -6.5107  0.9297    -4.7848      7  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

Prune method "none" penalty 2 nprune 15: selected 15 of 15 terms, and 7 of 10 predictors
After backward pass GRSq -6.511 RSq 0.9297 
> 
> set.seed(1)
> train.subset <- sample(1:nrow(trees), .8 * nrow(trees))
> test.subset <- (1:nrow(trees))[-train.subset]
> a <- earth(Volume ~ ., data = trees[train.subset, ])
> yhat <- predict(a, newdata = trees[test.subset, ])
> y <- trees$Volume[test.subset]
> printh(1 - sum((y - yhat)^2) / sum((y - mean(y))^2)) # print R-Squared
=== 1 - sum((y - yhat)^2)/sum((y - mean(y))^2)[1] 0.9464
> get.used.pred.names <- function(obj) # obj is an earth object
+ {
+   any1 <- function(x) any(x != 0)    # like any but no warning if x is double
+   names(which(apply(obj$dirs[obj$selected.terms,,drop=FALSE],2,any1)))
+ }
> printh(get.used.pred.names(a))
=== get.used.pred.names(a)
[1] "Girth"  "Height"
> 
> a1 <- earth(survived ~ ., data=etitanic,   # c.f. Harrell "Reg. Mod. Strat." ch. 12
+              degree=2, trace=1,
+              glm=list(family=binomial))
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=survived
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.4067 RSq 0.4485
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4221 RSq 0.4441 
GLM survived: null.deviance 1414.6 (1045 dof)   deviance 879.69 (1037 dof)   iters 5
> printh(a1)
=== a1
Earth selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
earth GCV 0.13986    RSS 140.48    GRSq 0.42215    RSq 0.44405

GLM null.deviance 1414.6 (1045 dof)   deviance 879.69 (1037 dof)   iters 5
> 
> a1a <- earth(etitanic[,-2], etitanic[,2],  # equivalent but using earth.default
+              degree=2, trace=1,
+              glm=list(family=binomial))
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=etitanic[,2]
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.4067 RSq 0.4485
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4221 RSq 0.4441 
GLM etitanic[,2]: null.deviance 1414.6 (1045 dof)   deviance 879.69 (1037 dof)   iters 5
> printh(a1a)
=== a1a
Earth selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
earth GCV 0.13986    RSS 140.48    GRSq 0.42215    RSq 0.44405

GLM null.deviance 1414.6 (1045 dof)   deviance 879.69 (1037 dof)   iters 5
> 
> a2 <- earth(pclass ~ ., data=etitanic, trace=1, glm=list(family=binomial))
x is a 1046 by 5 matrix: 1=survived, 2=sexmale, 3=age, 4=sibsp, 5=parch
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14
Reached delta RSq threshold (DeltaRSq 0.00061857 < 0.001)
After forward pass GRSq 0.163 RSq 0.1947
Prune method "backward" penalty 2 nprune 10: selected 8 of 10 terms, and 4 of 5 predictors
After backward pass GRSq 0.1670 RSq 0.1891 
GLM 1st: null.deviance 1223.3 (1045 dof)   deviance 920.8 (1038 dof)   iters 5
GLM 2nd: null.deviance 1175.3 (1045 dof)   deviance 1147.5 (1038 dof)   iters 5
GLM 3rd: null.deviance 1448.2 (1045 dof)   deviance 1142.8 (1038 dof)   iters 5
> printh(a2)
=== a2
Earth selected 8 of 10 terms, and 4 of 5 predictors 
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

earth
        GCV    RSS       GRSq      RSq
1st 0.14834 150.75  0.2514487 0.271371
2nd 0.18855 191.61 -0.0049713 0.021776
3rd 0.19277 195.90  0.2290327 0.249552
All 0.52966 538.25  0.1669694 0.189140

GLM (family binomial, link logit)
      null.deviance   df      deviance   df      iters converged
1st          1223.3 1045         920.8 1038          5         1
2nd          1175.3 1045        1147.5 1038          5         1
3rd          1448.2 1045        1142.8 1038          5         1
> 
> ldose <- rep(0:5, 2) - 2 # V&R 4th ed. p. 191
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> pair <- cbind(numdead, numalive=20 - numdead)
> 
> a3 <- earth(pair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=binomial(link=probit), maxit=100))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 124.88 (11 dof)   deviance 5.566 (9 dof)   iters 4
> printh(a3)
=== a3
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
earth GCV 2.3761    RSS 9.7024    GRSq 0.95249    RSq 0.98076

GLM null.deviance 124.88 (11 dof)   deviance 5.566 (9 dof)   iters 4
> 
> numdead2 <- c(2,8,11,12,20,23,0,4,6,16,12,14) # bogus data
> doublepair <- cbind(numdead, numalive=20-numdead,
+                     numdead2=numdead2, numalive2=30-numdead2)
> 
> a4 <- earth(doublepair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family="binomial"))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.658 RSq 0.9293
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.8255 RSq 0.9293 
GLM numdead: null.deviance 124.88 (11 dof)   deviance 6.757 (9 dof)   iters 4
GLM numdead2: null.deviance 91.625 (11 dof)   deviance 16.067 (9 dof)   iters 4
> printh(a4)
=== a4
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

earth
             GCV     RSS    GRSq     RSq
numdead   2.3761  9.7024 0.95249 0.98076
numdead2 15.7738 64.4095 0.70798 0.88175
All      18.1499 74.1119 0.82552 0.92934

GLM (family binomial, link logit)
           null.deviance df      deviance df      iters converged
numdead          124.876 11         6.757  9          4         1
numdead2          91.625 11        16.067  9          4         1
> 
> counts <- c(18,17,15,20,10,20,25,13,12) # Dobson 1990 p. 93
> outcome <- gl(3,1,9)
> treatment <- gl(3,3)
> 
> a5 <- earth(counts ~ outcome + treatment, trace=1, pmethod="none",
+             glm=list(family=poisson))
x is a 9 by 4 matrix: 1=outcome2, 2=outcome3, 3=treatment2, 4=treatment3
y is a 9 by 1 matrix: 1=counts
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -6.576 RSq 0.5265
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 4 predictors
After backward pass GRSq -0.894 RSq 0.5265 
GLM counts: null.deviance 10.581 (8 dof)   deviance 5.1291 (6 dof)   iters 4
> printh(a5)
=== a5
Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
earth GCV 46.875    RSS 83.333    GRSq -0.89394    RSq 0.52652

GLM null.deviance 10.581 (8 dof)   deviance 5.1291 (6 dof)   iters 4
> 
> a6 <- earth(numdead ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=gaussian(link=identity)))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 504.25 (11 dof)   deviance 9.7024 (9 dof)   iters 2
> printh(a6$coefficients == a6$glm.coefficients)  # all TRUE
=== a6$coefficients == a6$glm.coefficients
            numdead
(Intercept)    TRUE
h(ldose--2)    TRUE
sexmale        TRUE
> printh(a6)
=== a6
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
earth GCV 2.3761    RSS 9.7024    GRSq 0.95249    RSq 0.98076

GLM null.deviance 504.25 (11 dof)   deviance 9.7024 (9 dof)   iters 2
> 
> remove(ldose)
> remove(sex)
> remove(numdead)
> remove(pair)
> remove(numdead2)
> remove(doublepair)
> remove(counts)
> remove(outcome)
> remove(treatment)
> 
> printh(earth(cbind(Volume,lvol=log(Volume)) ~ ., data=trees))
=== earth(cbind(Volume, lvol = log(Volume)) ~ ., data = trees)
Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

            GCV     RSS    GRSq     RSq
Volume 11.48697 213.435 0.95886 0.97367
lvol    0.01679   0.312 0.94132 0.96245
All    11.50377 213.747 0.95884 0.97366
> attach(trees)
> printh(earth(data.frame(Girth,Height), data.frame(Volume,lvol=log(Volume))))
=== earth(data.frame(Girth, Height), data.frame(Volume, lvol = log(Volume)))
Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

            GCV     RSS    GRSq     RSq
Volume 11.48697 213.435 0.95886 0.97367
lvol    0.01679   0.312 0.94132 0.96245
All    11.50377 213.747 0.95884 0.97366
> detach(trees)
> 
> cat("--- print.default of earth object---------\n")
--- print.default of earth object---------
> print.default(a, digits=3)
$bx
      (Intercept) h(Girth-8.6) h(Height-63)
 [1,]           1          2.5           17
 [2,]           1          2.8           13
 [3,]           1          4.3           22
 [4,]           1          8.7           18
 [5,]           1          2.2           20
 [6,]           1          7.4            9
 [7,]           1          9.3           17
 [8,]           1          4.3           11
 [9,]           1          3.4           12
[10,]           1          0.0            2
[11,]           1          2.1           18
[12,]           1          1.9            9
[13,]           1          3.1            6
[14,]           1          2.4            3
[15,]           1          5.1            8
[16,]           1          2.4           12
[17,]           1          2.7           16
[18,]           1          9.4           17
[19,]           1          5.4           15
[20,]           1          2.6           12
[21,]           1          5.9           11
[22,]           1          0.2            0
[23,]           1          8.9           19
[24,]           1          5.6           17

$dirs
             Girth Height
(Intercept)      0      0
h(Girth-8.6)     1      0
h(Height-63)     0      1

$cuts
             Girth Height
(Intercept)    0.0      0
h(Girth-8.6)   8.6      0
h(Height-63)   0.0     63

$selected.terms
[1] 1 2 3

$prune.terms
     [,1] [,2] [,3]
[1,]    1    0    0
[2,]    1    2    0
[3,]    1    2    3

$rss
[1] 250

$rsq
[1] 0.947

$gcv
[1] 16.6

$grsq
[1] 0.923

$rss.per.response
[1] 250

$rsq.per.response
[1] 0.947

$gcv.per.response
[1] 16.6

$grsq.per.response
[1] 0.923

$rss.per.subset
[1] 4739  310  250

$gcv.per.subset
[1] 215.0  16.9  16.6

$fitted.values
      Volume
 [1,]  21.44
 [2,]  21.58
 [3,]  31.41
 [4,]  50.69
 [5,]  20.98
 [6,]  41.80
 [7,]  53.18
 [8,]  27.96
 [9,]  24.07
[10,]   5.06
[11,]  19.88
[12,]  16.13
[13,]  20.79
[14,]  16.58
[15,]  30.75
[16,]  19.40
[17,]  22.06
[18,]  53.65
[19,]  34.35
[20,]  20.33
[21,]  35.43
[22,]   5.37
[23,]  51.94
[24,]  35.91

$residuals
      Volume
 [1,]  1.165
 [2,] -0.581
 [3,]  2.393
 [4,]  4.708
 [5,] -1.276
 [6,] -3.501
 [7,]  5.120
 [8,] -5.756
 [9,] -4.969
[10,]  5.240
[11,] -1.082
[12,]  0.275
[13,]  0.514
[14,] -0.978
[15,] -5.050
[16,] -1.200
[17,]  2.145
[18,] -2.146
[19,]  0.154
[20,] -0.434
[21,]  0.874
[22,]  4.833
[23,]  3.760
[24,] -4.207

$coefficients
             Volume
(Intercept)   4.433
h(Girth-8.6)  4.668
h(Height-63)  0.314

$penalty
[1] 2

$ppenalty
[1] 2

$namesx.org
[1] "Girth"  "Height"

$namesx
[1] "Girth"  "Height"

$terms
Volume ~ Girth + Height
attr(,"variables")
list(Volume, Girth, Height)
attr(,"factors")
       Girth Height
Volume     0      0
Girth      1      0
Height     0      1
attr(,"term.labels")
[1] "Girth"  "Height"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(Volume, Girth, Height)
attr(,"dataClasses")
   Volume     Girth    Height 
"numeric" "numeric" "numeric" 

$call
earth(formula = Volume ~ ., data = trees[train.subset, ])

attr(,"class")
[1] "earth"
> cat("--- done print.default of earth object----\n")
--- done print.default of earth object----
> if (PLOT)
+     plot(a)
> library(mda)
> (a <- fda(Species~., data=iris, method=earth, keepxy=TRUE))
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.48 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> if (PLOT)
+     plot(a)
> printh(summary(a$fit))
=== summary(a$fit)
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE)

                          y1       y2
(Intercept)         -2.20686 -0.68339
h(Sepal.Length-5.4) -0.20364 -0.34847
h(Petal.Length-3.7)  1.45136  0.31415
h(Petal.Length-4.5) -0.46331  1.44704
h(4.5-Petal.Length)  1.12387 -0.00501
h(Petal.Length-5.3) -0.84399 -1.52562
h(Petal.Width-1.6)   2.17986  3.78743
h(Petal.Width-1.9)  -2.57214 -4.48166

Selected 8 of 13 terms, and 3 of 4 predictors 
Importance: Petal.Length, Petal.Width, Sepal.Length, Sepal.Width-unused
Number of terms at each degree of interaction: 1 7 (additive model)

        GCV     RSS    GRSq     RSq
y1  0.06421  7.8015 0.93664 0.94799
y2  0.12583 15.2882 0.87584 0.89808
All 0.19004 23.0897 0.90624 0.92303
> if (PLOT) {
+     plot(a$fit)
+     plotmo(a$fit, ycolumn=1, ylim=c(-1.5,1.5), clip=FALSE)
+     plotmo(a$fit, ycolumn=2, ylim=c(-1.5,1.5), clip=FALSE)
+ }
> a <- update(a, nk=3) # not on man page
> printh(a)
=== a
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE, 
    nk = 3)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 94.38 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> printh(summary(a$fit))
=== summary(a$fit)
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE, nk=3)

                        y1        y2
(Intercept)        -1.3008 -0.743677
h(Petal.Width-1.2)  1.3512  2.223662
h(1.2-Petal.Width)  2.6013  0.038969

Selected 3 of 3 terms, and 1 of 4 predictors 
Importance: Petal.Width, Sepal.Length-unused, Sepal.Width-unused, Petal.Length-unused
Number of terms at each degree of interaction: 1 2 (additive model)

        GCV    RSS    GRSq     RSq
y1  0.11904 16.685 0.88255 0.88877
y2  0.24302 34.063 0.76021 0.77292
All 0.36205 50.748 0.82138 0.83084
> head(etitanic) # pclass and sex are unordered factors
  pclass survived    sex     age sibsp parch
1    1st        1 female 29.0000     0     0
2    1st        1   male  0.9167     1     2
3    1st        0 female  2.0000     1     2
4    1st        0   male 30.0000     1     2
5    1st        0 female 25.0000     1     2
6    1st        1   male 48.0000     0     0
> earth(pclass ~ ., data=etitanic, trace=2)
x is a 1046 by 5 matrix: 1=survived, 2=sexmale, 3=age, 4=sibsp, 5=parch
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0910 0.0980      0.09797    3          age          26  2   3   
4      0.1525 0.1622       0.0642    1     survived           0< 4       
6      0.1598 0.1758      0.01368    4        sibsp           1  5   6   
8      0.1670 0.1891       0.0133    5        parch           2  7   8   
10     0.1664 0.1918     0.002617    3          age          21  9       
12     0.1656 0.1941     0.002356    3          age          56  10      
14     0.1630 0.1947    0.0006186    3          age          48  11      reject term

Reached delta RSq threshold (DeltaRSq 0.00061857 < 0.001)
After forward pass GRSq 0.163 RSq 0.1947
Forward pass complete: 13 terms (10 terms used)
Prune method "backward" penalty 2 nprune 10: selected 8 of 10 terms, and 4 of 5 predictors
After backward pass GRSq 0.1670 RSq 0.1891 
Selected 8 of 10 terms, and 4 of 5 predictors 
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

        GCV    RSS       GRSq      RSq
1st 0.14834 150.75  0.2514487 0.271371
2nd 0.18855 191.61 -0.0049713 0.021776
3rd 0.19277 195.90  0.2290327 0.249552
All 0.52966 538.25  0.1669694 0.189140
> 
> cat("--- format.earth.Rd ----------------------\n")
--- format.earth.Rd ----------------------
> as.func <- function( # convert expression string to func
+                object, digits = 8, use.names = TRUE, ...)
+   eval(parse(text=paste(
+     "function(x)\n",
+     "{\n",
+     "if(is.vector(x))\n",
+     "  x <- matrix(x, nrow = 1, ncol = length(x))\n",
+     "with(as.data.frame(x),\n",
+     format(object, digits = digits, use.names = use.names, style = "p", ...),
+     ")\n",
+     "}\n", sep = "")))
> a <- earth(Volume ~ ., data = trees)
> my.func <- as.func(a, use.names = FALSE)
> printh(my.func(c(10,80)))     # yields 17.76888
=== my.func(c(10, 80))[1] 17.769
> printh(predict(a, c(10,80)))  # yields 17.76888, but is slower
=== predict(a, c(10, 80))     Volume
[1,] 17.769
> example(format.earth)

frmt.r> a <- earth(Volume ~ ., data = trees)

frmt.r> cat(format(a))
  23.208
  +   5.746 * h(Girth-12.9)
  -  2.8665 * h(12.9-Girth)
  + 0.71834 * h(Height-76)

frmt.r> # yields:
frmt.r> #    23.2
frmt.r> #    +  5.75 * h(Girth-12.9)
frmt.r> #    -  2.87 * h(12.9-Girth)
frmt.r> #    + 0.718 * h(Height-76)
frmt.r> 
frmt.r> cat(format(a, style="pmax")) # default formatting style prior to earth version 1.4
  23.208
  +   5.746 * pmax(0,  Girth -   12.9) 
  -  2.8665 * pmax(0,   12.9 -  Girth) 
  + 0.71834 * pmax(0, Height -     76) 
> a <- earth(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.earth
  23.208
  +   5.746 * h(Girth-12.9)
  -  2.8665 * h(12.9-Girth)
  + 0.71834 * h(Height-76)
> cat(format(a, digits=4))
  23.21
  +  5.746 * h(Girth-12.9)
  -  2.866 * h(12.9-Girth)
  + 0.7183 * h(Height-76)
> # cat(format(a, use.names=FALSE))
> cat(format(a, style="pmax"))
  23.208
  +   5.746 * pmax(0,  Girth -   12.9) 
  -  2.8665 * pmax(0,   12.9 -  Girth) 
  + 0.71834 * pmax(0, Height -     76) 
> cat(format(a, use.names=FALSE, style="p"))
  23.208
  +   5.746 * pmax(0, x[,1] -  12.9) 
  -  2.8665 * pmax(0,  12.9 - x[,1]) 
  + 0.71834 * pmax(0, x[,2] -    76) 
> a <- earth(Volume ~ Girth*Height, data = trees, pmethod="none")
> cat(format(a))
  22.106
  +   2.5459 * h(Girth-12.9)
  -  0.42708 * h(12.9-Girth)
  + 0.037825 * h(Girth:Height-900)
  -  0.02955 * h(900-Girth:Height)
> cat(format(a, colon.char="*"))
  22.106
  +   2.5459 * h(Girth-12.9)
  -  0.42708 * h(12.9-Girth)
  + 0.037825 * h(Girth*Height-900)
  -  0.02955 * h(900-Girth*Height)
> a <- lm(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.lm
  -57.988
  +  4.7082 * Girth
  + 0.33925 * Height
> cat(format(a, digits=4))
  -57.99
  +  4.708 * Girth
  + 0.3393 * Height
> cat(format(a, use.names=FALSE))
  -57.988
  +  4.7082 * x[,1]
  + 0.33925 * x[,2]
> cat(format(a, style="p"))
  -57.988
  +  4.7082 * Girth
  + 0.33925 * Height
> cat(format(a, use.names=FALSE, style="p"))
  -57.988
  +  4.7082 * x[,1]
  + 0.33925 * x[,2]
> a <- lm(Volume ~ Girth*Height, data = trees)
> cat(format(a))
  69.396
  -  5.8558 * Girth
  -  1.2971 * Height
  + 0.13465 * Girth:Height
> cat(format(a, colon.char="*"))
  69.396
  -  5.8558 * Girth
  -  1.2971 * Height
  + 0.13465 * Girth*Height
> cat("--- mars.to.earth.Rd ----------------------\n")
--- mars.to.earth.Rd ----------------------
> example(mars.to.earth) # doesn't do anything

mrs.t.> if (require(mda)) {
mrs.t.+     a <- mars(trees[,-3], trees[,3])
mrs.t.+     a <- mars.to.earth(a)
mrs.t.+     summary(a, digits = 2) # the standard earth functions can now be used
mrs.t.+ 
mrs.t.+     # yields (note the reconstructed call):
mrs.t.+     #    Call: earth(x=trees[, -3], y=trees[, 3])
mrs.t.+     #
mrs.t.+     #                    y
mrs.t.+     #   (Intercept)  19.76
mrs.t.+     #   h(Girth-12)   5.40
mrs.t.+     #   h(12-Girth)  -2.56
mrs.t.+     #   h(Height-76)  0.72
mrs.t.+     #
mrs.t.+     #   Selected 4 of 5 terms, and 2 of 2 predictors
mrs.t.+     #   Importance: Girth, Height
mrs.t.+     #   Number of terms at each degree of interaction: 1 3 (additive model)
mrs.t.+     #   GCV 13    RSS 251    GRSq 0.95    RSq 0.97
mrs.t.+ }
Converted mars(x=trees[, -3], y=trees[, 3])
to        earth(x=trees[, -3], y=trees[, 3])
Call: earth(x=trees[, -3], y=trees[, 3])

                 y
(Intercept)  19.76
h(Girth-12)   5.40
h(12-Girth)  -2.56
h(Height-76)  0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> library(mda)
> a <- mars(trees[,-3], trees[,3])
> a <- mars.to.earth(a)
Converted mars(x=trees[, -3], y=trees[, 3])
to        earth(x=trees[, -3], y=trees[, 3])
> summary(a, digits = 2)
Call: earth(x=trees[, -3], y=trees[, 3])

                 y
(Intercept)  19.76
h(Girth-12)   5.40
h(12-Girth)  -2.56
h(Height-76)  0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> printh(summary(a, digits=2))
=== summary(a, digits = 2)
Call: earth(x=trees[, -3], y=trees[, 3])

                 y
(Intercept)  19.76
h(Girth-12)   5.40
h(12-Girth)  -2.56
h(Height-76)  0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> cat("--- plot.earth.models.Rd ----------------------\n")
--- plot.earth.models.Rd ----------------------
> if (PLOT)
+     example(plot.earth.models)

plt.r.> data(ozone1)

plt.r.> a1 <- earth(O3 ~ .,          data = ozone1, degree = 2)

plt.r.> a2 <- earth(O3 ~ .-wind,     data = ozone1, degree = 2, nk = 31)

plt.r.> a3 <- earth(O3 ~ .-humidity, data = ozone1, degree = 2, nk = 31)

plt.r.> plot.earth.models(list(a1,a2,a3), rlim=c(.6,.8))
> cat("--- plot.earth.Rd ----------------------\n")
--- plot.earth.Rd ----------------------
> if (PLOT) {
+     data(etitanic)
+     a <- earth(survived ~ ., data=etitanic, glm=list(family=binomial))
+     par(mfrow=c(2,2))
+     plot(a$glm.list[[1]])
+     example(plot.earth)
+ }

plt.rt> data(ozone1)

plt.rt> a <- earth(O3 ~ ., data = ozone1, degree = 2)

plt.rt> plot(a, col.npreds = 1, cum.grid = "none")
> cat("--- predict.earth.Rd ----------------------\n")
--- predict.earth.Rd ----------------------
> example(predict.earth)

prdct.> data(trees)

prdct.> a <- earth(Volume ~ ., data = trees)

prdct.> predict(a)           # same as a$fitted.values
      Volume
 [1,] 10.023
 [2,] 10.883
 [3,] 11.456
 [4,] 16.329
 [5,] 20.494
 [6,] 22.217
 [7,] 17.762
 [8,] 17.762
 [9,] 20.922
[10,] 18.335
[11,] 20.777
[12,] 18.909
[13,] 18.909
[14,] 19.769
[15,] 20.628
[16,] 23.208
[17,] 29.673
[18,] 32.690
[19,] 27.805
[20,] 28.380
[21,] 30.965
[22,] 33.551
[23,] 32.402
[24,] 41.021
[25,] 43.463
[26,] 52.082
[27,] 53.950
[28,] 54.811
[29,] 55.386
[30,] 55.386
[31,] 75.354

prdct.> predict(a, c(10,80)) # yields 17.76888
     Volume
[1,] 17.769
> cat("--- update.earth.Rd ----------------------\n")
--- update.earth.Rd ----------------------
> example(update.earth)

updt.r> data(ozone1)

updt.r> (a <- earth(O3 ~ ., data = ozone1, degree = 2))
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.434    RSS 3762.2    GRSq 0.79132    RSq 0.82183

updt.r> # yields:
updt.r> #    Selected 11 of 21 terms, and 8 of 9 predictors
updt.r> #    Estimated importance: temp humidity ibt doy dpg ibh vis wind
updt.r> #    Number of terms at each degree of interaction: 1 5 5
updt.r> #    GCV 13.4    RSS 3762    GRSq 0.791    RSq 0.822
updt.r> 
updt.r> update(a, formula = O3 ~ . - temp) # requires forward pass and pruning
Selected 15 of 21 terms, and 8 of 8 predictors 
Importance: ibt, humidity, doy, vh, ibh, dpg, wind, vis
Number of terms at each degree of interaction: 1 5 9
GCV 13.146    RSS 3443.3    GRSq 0.7958    RSq 0.83693

updt.r> # yields:
updt.r> #    Selected 15 of 21 terms, and 8 of 8 predictors
updt.r> #    Estimated importance: ibt humidity doy vh ibh dpg wind vis
updt.r> #    Number of terms at each degree of interaction: 1 5 9
updt.r> #    GCV 13.1    RSS 3443    GRSq 0.796    RSq 0.837
updt.r> 
updt.r> update(a, nprune = 8)              # requires only pruning
Selected 8 of 21 terms, and 6 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh-unused, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 2
GCV 15.079    RSS 4433.9    GRSq 0.76576    RSq 0.79002

updt.r> # yields:
updt.r> #    Selected 8 of 21 terms, and 6 of 9 predictors
updt.r> #    Estimated importance: temp humidity ibt doy dpg vis
updt.r> #    Number of terms at each degree of interaction: 1 5 2
updt.r> #    GCV 15.1    RSS 4434    GRSq 0.766    RSq 0.79
updt.r> 
updt.r> update(a, penalty=1, ponly=TRUE)   # pruning pass only with a new penalty
Selected 13 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 7
GCV 12.538    RSS 3674.7    GRSq 0.80524    RSq 0.82597
> 
> cat("--- test predict.earth -------------------\n")
--- test predict.earth -------------------
> 
> a <- earth(Volume ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
=== predict(a, c(10, 80), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
predict.earth: returning earth predictions 
     Volume
[1,] 17.769
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
=== predict(a, c(10, 10, 80, 80), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    10     80
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           2.9            4
predict.earth: returning earth predictions 

     Volume
[1,] 17.769
[2,] 17.769
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
=== predict(a, c(10, 11, 80, 81), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    11     81
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           1.9            5
predict.earth: returning earth predictions 

     Volume
[1,] 17.769
[2,] 21.354
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
=== head(predict(a, trace = 1))predict.earth: returning earth fitted.values 

     Volume
[1,] 10.023
[2,] 10.883
[3,] 11.456
[4,] 16.329
[5,] 20.494
[6,] 22.217
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
=== predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            0
predict.earth: returning earth predictions 
     Volume
[1,] 14.896
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
=== predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),      trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
2    10     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            0
[2,]           1             0           2.9            0
predict.earth: returning earth predictions 

     Volume
[1,] 14.896
[2,] 14.896
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
=== predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume
[1,] 17.769
[2,] 30.685
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
=== predict(a, xpredict, trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume
[1,] 17.769
[2,] 30.685
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
=== predict(a, as.data.frame(xpredict), trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume
[1,] 17.769
[2,] 30.685
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6a predict(a, xpredict with reversed columns and colnames)\n")
6a predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
=== predict(a, xpredict, trace = 1)predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume
[1,] 17.769
[2,] 30.685
> xpredict2 <- cbind(xpredict[,1], xpredict[,2]) # nameless matrix
> cat("6b predict(a, xpredict2)\n")
6b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1))
=== predict(a, xpredict2, trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    80     10
2    90     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1          67.1             0            0
[2,]           1          77.1             0            0
predict.earth: returning earth predictions 

     Volume
[1,] 408.76
[2,] 466.22
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, trees$Volume)
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
=== head(predict(a, trace = 1))predict.earth: returning earth fitted.values 

     trees$Volume
[1,]       10.023
[2,]       10.883
[3,]       11.456
[4,]       16.329
[5,]       20.494
[6,]       22.217
> cat("7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
=== predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     trees$Volume
[1,]       17.769
[2,]       30.685
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
=== predict(a, xpredict, trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     trees$Volume
[1,]       17.769
[2,]       30.685
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
=== predict(a, as.data.frame(xpredict), trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     trees$Volume
[1,]       17.769
[2,]       30.685
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("none.such", "joe")
> cat("10a predict(a, xpredict2)\n")
10a predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
=== predict(a, xpredict2, trace = 1) expect warning -->predict.earth: unexpected x column names, renaming columns
    Old names: none.such joe
    New names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 
     trees$Volume
[1,]       17.769
[2,]       30.685
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("Height", "Girth") # reversed
> cat("10b predict(a, xpredict2)\n")
10b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
=== predict(a, xpredict2, trace = 1) expect warning -->predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    80     10
[2,]    90     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1          67.1             0            0
[2,]           1          77.1             0            0
predict.earth: returning earth predictions 
     trees$Volume
[1,]       408.76
[2,]       466.22
> 
> cat("--- test predict.earth with multiple response models-------------------\n")
--- test predict.earth with multiple response models-------------------
> 
> a <- earth(cbind(Volume, Volume + 100) ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
=== predict(a, c(10, 80), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
predict.earth: returning earth predictions 
     Volume     y2
[1,] 17.769 117.77
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
=== predict(a, c(10, 10, 80, 80), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    10     80
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           2.9            4
predict.earth: returning earth predictions 

     Volume     y2
[1,] 17.769 117.77
[2,] 17.769 117.77
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
=== predict(a, c(10, 11, 80, 81), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    11     81
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           1.9            5
predict.earth: returning earth predictions 

     Volume     y2
[1,] 17.769 117.77
[2,] 21.354 121.35
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
=== head(predict(a, trace = 1))predict.earth: returning earth fitted.values 

     Volume     y2
[1,] 10.023 110.02
[2,] 10.883 110.88
[3,] 11.456 111.46
[4,] 16.329 116.33
[5,] 20.494 120.49
[6,] 22.217 122.22
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
=== predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            0
predict.earth: returning earth predictions 
     Volume     y2
[1,] 14.896 114.90
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
=== predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),      trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
2    10     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            0
[2,]           1             0           2.9            0
predict.earth: returning earth predictions 

     Volume     y2
[1,] 14.896 114.90
[2,] 14.896 114.90
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
=== predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
=== predict(a, xpredict, trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
=== predict(a, as.data.frame(xpredict), trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6 predict(a, xpredict with reversed columns and colnames)\n")
6 predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
=== predict(a, xpredict, trace = 1)predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

     Volume     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, cbind(trees$Volume, trees$Volume+100))
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
=== head(predict(a, trace = 1))predict.earth: returning earth fitted.values 

         y1     y2
[1,] 10.023 110.02
[2,] 10.883 110.88
[3,] 11.456 111.46
[4,] 16.329 116.33
[5,] 20.494 120.49
[6,] 22.217 122.22
> cat("7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
=== predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1)predict.earth: x has no column names, adding column names: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

         y1     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
=== predict(a, xpredict, trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

         y1     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
=== predict(a, as.data.frame(xpredict), trace = 1)predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 

         y1     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("10 predict(a, xpredict)\n")
10 predict(a, xpredict)
> printh(predict(a, xpredict, trace=1), expect.warning=TRUE)
=== predict(a, xpredict, trace = 1) expect warning -->predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
[2,]           1             0           0.9           14
predict.earth: returning earth predictions 
         y1     y2
[1,] 17.769 117.77
[2,] 30.685 130.69
> 
> cat("--- test reorder.earth ----------------------\n")
--- test reorder.earth ----------------------
> a <- earth(O3 ~ ., data = ozone1, degree = 2)
> earth:::reorder.earth(a, decomp = "none")
 [1]  1  2  3  4  5  6  7  8  9 10 11
> earth:::reorder.earth(a)   # defaults to decomp = "anova"
 [1]  1  2 11  8  3  4  9  5  6  7 10
> a$selected.terms[earth:::reorder.earth(a)]
 [1]  1  2 19 13  6  7 14  9 10 11 17
> 
> cat("--- test model building capabilities ----------------------\n")
--- test model building capabilities ----------------------
> itest <- 0
> N <- 100
> set.seed(1)
> x1 <- runif(N, -1, 1)
> x2 <- runif(N, -1, 1)
> x3 <- runif(N, -1, 1)
> x4 <- runif(N, -1, 1)
> x5 <- runif(N, -1, 1)
> x6 <- runif(N, -1, 1)
> x7 <- runif(N, -1, 1)
> x8 <- runif(N, -1, 1)
> x9 <- runif(N, -1, 1)
> x10 <- runif(N, -1, 1)
> 
> make.func <- function(
+     obj      = stop("no 'obj' arg"),
+     digits   = 14,
+     use.names = TRUE,   # use predictor names, else "x[,1]" etc
+     ...)                # extra args passed onto format
+ {
+     s <- paste(
+         "function(x)\n",
+         "{\n",
+         "if(is.vector(x))\n",
+         "  x <- matrix(x, nrow=1, ncol=length(x))\n",
+         "with(as.data.frame(x),\n",
+         format(obj, digits=digits, use.names=use.names, style="p", ...),
+         ")\n",
+         "}\n", sep="")
+ 
+     eval.parent(parse(text=s))
+ }
> 
> # this cross checks that RSq and GRSq claimed by
> # the model versus an independent calc of RSq and GRSq
> 
> test.model.rsq <- function(object, x, y, MarsFunc, nCases, nUsedTerms, penalty, RefFunc=NULL, ...)
+ {
+     y1 <- RefFunc(x, ...)
+     rss <- sum((y1 - MarsFunc(x))^2)
+     rss.null <- sum((y - mean(y))^2)
+     gcv.null <- earth:::get.gcv(rss.null, 1, penalty, nCases)
+     gcv <- earth:::get.gcv(rss, nUsedTerms, penalty, nCases)
+     if(is.finite(object$rsq))
+         if(!isTRUE(all.equal(object$rsq, 1 - rss/rss.null)))
+             cat("\nWarning: RSq mismatch object$rsq", object$rsq, "calculated RSq", 1 - rss/rss.null)
+         else if(!isTRUE(all.equal(object$grsq, 1 - gcv/gcv.null)))
+             cat("\nWarning GRSq mismatch object$grsq", object$grsq, "calculated GRSq", 1 - gcv/gcv.null)
+ }
> 
> # this uses the global matrix data.global (data.global[,1] is the response)
> 
> test.earth <- function(itest, func, degree=2, nk=51, plotit=PLOT,
+                        test.rsq=TRUE, trace=0, linpreds=FALSE)
+ {
+     cat("itest", sprintf("%-3d", itest), sprintf("%-32s", deparse(substitute(func))),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk))
+     if(trace)
+         cat("\n")
+     gc()
+     earthTime <- system.time(fite <- earth(data.global[,-1], data.global[,1],
+                                         degree=degree, trace=trace, nk=nk,
+                                         pmethod="b", fast.k=-1, linpreds=linpreds))
+     funca <- make.func(fite)
+     nCases <- nrow(data.global)
+     penalty <- ifelse(degree>1,3,2)
+     nUsedTerms <- sum(fite$selected.terms!=0)
+     cat(" nTerms",  sprintf("%-2d", nUsedTerms), "of", sprintf("%-3d ", nrow(fite$dirs)))
+     if(PRINT.TIME)
+         cat(" time", earthTime[1])
+     cat("GRSq", sprintf("%4.2g", fite$grsq))
+     caption <- paste("itest ", itest, ": ", deparse(substitute(func)),
+                         " degree=", degree, " nk=", nk, sep="")
+     if(test.rsq)
+         test.model.rsq(fite, x=data.global[,-1, drop=FALSE], y=data.global[,1], MarsFunc=funca,
+             nCases=nCases, nUsedTerms=nUsedTerms, penalty=penalty, RefFunc=func)
+     # TODO add printh(evimp(fite))
+     if(plotit) {
+         plotmo(fite, func=func, caption=caption)
+         plot(fite, nresiduals=500, caption=caption)
+     }
+     cat("\n")
+     fite
+ }
> 
> ozone.test <- function(itest, sModel, x, y, degree=2, nk=51,
+                     plotit=PLOT, trace=0, col.loess="lightblue")
+ {
+     fite <- earth(x, y, degree=degree, nk=nk, trace=trace)
+     fitm <- mars(x, y, degree=degree, nk=nk)
+ 
+     cat("itest",
+         sprintf("%-3d", itest),
+         sprintf("%-32s", sModel),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk),
+         "nTerms",  sprintf("%-2d", sum(fite$selected.terms != 0)),
+         "of", sprintf("%-3d", nrow(fite$dirs)),
+         "GRSq", sprintf("%4.2g", fite$grsq),
+         "GRSq ratio", fite$grsq/mars.to.earth(fitm)$grsq,
+         "\n")
+     caption <- paste("itest ", itest, ": ", sModel, " degree=", degree, " nk=", nk, sep="")
+     if(plotit) {
+         fitme <- mars.to.earth(fitm)
+         plotmo(fite, caption=paste("EARTH", caption))
+         plotmo(fitme, caption=paste("MARS", caption))
+         plot(fite, nresiduals=500, col.loess=col.loess, caption=paste("EARTH", caption))
+         plot(fitme, caption=paste("MARS", caption))
+         fitme <- update(fitme)  # generate model selection data
+         plot.earth.models(list(fite, fitme), caption=paste(itest, ": Compare earth to mars ", sModel, sep=""))
+     }
+     fite
+ }
> 
> funcNoise <- function(x)    # noise
+ {
+     rnorm(length(x))
+ }
> x <- cbind(x1)
> data.global <- cbind(funcNoise(x), x1)
> # plotit=FALSE because there is only an intercept
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=1, plotit=FALSE, test.rsq=FALSE)
itest 1   funcNoise                        degree 1  nk 5   nTerms 1  of 4   GRSq    0
Selected 1 of 4 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=2, plotit=FALSE, test.rsq=FALSE)
itest 2   funcNoise                        degree 2  nk 5   nTerms 1  of 4   GRSq    0
Selected 1 of 4 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> itest <- itest+1; test.earth(itest, funcNoise, nk=51, degree=1, plotit=FALSE, test.rsq=FALSE)
itest 3   funcNoise                        degree 1  nk 51  nTerms 1  of 6   GRSq    0
Selected 1 of 6 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> itest <- itest+1; a <- test.earth(itest, funcNoise, nk=51, degree=2, plotit=FALSE, test.rsq=FALSE)
itest 4   funcNoise                        degree 2  nk 51  nTerms 1  of 6   GRSq    0
> printh(summary(a, fixed.point=FALSE)) # check that print summary works with intercept only model
=== summary(a, fixed.point = FALSE)
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

            data.global[,1]
(Intercept)       -0.044519

Selected 1 of 6 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> printh(summary(a, details=1, fixed.point=FALSE))
=== summary(a, details = 1, fixed.point = FALSE)
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

            data.global[,1]
(Intercept)       -0.044519

Number of cases: 100
Selected 1 of 6 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> 
> func1 <- function(x)
+ {
+     sin(3 * x[,1]) + x[,2]
+ }
> x.global <- cbind(                    x1, x2)
> data.global <- cbind(func1(x.global), x1, x2)
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=1)
itest 5   func1                            degree 1  nk 5   nTerms 4  of 5   GRSq 0.86
Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.11681    RSS 10.103    GRSq 0.86214    RSq 0.87834
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=2)
itest 6   func1                            degree 2  nk 5   nTerms 4  of 5   GRSq 0.86
Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.12067    RSS 10.103    GRSq 0.85758    RSq 0.87834
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=1)
itest 7   func1                            degree 1  nk 51  nTerms 8  of 8   GRSq    1
Selected 8 of 8 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 7 (additive model)
GCV 0.0024854    RSS 0.17957    GRSq 0.99707    RSq 0.99784
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=2)
itest 8   func1                            degree 2  nk 51  nTerms 8  of 8   GRSq    1
Selected 8 of 8 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 7 (additive model)
GCV 0.0027035    RSS 0.17957    GRSq 0.9968    RSq 0.99784
> 
> func7 <- function(x)    # just one predictor
+ {
+     sin(5 * x[,1])
+ }
> x.global <- cbind(                    x1)
> data.global <- cbind(func7(x.global), x1)
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=1)
itest 9   func7                            degree 1  nk 5   nTerms 4  of 4   GRSq 0.76
Selected 4 of 4 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.12312    RSS 10.648    GRSq 0.76006    RSq 0.78826
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=2)
itest 10  func7                            degree 2  nk 5   nTerms 4  of 4   GRSq 0.75
Selected 4 of 4 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.12719    RSS 10.648    GRSq 0.75213    RSq 0.78826
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=1)
itest 11  func7                            degree 1  nk 51  nTerms 6  of 7   GRSq 0.97
Selected 6 of 7 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 0.016831    RSS 1.3332    GRSq 0.9672    RSq 0.97349
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=2)
itest 12  func7                            degree 2  nk 51  nTerms 6  of 7   GRSq 0.97
Selected 6 of 7 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 0.017818    RSS 1.3332    GRSq 0.96527    RSq 0.97349
> 
> func8 <- function(x)
+ {
+     ret <- 0
+     for (i in 1:5)
+         ret <- ret + sin(2 * x[,i])
+     ret + x[,1]*cos(4 * x[,2]) + (x[,3]-2)* x[,4]
+ }
> 
> func8noise <- function(x)
+ {
+     func8(x) + rnorm(nrow(x),0,1)
+ }
> 
> x.global <- cbind(                    x1,  x2,  x3,  x4,  x5)
> data.global <- cbind(func8(x.global), x1,  x2,  x3,  x4,  x5)
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=1)
itest 13  func8                            degree 1  nk 11  nTerms 11 of 11  GRSq 0.89
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.30906    RSS 19.288    GRSq 0.89366    RSq 0.93228
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=2)
itest 14  func8                            degree 2  nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.35224    RSS 19.288    GRSq 0.8788    RSq 0.93228
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=10)
itest 15  func8                            degree 10 nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.35224    RSS 19.288    GRSq 0.8788    RSq 0.93228
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=1)
itest 16  func8                            degree 1  nk 51  nTerms 14 of 18  GRSq 0.91
Selected 14 of 18 terms, and 5 of 5 predictors 
Importance: x5, x3, x2, x1, x4
Number of terms at each degree of interaction: 1 13 (additive model)
GCV 0.27109    RSS 14.446    GRSq 0.90672    RSq 0.94928
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=2)
itest 17  func8                            degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.053549    RSS 1.4202    GRSq 0.98157    RSq 0.99501
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=10)
itest 18  func8                            degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.053549    RSS 1.4202    GRSq 0.98157    RSq 0.99501
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=1,  test.rsq=FALSE)
itest 19  func8noise                       degree 1  nk 11  nTerms 11 of 11  GRSq 0.89
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.30906    RSS 19.288    GRSq 0.89366    RSq 0.93228
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=2,  test.rsq=FALSE)
itest 20  func8noise                       degree 2  nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.35224    RSS 19.288    GRSq 0.8788    RSq 0.93228
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=10, test.rsq=FALSE)
itest 21  func8noise                       degree 10 nk 11  nTerms 11 of 11  GRSq 0.88
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.35224    RSS 19.288    GRSq 0.8788    RSq 0.93228
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=1,  test.rsq=FALSE)
itest 22  func8noise                       degree 1  nk 51  nTerms 14 of 18  GRSq 0.91
Selected 14 of 18 terms, and 5 of 5 predictors 
Importance: x5, x3, x2, x1, x4
Number of terms at each degree of interaction: 1 13 (additive model)
GCV 0.27109    RSS 14.446    GRSq 0.90672    RSq 0.94928
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=2,  test.rsq=FALSE)
itest 23  func8noise                       degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.053549    RSS 1.4202    GRSq 0.98157    RSq 0.99501
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=10, test.rsq=FALSE)
itest 24  func8noise                       degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.053549    RSS 1.4202    GRSq 0.98157    RSq 0.99501
> 
> eqn56 <- function(x) # Friedman MARS paper equation 56
+ {
+     0.1 * exp(4*x[,1]) +
+     4 / (1 + exp(-20*(x[,2]-0.5))) +
+     3 * x[,3] +
+     2 * x[,4] +
+     x[,5]
+ }
> 
> neg.eqn56 <- function(x)
+ {
+     -eqn56(x)
+ }
> 
> eqn56noise <- function(x)
+ {
+     eqn56(x) + rnorm(nrow(x),0,1)
+ }
> 
> neg.eqn56noise <- function(x)
+ {
+     -eqn56noise(x)
+ }
> 
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=1)
itest 25  eqn56                            degree 1  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.33706    RSS 22.115    GRSq 0.95999    RSq 0.97322
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=2)
itest 26  eqn56                            degree 2  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.37788    RSS 22.115    GRSq 0.95514    RSq 0.97322
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=10)
itest 27  eqn56                            degree 10 nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.37788    RSS 22.115    GRSq 0.95514    RSq 0.97322
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=1)
itest 28  eqn56                            degree 1  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.034777    RSS 1.9562    GRSq 0.99587    RSq 0.99763
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=2)
itest 29  eqn56                            degree 2  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.041088    RSS 1.9562    GRSq 0.99512    RSq 0.99763
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=10)
itest 30  eqn56                            degree 10 nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.041088    RSS 1.9562    GRSq 0.99512    RSq 0.99763
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=1,  test.rsq=FALSE)
itest 31  eqn56noise                       degree 1  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.33706    RSS 22.115    GRSq 0.95999    RSq 0.97322
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=2,  test.rsq=FALSE)
itest 32  eqn56noise                       degree 2  nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.37788    RSS 22.115    GRSq 0.95514    RSq 0.97322
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=10, test.rsq=FALSE)
itest 33  eqn56noise                       degree 10 nk 11  nTerms 10 of 11  GRSq 0.96
Selected 10 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.37788    RSS 22.115    GRSq 0.95514    RSq 0.97322
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=1,  test.rsq=FALSE)
itest 34  eqn56noise                       degree 1  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.034777    RSS 1.9562    GRSq 0.99587    RSq 0.99763
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=2,  test.rsq=FALSE)
itest 35  eqn56noise                       degree 2  nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.041088    RSS 1.9562    GRSq 0.99512    RSq 0.99763
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=10, test.rsq=FALSE)
itest 36  eqn56noise                       degree 10 nk 51  nTerms 13 of 14  GRSq    1
Selected 13 of 14 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.041088    RSS 1.9562    GRSq 0.99512    RSq 0.99763
> 
> robotArm <- function(x) # Friedman Fast MARS paper
+ {
+     l1     <- x[,1]
+     l2     <- x[,2]
+     theta1 <- x[,3]
+     theta2 <- x[,4]
+     phi    <- x[,5]
+ 
+     x1 <- l1 * cos(theta1) - l2 * cos(theta1 + theta2) * cos(phi)
+     y <-  l1 * sin(theta1) - l2 * sin(theta1 + theta2) * cos(phi)
+     z <-  l2 *  sin(theta2) * sin(phi)
+ 
+     sqrt(x1^2 + y^2 + z^2)
+ }
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                       (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robotArm(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global) <- c("l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.earth(itest, robotArm, nk=51, degree=1)
itest 37  robotArm                         degree 1  nk 51  nTerms 10 of 17  GRSq 0.79
Selected 10 of 17 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.038486    RSS 2.5250    GRSq 0.794    RSq 0.8621
> itest <- itest+1; test.earth(itest, robotArm, nk=51, degree=10)
itest 38  robotArm                         degree 10 nk 51  nTerms 19 of 38  GRSq 0.85
Selected 19 of 38 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 10 8
GCV 0.028232    RSS 0.82325    GRSq 0.84889    RSq 0.95504
> itest <- itest+1; test.earth(itest, robotArm, nk=201, degree=1)
itest 39  robotArm                         degree 1  nk 201 nTerms 10 of 17  GRSq 0.79
Selected 10 of 17 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.038486    RSS 2.5250    GRSq 0.794    RSq 0.8621
> itest <- itest+1; test.earth(itest, robotArm, nk=201, degree=10)
itest 40  robotArm                         degree 10 nk 201 nTerms 19 of 38  GRSq 0.85
Selected 19 of 38 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 10 8
GCV 0.028232    RSS 0.82325    GRSq 0.84889    RSq 0.95504
> 
> cat("--- linear predictors -------------------------\n")
--- linear predictors -------------------------
> 
> # Build a linear-only earth model and an identical lm model to compare predict().
> # The somewhat strange args are to force the models to use the same predictors.
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 41  
> a <- earth(O3 ~ ., linpreds=TRUE, data = ozone1, pmethod="none", thresh=1e-10)
> printh(summary(a))
=== summary(a)
Call: earth(formula=O3~., data=ozone1, linpreds=TRUE, pmethod="none", 
      thresh=1e-10)

                  O3
(Intercept) -9.29409
wind        -0.02724
humidity     0.08327
temp         0.26496
ibh         -0.00032
dpg         -0.00266
ibt          0.02359
vis         -0.00772
doy         -0.00938

Selected 9 of 9 terms, and 8 of 9 predictors 8 linear predictors
Importance: temp, humidity, ibh, ibt, doy, vis, dpg, wind, vh-unused
Number of terms at each degree of interaction: 1 8 (additive model)
GCV 21.323    RSS 6330.2    GRSq 0.66878    RSq 0.70021
> alin <- lm(O3 ~ . - vh, data = ozone1)
> printh(summary(alin))
=== summary(alin)

Call:
lm(formula = O3 ~ . - vh, data = ozone1)

Residuals:
    Min      1Q  Median      3Q     Max 
-12.008  -2.866  -0.222   2.764  13.453 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -9.294094   1.996850   -4.65  4.8e-06 ***
wind        -0.027242   0.132073   -0.21  0.83671    
humidity     0.083265   0.018701    4.45  1.2e-05 ***
temp         0.264955   0.048664    5.44  1.0e-07 ***
ibh         -0.000323   0.000282   -1.15  0.25282    
dpg         -0.002660   0.011259   -0.24  0.81340    
ibt          0.023592   0.012206    1.93  0.05415 .  
vis         -0.007719   0.003741   -2.06  0.03987 *  
doy         -0.009379   0.002763   -3.39  0.00077 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 4.44 on 321 degrees of freedom
Multiple R-squared:  0.7,	Adjusted R-squared: 0.693 
F-statistic: 93.7 on 8 and 321 DF,  p-value: <2e-16 

> stopifnot(all.equal(as.double(predict(a)), as.double(predict(alin))))
> newdata <- data.frame(
+         vh = c(5700,5701,5702),
+         wind = c(3,4,5),
+         humidity = c(30,40,50),
+         temp = c(31,42,53),
+         ibh = c(1000, 1000, 1000),
+         dpg = c(-10, 0, 10),
+         ibt = c(90, 80, 60),
+         vis = c(100, 110, 120),
+         doy= c(12, 34, 56))
> apred <- as.double(predict(a, newdata=newdata))
> alinpred <- as.double(predict(alin, newdata=newdata))
> stopifnot(all.equal(apred, alinpred))
> # printh(head(predict(a, type="terms")))
> printh(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
=== earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms)
[1] 0 1 2 3 4 5 6 7 8
> 
> # test with mixed linear and standard predictors
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 42  
> a <- earth(O3 ~ ., linpreds=c(3, 8), data = ozone1, degree=2, trace=4)  # 3,8 is humidity,vis
Call: earth(formula=O3~., data=ozone1, trace=4, linpreds=c(3, 
      8), degree=2)
x is a 330 by 9 matrix: 1=vh, 2=wind, 3=humidity, 4=temp, 5=ibh, 6=dpg, 7=ibt, 8=vis, 9=doy
First few rows of x are
       vh wind humidity temp  ibh dpg ibt vis doy
[1,] 5710    4       28   40 2693 -25  87 250  33
[2,] 5700    3       37   45  590 -24 128 100  34
[3,] 5760    3       51   54 1450  25 139  60  35
[4,] 5720    4       69   35 1568  15 121  60  36
[5,] 5790    6       19   45 2631 -33 123 100  37
[6,] 5790    3       25   55  554 -28 182 250  38
y is a 330 by 1 matrix: 1=O3
First few rows of y are
     O3
[1,]  3
[2,]  5
[3,]  5
[4,]  6
[5,]  4
[6,]  4
linear predictors 3=humidity 8=vis
Approximate memory use after expanding x and y matrices: 0.2 MBytes
Forward pass: minspan 8 endspan 15

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.6493 0.6599       0.6599    4         temp          58  2   3   
4      0.6903 0.7088      0.04898    5          ibh        1108  4   5   
6      0.7102 0.7361      0.02722    9          doy          92  6   7   
8      0.7332 0.7608      0.02475    3     humidity          19< 8       2   
10     0.7526 0.7852      0.02443    6          dpg          10  9   10  
12     0.7577 0.7965      0.01128    1           vh        5890  11  12  
14     0.7644 0.8054     0.008854    8          vis           0< 13      
16     0.7654 0.8127     0.007305    4         temp          72  14  15  6   
18     0.7679 0.8209      0.00825    7          ibt         250  16  17  2   
20     0.7696 0.8284     0.007421    2         wind           6  18  19  5   

Reached max number of terms 21
After forward pass GRSq 0.7696 RSq 0.8284
Forward pass complete: 21 terms (19 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6721  0.6771     0.6721      2  1 8
          3      0.6742  0.6840     0.0021      3  1 6 8
          4      0.6904  0.7044     0.0163      2  1 2 3 4
          5      0.7369  0.7527     0.0465      4  1 4 6 7 8
          6      0.7496  0.7683     0.0127      5  1 4 6 7 8 9
          7      0.7573  0.7789     0.0077      6  1 6 7 8 9 12 13
          8      0.7700  0.7938     0.0127      6  1 6 7 8 9 10 12 13
          9      0.7722  0.7990     0.0022      6  1 6 7 8 9 10 12 13 14
         10      0.7752  0.8049     0.0031      6  1 6 7 8 9 10 11 12 13 14
         11      0.7791  0.8114     0.0038      7  1 6 7 8 9 10 11 12 13 14 17
         12      0.7830  0.8178     0.0039      9  1 6 7 8 9 10 11 12 13 14 17 18
chosen   13      0.7862  0.8234     0.0032      9  1 4 6 7 8 9 10 11 12 13 14 17 18
         14      0.7848  0.8252    -0.0014      9  1 4 6 7 8 9 10 11 12 13 14 16 17 18
         15      0.7835  0.8272    -0.0012      9  1 4 6 7 8 9 10 11 12 13 14 16 17 18 19
         16      0.7805  0.8277    -0.0030      9  1 3 4 6 7 8 9 10 11 12 13 14 16 17 18 19
         17      0.7772  0.8281    -0.0033      9  1 2 3 4 6 7 8 9 10 11 12 13 14 16 17 18 19
         18      0.7735  0.8282    -0.0037      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 17 18 19
         19      0.7696  0.8284    -0.0039      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19

Prune method "backward" penalty 3 nprune 19: selected 13 of 19 terms, and 9 of 9 predictors
After backward pass GRSq 0.7862 RSq 0.8234 
> printh(summary(a))
=== summary(a)
Call: earth(formula=O3~., data=ozone1, trace=4, linpreds=c(3, 
      8), degree=2)

                              O3
(Intercept)             18.70205
vis                     -0.01017
h(vh-5890)               0.16857
h(5890-vh)              -0.01724
h(ibh-1108)             -0.00050
h(dpg-10)               -0.07753
h(10-dpg)               -0.06672
h(doy-92)               -0.02291
h(92-doy)               -0.14034
humidity * h(temp-58)    0.00947
h(wind-6) * h(1108-ibh) -0.00542
h(temp-58) * h(250-ibt) -0.00283
h(temp-72) * h(doy-92)  -0.00372

Selected 13 of 19 terms, and 9 of 9 predictors 2 linear predictors
Importance: temp, humidity, doy, dpg, vh, vis, ibh, ibt, wind
Number of terms at each degree of interaction: 1 8 4
GCV 13.763    RSS 3728.7    GRSq 0.7862    RSq 0.82341
> if (PLOT) {
+     plot(a)
+     plotmo(a)
+ }
> printh(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
=== earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms)
 [1] 0 2 3 2 4 5 6 6 6 6 7 9 9 9 9 9 9 9 9
> printh(earth:::get.nterms.per.degree(a))
=== earth:::get.nterms.per.degree(a)

0 1 2 
1 8 4 
> # printh(head(predict(a, type="terms")))
> 
> # this is a good example because it has linear preds in both 1 and 2 degree terms
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56,     nk=21, degree=2, linpreds=c(3,5))
itest 43  eqn56                            degree 2  nk 21  nTerms 11 of 12  GRSq    1
Selected 11 of 12 terms, and 5 of 10 predictors 2 linear predictors
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.037481    RSS 2.0525    GRSq 0.99555    RSq 0.99751
> # check symmetry by using negative of eqn56
> itest <- itest+1; data.global <- cbind(neg.eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> test.earth(itest, neg.eqn56, nk=21, degree=2, linpreds=c(3,5))
itest 44  neg.eqn56                        degree 2  nk 21  nTerms 11 of 12  GRSq    1
Selected 11 of 12 terms, and 5 of 10 predictors 2 linear predictors
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.037481    RSS 2.0525    GRSq 0.99555    RSq 0.99751
> 
> cat("--- tests with ozone data ----------------------\n")
--- tests with ozone data ----------------------
> 
> data(ozone1)
> attach(ozone1)
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=1, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 45  doy ~ wind+humidity+temp+vis     degree 1  nk 21  nTerms 6  of 15  GRSq 0.18 GRSq ratio 1.3289 
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 6 of 15 terms, and 3 of 4 predictors 
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 8981    RSS 2769457    GRSq 0.17813    RSq 0.22733
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 46  doy ~ wind+humidity+temp+vis     degree 2  nk 21  nTerms 10 of 20  GRSq 0.22 GRSq ratio 1.7656 
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 10 of 20 terms, and 3 of 4 predictors 
Importance: wind, humidity, temp, vis-unused
Number of terms at each degree of interaction: 1 2 7
GCV 8563.3    RSS 2437753    GRSq 0.21635    RSq 0.31987
> 
> # this is a basic test of RegressAndFix (because this generates lin dep bx cols)
> 
> cat("--Expect warning from mda::mars: NAs introduced by coercion\n") # why do we get a warning?
--Expect warning from mda::mars: NAs introduced by coercion
> x.global <- cbind(wind, exp(humidity))
> y <- doy
> # col.loess is 0 else get loess errors
> itest <- itest+1; ozone.test(itest, "doy ~ wind+exp(humidity)", x.global, y, degree=1, nk=21, col.loess=0)
Warning in storage.mode(tagx) <- "integer" : NAs introduced by coercion
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 47  doy ~ wind+exp(humidity)         degree 1  nk 21  nTerms 3  of 5   GRSq  0.1 GRSq ratio 1.6351 
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 3 of 5 terms, and 1 of 2 predictors 
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9825.3    RSS 3144854    GRSq 0.10086    RSq 0.12259
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~.", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 48  O3~.                             degree 2  nk 21  nTerms 11 of 21  GRSq 0.79 GRSq ratio 1.0105 
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.434    RSS 3762.2    GRSq 0.79132    RSq 0.82183
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~., nk=51", x.global, y, degree=2, nk=51)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 49  O3~., nk=51                      degree 2  nk 51  nTerms 28 of 50  GRSq 0.81 GRSq ratio 1.0110 
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 28 of 50 terms, and 9 of 9 predictors 
Importance: temp, doy, ibh, humidity, dpg, vis, ibt, wind, vh
Number of terms at each degree of interaction: 1 9 18
GCV 12.434    RSS 2576.6    GRSq 0.80685    RSq 0.87798
> 
> detach(ozone1)
> 
> cat("--- fast mars -----------------------------------\n")
--- fast mars -----------------------------------
> 
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = -1, fast.beta = 1))
=== earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = -1,      fast.beta = 1)
Selected 17 of 31 terms, and 9 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh
Number of terms at each degree of interaction: 1 5 11
GCV 13.383    RSS 3387.3    GRSq 0.7921    RSq 0.83958
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = -1, fast.beta = 0))
=== earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = -1,      fast.beta = 0)
Selected 17 of 31 terms, and 9 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh
Number of terms at each degree of interaction: 1 5 11
GCV 13.383    RSS 3387.3    GRSq 0.7921    RSq 0.83958
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 1))
=== earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 5,      fast.beta = 1)
Selected 17 of 30 terms, and 9 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh
Number of terms at each degree of interaction: 1 8 8
GCV 12.977    RSS 3284.4    GRSq 0.79842    RSq 0.84445
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 0))
=== earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 5,      fast.beta = 0)
Selected 11 of 31 terms, and 8 of 9 predictors 
Importance: temp, ibt, humidity, doy, dpg, vis, ibh, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.434    RSS 3762.2    GRSq 0.79132    RSq 0.82183
> 
> cat("--- plot.earth and plot.earth.models ------------\n")
--- plot.earth and plot.earth.models ------------
> 
> a <- earth(O3 ~ ., data=ozone1) # formula interface
> 
> if (PLOT)
+     plot(a, caption="plot.earth test 1", col.rsq=3, col.loess=4, col.qq="pink",
+          col.vline=1, col.npreds=0, nresiduals=100, cum.grid="grid")
> 
> set.seed(1)
> if (PLOT) {
+     plot(a, caption="plot.earth test 2", which=c(3,4,1), rlim=c(.2,.9),
+          jitter=.01, id.n=5, legend.pos=c(10,.4), pch=20, lty.vline=1)
+ 
+     plot(a, caption="plot.earth test 3", which=c(2), main="test main")
+ }
> 
> a1 <- earth(ozone1[,c(2:4,10)], ozone1[,1])     # x,y interface
> 
> if (PLOT) {
+     plot(a, caption="plot.earth test 4", id.n=1)
+     set.seed(1)
+     plot.earth.models(a, which=1, rlim=c(.4,.8), jitter=.01)
+ 
+     plot.earth.models(a1)
+ 
+     plot.earth.models(list(a, a1), col.cum=c(3,4),  col.grsq=c(1,2), col.rsq=c(3,4),
+          col.npreds=1, col.vline=1, lty.vline=3,
+          legend.pos=c(5,.4), legend.text=c("a", "b", "c"))
+ }
> 
> cat("--- test minspan --------------------------------\n")
--- test minspan --------------------------------
> 
> a <- earth(O3 ~ ., data=ozone1, minspan=2)
> printh(summary(a))
=== summary(a)
Call: earth(formula=O3~., data=ozone1, minspan=2)

                     O3
(Intercept)    12.57452
h(5740-vh)     -0.01650
h(wind-3)      -0.33442
h(54-humidity) -0.13353
h(temp-58)      0.31902
h(1046-ibh)    -0.00426
h(dpg-12)      -0.10069
h(ibt-120)      0.03732
h(80-vis)       0.04458
h(doy-89)       0.04191
h(89-doy)      -0.11515
h(doy-159)     -0.08339

Selected 12 of 20 terms, and 9 of 9 predictors 
Importance: temp, vh, humidity, dpg, doy, ibh, ibt, vis, wind
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.684    RSS 4193.7    GRSq 0.7719    RSq 0.80139
> 
> a <- earth(O3 ~ ., data=ozone1, minspan=0)
> printh(summary(a))
=== summary(a)
Call: earth(formula=O3~., data=ozone1, minspan=0)

                     O3
(Intercept)    13.99702
h(5860-vh)     -0.01378
h(wind-3)      -0.34494
h(55-humidity) -0.13130
h(temp-58)      0.27810
h(1108-ibh)    -0.00330
h(dpg-10)      -0.09981
h(ibt-121)      0.03250
h(150-vis)      0.02322
h(doy-92)       0.04134
h(92-doy)      -0.11683
h(doy-159)     -0.08480

Selected 12 of 20 terms, and 9 of 9 predictors 
Importance: temp, humidity, dpg, doy, vh, ibh, vis, ibt, wind
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.590    RSS 4166.9    GRSq 0.77336    RSq 0.80266
> 
> cat("--- test multiple responses ---------------------\n")
--- test multiple responses ---------------------
> 
> # this uses the global matrix data.global (data.global[,1:2] is the response)
> 
> test.earth.two.responses <- function(itest, func1, func2,
+     degree=2, nk=51, plotit=PLOT, test.rsq=TRUE, trace=0, minspan=0,
+     test.mars.to.earth=FALSE)
+ {
+     if(typeof(func1) == "character")
+         funcnames <- paste("multiple responses", func1, func2)
+     else
+         funcnames <- paste("multiple responses", deparse(substitute(func1)), deparse(substitute(func2)))
+     cat("itest", sprintf("%-3d", itest), funcnames,
+         " degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk), "\n\n")
+     gc()
+     fite <- earth(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+                 degree=degree, trace=trace, nk=nk, pmethod="b", fast.k=-1, minspan=minspan)
+     printh(fite)
+     caption <- paste("itest ", itest, ": ", funcnames, " degree=", degree, " nk=", nk, sep="")
+     if(plotit) {
+         if(typeof(func1) == "character") {
+             plotmo(fite, caption=caption)
+             plotmo(fite, ycolumn=2)
+         } else {
+             plotmo(fite, func=func1, caption=caption)
+             plotmo(fite, func=func2, ycolumn=2)
+         }
+         plot(fite, caption=caption)
+         plot(fite, ycolumn=2)
+     }
+     cat("\n")
+     if(test.mars.to.earth) {
+         cat("Testing mars.to.earth with a multiple response model\n")
+         fitm <- mars(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+                      degree=degree, trace=(trace!=0), nk=nk)
+         fitme <- mars.to.earth(fitm)
+         printh(fitme)
+         printh(summary(fitme))
+         if(plotit) {
+             plotmo(fitm, func=func1, caption=caption)
+             plotmo(fitm, func=func2, ycolumn=2)
+         }
+ # TODO following code causes error "nk" not found, looking in wrong environment?
+ #       cat("Expect warnings because of weights in the mars model\n")
+ #       fitm <- mars(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+ #                    degree=degree, trace=(trace!=0), nk=nk, wp=c(1,2))
+ #       fitme <- mars.to.earth(fitm)
+ #       printh(fitme)
+ #       printh(summary(fitme))
+     }
+     fite
+ }
> 
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1", "func7", "x1", "x2")
> itest <- itest+1; a <- test.earth.two.responses(itest, func1, func7, nk=51, degree=1)
itest 50  multiple responses func1 func7  degree 1  nk 51  

=== fite
Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

            GCV     RSS    GRSq     RSq
func1 0.0022734 0.15662 0.99732 0.99811
func7 0.0102585 0.70671 0.98001 0.98595
All   0.0125319 0.86332 0.99079 0.99352

> printh(summary(a))
=== summary(a)
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], trace=trace, degree=degree, nk=nk, pmethod="b", 
      fast.k=-1, minspan=minspan)

                    func1    func7
(Intercept)      -1.43185 -0.68970
h(x1- -0.468983)  1.85496 -1.36237
h(-0.468983-x1)   1.42725  4.00942
h(x1- -0.227772)  1.04478  5.94079
h(x1-0.199132)   -1.16870 -4.52208
h(x1-0.435237)   -1.79665 -5.27845
h(x1-0.641893)   -2.04200  1.97123
h(x2- -0.342445)  0.99082 -0.01968
h(-0.342445-x2)  -1.04446 -0.01788

Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

            GCV     RSS    GRSq     RSq
func1 0.0022734 0.15662 0.99732 0.99811
func7 0.0102585 0.70671 0.98001 0.98595
All   0.0125319 0.86332 0.99079 0.99352
> if (PLOT) {
+     plotmo(a, ycolumn=1)     # test generation of caption based on response name
+     plotmo(a, ycolumn=2)
+     plot(a, ycolumn=1)
+     plot(a, ycolumn=2)
+ }
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1", "a.very.long.in.fact.extremely.long.name", "x1", "x2")
> itest <- itest+1; a <- test.earth.two.responses(itest, func1, func7, nk=51, degree=3)
itest 51  multiple responses func1 func7  degree 3  nk 51  

=== fite
Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

                                              GCV     RSS    GRSq     RSq
func1                                   0.0025095 0.15662 0.99704 0.99811
a.very.long.in.fact.extremely.long.name 0.0113236 0.70671 0.97793 0.98595
All                                     0.0138331 0.86332 0.98983 0.99352

> printh(summary(a))
=== summary(a)
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], trace=trace, degree=degree, nk=nk, pmethod="b", 
      fast.k=-1, minspan=minspan)

                    func1 a.very.long.in.fact.extremely.long.name
(Intercept)      -1.43185                                -0.68970
h(x1- -0.468983)  1.85496                                -1.36237
h(-0.468983-x1)   1.42725                                 4.00942
h(x1- -0.227772)  1.04478                                 5.94079
h(x1-0.199132)   -1.16870                                -4.52208
h(x1-0.435237)   -1.79665                                -5.27845
h(x1-0.641893)   -2.04200                                 1.97123
h(x2- -0.342445)  0.99082                                -0.01968
h(-0.342445-x2)  -1.04446                                -0.01788

Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

                                              GCV     RSS    GRSq     RSq
func1                                   0.0025095 0.15662 0.99704 0.99811
a.very.long.in.fact.extremely.long.name 0.0113236 0.70671 0.97793 0.98595
All                                     0.0138331 0.86332 0.98983 0.99352
> 
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56=eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = c("", "neg.eqn56noise", "x1", "x2", "x3", "x4", "x5")
> itest <- itest+1; a <- test.earth.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=1)
itest 52  multiple responses eqn56 neg.eqn56noise  degree 1  nk 51  

=== fite
Selected 12 of 15 terms, and 5 of 5 predictors 
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 11 (additive model)

                    GCV     RSS    GRSq     RSq
y1             0.090205  5.3482 0.98929 0.99352
neg.eqn56noise 1.051158 62.3232 0.89879 0.93878
All            1.141363 67.6714 0.93932 0.96330

> 
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56=eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = NULL
> itest <- itest+1; a <- test.earth.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=2)
itest 53  multiple responses eqn56 neg.eqn56noise  degree 2  nk 51  

=== fite
Selected 11 of 38 terms, and 5 of 5 predictors 
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 8 2

        GCV     RSS    GRSq     RSq
y1  0.11567  6.3343 0.98627 0.99233
y2  1.49334 81.7753 0.83909 0.91010
All 1.60901 88.1096 0.90912 0.94922

> 
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                                        (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robotArm(x.global), eqn56(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global)    <- c(                "l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "eqn56", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=51, degree=1)
itest 54  multiple responses robotArm eqn56  degree 1  nk 51  

=== fite
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.068291 4.2620 0.63448 0.76724
eqn56 0.047013 2.9341 0.99902 0.99938
All   0.115304 7.1961 0.99760 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.068291 4.2620 0.63448 0.76724
eqn56 0.047013 2.9341 0.99902 0.99938
All   0.115304 7.1961 0.99760 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=51, degree=2, test.mars.to.earth=TRUE)
itest 55  multiple responses robotArm eqn56  degree 2  nk 51  

=== fite
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.077831 4.2620 0.58341 0.76724
eqn56 0.053581 2.9341 0.99888 0.99938
All   0.131412 7.1961 0.99727 0.99847

Testing mars.to.earth with a multiple response model
Converted mars(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
          1:2], degree=degree, nk=nk, trace.mars=(trace!=0))
to        earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
          1:2], degree=degree, nk=nk)
=== fitme
Selected 14 of 14 terms, and 5 of 5 predictors 
Importance: l1, l2, theta1, theta2, phi
Number of terms at each degree of interaction: 1 11 2

         GCV    RSS    GRSq     RSq
y1  0.073080 3.2318 0.60884 0.82351
y2  0.026114 1.1548 0.99945 0.99975
All 0.099193 4.3866 0.99976 0.99989
=== summary(fitme)
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], degree=degree, nk=nk)

                                          y1       y2
(Intercept)                         1.137120 16.81727
h(l1-0.434659)                      0.754467  2.79229
h(l1-0.712515)                      0.220952  9.08473
h(0.712515-l1)                     -0.293684 -1.12632
h(l2-0.680866)                      0.852962  0.01560
h(0.680866-l2)                     -0.444329 -7.44728
h(theta1-1.99268)                   0.015752  3.03011
h(1.99268-theta1)                   0.062994 -2.96905
h(theta2-3.09961)                  -0.193984  2.02819
h(3.09961-theta2)                  -0.156002 -1.97747
h(phi- -0.0759479)                 -0.232519  0.98325
h(-0.0759479-phi)                  -0.150194 -0.97498
h(0.434659-l1)                     -0.150766 -0.05519
h(l1-0.434659) * h(theta2-1.51306) -1.823933 -0.39212

Selected 14 of 14 terms, and 5 of 5 predictors 
Importance: l1, l2, theta1, theta2, phi
Number of terms at each degree of interaction: 1 11 2

         GCV    RSS    GRSq     RSq
y1  0.073080 3.2318 0.60884 0.82351
y2  0.026114 1.1548 0.99945 0.99975
All 0.099193 4.3866 0.99976 0.99989
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.077831 4.2620 0.58341 0.76724
eqn56 0.053581 2.9341 0.99888 0.99938
All   0.131412 7.1961 0.99727 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=1)
itest 56  multiple responses robotArm eqn56  degree 1  nk 201 

=== fite
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.068291 4.2620 0.63448 0.76724
eqn56 0.047013 2.9341 0.99902 0.99938
All   0.115304 7.1961 0.99760 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.068291 4.2620 0.63448 0.76724
eqn56 0.047013 2.9341 0.99902 0.99938
All   0.115304 7.1961 0.99760 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=2)
itest 57  multiple responses robotArm eqn56  degree 2  nk 201 

=== fite
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.077831 4.2620 0.58341 0.76724
eqn56 0.053581 2.9341 0.99888 0.99938
All   0.131412 7.1961 0.99727 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.077831 4.2620 0.58341 0.76724
eqn56 0.053581 2.9341 0.99888 0.99938
All   0.131412 7.1961 0.99727 0.99847
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=10)
itest 58  multiple responses robotArm eqn56  degree 10 nk 201 

=== fite
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.077831 4.2620 0.58341 0.76724
eqn56 0.053581 2.9341 0.99888 0.99938
All   0.131412 7.1961 0.99727 0.99847

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.077831 4.2620 0.58341 0.76724
eqn56 0.053581 2.9341 0.99888 0.99938
All   0.131412 7.1961 0.99727 0.99847
> 
> attach(ozone1)
> x.global <- cbind(                wind, humidity, temp, ibh, dpg, ibt, vis)
> data.global <- cbind(O3, doy, vh, wind, humidity, temp, ibh, dpg, ibt, vis)
> itest <- itest+1; test.earth.two.responses(itest, "O3", "doy", nk=51, degree=2)
itest 59  multiple responses O3 doy  degree 2  nk 51  

=== fite
Selected 21 of 49 terms, and 8 of 8 predictors 
Importance: wind, ibt, ibh, vis, vh, temp, humidity, dpg
Number of terms at each degree of interaction: 1 9 11

        GCV     RSS    GRSq     RSq
O3    21.82    5146 0.66112 0.75630
doy 7414.59 1748968 0.32148 0.51204
All 7436.41 1754113 0.32347 0.51347

Selected 21 of 49 terms, and 8 of 8 predictors 
Importance: wind, ibt, ibh, vis, vh, temp, humidity, dpg
Number of terms at each degree of interaction: 1 9 11

        GCV     RSS    GRSq     RSq
O3    21.82    5146 0.66112 0.75630
doy 7414.59 1748968 0.32148 0.51204
All 7436.41 1754113 0.32347 0.51347
> detach(ozone1)
> 
> cat("--- formula based multiple response -------------\n")
--- formula based multiple response -------------
> 
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> if (PLOT) {
+     plotmo(a2)                  # test generation of caption based on response name
+     plotmo(a2, ycolumn=1)
+     plotmo(a2, ycolumn=2)
+     plot(a2)
+     plot(a2, ycolumn=1)
+     plot(a2, ycolumn=2)
+ }
> 
> cat("--- test plot.earth.models with multiple responses ---\n")
--- test plot.earth.models with multiple responses ---
> 
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> b2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=1)
> if (PLOT) {
+     plot.earth.models(list(a, a2), caption="plot.earth.models with multiple responses, list(a,a2)")
+     plot.earth.models(list(a2, a), caption="plot.earth.models with multiple responses, list(a2,a)")
+     plot.earth.models(list(a2, b2), caption="plot.earth.models with multiple responses, list(a2,b2)")
+ }
> 
> cat("--- subset --------------------------------------\n")
--- subset --------------------------------------
> 
> set.seed(9)
> train.subset <- sample(1:nrow(ozone1), .8 * nrow(ozone1))
> test.subset <- (1:nrow(ozone1))[-train.subset]
> 
> # all the following models should be identical
> a <- earth(ozone1[,-1], ozone1[,1], subset=train.subset, nprune=7, degree=2)
> printh(a)
=== a
Selected 7 of 21 terms, and 5 of 9 predictors 
Importance: temp, ibt, doy, vis, ibh-unused, dpg, vh-unused, wind-unused, humidity-unused
Number of terms at each degree of interaction: 1 5 1
GCV 15.906    RSS 3705.7    GRSq 0.75138    RSq 0.77893
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[,-1], ozone1[,1], subset=train.subset)")
> 
> a <- earth(ozone1[train.subset,-1], ozone1[train.subset,1], nprune=7, degree=2)
> printh(a)
=== a
Selected 7 of 21 terms, and 5 of 9 predictors 
Importance: temp, ibt, doy, vis, ibh-unused, dpg, vh-unused, wind-unused, humidity-unused
Number of terms at each degree of interaction: 1 5 1
GCV 15.906    RSS 3705.7    GRSq 0.75138    RSq 0.77893
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[train.subset,-1], ozone1[train.subset,1]")
> 
> a <- earth(O3 ~ ., data=ozone1, subset=train.subset, nprune=7, degree=2)
> printh(a)
=== a
Selected 7 of 21 terms, and 5 of 9 predictors 
Importance: temp, ibt, doy, vis, ibh-unused, dpg, vh-unused, wind-unused, humidity-unused
Number of terms at each degree of interaction: 1 5 1
GCV 15.906    RSS 3705.7    GRSq 0.75138    RSq 0.77893
> if (PLOT)
+     plotmo(a, caption="test subset: earth(O3 ~ ., data=ozone1, subset=train.subset")
> 
> y <- ozone1[test.subset, 1]
> yhat <- predict(a, newdata = ozone1[test.subset, -1])
> printh(1 - sum((y - yhat)^2)/sum((y - mean(y))^2)) # print RSquared
=== 1 - sum((y - yhat)^2)/sum((y - mean(y))^2)[1] 0.72193
> 
> cat("--- update -------------------------\n")
--- update -------------------------
> 
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> printh(update(a, penalty = -1, ponly=TRUE))
=== update(a, penalty = -1, ponly = TRUE)
Selected 21 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 10 10
GCV 10.759    RSS 3550.6    GRSq 0.83185    RSq 0.83185
> printh(update(a, penalty = 10, ponly=TRUE))
=== update(a, penalty = 10, ponly = TRUE)
Selected 10 of 21 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 17.157    RSS 3931.8    GRSq 0.73349    RSq 0.8138
> a <- earth(O3 ~ ., data=ozone1, nk=31, pmethod="n", degree=2)
> a.none <- printh(update(a, nprune=10, pmethod="n"))
=== update(a, nprune = 10, pmethod = "n")
Selected 10 of 31 terms, and 5 of 9 predictors 
Importance: temp, humidity, ibt-unused, doy, dpg, ibh, vis-unused, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 6 3
GCV 13.812    RSS 3931.8    GRSq 0.78545    RSq 0.8138
> printh(update(a.none, pmethod="b"))
=== update(a.none, pmethod = "b")
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.812    RSS 3931.8    GRSq 0.78545    RSq 0.8138
> printh(update(a.none, nprune=4, pmethod="e"))
=== update(a.none, nprune = 4, pmethod = "e")
Selected 4 of 31 terms, and 3 of 9 predictors 
Importance: temp, ibh, humidity, vh-unused, wind-unused, dpg-unused, ibt-unused, vis-unused, doy-unused
Number of terms at each degree of interaction: 1 2 1
GCV 18.568    RSS 5815.9    GRSq 0.71157    RSq 0.72457
> a.updated <- update(a.none, nprune=10, pmethod="b")
> printh(a.updated)
=== a.updated
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.812    RSS 3931.8    GRSq 0.78545    RSq 0.8138
> a.backwards <- update(a, nprune=10, pmethod="b")
> printh(a.backwards)
=== a.backwards
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.812    RSS 3931.8    GRSq 0.78545    RSq 0.8138
> printh(all.equal(a.updated$bx, a.backwards$bx))
=== all.equal(a.updated$bx, a.backwards$bx)[1] TRUE
> a <- earth(O3 ~ ., data=ozone1, nk=31, nprune=10, pmethod="b", degree=2)
> printh(a)
=== a
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.812    RSS 3931.8    GRSq 0.78545    RSq 0.8138
> printh(all.equal(a$bx, a.backwards$bx))
=== all.equal(a$bx, a.backwards$bx)[1] TRUE
> 
> cat("--- Force.xtx.prune -----------------------------\n")
--- Force.xtx.prune -----------------------------
> 
> m1 <- earth(Volume ~ ., data = trees)
> m2 <- earth(Volume ~ ., data = trees, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 1", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 1 [but within numerical tolerances]
> 
> m1 <- earth(O3 ~ wind+temp, data = ozone1, nk=51)
> m2 <- earth(O3 ~ wind+temp, data = ozone1, nk=51, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 2", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 2 [but within numerical tolerances]
> 
> # TODO there appears to be a bug in leaps --- to see run the call below
> # with trace=4 and in the prune pass display note that at subset size 15
> # several terms are added and deleted -- but only one term should be added per step
> m1 <- earth(O3 ~ ., data = ozone1, nk=51, degree=2)
> m2 <- earth(O3 ~ ., data = ozone1, nk=51, degree=2, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 3", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 3 (m1$rsq 0.87798 != m1$rsq 0.87798) [but within numerical tolerances]
> 
> cat("--- extractAIC.earth ----------------------------\n")
--- extractAIC.earth ----------------------------
> 
> a <-earth(O3 ~ ., data=ozone1, degree=2)
> cat("Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC\n")
Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC
> printh(drop1(a), expect.warning=TRUE)
=== drop1(a) expect warning -->Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Single term deletions

Model:
O3 ~ vh + wind + humidity + temp + ibh + dpg + ibt + vis + doy
            Df  AIC
<none>         13.4
vh         0.0 13.4
wind      -2.5 13.4
humidity -12.5 15.2
temp     -10.0 13.2
ibh        0.0 13.0
dpg        0.0 14.7
ibt       -5.0 13.9
vis       -2.5 13.9
doy       -2.5 15.6
> printh(drop1(a, warn=FALSE)) # repeat but with warnings suppressed
=== drop1(a, warn = FALSE)
Single term deletions

Model:
O3 ~ vh + wind + humidity + temp + ibh + dpg + ibt + vis + doy
            Df  AIC
<none>         13.4
vh         0.0 13.4
wind      -2.5 13.4
humidity -12.5 15.2
temp     -10.0 13.2
ibh        0.0 13.0
dpg        0.0 14.7
ibt       -5.0 13.9
vis       -2.5 13.9
doy       -2.5 15.6
> 
> cat("--- fda and mda with earth -----------------------------------\n")
--- fda and mda with earth -----------------------------------
> 
> am <- fda(Species ~ ., data=iris, method=mars, degree=1, keepxy=TRUE)
> printh(am)
=== am
Call:
fda(formula = Species ~ ., data = iris, method = mars, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 95.31 100.00 

Training Misclassification Error: 0.02 ( N = 150 )
> a <- fda(Species ~ ., data=iris, method=earth, degree=1, keepxy=TRUE)
> printh(a)
=== a
Call:
fda(formula = Species ~ ., data = iris, method = earth, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.48 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> printh(confusion(a))
=== confusion(a)
            true
object       setosa versicolor virginica
  setosa         50          0         0
  versicolor      0         47         3
  virginica       0          3        47
attr(,"error")
[1] 0.04
> if (PLOT) {
+     par(mar=c(3, 3, 2, .5))  # small margins and text to pack figs in
+     par(mgp=c(1.6, 0.6, 0))  # flatten axis elements
+     par(oma=c(0,0,4,0))      # make space for caption
+     layout(rbind(c(1,1,0,0), c(2,3,4,5), c(6,7,8,9)), heights=c(2,1,1))
+     plot(a)
+     plotmo(a$fit, ycolumn=1, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE)
+     plotmo(a$fit, ycolumn=2, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE)
+     mtext("fda test", outer=TRUE, font=2, line=1.5, cex=1)
+ }
> 
> data(glass)
> set.seed(123)
> samp <- sample(c(1:214), size=100, replace=FALSE)
> glass.train <- glass[samp,]
> glass.test <- glass[-samp,]
> am <- mda(Type ~ ., data=glass.train, method=mars,  keepxy=TRUE, degree=2)
> a <-  mda(Type ~ ., data=glass.train, method=earth, keepxy=TRUE, degree=2, keep.fitted=TRUE)
> printh(am)
=== am
Call:
mda(formula = Type ~ ., data = glass.train, method = mars, keepxy = TRUE, 
    degree = 2)

Dimension: 8 

Percent Between-Group Variance Explained:
    v1     v2     v3     v4     v5     v6     v7     v8 
 44.62  75.74  84.36  91.27  95.96  98.38  99.40 100.00 

Training Misclassification Error: 0.32 ( N = 100 )

Deviance: 151.38 
> printh(a)
=== a
Call:
mda(formula = Type ~ ., data = glass.train, method = earth, keep.fitted = TRUE, 
    keepxy = TRUE, degree = 2)

Dimension: 12 

Percent Between-Group Variance Explained:
    v1     v2     v3     v4     v5     v6     v7     v8     v9    v10    v11 
 74.26  95.64  97.61  98.58  99.12  99.44  99.73  99.90  99.96 100.00 100.00 
   v12 
100.00 

Training Misclassification Error: 0.32 ( N = 100 )

Deviance: 174.79 
> cat("mda with mars  ", attr(confusion(am), "error"), "\n")
mda with mars   0.32 
> cat("mda with earth ", attr(confusion(a),  "error"), "\n")
mda with earth  0.32 
> if (PLOT) {
+     plot(a$fit, caption="mda on glass data")
+     plotmo(a$fit, ycolumn=9, clip=FALSE, ylim=NA, caption="mda on glass data")
+ }
> 
> cat("\n---- update and keepxy, formula interface --------------------------\n")

---- update and keepxy, formula interface --------------------------
> 
> new.trees <- trees + c(1,2,3,4)
> new.trees <- new.trees[, -c(20:23)]
> a.formula <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees)
> cat("\nupdate(a, trace=1)\n")

update(a, trace=1)
> a.formula.1update <- update(a.formula, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Skipped forward pass
Prune method "backward" penalty 2 nprune 5: selected 4 of 5 terms, and 2 of 2 predictors
After backward pass GRSq 0.9589 RSq 0.9737 
> a.formula.1  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees)
> check.models.equal(a.formula.1update, a.formula.1, msg="a1update a1")
check.models.equal identical: a1update a1

> 
> cat("\nupdate(a.formula, data=new.trees, trace=1)\n")

update(a.formula, data=new.trees, trace=1)
> a.formula.2update <- update(a.formula, data=new.trees, trace=1)
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.8162 RSq 0.9183
Prune method "backward" penalty 2 nprune 5: selected 3 of 5 terms, and 2 of 2 predictors
After backward pass GRSq 0.8597 RSq 0.8946 
> a.formula.2  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = new.trees)
> check.models.equal(a.formula.2update, a.formula.2, msg="a2update a2")
check.models.equal identical: a2update a2

> 
> cat("\nupdate(a.formula, wp=2, trace=1)\n")

update(a.formula, wp=2, trace=1)
> a.formula.3update <- update(a.formula, wp=2, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.948 RSq 0.9769
Prune method "backward" penalty 2 nprune 5: selected 4 of 5 terms, and 2 of 2 predictors
After backward pass GRSq 0.9589 RSq 0.9737 
> a.formula.3  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees, wp=2)
> check.models.equal(a.formula.3update, a.formula.3, msg="a3update a3")
check.models.equal identical: a3update a3

> 
> cat("\nupdate(a.formula, subset=subset.new, trace=1)\n")

update(a.formula, subset=subset.new, trace=1)
> subset.new <- rep(TRUE, nrow(trees))
> subset.new[1:4] = FALSE
> a.formula.4update <- update(a.formula, subset=subset.new, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9332 RSq 0.9605
Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9448 RSq 0.9605 
> a.formula.4  <- earth(Volume ~ ., data = trees, subset=subset.new)
> check.models.equal(a.formula.4update, a.formula.4, msg="a4update a4")
check.models.equal identical: a4update a4

> 
> # now use keepxy=TRUE
> 
> a.formula <- earth(Volume ~ ., wp=1, data = trees, keepxy=TRUE)
> 
> cat("\nupdate(a.formula, trace=1)\n")

update(a.formula, trace=1)
> a.formula.5update <- update(a.formula, trace=1)
update.earth: using 31 by 3 data saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Skipped forward pass
Prune method "backward" penalty 2 nprune 5: selected 4 of 5 terms, and 2 of 2 predictors
After backward pass GRSq 0.9589 RSq 0.9737 
> a.formula.5  <- earth(Volume ~ ., wp=1, data = trees, keepxy=TRUE)
> check.models.equal(a.formula.5update, a.formula.5, msg="a5update a5")
check.models.equal identical: a5update a5

> 
> cat("\nupdate(a.formula, data=new.trees, trace=1)\n")

update(a.formula, data=new.trees, trace=1)
> a.formula.6update <- update(a.formula, data=new.trees, trace=1)
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.8162 RSq 0.9183
Prune method "backward" penalty 2 nprune 5: selected 3 of 5 terms, and 2 of 2 predictors
After backward pass GRSq 0.8597 RSq 0.8946 
> a.formula.6  <- earth(Volume ~ ., wp=1, data = new.trees, keepxy=TRUE)
> check.models.equal(a.formula.6update, a.formula.6, msg="a6update a6")
check.models.equal identical: a6update a6

> 
> cat("\nupdate(a.formula, wp=2, trace=1)\n")

update(a.formula, wp=2, trace=1)
> a.formula.7update <- update(a.formula, wp=2, trace=1)
update.earth: using 31 by 3 data saved by keepxy in original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.948 RSq 0.9769
Prune method "backward" penalty 2 nprune 5: selected 4 of 5 terms, and 2 of 2 predictors
After backward pass GRSq 0.9589 RSq 0.9737 
> a.formula.7  <- earth(Volume ~ ., wp=2, data = trees, keepxy=TRUE)
> check.models.equal(a.formula.7update, a.formula.7, msg="a7update a7")
check.models.equal identical: a7update a7

> 
> cat("\n----- update and keepxy, matrix interface--------------------------\n")

----- update and keepxy, matrix interface--------------------------
> 
> Volume <- trees$Volume
> x <- cbind(trees$Height, trees$Volume)
> colnames(x) <- c("Height", "Volume")
> 
> new.x <- cbind(new.trees$Height, new.trees$Volume)
> colnames(new.x) <- c("Height", "Volume")
> 
> a <- earth(x, Volume, subset=rep(TRUE, nrow(trees)))
> cat("\nupdate(a, trace=1)\n")

update(a, trace=1)
> a1update <- update(a, trace=1)
update.earth: using 31 by 2 x argument from original call to earth
update.earth: using 31 by 1 y argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Height, 2=Volume
y is a 31 by 1 matrix: 1=Volume
Skipped forward pass
Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
> a1  <- earth(x, Volume, subset=rep(TRUE, nrow(trees)))
> check.models.equal(a1update, a1, msg="a1update a1")
check.models.equal identical: a1update a1

> 
> cat("\nupdate(a, x=new.x, trace=1)\n")

update(a, x=new.x, trace=1)
> a2update <- update(a, x=new.x, trace=1)
update.earth: using 31 by 1 y argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Height, 2=Volume
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0.000162235 < 0.001)
After forward pass GRSq 0.9915 RSq 0.9954
Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.9937 RSq 0.9953 
> a2  <- earth(new.x, Volume, subset=rep(TRUE, nrow(trees)))
> check.models.equal(a2update, a2, msg="a2update a2")
check.models.equal identical: a2update a2

> 
> cat("\nupdate(a, wp=2, trace=0)\n")

update(a, wp=2, trace=0)
> a3update <- update(a, wp=2, trace=0)
> a3  <- earth(x, Volume, subset=rep(TRUE, nrow(trees)), wp=2)
> check.models.equal(a3update, a3, msg="a3update a3")
check.models.equal identical: a3update a3

> 
> cat("\nupdate(a, subset=subset.new, trace=4)\n")

update(a, subset=subset.new, trace=4)
> subset.new <- rep(TRUE, nrow(trees))
> subset.new[1:4] = FALSE
> a4update <- update(a, subset=subset.new, trace=4)
update.earth: using 31 by 2 x argument from original call to earth
update.earth: using 31 by 1 y argument from original call to earth
Call: earth(x=x, y=Volume, subset=subset.new, trace=4)
x is a 31 by 2 matrix: 1=Height, 2=Volume
First few rows of x are
     Height Volume
[1,]     70   10.3
[2,]     65   10.3
[3,]     63   10.2
[4,]     72   16.4
[5,]     81   18.8
[6,]     83   19.7
y is a 31 by 1 matrix: 1=Volume
First few rows of y are
     Volume
[1,]   10.3
[2,]   10.3
[3,]   10.2
[4,]   16.4
[5,]   18.8
[6,]   19.7
Approximate memory use after expanding x and y matrices: 0.02 MBytes
Forward pass: minspan 5 endspan 12

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    2       Volume        15.6< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
> a4  <- earth(x, Volume, subset=subset.new)
> check.models.equal(a4update, a4, msg="a4update a4")
check.models.equal identical: a4update a4

> 
> # now use keepxy=TRUE
> 
> a <- earth(x, Volume, wp=1, keepxy=TRUE)
> 
> cat("\nupdate(a, trace=4)\n")

update(a, trace=4)
> a5update <- update(a, trace=4)
update.earth: using 31 by 2 x saved by keepxy in original call to earth
update.earth: using 31 by 1 y saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
Call: earth(x=structure(c(70, 65, 63, 72, 81, 83, 66, 75, 80, 75, 
      79, 76, 76, 69, 75, 74, 85, 86, 71, 64, 78, 80, 74, 72, 77, 81, 
      82, 80, 80, 80, 87, 10.3, 10.3, 10.2, 16.4, 18.8, 19.7, 15.6, 
      18.2, 22.6, 19.9, 24.2, 21, 21.4, 21.3, 19.1, 22.2, 33.8, 27.4, 
      25.7, 24.9, 34.5, 31.7, 36.3, 38.3, 42.6, 55.4, 55.7, 58.3, 51.5, 
      51, 77), .Dim=c(31L, 2L), .Dimnames=list(NULL, c("Height", 
      "Volume"))), y=structure(c(10.3, 10.3, 10.2, 16.4, 18.8, 19.7, 
      15.6, 18.2, 22.6, 19.9, 24.2, 21, 21.4, 21.3, 19.1, 22.2, 33.8, etc.
x is a 31 by 2 matrix: 1=Height, 2=Volume
First few rows of x are
     Height Volume
[1,]     70   10.3
[2,]     65   10.3
[3,]     63   10.2
[4,]     72   16.4
[5,]     81   18.8
[6,]     83   19.7
y is a 31 by 1 matrix: 1=Volume
First few rows of y are
     Volume
[1,]   10.3
[2,]   10.3
[3,]   10.2
[4,]   16.4
[5,]   18.8
[6,]   19.7
Skipped forward pass
Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
> a5  <- earth(x, Volume, wp=1, keepxy=TRUE)
> check.models.equal(a5update, a5, msg="a5update a5")
check.models.equal identical: a5update a5

> 
> cat("\nupdate(a, x=new.x, trace=4)\n")

update(a, x=new.x, trace=4)
> a6update <- update(a, x=new.x, trace=4)
update.earth: using 31 by 1 y saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
Call: earth(x=new.x, y=structure(c(10.3, 10.3, 10.2, 16.4, 18.8, 
      19.7, 15.6, 18.2, 22.6, 19.9, 24.2, 21, 21.4, 21.3, 19.1, 22.2, 
      33.8, 27.4, 25.7, 24.9, 34.5, 31.7, 36.3, 38.3, 42.6, 55.4, 55.7, 
      58.3, 51.5, 51, 77), .Dim=structure(c(31L, 1L), .Names=c("nrow", 
      "ncol")), .Dimnames=list(NULL, "Volume")), wp=1, trace=4, 
      keepxy=TRUE)
x is a 31 by 2 matrix: 1=Height, 2=Volume
First few rows of x are
     Height Volume
[1,]     74   13.3
[2,]     66   14.3
[3,]     65   11.2
[4,]     75   18.4
[5,]     85   21.8
[6,]     84   23.7
y is a 31 by 1 matrix: 1=Volume
First few rows of y are
     Volume
[1,]   10.3
[2,]   10.3
[3,]   10.2
[4,]   16.4
[5,]   18.8
[6,]   19.7
Approximate memory use after expanding x and y matrices: 0.02 MBytes
Forward pass: minspan 5 endspan 12

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.9937 0.9953       0.9953    2       Volume        25.6  2   3   
4      0.9915 0.9954    0.0001622    1       Height          80  4   5   reject term

Reached delta RSq threshold (DeltaRSq 0.000162235 < 0.001)
After forward pass GRSq 0.9915 RSq 0.9954
Forward pass complete: 3 terms

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.9422  0.9496     0.9422      1  1 2
chosen    3      0.9937  0.9953     0.0515      1  1 2 3

Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.9937 RSq 0.9953 
> a6  <- earth(new.x, Volume, wp=1, keepxy=TRUE)
> check.models.equal(a6update, a6, msg="\"allowed\" function a6update a6")
check.models.equal identical: "allowed" function a6update a6

> 
> cat("\nupdate(a, wp=2)\n")

update(a, wp=2)
> a7update <- update(a, wp=2)
> a7  <- earth(x, Volume, wp=2, keepxy=TRUE)
> check.models.equal(a7update, a7, msg="\"allowed\" function a7update a7")
check.models.equal identical: "allowed" function a7update a7

> 
> cat("--- \"allowed\" argument -----------------\n")
--- "allowed" argument -----------------
> 
> example1  <- function(degree, pred, parents)
+ {
+     pred != 2  # disallow predictor 2, which is "Height"
+ }
> a1 <- earth(Volume ~ ., data = trees, allowed = example1)
> printh(summary(a1))
=== summary(a1)
Call: earth(formula=Volume~., data=trees, allowed=example1)

               Volume
(Intercept)   24.7531
h(Girth-12.9)  6.1460
h(12.9-Girth) -3.1319

Selected 3 of 3 terms, and 1 of 2 predictors 
Importance: Girth, Height-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 15.896    RSS 346.64    GRSq 0.94307    RSq 0.95724
> 
> example1a  <- function(degree, pred, parents, namesx)
+ {
+     namesx[pred] != "Height"  # disallow "Height"
+ }
> a1a <- earth(Volume ~ ., data = trees, allowed = example1a)
> check.models.equal(a1, a1a, msg="\"allowed\" function a1 a1a")
check.models.equal identical: "allowed" function a1 a1a

> 
> iheight <- 0
> example1b  <- function(degree, pred, parents, namesx, first)
+ {
+     if (first) {
+         iheight <<- which(namesx == "Height") # note use of <<- not <-
+         if (length(iheight) != 1)
+             stop("could not find Height in ", paste(namesx, collapse=" "))
+     }
+     pred != iheight
+ }
> a1b <- earth(Volume ~ ., data = trees, allowed = example1b)
> check.models.equal(a1, a1a, msg="\"allowed\" function a1 a1b")
check.models.equal identical: "allowed" function a1 a1b

> 
> example2 <- function(degree, pred, parents)
+ {
+     # disallow humidity in terms of degree > 1
+     # 3 is the "humidity" column in the input matrix
+     if (degree > 1 && (pred == 3 || parents[3]))
+         return(FALSE)
+     TRUE
+ }
> a2 <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example2)
> printh(summary(a2))
=== summary(a2)
Call: earth(formula=O3~., data=ozone1, degree=2, allowed=example2)

                               O3
(Intercept)              14.80925
h(vh-5860)                0.26254
h(5860-vh)               -0.01589
h(temp-58)                0.52620
h(ibh-1108)              -0.00050
h(dpg-10)                -0.07556
h(10-dpg)                -0.05680
h(150-vis)                0.05031
h(92-doy)                -0.12802
h(doy-159)               -0.02992
h(vh-5860) * h(dpg- -15) -0.00386
h(vh-5860) * h(-15-dpg)  -0.00936
h(temp-58) * h(dpg-54)   -0.01830
h(temp-58) * h(54-dpg)   -0.00451
h(temp-72) * h(150-vis)  -0.00412
h(72-temp) * h(150-vis)  -0.00125

Selected 16 of 20 terms, and 6 of 9 predictors 
Importance: temp, doy, dpg, vis, vh, ibh, wind-unused, humidity-unused, ibt-unused
Number of terms at each degree of interaction: 1 9 6
GCV 15.195    RSS 3912.6    GRSq 0.76397    RSq 0.8147
> example3 <- function(degree, pred, parents)
+ {
+     # allow only humidity and temp in terms of degree > 1
+     # 3 and 4 are the "humidity" and "temp" columns
+     allowed.set = c(3,4)
+     if (degree > 1 && (all(pred != allowed.set) || any(parents[-allowed.set])))
+         return(FALSE)
+     TRUE
+ }
> a3 <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example3)
> printh(summary(a3))
=== summary(a3)
Call: earth(formula=O3~., data=ozone1, degree=2, allowed=example3)

                                  O3
(Intercept)                 12.27813
h(5860-vh)                  -0.01315
h(wind-6)                   -0.57372
h(temp-58)                   0.25970
h(1108-ibh)                 -0.00276
h(dpg-10)                   -0.09912
h(10-dpg)                   -0.06740
h(ibt-116)                   0.04478
h(200-vis)                   0.01804
h(doy-92)                    0.04321
h(92-doy)                   -0.10567
h(doy-149)                  -0.08024
h(55-humidity) * h(temp-58) -0.01745

Selected 13 of 20 terms, and 9 of 9 predictors 
Importance: temp, vis, doy, dpg, humidity, vh, ibh, ibt, wind
Number of terms at each degree of interaction: 1 11 1
GCV 13.895    RSS 3764.4    GRSq 0.78415    RSq 0.82172
> 
> ihumidity <- 0
> itemp <- 0
> example3a  <- function(degree, pred, parents, namesx, first)
+ {
+     if (first) {
+         ihumidity <<- which(namesx == "humidity") # note use of <<- not <-
+         if (length(ihumidity) != 1)
+             stop("could not find humidity in ", paste(namesx, collapse=" "))
+         itemp <<- which(namesx == "temp") # note use of <<- not <-
+         if (length(itemp) != 1)
+             stop("could not find temp in ", paste(namesx, collapse=" "))
+     }
+     # allow only humidity and temp in terms of degree > 1
+     allowed.set = c(ihumidity, itemp)
+     if (degree > 1 && (all(pred != allowed.set) || any(parents[-allowed.set])))
+         return(FALSE)
+     TRUE
+ }
> a3a <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example3)
> check.models.equal(a3, a3a, msg="\"allowed\" function a3 a3a")
check.models.equal identical: "allowed" function a3 a3a

> 
> # "allowed" function checks, these check error handling by forcing an error
> 
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = 99))
Error in check.allowed.arg(allowed) : 
  your "allowed" argument is not a function
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example7  <- function(degree, pred) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example7))
Error : your "allowed" function does not have the correct number of arguments
  The "allowed" function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example8  <- function(degree, pred, parents99) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example8))
Error :   The "allowed" function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
  You have:
      degree pred parents99
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example9  <- function(degree, pred, parents, namesx99) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example9))
Error :   The "allowed" function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
  You have:
      degree pred parents namesx99
> if (class(z) != "try-error")
+     stop("test failed")
> 
> cat("--- beta cache -------------------------\n")
--- beta cache -------------------------
> 
> a1 <- earth(O3 ~ ., data = ozone1, degree = 3)
> a2 <- earth(O3 ~ ., data = ozone1, degree = 3, Use.beta.cache=FALSE)
> a1$call <- NULL
> a2$call <- NULL
> stopifnot(identical(a1, a2))
> 
> cat("--- test \"call\" printing in earth.default and summary.earth ---\n")
--- test "call" printing in earth.default and summary.earth ---
> # we want to make sure that long x or y aren't printed but short ones are
> 
> x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> a <- earth(x = x, y=y, trace=4)
Call: earth(x=x, y=y, trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 7 endspan 13

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> a.longx  <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y=y,
+                   trace=4)
Call: earth(x="[102, 1]-too-long-to-display", y=y, trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 7 endspan 13

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> a.longy  <- earth(x = x,
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: earth(x=x, y="[102, 1]-too-long-to-display", trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 7 endspan 13

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> a.longxy <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: earth(x="[102, 1]-too-long-to-display", y="[102, 1]-too-long-to-display", 
      trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 7 endspan 13

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> printh(summary(a))
=== summary(a)
Call: earth(x=x, y=y, trace=4)

                     y
(Intercept) -9.894e-16
x            1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> printh(summary(a.longx))
=== summary(a.longx)
Call: earth(x="[102, 1]-too-long-to-display", y=y, trace=4)

                     y
(Intercept) -9.894e-16
x            1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> printh(summary(a.longy))
=== summary(a.longy)
Call: earth(x=x, y="[102, 1]-too-long-to-display", trace=4)

                     y
(Intercept) -9.894e-16
x            1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> printh(summary(a.longxy))
=== summary(a.longxy)
Call: earth(x="[102, 1]-too-long-to-display", y="[102, 1]-too-long-to-display", 
      trace=4)

                     y
(Intercept) -9.894e-16
x            1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> 
> cat("--- factors with x,y interface -------------------------\n")
--- factors with x,y interface -------------------------
> # this also tests for integer variables in the input matrix
> data(etitanic)
> attach(etitanic)
> a1 <- earth(pclass, sex, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 2 matrix: 1=2nd, 2=3rd
y is a 1046 by 1 matrix: 1=sex
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0133 0.0180      0.01797    2          3rd           0< 2       
4      0.0116 0.0210     0.003025    1          2nd           0< 3       
6      0.0068 0.0210            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.006792 RSq 0.021
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 2 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.01326 RSq 0.01797 
> printh(summary(a1))
=== summary(a1)
Call: earth(x=pclass, y=sex, trace=2, degree=2)

                sex
(Intercept) 0.56697
3rd         0.12963

Selected 2 of 3 terms, and 1 of 2 predictors 
Importance: 3rd, 2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.23069    RSS 239.69    GRSq 0.013257    RSq 0.017973
> if (PLOT)
+     plot(a1)
> a2 <- earth(sex, pclass, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 1 matrix: 1=sex
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0073 0.0120      0.01202    1          sex           0< 2       
4      0.0025 0.0120            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.002501 RSq 0.01202
Forward pass complete: 3 terms (2 terms used)
Prune method "backward" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.00728 RSq 0.01202 
> printh(summary(a2))
=== summary(a2)
Call: earth(x=sex, y=pclass, trace=2, degree=2)

                 1st       2nd     3rd
(Intercept)  0.34278  0.265464 0.39175
sex         -0.11330 -0.025342 0.13864

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: sex
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq        RSq
1st 0.19611 203.76  0.0104150 0.01514418
2nd 0.18837 195.72 -0.0039978 0.00080028
3rd 0.24672 256.35  0.0132572 0.01797283
All 0.63120 655.82  0.0072798 0.01202394
> if (PLOT)
+     plot(a2)
> a3 <- earth(pclass, age, degree=2, trace=2)        # x=unordered y=numeric
x is a 1046 by 2 matrix: 1=2nd, 2=3rd
y is a 1046 by 1 matrix: 1=age
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.1094 0.1136       0.1136    2          3rd           0< 2       
4      0.1640 0.1720      0.05838    1          2nd           0< 3       
6      0.1600 0.1720            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.16 RSq 0.172
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.164 RSq 0.172 
> printh(summary(a3))
=== summary(a3)
Call: earth(x=pclass, y=age, trace=2, degree=2)

                 age
(Intercept)  39.1599
2nd          -9.6532
3rd         -14.3436

Selected 3 of 3 terms, and 2 of 2 predictors 
Importance: 3rd, 2nd
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 173.84    RSS 179758    GRSq 0.16401    RSq 0.17199
> if (PLOT)
+     plot(a3)
> a4 <- earth(age, pclass, degree=2, trace=2)        # x=numeric y=unordered
x is a 1046 by 1 matrix: 1=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    1          age          26  2   3   
4      0.0891 0.1021     0.004178    1          age          55  4       
6      0.0881 0.1055     0.003357    1          age          16  5       
8      0.0849 0.1067      0.00116    1          age          44  6       
10     0.0813 0.1075    0.0008104    1          age          48  7       reject term

Reached delta RSq threshold (DeltaRSq 0.000810417 < 0.001)
After forward pass GRSq 0.08129 RSq 0.1075
Forward pass complete: 9 terms (6 terms used)
Prune method "backward" penalty 3 nprune 6: selected 2 of 6 terms, and 1 of 1 predictors
After backward pass GRSq 0.09302 RSq 0.09735 
> printh(summary(a4))
=== summary(a4)
Call: earth(x=age, y=pclass, trace=2, degree=2)

                 1st         2nd       3rd
(Intercept) 0.064394  0.25633356  0.679272
h(age-16)   0.013886 -0.00045667 -0.013429

Selected 2 of 6 terms, and 1 of 1 predictors 
Importance: age
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq       RSq
1st 0.16700 173.52  0.1572778 0.1613052
2nd 0.18849 195.84 -0.0046167 0.0001843
3rd 0.22120 229.82  0.1153475 0.1195752
All 0.57668 599.18  0.0930171 0.0973516
> if (PLOT)
+     plot(a4)
> a5 <- earth(etitanic[,c(2:4)], pclass, degree=2, trace=2)  # x=mixed  y=unordered
x is a 1046 by 3 matrix: 1=survived, 2=sexmale, 3=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    3          age          26  2   3   
4      0.1500 0.1622       0.0642    1     survived           0< 4       
6      0.1557 0.1758      0.01364    3          age          16  5   6   4   
8      0.1603 0.1842     0.008445    2      sexmale           0< 7       4   
10     0.1631 0.1909     0.006652    2      sexmale           0< 8       
12     0.1616 0.1934     0.002532    3          age          56  9       
14     0.1598 0.1956     0.002142    2      sexmale           0< 10      2   
16     0.1532 0.1971      0.00157    3          age          55  11  12  10  
18     0.1497 0.1978    0.0006704    3          age          44  13      reject term

Reached delta RSq threshold (DeltaRSq 0.000670385 < 0.001)
After forward pass GRSq 0.1497 RSq 0.1978
Forward pass complete: 17 terms (12 terms used)
Prune method "backward" penalty 3 nprune 12: selected 9 of 12 terms, and 3 of 3 predictors
After backward pass GRSq 0.1631 RSq 0.1949 
> printh(summary(a5))
=== summary(a5)
Call: earth(x=etitanic[, c(2:4)], y=pclass, trace=2, degree=2)

                           1st        2nd       3rd
(Intercept)          -0.019851  0.2290093  0.790842
survived              0.364266  0.1589838 -0.523250
h(age-26)             0.015422 -0.0069111 -0.008511
h(26-age)            -0.000623 -0.0157462  0.016369
survived * sexmale   -0.082755 -0.3087717  0.391527
survived * h(16-age) -0.021344  0.0389664 -0.017623
sexmale * h(age-26)   0.006189  0.0075511 -0.013740
sexmale * h(age-55)  -0.025753 -0.0020029  0.027756
sexmale * h(55-age)   0.001858  0.0028773 -0.004736

Selected 9 of 12 terms, and 3 of 3 predictors 
Importance: age, survived, sexmale
Number of terms at each degree of interaction: 1 3 5

        GCV    RSS     GRSq      RSq
1st 0.15056 151.23 0.240231 0.269034
2nd 0.18457 185.39 0.016226 0.053522
3rd 0.19697 197.84 0.212247 0.242111
All 0.53211 534.46 0.163127 0.194854
> if (PLOT)
+     plot(a5)
> a6 <- earth(etitanic[,c(1,3,4,5,6)], survived, degree=2, trace=2)  # x=mixed y=unordered
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=survived
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.2860 0.2894       0.2894    3      sexmale           0< 2       
4      0.3297 0.3361      0.04669    2    pclass3rd           0< 3       
6      0.3588 0.3710      0.03488    4          age          16  4   5   2   
8      0.3962 0.4106      0.03954    1    pclass2nd           0< 6       2   
10     0.4143 0.4338       0.0232    5        sibsp           4  7   8   4   
12     0.4133 0.4383     0.004574    6        parch           1  9   10  
14     0.4150 0.4427      0.00437    2    pclass3rd           0< 11      2   
16     0.4116 0.4449     0.002169    5        sibsp           1  12  13  2   
18     0.4108 0.4469     0.002011    1    pclass2nd           0< 14      13  
20     0.4067 0.4485     0.001649    4          age          63  15  16  

Reached max number of terms 21
After forward pass GRSq 0.4067 RSq 0.4485
Forward pass complete: 21 terms (16 terms used)
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4221 RSq 0.4441 
> printh(summary(a6))
=== summary(a6)
Call: earth(x=etitanic[, c(1, 3, 4, 5, 6)], y=survived, trace=2, 
      degree=2)

                        survived
(Intercept)             0.857135
pclass3rd              -0.868585
sexmale                -0.595825
h(63-age)               0.003532
pclass2nd * sexmale    -0.156493
pclass2nd * h(1-parch) -0.128372
pclass3rd * sexmale     0.237718
pclass3rd * h(4-sibsp)  0.104077
sexmale * h(16-age)     0.036498

Selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
GCV 0.13986    RSS 140.48    GRSq 0.42215    RSq 0.44405
> if (PLOT)
+     plot(a6)
> a7 <- earth(etitanic[,c(2,3,5,6)], etitanic[,c(1,4)], degree=2, trace=2)  # x=mixed y=mixed
x is a 1046 by 4 matrix: 1=survived, 2=sexmale, 3=sibsp, 4=parch
y is a 1046 by 4 matrix: 1=pclass1st, 2=pclass2nd, 3=pclass3rd, 4=age
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0813 0.0901      0.09011    4        parch           2  2   3   
4      0.1049 0.1219      0.03183    3        sibsp           1  4   5   
6      0.1068 0.1323      0.01034    4        parch           1  6   7   4   
8      0.1085 0.1381     0.005851    4        parch           3  8       
10     0.1093 0.1431     0.004932    3        sibsp           2  9       
12     0.1042 0.1465     0.003484    4        parch           1  10  11  5   
14     0.1024 0.1490     0.002449    2      sexmale           0< 12      3   
16     0.0997 0.1506     0.001629    1     survived           0< 13      4   
18     0.0971 0.1524     0.001744    1     survived           0< 14      10  
20     0.0902 0.1543     0.001933    3        sibsp           1  15  16  2   

Reached max number of terms 21
After forward pass GRSq 0.09017 RSq 0.1543
Forward pass complete: 21 terms (16 terms used)
Prune method "backward" penalty 3 nprune 16: selected 8 of 16 terms, and 2 of 4 predictors
After backward pass GRSq 0.1125 RSq 0.1419 
> printh(summary(a7))
=== summary(a7)
Call: earth(x=etitanic[, c(2, 3, 5, 6)], y=etitanic[, c(1, 4)], 
      trace=2, degree=2)

                        pclass1st pclass2nd pclass3rd      age
(Intercept)              0.367592  0.341480  0.290928  22.8228
h(sibsp-1)              -0.104673 -0.031749  0.136421 -13.2263
h(sibsp-2)              -0.040808 -0.076671  0.117479   9.1566
h(parch-2)              -0.058341 -0.027418  0.085760  18.7475
h(2-parch)              -0.048621 -0.047629  0.096250   4.5986
h(parch-3)              -0.050441 -0.126271  0.176712 -18.6861
h(sibsp-1) * h(parch-1)  0.056197 -0.014339 -0.041858   3.4196
h(sibsp-1) * h(1-parch)  0.048915  0.064819 -0.113734  11.1807

Selected 8 of 16 terms, and 2 of 4 predictors 
Importance: sibsp, parch, survived-unused, sexmale-unused
Number of terms at each degree of interaction: 1 5 2

               GCV      RSS      GRSq      RSq
pclass1st   0.2014    203.2 -0.016149 0.017600
pclass2nd   0.1904    192.2 -0.014944 0.018765
pclass3rd   0.2449    247.2  0.020667 0.053192
age       184.4896 186210.4  0.112808 0.142274
All       185.1263 186853.0  0.112460 0.141937
> if (PLOT)
+     plot(a7)
> 
> cat("--- factors with formula interface -------------------------\n")
--- factors with formula interface -------------------------
> # these correspond to the models above (except a7 which is a multiple response model)
> a1f <- earth(sex ~ pclass, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 2 matrix: 1=pclass2nd, 2=pclass3rd
y is a 1046 by 1 matrix: 1=male
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0133 0.0180      0.01797    2    pclass3rd           0< 2       
4      0.0116 0.0210     0.003025    1    pclass2nd           0< 3       
6      0.0068 0.0210            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.006792 RSq 0.021
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 2 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.01326 RSq 0.01797 
> printh(summary(a1f))
=== summary(a1f)
Call: earth(formula=sex~pclass, trace=2, degree=2)

               male
(Intercept) 0.56697
pclass3rd   0.12963

Selected 2 of 3 terms, and 1 of 2 predictors 
Importance: pclass3rd, pclass2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.23069    RSS 239.69    GRSq 0.013257    RSq 0.017973
> if (PLOT)
+     plot(a1f)
> a2f <- earth(pclass ~ sex, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 1 matrix: 1=sexmale
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0073 0.0120      0.01202    1      sexmale           0< 2       
4      0.0025 0.0120            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.002501 RSq 0.01202
Forward pass complete: 3 terms (2 terms used)
Prune method "backward" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.00728 RSq 0.01202 
> printh(summary(a2f))
=== summary(a2f)
Call: earth(formula=pclass~sex, trace=2, degree=2)

                 1st       2nd     3rd
(Intercept)  0.34278  0.265464 0.39175
sexmale     -0.11330 -0.025342 0.13864

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: sexmale
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq        RSq
1st 0.19611 203.76  0.0104150 0.01514418
2nd 0.18837 195.72 -0.0039978 0.00080028
3rd 0.24672 256.35  0.0132572 0.01797283
All 0.63120 655.82  0.0072798 0.01202394
> if (PLOT)
+     plot(a2f)
> a3f <- earth(age ~ pclass, degree=2, trace=2)        # x=unordered y=numeric
x is a 1046 by 2 matrix: 1=pclass2nd, 2=pclass3rd
y is a 1046 by 1 matrix: 1=age
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.1094 0.1136       0.1136    2    pclass3rd           0< 2       
4      0.1640 0.1720      0.05838    1    pclass2nd           0< 3       
6      0.1600 0.1720            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.16 RSq 0.172
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.164 RSq 0.172 
> printh(summary(a3f))
=== summary(a3f)
Call: earth(formula=age~pclass, trace=2, degree=2)

                 age
(Intercept)  39.1599
pclass2nd    -9.6532
pclass3rd   -14.3436

Selected 3 of 3 terms, and 2 of 2 predictors 
Importance: pclass3rd, pclass2nd
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 173.84    RSS 179758    GRSq 0.16401    RSq 0.17199
> if (PLOT)
+     plot(a3f)
> a4f <- earth(pclass ~ age, degree=2, trace=2)        # x=numeric y=unordered
x is a 1046 by 1 matrix: 1=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    1          age          26  2   3   
4      0.0891 0.1021     0.004178    1          age          55  4       
6      0.0881 0.1055     0.003357    1          age          16  5       
8      0.0849 0.1067      0.00116    1          age          44  6       
10     0.0813 0.1075    0.0008104    1          age          48  7       reject term

Reached delta RSq threshold (DeltaRSq 0.000810417 < 0.001)
After forward pass GRSq 0.08129 RSq 0.1075
Forward pass complete: 9 terms (6 terms used)
Prune method "backward" penalty 3 nprune 6: selected 2 of 6 terms, and 1 of 1 predictors
After backward pass GRSq 0.09302 RSq 0.09735 
> printh(summary(a4f))
=== summary(a4f)
Call: earth(formula=pclass~age, trace=2, degree=2)

                 1st         2nd       3rd
(Intercept) 0.064394  0.25633356  0.679272
h(age-16)   0.013886 -0.00045667 -0.013429

Selected 2 of 6 terms, and 1 of 1 predictors 
Importance: age
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq       RSq
1st 0.16700 173.52  0.1572778 0.1613052
2nd 0.18849 195.84 -0.0046167 0.0001843
3rd 0.22120 229.82  0.1153475 0.1195752
All 0.57668 599.18  0.0930171 0.0973516
> if (PLOT)
+     plot(a4f)
> a5f <- earth(pclass ~ survived + sex + age, data=etitanic, degree=2, trace=2)  # x=mixed y=unordered
x is a 1046 by 3 matrix: 1=survived, 2=sexmale, 3=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    3          age          26  2   3   
4      0.1500 0.1622       0.0642    1     survived           0< 4       
6      0.1557 0.1758      0.01364    3          age          16  5   6   4   
8      0.1603 0.1842     0.008445    2      sexmale           0< 7       4   
10     0.1631 0.1909     0.006652    2      sexmale           0< 8       
12     0.1616 0.1934     0.002532    3          age          56  9       
14     0.1598 0.1956     0.002142    2      sexmale           0< 10      2   
16     0.1532 0.1971      0.00157    3          age          55  11  12  10  
18     0.1497 0.1978    0.0006704    3          age          44  13      reject term

Reached delta RSq threshold (DeltaRSq 0.000670385 < 0.001)
After forward pass GRSq 0.1497 RSq 0.1978
Forward pass complete: 17 terms (12 terms used)
Prune method "backward" penalty 3 nprune 12: selected 9 of 12 terms, and 3 of 3 predictors
After backward pass GRSq 0.1631 RSq 0.1949 
> printh(summary(a5f))
=== summary(a5f)
Call: earth(formula=pclass~survived+sex+age, data=etitanic, 
      trace=2, degree=2)

                           1st        2nd       3rd
(Intercept)          -0.019851  0.2290093  0.790842
survived              0.364266  0.1589838 -0.523250
h(age-26)             0.015422 -0.0069111 -0.008511
h(26-age)            -0.000623 -0.0157462  0.016369
survived * sexmale   -0.082755 -0.3087717  0.391527
survived * h(16-age) -0.021344  0.0389664 -0.017623
sexmale * h(age-26)   0.006189  0.0075511 -0.013740
sexmale * h(age-55)  -0.025753 -0.0020029  0.027756
sexmale * h(55-age)   0.001858  0.0028773 -0.004736

Selected 9 of 12 terms, and 3 of 3 predictors 
Importance: age, survived, sexmale
Number of terms at each degree of interaction: 1 3 5

        GCV    RSS     GRSq      RSq
1st 0.15056 151.23 0.240231 0.269034
2nd 0.18457 185.39 0.016226 0.053522
3rd 0.19697 197.84 0.212247 0.242111
All 0.53211 534.46 0.163127 0.194854
> if (PLOT)
+     plot(a5f)
> a6f <- earth(survived ~ ., data=etitanic, degree=2, trace=2)  # x=mixed y=unordered
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=survived
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.2860 0.2894       0.2894    3      sexmale           0< 2       
4      0.3297 0.3361      0.04669    2    pclass3rd           0< 3       
6      0.3588 0.3710      0.03488    4          age          16  4   5   2   
8      0.3962 0.4106      0.03954    1    pclass2nd           0< 6       2   
10     0.4143 0.4338       0.0232    5        sibsp           4  7   8   4   
12     0.4133 0.4383     0.004574    6        parch           1  9   10  
14     0.4150 0.4427      0.00437    2    pclass3rd           0< 11      2   
16     0.4116 0.4449     0.002169    5        sibsp           1  12  13  2   
18     0.4108 0.4469     0.002011    1    pclass2nd           0< 14      13  
20     0.4067 0.4485     0.001649    4          age          63  15  16  

Reached max number of terms 21
After forward pass GRSq 0.4067 RSq 0.4485
Forward pass complete: 21 terms (16 terms used)
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4221 RSq 0.4441 
> printh(summary(a6f))
=== summary(a6f)
Call: earth(formula=survived~., data=etitanic, trace=2, degree=2)

                        survived
(Intercept)             0.857135
pclass3rd              -0.868585
sexmale                -0.595825
h(63-age)               0.003532
pclass2nd * sexmale    -0.156493
pclass2nd * h(1-parch) -0.128372
pclass3rd * sexmale     0.237718
pclass3rd * h(4-sibsp)  0.104077
sexmale * h(16-age)     0.036498

Selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
GCV 0.13986    RSS 140.48    GRSq 0.42215    RSq 0.44405
> if (PLOT)
+     plot(a6f)
> detach(etitanic)
> 
> # basic test with ordered factors
> ff <- factor(substring("statistics", 1:10, 1:10), levels=letters, ordered=TRUE)
> ff <- c(ff, ff, ff)
> vowels = (ff == 1 | ff == 9) * 3
> printh(head(ff))
=== head(ff)
[1] 19 20  1 20  9 19
> printh(head(vowels))
=== head(vowels)
[1] 0 0 3 0 3 0
> a8 <- earth(ff, vowels, degree=1, trace=2)        # x=ordered y=numeric
x is a 30 by 1 matrix: 1=ff
y is a 30 by 1 matrix: 1=vowels
Forward pass: minspan 5 endspan 12

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.2907 0.4729       0.4729    1           ff          19  2   3   
4      0.1620 0.4729            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.162 RSq 0.4729
Forward pass complete: 3 terms
Prune method "backward" penalty 2 nprune 3: selected 2 of 3 terms, and 1 of 1 predictors
After backward pass GRSq 0.3809 RSq 0.4634 
> printh(summary(a8))
=== summary(a8)
Call: earth(x=ff, y=vowels, trace=2, degree=1)

             vowels
(Intercept) 0.17690
h(19-ff)    0.13391

Selected 2 of 3 terms, and 1 of 1 predictors 
Importance: ff
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 1.2522    RSS 30.428    GRSq 0.38091    RSq 0.46336
> if (PLOT)
+     plot(a8)
> a9 <- earth(vowels, ff, degree=1, trace=2)        # x=numeric y=ordered
x is a 30 by 1 matrix: 1=vowels
y is a 30 by 1 matrix: 1=ff
Forward pass: minspan 5 endspan 12

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.3877 0.4693       0.4693    1       vowels           0< 2       
4      0.2858 0.4693            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.2858 RSq 0.4693
Forward pass complete: 3 terms (2 terms used)
Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.3877 RSq 0.4693 
> if (PLOT)
+     plot(a9)
> printh(summary(a9))
=== summary(a9)
Call: earth(x=vowels, y=ff, trace=2, degree=1)

                 ff
(Intercept) 17.1429
vowels      -3.6032

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: vowels
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 34.262    RSS 832.57    GRSq 0.38772    RSq 0.46926
> 
> cat("--- wp argument---------------------------------\n")
--- wp argument---------------------------------
> set.seed(79)
> NWP <- 100
> x1 <- runif(NWP)
> x2 <- runif(NWP)
> y1 <- (x1 > .5) + .3 * runif(1)
> y2 <- sin(3 * x2) + .3 * runif(1)
> myw <- 10
> m <- mars(cbind(x1,x2), cbind(y1, y2))
> me1 <- mars.to.earth(m)
Converted mars(x=cbind(x1, x2), y=cbind(y1, y2))
to        earth(x=cbind(x1, x2), y=cbind(y1, y2))
> printh(me1)
=== me1
Selected 7 of 11 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

           GCV      RSS    GRSq     RSq
y1  0.02433520 1.841932 0.90460 0.92632
y2  0.00084028 0.063601 0.99177 0.99365
All 0.02517549 1.905532 0.92986 0.94583
> e1 <- earth(cbind(x1,x2), cbind(y1, y2))
> printh(e1)
=== e1
Selected 7 of 10 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

           GCV      RSS    GRSq    RSq
y1  0.02123708 1.607434 0.91674 0.9357
y2  0.00087336 0.066104 0.99145 0.9934
All 0.02211043 1.673539 0.93810 0.9522
> e2 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(1,1))
> printh(e2)
=== e2
Selected 7 of 10 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

           GCV      RSS    GRSq    RSq
y1  0.02123708 1.607434 0.91674 0.9357
y2  0.00087336 0.066104 0.99145 0.9934
All 0.02211043 1.673539 0.93810 0.9522
> e1$call <- NULL
> e2$call <- NULL
> stopifnot(identical(e1, e2))
> e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(.001,1))
> printh(e3)
=== e3
Selected 7 of 8 terms, and 2 of 2 predictors 
Importance: x2, x1
Number of terms at each degree of interaction: 1 6 (additive model)

          GCV     RSS    GRSq     RSq
y1  0.0587145 4.44410 0.76982 0.82224
y2  0.0001464 0.01108 0.99857 0.99889
All 0.0004098 0.03102 0.99800 0.99845
> wp <- c(1, 2)
> e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=wp)
> printh(e3)
=== e3
Selected 7 of 10 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

           GCV      RSS    GRSq     RSq
y1  0.02123708 1.607434 0.91674 0.93570
y2  0.00087336 0.066104 0.99145 0.99340
All 0.01532253 1.159762 0.94996 0.96136
> m3 <- mars(cbind(x1,x2), cbind(y1, y2),  wp=wp)
> cat("response weights: wp", wp, "earth gcv", e3$gcv, 
+     "mars gcv", m3$gcv, "mars gcv*length(wp)", 
+     m3$gcv * length(wp), "\n")
response weights: wp 1 2 earth gcv 0.015323 mars gcv 0.008665 mars gcv*length(wp) 0.01733 
> 
> e4 <- earth(cbind(O3, O3) ~ ., data=ozone1, wp=c(1, .01))
> printh(e4) # both sub models should be the same
=== e4
Selected 12 of 20 terms, and 9 of 9 predictors 
Importance: temp, humidity, dpg, doy, vh, vis, ibt, ibh, wind
Number of terms at each degree of interaction: 1 11 (additive model)

        GCV    RSS    GRSq     RSq
O3   14.590 4166.9 0.77336 0.80266
O3.1 14.590 4166.9 0.77336 0.80266
All  29.180 8333.8 0.77336 0.80266
> printh(summary(e4))
=== summary(e4)
Call: earth(formula=cbind(O3, O3)~., data=ozone1, wp=c(1, 0.01))

                     O3     O3.1
(Intercept)    13.99702 13.99702
h(5860-vh)     -0.01378 -0.01378
h(wind-3)      -0.34494 -0.34494
h(55-humidity) -0.13130 -0.13130
h(temp-58)      0.27810  0.27810
h(1108-ibh)    -0.00330 -0.00330
h(dpg-10)      -0.09981 -0.09981
h(ibt-121)      0.03250  0.03250
h(150-vis)      0.02322  0.02322
h(doy-92)       0.04134  0.04134
h(92-doy)      -0.11683 -0.11683
h(doy-159)     -0.08480 -0.08480

Selected 12 of 20 terms, and 9 of 9 predictors 
Importance: temp, humidity, dpg, doy, vh, vis, ibt, ibh, wind
Number of terms at each degree of interaction: 1 11 (additive model)

        GCV    RSS    GRSq     RSq
O3   14.590 4166.9 0.77336 0.80266
O3.1 14.590 4166.9 0.77336 0.80266
All  29.180 8333.8 0.77336 0.80266
> 
> # wp with formula interface
> e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(1, 1))
> printh(e5)
=== e5
Selected 12 of 19 terms, and 8 of 8 predictors 
Importance: temp, humidity, dpg, doy, vh, vis, ibh, ibt
Number of terms at each degree of interaction: 1 11 (additive model)

        GCV     RSS    GRSq     RSq
O3   14.913 4259.08 0.76835 0.79829
wind  3.487  995.91 0.22427 0.32454
All  18.400 5254.98 0.73284 0.76737
> printh(summary(e5))
=== summary(e5)
Call: earth(formula=cbind(O3, wind)~., data=ozone1, wp=c(1, 
      1))

                     O3     wind
(Intercept)    10.16260  5.79753
h(vh-5590)      0.01935 -0.00623
h(5590-vh)     -0.02016  0.01311
h(55-humidity) -0.14944  0.01247
h(temp-57)      0.27884  0.04360
h(1108-ibh)    -0.00324 -0.00090
h(dpg-13)      -0.09390  0.00310
h(ibt-121)      0.03205 -0.00336
h(150-vis)      0.02104  0.00015
h(92-doy)      -0.14159 -0.01199
h(doy-159)     -0.04354  0.00733
h(doy-295)      0.03291 -0.05270

Selected 12 of 19 terms, and 8 of 8 predictors 
Importance: temp, humidity, dpg, doy, vh, vis, ibh, ibt
Number of terms at each degree of interaction: 1 11 (additive model)

        GCV     RSS    GRSq     RSq
O3   14.913 4259.08 0.76835 0.79829
wind  3.487  995.91 0.22427 0.32454
All  18.400 5254.98 0.73284 0.76737
> e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(.3, 1))
> printh(e5)
=== e5
Selected 11 of 19 terms, and 7 of 8 predictors 
Importance: temp, ibh, doy, humidity, dpg, vh, vis, ibt-unused
Number of terms at each degree of interaction: 1 10 (additive model)

         GCV     RSS    GRSq     RSq
O3   15.2418 4410.02 0.76324 0.79115
wind  3.3972  982.95 0.24424 0.33333
All  12.2612 3547.62 0.66524 0.70471
> printh(summary(e5))
=== summary(e5)
Call: earth(formula=cbind(O3, wind)~., data=ozone1, wp=c(0.3, 
      1))

                     O3     wind
(Intercept)     7.22077  4.74438
h(vh-5590)      0.01663 -0.00382
h(5590-vh)     -0.01169  0.01283
h(humidity-33)  0.09082  0.01111
h(temp-55)      0.36740  0.02955
h(ibh-1108)    -0.00044  0.00029
h(dpg-13)      -0.08550  0.00061
h(200-vis)      0.01690 -0.00088
h(92-doy)      -0.14903 -0.01046
h(doy-149)     -0.03743  0.00307
h(doy-295)      0.02292 -0.04109

Selected 11 of 19 terms, and 7 of 8 predictors 
Importance: temp, ibh, doy, humidity, dpg, vh, vis, ibt-unused
Number of terms at each degree of interaction: 1 10 (additive model)

         GCV     RSS    GRSq     RSq
O3   15.2418 4410.02 0.76324 0.79115
wind  3.3972  982.95 0.24424 0.33333
All  12.2612 3547.62 0.66524 0.70471
> # wp with factors
> e6 <- earth(pclass ~ ., data=etitanic, degree=2, wp=c(.001,.001,1))
> printh(e6)
=== e6
Selected 9 of 17 terms, and 5 of 5 predictors 
Importance: age, survived, sexmale, sibsp, parch
Number of terms at each degree of interaction: 1 5 3

        GCV    RSS      GRSq      RSq
1st 0.14969 150.35 0.2446403 0.273277
2nd 0.18734 188.16 0.0015158 0.039370
3rd 0.18794 188.77 0.2483499 0.276846
All 0.56370 566.19 0.2481620 0.276665
> printh(summary(e6))
=== summary(e6)
Call: earth(formula=pclass~., data=etitanic, wp=c(0.001, 0.001, 
      1), degree=2)

                              1st        2nd       3rd
(Intercept)            -0.0437534  0.2755217  0.768232
survived                0.3057482  0.1704044 -0.476153
sexmale                 0.1416966  0.1922076 -0.333904
h(age-9)                0.0115444 -0.0032864 -0.008258
h(sibsp-1)             -0.0184738 -0.1044014  0.122875
h(parch-2)             -0.1219387 -0.0797816  0.201720
survived * sexmale     -0.0745250 -0.2926339  0.367159
sexmale * h(1-sibsp)   -0.1214415 -0.0767454  0.198187
h(56-age) * h(2-parch) -0.0017665 -0.0013373  0.003104

Selected 9 of 17 terms, and 5 of 5 predictors 
Importance: age, survived, sexmale, sibsp, parch
Number of terms at each degree of interaction: 1 5 3

        GCV    RSS      GRSq      RSq
1st 0.14969 150.35 0.2446403 0.273277
2nd 0.18734 188.16 0.0015158 0.039370
3rd 0.18794 188.77 0.2483499 0.276846
All 0.56370 566.19 0.2481620 0.276665
> e7 <- earth(pclass ~ ., data=etitanic, degree=2, wp=c(1,.001,.001))
> printh(e7)
=== e7
Selected 10 of 17 terms, and 5 of 5 predictors 
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6

        GCV    RSS      GRSq      RSq
1st 0.14611 146.04  0.262693 0.294101
2nd 0.19177 191.68 -0.022108 0.021432
3rd 0.19923 199.13  0.203207 0.237149
All 0.43863 438.43  0.262349 0.293772
> printh(summary(e7))
=== summary(e7)
Call: earth(formula=pclass~., data=etitanic, wp=c(1, 0.001, 
      0.001), degree=2)

                              1st        2nd       3rd
(Intercept)              0.130385  0.2178791  0.651736
survived                 0.474360 -0.1573584 -0.317002
h(age-54)                0.064255 -0.0136631 -0.050592
h(2-parch)               0.157780  0.1039878 -0.261767
survived * h(51-age)    -0.008836  0.0078831  0.000952
sexmale * h(age-26)      0.006567 -0.0024091 -0.004158
h(age-55) * h(2-parch)  -0.038911  0.0048068  0.034104
h(55-age) * h(2-parch)  -0.004492 -0.0025043  0.006996
h(sibsp-1) * h(2-parch) -0.060166 -0.0231011  0.083267
h(1-sibsp) * h(2-parch) -0.068501 -0.0259355  0.094436

Selected 10 of 17 terms, and 5 of 5 predictors 
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6

        GCV    RSS      GRSq      RSq
1st 0.14611 146.04  0.262693 0.294101
2nd 0.19177 191.68 -0.022108 0.021432
3rd 0.19923 199.13  0.203207 0.237149
All 0.43863 438.43  0.262349 0.293772
> if (PLOT)
+     plot(e7)
> 
> cat("--- earth.regress ---------------------------------\n")
--- earth.regress ---------------------------------
> 
> msg = "earth.regress with trees data, single response, no weights"
> cat("Test:", msg, "\n")
Test: earth.regress with trees data, single response, no weights 
> 
> data(trees)
> y <- trees$Volume
> x <- cbind(trees$Girth, trees$Height)
> colnames(x) <- c("girth", "height")
> 
> a.lm <- lm(y ~ x)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2)
> if (is.null(dim(a.lm$coefficients)))
+     dim(a.lm$coefficients) <- c(length(a.lm$coefficients), 1)
> a <- earth:::earth.regress(x, y)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]"))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]"))
> 
> msg = "earth.regress with ozone1 data, multiple responses, no weights"
> cat("Test:", msg, "\n")
Test: earth.regress with ozone1 data, multiple responses, no weights 
> 
> data(ozone1)
> y <- cbind(ozone1$O3, ozone1$O3 ^ 2)
> colnames(y) <- c("O3", "O32")
> x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp)
> colnames(x) <- c("wind", "humidity", "temp")
> 
> a.lm <- lm(y ~ x)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2)
> a <- earth:::earth.regress(x, y)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]"))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress with ozone1 data, multiple responses with case weights"
> cat("Test:", msg, "\n")
Test: earth.regress with ozone1 data, multiple responses with case weights 
> 
> # options(digits=10)
> weights. <- rep(.5, nrow(x))
> weights.[1] <- 1
> weights.[2] <- 2
> weights.[3] <- 3
> weights.[4] <- 4
> weights.[5] <- 5
> a.lm <- lm(y ~ x, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights.)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights 1"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights 1 
> 
> weights. <- rep(1, nrow(x))
> weights.[2] <- 0
> weights.[4] <- 0
> a.lm <- lm(y ~ x, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights.)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> # options(digits=10)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights 2"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights 2 
> weights. <- rep(1, nrow(x))
> weights.[5] <- 0
> weights.[6] <- 0
> weights.[7] <- 0
> weights.[21] <- 0
> weights.[22] <- 0
> weights.[23] <- 0
> weights.[24] <- 0
> weights.[25] <- 0
> weights.[26] <- 0
> weights.[27] <- 0
> a.lm <- lm(y ~ x, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights.)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights and missing columns 1"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights and missing columns 1 
> x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp, ozone1$wind^2, ozone1$humidity^2, ozone1$temp^2)
> weights. <- rep(1, nrow(x))
> weights.[5] <- 0
> weights.[6] <- 0
> weights.[7] <- 0
> weights.[21] <- 0
> weights.[22] <- 0
> weights.[23] <- 0
> weights.[24] <- 0
> weights.[25] <- 0
> weights.[26] <- 0
> weights.[27] <- 0
> colnames(x) <- c("wind", "humidity", "temp", "wind2", "humidity2", "temp2")
> used.cols = as.logical(c(1,0,1,0,1,1))
> x.missing <- x[,used.cols]
> a.lm <- lm(y ~ x.missing, weights=weights.)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights., used.cols=used.cols)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights and missing columns 2"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights and missing columns 2 
> x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp, ozone1$wind^2, ozone1$humidity^2, ozone1$temp^2)
> weights. <- rep(1, nrow(x))
> weights.[5] <- .1
> weights.[6] <- .2
> weights.[7] <- 1.9
> weights.[21] <- .59
> colnames(x) <- c("wind", "humidity", "temp", "wind2", "humidity2", "temp2")
> used.cols = as.logical(c(0,1,0,0,1,0))
> x.missing <- x[,used.cols]
> a.lm <- lm(y ~ x.missing, weights=weights.)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights., used.cols=used.cols)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> cat("---standard method functions ------------------------\n")
---standard method functions ------------------------
> 
> short.etitanic <- etitanic[seq(from=1, to=1000, by=20),]
> a1 <- earth(pclass ~ ., data=short.etitanic, glm=list(family=binomial), trace=0)
> printh(variable.names(a1))
=== variable.names(a1)
[1] "survived" "sexmale"  "age"      "sibsp"    "parch"   
> printh(case.names(a1))
=== case.names(a1)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> printh(case.names(a1, use.names=FALSE))
=== case.names(a1, use.names = FALSE)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> 
> named.short.etitanic <- short.etitanic
> rownames(named.short.etitanic) <- paste("xx", 1:nrow(named.short.etitanic))
> a2 <- earth(pclass ~ ., data=named.short.etitanic, glm=list(family=binomial), trace=0)
> printh(variable.names(a2))
=== variable.names(a2)
[1] "survived" "sexmale"  "age"      "sibsp"    "parch"   
> printh(case.names(a2))
=== case.names(a2)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> printh(case.names(a2, use.names=FALSE))
=== case.names(a2, use.names = FALSE)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> 
> printh(deviance(a1), expect.warning=TRUE)
=== deviance(a1) expect warning -->Warning: deviance.earth: returning earth (not GLM) deviance
[1] 25.487
> printh(deviance(a1, warn=FALSE))
=== deviance(a1, warn = FALSE)[1] 25.487
> printh(effects(a1), expect.warning=TRUE)
=== effects(a1) expect warning -->Warning: effects.earth: returning NULL
NULL
> printh(effects(a1, warn=FALSE))
=== effects(a1, warn = FALSE)NULL
> printh(family(a1))
=== family(a1)

Family: binomial 
Link function: logit 

> printh(anova(a1), expect.warning=TRUE)
=== anova(a1) expect warning -->Warning: anova.earth: returning NULL
NULL
> printh(anova(a1, warn=FALSE))
=== anova(a1, warn = FALSE)NULL
> printh(family(a1))
=== family(a1)

Family: binomial 
Link function: logit 

> 
> cat("--- thresh=0 -----------------------------------------\n")
--- thresh=0 -----------------------------------------
> 
> a.no.thresh <- earth(O3 ~ ., data = ozone1, thresh=0, nk=1000, degree=2, trace=4)
Call: earth(formula=O3~., data=ozone1, trace=4, thresh=0, 
      nk=1000, degree=2)
x is a 330 by 9 matrix: 1=vh, 2=wind, 3=humidity, 4=temp, 5=ibh, 6=dpg, 7=ibt, 8=vis, 9=doy
First few rows of x are
       vh wind humidity temp  ibh dpg ibt vis doy
[1,] 5710    4       28   40 2693 -25  87 250  33
[2,] 5700    3       37   45  590 -24 128 100  34
[3,] 5760    3       51   54 1450  25 139  60  35
[4,] 5720    4       69   35 1568  15 121  60  36
[5,] 5790    6       19   45 2631 -33 123 100  37
[6,] 5790    3       25   55  554 -28 182 250  38
y is a 330 by 1 matrix: 1=O3
First few rows of y are
     O3
[1,]  3
[2,]  5
[3,]  5
[4,]  6
[5,]  4
[6,]  4
Approximate memory use after expanding x and y matrices: 8e+01 MBytes
Forward pass: minspan 8 endspan 15

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.6493 0.6599       0.6599    4         temp          58  2   3   
4      0.6903 0.7088      0.04898    5          ibh        1108  4   5   
6      0.7102 0.7361      0.02722    9          doy          92  6   7   
8      0.7295 0.7614      0.02532    3     humidity          55  8   9   2   
10     0.7546 0.7904      0.02906    6          dpg          54  10  11  2   
12     0.7597 0.8015      0.01109    8          vis         200  12  13  
14     0.7632 0.8109     0.009396    2         wind           7  14  15  13  
16     0.7640 0.8179      0.00697    6          dpg          44  16  17  5   
18     0.7685 0.8275     0.009595    7          ibt         234  18  19  
20     0.7662 0.8318     0.004351    9          doy         159  20  21  2   
22     0.7638 0.8362      0.00431    1           vh        5850  22  23  6   
24     0.7652 0.8430     0.006866    4         temp          72  24  25  13  
26     0.7633 0.8476      0.00457    1           vh        5880  26  27  13  
28     0.7610 0.8519     0.004314    2         wind           6  28  29  18  
30     0.7581 0.8558     0.003885    1           vh        5870  30  31  
32     0.7561 0.8603     0.004509    6          dpg          13  32  33  
34     0.7549 0.8652     0.004868    7          ibt         260  34  35  13  
36     0.7513 0.8688     0.003611    7          ibt         273  36  37  5   
38     0.7499 0.8735     0.004723    3     humidity          72  38  39  18  
40     0.7446 0.8763     0.002783    3     humidity          50  40  41  4   
42     0.7392 0.8791     0.002804    9          doy         268  42  43  30  
44     0.7334 0.8819     0.002766    4         temp          80  44  45  33  
46     0.7265 0.8843     0.002406    8          vis          40  46  47  18  
48     0.7207 0.8873     0.003021    1           vh        5880  48  49  2   
50     0.7223 0.8906     0.003331    8          vis          70  50      18  
52     0.7149 0.8931     0.002437    7          ibt         266  51  52  2   
54     0.7054 0.8949      0.00184    8          vis          60  53  54  5   
56     0.7033 0.8969     0.001959    4         temp          75  55      13  
58     0.6926 0.8986     0.001713    4         temp          65  56  57  31  
60     0.6821 0.9006     0.002006    4         temp          76  58  59  19  
62     0.6843 0.9039     0.003352    4         temp          74  60      31  
64     0.6721 0.9056     0.001713    1           vh        5820  61  62  7   
66     0.6685 0.9073      0.00165    4         temp          75  63      19  
68     0.6556 0.9091     0.001852    8          vis         100  64  65  30  
70     0.6416 0.9110     0.001818    7          ibt         138  66  67  32  
72     0.6253 0.9125     0.001528    3     humidity          72  68  69  30  
74     0.6074 0.9140     0.001504    4         temp          80  70  71  18  
76     0.5886 0.9156     0.001631    6          dpg           9  72  73  18  
78     0.5835 0.9174       0.0018    7          ibt         191  74      13  
80     0.5683 0.9201     0.002732    7          ibt         200  75  76  6   
82     0.5541 0.9232     0.003093    2         wind           6  77  78  5   
84     0.5500 0.9254     0.002113    4         temp          83  79      
86     0.5273 0.9273     0.001975    4         temp          75  80  81  5   
88     0.5158 0.9284     0.001094    4         temp          78  82      31  
90     0.4845 0.9297     0.001278    7          ibt         266  83  84  31  
92     0.4718 0.9309     0.001198    1           vh        5830  85      
94     0.4325 0.9319    0.0009674    4         temp          53  86  87  4   
96     0.4156 0.9329     0.001012    2         wind           8  88      13  
98     0.3677 0.9337    0.0008644    2         wind           4  89  90  2   
100    0.3138 0.9347    0.0009483    2         wind           6  91  92  6   
102    0.2504 0.9355    0.0008198    3     humidity          76  93  94  33  
104    0.1763 0.9363    0.0007755    9          doy         135  95  96  12  
106    0.0911 0.9372    0.0008862    3     humidity          70  97  98  13  
108   -0.0052 0.9383     0.001143    3     humidity          76  99  100 6   
110   -0.0516 0.9394     0.001053    3     humidity          64  101     2   
112   -0.0991 0.9406     0.001205    3     humidity          71  102     6   
114   -0.2387 0.9415    0.0009247    9          doy         268  103 104 18  
116   -0.4094 0.9424    0.0009192    8          vis          70  105 106 32  
118   -0.4836 0.9439     0.001443    8          vis         100  107     32  
120   -0.5760 0.9449      0.00107    4         temp          75  108     33  
122   -0.8415 0.9457    0.0007594    9          doy         267  109 110 84  
124   -1.1730 0.9468     0.001064    2         wind           4  111 112 92  
126   -1.3648 0.9475    0.0007904    1           vh        5740  113     
128   -1.8806 0.9485    0.0009334    3     humidity          45  114 115 12  
130   -2.6091 0.9493    0.0008075    3     humidity          48  116 117 5   
132   -3.6648 0.9502    0.0008956    9          doy         267  118 119 32  
134   -5.3161 0.9509    0.0007453    4         temp          61  120 121 12  
136   -6.4423 0.9517    0.0007899    8          vis         120  122     5   
138   -7.9453 0.9524    0.0006827    2         wind           5  123     2   
140  -13.0470 0.9532    0.0007528    5          ibh        3234  124 125 19  
142  -24.4847 0.9539    0.0007019    7          ibt         211  126 127 33  
144  -59.0428 0.9551     0.001215    6          dpg          60  128 129 126 
146 -296.9396 0.9560    0.0008909    6          dpg          23  130 131 7   
148 -4691.3140 0.9566    0.0006903    3     humidity          70  132 133 126 
150 -375.8518 0.9574     0.000701    4         temp          67  134     31  
152 -125.2708 0.9580     0.000653    4         temp          62  135     19  
154  -35.9004 0.9587    0.0007464    1           vh        5750  136 137 32  
156  -23.0977 0.9594    0.0006758    8          vis         150  138     5   
158  -11.5455 0.9603    0.0009064    8          vis         100  139 140 126 
160   -6.5996 0.9612    0.0008942    9          doy         353  141 142 33  
162   -5.0910 0.9620    0.0007334    9          doy         339  143     2   
164   -3.2354 0.9624    0.0004373    8          vis         120  144 145 2   
166   -2.1001 0.9629    0.0004849    9          doy         353  146 147 5   
168   -1.6699 0.9634    0.0005564    7          ibt         178  148     3   
170   -1.0610 0.9640    0.0005314    8          vis         100  149 150 84  
172   -0.8182 0.9645    0.0004858    7          ibt         175  151     32  
174   -0.6107 0.9650    0.0005421    4         temp          69  152     31  
176   -0.3022 0.9656    0.0005685    8          vis         100  153 154 6   
178   -0.1703 0.9661    0.0005282    4         temp          64  155     4   
180    0.0439 0.9671     0.001037    5          ibh        2234  156 157 2   
182    0.2045 0.9680    0.0008542    1           vh        5810  158 159 33  
184    0.2791 0.9688    0.0007659    1           vh        5780  160     6   
186    0.3852 0.9693    0.0005668    1           vh        5750  161 162 3   
188    0.4338 0.9698    0.0004709    2         wind           8  163     6   
190    0.4769 0.9702    0.0004313    3     humidity          76  164     5   
192    0.5175 0.9708    0.0005357    1           vh        5320< 165     18  
194    0.5822 0.9715    0.0006969    9          doy         284  166 167 126 
196    0.6346 0.9720    0.0005929    1           vh        5810  168 169 19  
198    0.6820 0.9729    0.0008786    9          doy         346  170 171 92  
200    0.7046 0.9735    0.0005992    8          vis         200  172     126 
202    0.7388 0.9742    0.0006298    7          ibt         148  173 174 4   
204    0.7581 0.9749    0.0007398    7          ibt         228  175     31  
206    0.7741 0.9754    0.0005368    3     humidity          65  176     5   
208    0.7977 0.9759    0.0004989    1           vh        5730  177 178 4   
210    0.8200 0.9767    0.0007251    7          ibt          77  179 180 12  
212    0.8321 0.9773    0.0006329    3     humidity          76  181     126 
214    0.8494 0.9779    0.0006222    5          ibh        2982  182 183 6   
216    0.8584 0.9784    0.0004824    7          ibt         186  184     4   
218    0.8667 0.9789    0.0004668    8          vis         250  185     3   
220    0.8789 0.9793    0.0004441    9          doy         295  186 187 4   
222    0.8899 0.9798     0.000476    4         temp          74  188 189 32  
224    0.9002 0.9803    0.0005608    6          dpg          28  190 191 31  
226    0.9084 0.9807    0.0003625    9          doy         360  192 193 3   
228    0.9159 0.9811    0.0004006    8          vis         200  194 195 7   
230    0.9199 0.9814    0.0003168    2         wind           6  196     92  
232    0.9248 0.9820    0.0005679    2         wind           7  197     2   
234    0.9286 0.9824    0.0003678    7          ibt         223  198     3   
236    0.9341 0.9827    0.0003479    3     humidity          80  199 200 92  
238    0.9373 0.9831    0.0003608    6          dpg          30  201     2   
240    0.9409 0.9836    0.0005012    6          dpg          46  202     126 
242    0.9440 0.9840    0.0004027    9          doy         367  203     12  
244    0.9483 0.9844    0.0003896    3     humidity          60  204 205 3   
246    0.9512 0.9848     0.000458    4         temp          75  206     4   
248    0.9540 0.9853    0.0004856    4         temp          71  207     4   
250    0.9572 0.9860    0.0006526    4         temp          69  208     19  
252    0.9600 0.9865    0.0005635    1           vh        5790  209     7   
254    0.9634 0.9870    0.0004943    2         wind           6  210 211 126 
256    0.9665 0.9875    0.0005039    6          dpg          38  212 213 4   
258    0.9691 0.9879      0.00038    3     humidity          62  214 215 7   
260    0.9706 0.9882    0.0003119    1           vh        5790  216     3   
262    0.9731 0.9887    0.0004561    8          vis         200  217 218 33  
264    0.9746 0.9891    0.0003907    3     humidity          48  219     33  
266    0.9759 0.9894    0.0003207    3     humidity          80  220     33  
268    0.9776 0.9897    0.0002926    9          doy         371  221 222 19  
270    0.9787 0.9899    0.0002732    9          doy         371  223     13  
272    0.9802 0.9902    0.0003019    2         wind           6  224 225 32  
274    0.9812 0.9905    0.0003043    9          doy         347  226     126 
276    0.9827 0.9909    0.0003622    2         wind           6  227 228 7   
278    0.9835 0.9911    0.0002281    4         temp          41  229     31  
280    0.9847 0.9914    0.0002899    2         wind           5  230 231 4   
282    0.9854 0.9917     0.000262    5          ibh        3234  232     2   
284    0.9862 0.9920    0.0002715    6          dpg          52  233     6   
286    0.9869 0.9922     0.000234    6          dpg          46  234     
288    0.9877 0.9924    0.0002404    8          vis         300  235 236 4   
290    0.9885 0.9926    0.0001951    6          dpg          42  237 238 92  
292    0.9891 0.9929    0.0002614    6          dpg          49  239     3   
294    0.9896 0.9931    0.0001704    5          ibh        4281  240     2   
296    0.9900 0.9932    0.0001618    9          doy         371  241     126 
298    0.9907 0.9934    0.0002011    2         wind           3  242 243 33  
300    0.9913 0.9937    0.0002355    2         wind           5  244 245 12  
302    0.9918 0.9939    0.0002317    1           vh        5610  246     3   
304    0.9921 0.9941    0.0001685    2         wind           8  247     2   
306    0.9925 0.9942    0.0001874    9          doy         339  248     19  
308    0.9930 0.9944    0.0001956    5          ibh        3720  249 250 13  
310    0.9935 0.9946    0.0001989    3     humidity          79  251 252 32  
312    0.9939 0.9948    0.0001855    5          ibh        3608  253 254 32  
314    0.9942 0.9950    0.0001371    7          ibt         154  255     12  
316    0.9944 0.9951    0.0001236    6          dpg          54  256     31  
318    0.9948 0.9953    0.0001878    6          dpg          70  257 258 13  
320    0.9951 0.9955    0.0001775    3     humidity          65  259 260 
322    0.9955 0.9956     0.000179    3     humidity          67  261 262 19  
324    0.9957 0.9958    0.0001731    3     humidity          77  263     30  
326    0.9960 0.9960    0.0001777    9          doy         363  264     126 
328    0.9962 0.9961    0.0001331    3     humidity          74  265     32  
330    0.9964 0.9963    0.0001435    4         temp          61  266 267 7   
332    0.9966 0.9964    0.0001621    3     humidity          81  268     13  
334    0.9968 0.9966    0.0001468    8          vis         300  269     32  
336    0.9971 0.9968    0.0001889    2         wind           8  270 271 19  
338    0.9973 0.9969    0.0001889    7          ibt         114  272     3   
340    0.9974 0.9971     0.000117    6          dpg          32  273     18  
342    0.9976 0.9972    0.0001156    7          ibt         220  274     4   
344    0.9977 0.9973    0.0001616    7          ibt         195  275     31  
346    0.9979 0.9975    0.0001187    1           vh        5320< 276     84  
348    0.9980 0.9975    8.651e-05    2         wind           8  277     126 
350    0.9981 0.9976    9.191e-05    8          vis         250  278     7   
352    0.9982 0.9977    8.196e-05    9          doy         201  279     32  
354    0.9983 0.9979    0.0001311    9          doy         363  280     32  
356    0.9984 0.9979    7.645e-05    4         temp          25< 281     92  
358    0.9984 0.9980    5.809e-05    9          doy         319  282     13  
360    0.9985 0.9980    4.893e-05    3     humidity          81  283     4   
362    0.9986 0.9981    5.624e-05    3     humidity          78  284 285 31  
364    0.9986 0.9981    5.505e-05    5          ibh        4212  286     7   
366    0.9987 0.9982    7.443e-05    9          doy         209  287 288 286 
368    0.9988 0.9983    9.847e-05    4         temp          25< 289     286 
370    0.9989 0.9984    0.0001182    8          vis         200  290 291 286 
372    0.9990 0.9985    9.547e-05    7          ibt         -25< 292     92  
374    0.9991 0.9987    0.0001491    3     humidity          71  293 294 286 
376    0.9992 0.9988    9.366e-05    8          vis         120  295     286 
378    0.9993 0.9989    9.819e-05    7          ibt         -25< 296     84  
380    0.9993 0.9989    6.873e-05    3     humidity          19< 297     84  
382    0.9994 0.9990    6.028e-05    3     humidity          71  298     3   
384    0.9994 0.9991    5.304e-05    5          ibh         111< 299     126 
386    0.9995 0.9991    7.052e-05    9          doy         311  300     2   
388    0.9995 0.9992    6.285e-05    2         wind           8  301 302 286 
390    0.9995 0.9992    5.569e-05    2         wind           0< 303     
392    0.9996 0.9993    8.476e-05    2         wind           0< 304     31  
394    0.9997 0.9994    8.794e-05    7          ibt         -25< 305     126 
396    0.9998 0.9996     0.000167    1           vh        5320< 306     286 
398    0.9998 0.9996    1.773e-05    2         wind           0< 307     84  
400    0.9998 0.9996    1.052e-05    5          ibh         111< 308     84  
402    0.9998 0.9996    2.013e-05    6          dpg         -69< 309     84  
404    0.9998 0.9997    3.253e-05    5          ibh         111< 310     30  
406    0.9998 0.9997    2.763e-05    8          vis           0< 311     92  
408    0.9998 0.9997    1.191e-05    9          doy         339  312     32  
410    0.9999 0.9997    1.591e-05    5          ibh         111< 313     92  
412    0.9999 0.9997    9.709e-06    2         wind           0< 314     30  
414    0.9999 0.9997    1.779e-05    2         wind           0< 315     3   
416    0.9999 0.9998    2.464e-05    6          dpg          60  316     5   
418    0.9999 0.9998    1.828e-05    3     humidity          73  317     7   
420    0.9999 0.9998    1.142e-05    8          vis           0< 318     31  
422    0.9999 0.9998    1.166e-05    5          ibh         111< 319     31  
424    0.9999 0.9998    2.075e-05    5          ibh         111< 320     286 
426    0.9999 0.9999    6.178e-05    1           vh        5320< 321     320 
428    1.0000 0.9999     3.81e-05    2         wind           0< 322     321 
430    1.0000 0.9999      1.4e-05    4         temp          25< 323     126 
432    1.0000 1.0000     2.85e-05    2         wind           0< 324     320 
434    1.0000 1.0000    1.167e-05    6          dpg         -69< 325     320 
436    1.0000 1.0000    6.381e-06    8          vis           0< 326     320 
438    1.0000 1.0000    3.258e-06    9          doy          33< 327     320 
440    1.0000 1.0000    1.431e-06    7          ibt         -25< 328     286 
442    1.0000 1.0000    2.534e-07    4         temp          25< 329     320 
444    1.0000 1.0000    5.642e-07    5          ibh         111< 330     320 

Reached max number of terms 1000 (no room for another term pair)
After forward pass GRSq 1 RSq 1
Forward pass complete: 445 terms (330 terms used)

Fixed rank deficient bx by removing 19 terms, 311 terms remain
Warning: GCV effective number 776 of parameters >= number 330 of cases
Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6408  0.6462     0.6408      1  1 2
          3      0.6910  0.7003     0.0502      2  1 2 4
          4      0.7018  0.7152     0.0108      3  1 2 4 13
          5      0.7098  0.7272     0.0080      4  1 2 13 33 35
          6      0.7214  0.7421     0.0116      5  1 2 4 13 33 35
          7      0.7260  0.7504     0.0046      5  1 2 4 13 33 35 54
          8      0.7253  0.7537    -0.0007      4  1 2 3 4 5 6 7 8
          9      0.7295  0.7614     0.0042      4  1 2 3 4 5 6 7 8 9
         10      0.7508  0.7837     0.0213      5  1 2 3 4 5 6 7 8 9 11
         11      0.7546  0.7904     0.0038      5  1 2 3 4 5 6 7 8 9 10 11
         12      0.7523  0.7920    -0.0022      6  1 2 3 4 5 6 7 8 9 11 12 13
         13      0.7597  0.8015     0.0074      6  1 2 3 4 5 6 7 8 9 10 11 12 13
         14      0.7663  0.8102     0.0066      7  1 2 3 4 5 6 7 8 9 10 11 12 13 14
         15      0.7632  0.8109    -0.0031      7  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
         16      0.7597  0.8114    -0.0035      7  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
         17      0.7640  0.8179     0.0043      7  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
         18      0.7620  0.8195    -0.0020      8  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19
         19      0.7685  0.8275     0.0065      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
         20      0.7665  0.8291    -0.0020      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
         21      0.7662  0.8318    -0.0004      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
         22      0.7676  0.8358     0.0014      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
         23      0.7638  0.8362    -0.0038      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
         24      0.7679  0.8419     0.0041      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
         25      0.7652  0.8430    -0.0027      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
         26      0.7622  0.8440    -0.0030      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
         27      0.7633  0.8476     0.0011      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
         28      0.7614  0.8493    -0.0019      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
         29      0.7610  0.8519    -0.0004      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
         30      0.7626  0.8557     0.0016      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
         31      0.7581  0.8558    -0.0046      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
         32      0.7565  0.8577    -0.0016      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
         33      0.7561  0.8603    -0.0004      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
         34      0.7568  0.8635     0.0007      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
         35      0.7549  0.8652    -0.0019      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
         36      0.7564  0.8688     0.0016      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
         37      0.7513  0.8688    -0.0051      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
         38      0.7503  0.8710    -0.0010      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
         39      0.7506  0.8738     0.0002      9  1 2 4 13 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 63 70 71 72 73 74 80 83 104 131 142 146 148 151 158 163 191 195 208 294
         40      0.7507  0.8766     0.0001      9  1 2 4 13 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 63 70 71 72 73 74 80 83 104 131 142 146 148 151 158 163 191 195 208 255 294
         41      0.7502  0.8790    -0.0005      9  1 2 4 13 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 59 63 70 71 72 73 74 80 83 104 131 142 146 148 151 158 163 191 195 208 255 294
         42      0.7450  0.8792    -0.0051      9  1 2 4 13 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 59 63 70 71 72 73 74 80 83 104 122 131 142 146 148 151 158 163 191 195 208 255 294
         43      0.7442  0.8814    -0.0008      9  1 2 4 13 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 59 63 70 71 72 73 74 80 83 104 122 131 138 142 146 148 151 158 163 191 195 208 255 294
         44      0.7400  0.8822    -0.0042      9  1 2 4 13 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 59 63 70 71 72 73 74 80 83 87 104 122 131 138 142 146 148 151 158 163 191 195 208 255 294
         45      0.7380  0.8839    -0.0020      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46
         46      0.7331  0.8844    -0.0049      9  1 2 4 13 19 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 59 63 70 71 72 73 74 80 83 87 104 122 131 138 142 146 148 151 157 158 163 191 195 208 255 294
         47      0.7302  0.8858    -0.0029      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48
         48      0.7253  0.8865    -0.0048      9  1 2 4 13 19 20 24 29 30 33 34 35 44 46 50 51 52 54 55 58 59 63 70 71 72 73 74 80 83 87 104 122 131 138 142 146 148 151 155 156 157 158 163 191 195 208 255 294
         49      0.7283  0.8903     0.0029      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50
         50      0.7259  0.8920    -0.0024      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51
         51      0.7210  0.8927    -0.0049      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52
         52      0.7149  0.8931    -0.0061      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
         53      0.7124  0.8948    -0.0025      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54
         54      0.7105  0.8967    -0.0019      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55
         55      0.7075  0.8983    -0.0030      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56
         56      0.7003  0.8985    -0.0071      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
         57      0.6968  0.8999    -0.0036      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
         58      0.6930  0.9014    -0.0037      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
         59      0.6925  0.9038    -0.0005      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
         60      0.6877  0.9050    -0.0048      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
         61      0.6809  0.9055    -0.0068      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
         62      0.6777  0.9072    -0.0032      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
         63      0.6712  0.9080    -0.0064      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
         64      0.6656  0.9091    -0.0057      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
         65      0.6592  0.9101    -0.0064      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
         66      0.6523  0.9109    -0.0069      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
         67      0.6477  0.9125    -0.0045      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
         68      0.6368  0.9125    -0.0110      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
         69      0.6310  0.9138    -0.0058      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
         70      0.6199  0.9140    -0.0111      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
         71      0.6137  0.9154    -0.0061      9  1 2 4 12 13 19 20 24 29 30 33 34 35 44 45 46 49 50 51 52 53 54 55 56 58 59 63 70 71 72 73 74 80 83 85 87 90 104 111 115 121 122 126 128 129 131 134 136 138 139 142 144 146 148 151 155 156 157 158 160 163 165 166 191 195 204 208 255 288 294 298
         72      0.6038  0.9160    -0.0099      9  1 2 4 12 13 19 20 24 29 30 33 34 35 44 45 46 49 50 51 52 53 54 55 56 58 59 63 67 70 71 72 73 74 80 83 85 87 90 104 111 115 121 122 126 128 129 131 134 136 138 139 142 144 146 148 151 155 156 157 158 160 163 165 166 191 195 204 208 255 288 294 298
         73      0.5987  0.9177    -0.0051      9  1 2 4 12 13 19 20 24 29 30 33 34 35 44 45 46 49 50 51 52 53 54 55 56 58 59 63 67 70 71 72 73 74 80 83 85 87 90 104 111 115 119 121 122 126 128 129 131 134 136 138 139 142 144 146 148 151 155 156 157 158 160 163 165 166 191 195 204 208 255 288 294 298
         74      0.5906  0.9188    -0.0081      9  1 2 3 4 5 6 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
         75      0.5851  0.9205    -0.0055      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
         76      0.5761  0.9216    -0.0090      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
         77      0.5750  0.9241    -0.0011      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
         78      0.5698  0.9260    -0.0052      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
         79      0.5568  0.9265    -0.0130      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
         80      0.5453  0.9274    -0.0115      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
         81      0.5351  0.9285    -0.0102      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
         82      0.5191  0.9289    -0.0159      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
         83      0.5092  0.9303    -0.0099      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
         84      0.4913  0.9306    -0.0180      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
         85      0.4749  0.9313    -0.0164      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
         86      0.4611  0.9324    -0.0138      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
         87      0.4389  0.9326    -0.0221      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
         88      0.4202  0.9334    -0.0187      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
         89      0.4003  0.9342    -0.0199      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91
         90      0.3795  0.9350    -0.0209      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 90 93 104 105 111 113 115 119 121 122 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 213 220 242 248 252 255 288 294 298 304 309 311
         91      0.3583  0.9359    -0.0212      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 90 93 98 104 105 111 113 115 119 121 122 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 243 248 252 255 288 294 298 304
         92      0.3381  0.9370    -0.0202      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 90 93 98 104 105 111 113 115 119 121 122 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 248 252 255 288 294 298 304 309 311
         93      0.3182  0.9383    -0.0200      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 90 93 98 104 105 111 113 115 119 121 122 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 243 248 252 255 288 294 298 304 309 311
         94      0.2978  0.9396    -0.0203      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 90 93 98 104 105 111 113 115 119 121 122 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 243 248 252 255 288 294 298 304 309 311
         95      0.2608  0.9397    -0.0370      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 243 248 252 255 288 294 298 304 309 311
         96      0.2356  0.9409    -0.0252      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 243 248 252 255 288 294 298 304 309 311
         97      0.2094  0.9421    -0.0262      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 243 248 252 254 255 288 294 298 304 309 311
         98      0.1830  0.9435    -0.0264      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 188 191 195 204 208 209 213 220 242 243 248 252 253 254 255 288 294 298 304 309 311
         99      0.1472  0.9444    -0.0358      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 204 208 209 213 220 242 243 248 252 253 254 255 288 294 298 304 309 311
        100      0.1080  0.9453    -0.0392      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 204 208 209 213 220 242 243 248 252 253 254 255 288 294 296 298 304 309 311
        101      0.0550  0.9455    -0.0531      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 201 204 208 209 213 220 242 243 248 252 253 254 255 288 294 296 298 304 309 311
        102      0.0039  0.9461    -0.0511      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 294 296 298 304 309 311
        103     -0.0554  0.9466    -0.0593      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        104     -0.1092  0.9476    -0.0538      9  1 2 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 91 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        105     -0.1867  0.9478    -0.0775      9  1 2 3 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 85 87 88 89 90 91 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        106     -0.2702  0.9481    -0.0835      9  1 2 3 4 12 13 19 20 24 29 30 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        107     -0.3489  0.9490    -0.0787      9  1 2 3 4 12 13 19 20 24 29 30 31 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        108     -0.4369  0.9498    -0.0880      9  1 2 3 4 12 13 19 20 24 29 30 31 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        109     -0.5307  0.9508    -0.0937      9  1 2 3 4 12 13 19 20 24 27 29 30 31 33 34 35 39 44 45 46 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        110     -0.6370  0.9517    -0.1063      9  1 2 3 4 12 13 19 20 24 27 29 30 31 33 34 35 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        111     -0.7540  0.9527    -0.1171      9  1 2 3 4 12 13 19 20 24 27 29 30 31 33 34 35 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        112     -0.8943  0.9536    -0.1402      9  1 2 3 4 12 13 19 20 24 27 29 30 31 33 34 35 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        113     -1.0643  0.9542    -0.1700      9  1 2 3 4 12 13 19 20 24 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        114     -1.2444  0.9552    -0.1801      9  1 2 3 4 12 13 19 20 24 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        115     -1.4569  0.9561    -0.2125      9  1 2 3 4 12 13 19 20 24 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        116     -1.7067  0.9569    -0.2498      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 220 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        117     -1.9886  0.9580    -0.2819      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 220 228 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        118     -2.3456  0.9588    -0.3570      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 220 228 241 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        119     -2.7915  0.9595    -0.4459      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 220 228 241 242 243 248 252 253 254 255 288 290 294 296 298 304 309 311
        120     -3.3498  0.9601    -0.5583      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 220 228 241 242 243 248 252 253 254 255 288 290 293 294 296 298 304 309 311
        121     -4.0492  0.9608    -0.6994      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 288 290 293 294 296 298 304 309 311
        122     -4.9392  0.9615    -0.8900      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 288 290 293 294 296 298 304 309 311
        123     -6.1156  0.9621    -1.1764      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 288 290 293 294 296 298 304 309 311
        124     -7.7019  0.9628    -1.5863      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 288 290 293 294 296 298 304 309 311
        125    -10.0672  0.9631    -2.3653      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 257 288 290 293 294 296 298 304 309 311
        126    -13.4575  0.9636    -3.3903      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 257 288 290 293 294 296 298 304 309 311
        127    -18.7797  0.9642    -5.3222      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 257 275 288 290 293 294 296 298 304 309 311
        128    -27.9186  0.9647    -9.1389      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 257 275 288 290 293 294 296 298 304 309 311
        129    -45.8401  0.9649   -17.9215      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 257 275 288 290 293 294 296 298 304 309 311
        130    -87.8813  0.9653   -42.0412      9  1 2 3 4 12 13 19 20 24 25 27 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 257 275 288 290 293 294 296 298 304 309 311
        131   -231.5175  0.9656  -143.6362      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 241 242 243 248 252 253 254 255 257 275 288 290 293 294 296 298 304 309 311
        132  -1627.4195  0.9662 -1395.9020      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 232 241 242 243 248 252 253 254 255 257 275 288 290 293 294 296 298 304 309 311
        133  -3620.6474  0.9665 -1993.2279      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 232 241 242 243 248 252 253 254 255 257 275 280 288 290 293 294 296 298 304 309 311
        134   -291.7446  0.9669  3328.9028      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 280 288 290 293 294 296 298 304 309 311
        135    -97.4117  0.9673   194.3330      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 280 288 290 293 294 296 298 304 309 311
        136    -47.3976  0.9677    50.0141      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 188 191 195 198 201 202 204 208 209 213 215 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 280 288 290 293 294 296 298 304 309 311
        137    -27.7596  0.9679    19.6380      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 280 288 290 293 294 296 298 304 309 311
        138    -17.8809  0.9682     9.8787      9  1 2 3 4 12 13 19 20 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 216 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 280 288 290 293 294 296 298 304 309 311
        139    -12.2583  0.9686     5.6227      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 216 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 280 288 290 293 294 296 298 304 309 311
        140     -8.7959  0.9690     3.4623      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 216 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 293 294 296 298 304 309 311
        141     -6.5045  0.9694     2.2914      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 216 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 293 294 296 298 304 309 311
        142     -4.9242  0.9698     1.5803      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 293 294 296 298 304 309 311
        143     -3.7804  0.9701     1.1438      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        144     -2.9571  0.9703     0.8233      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        145     -2.2984  0.9707     0.6587      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 176 179 184 186 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        146     -1.8056  0.9709     0.4928      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        147     -1.3916  0.9714     0.4140      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        148     -1.0676  0.9717     0.3239      9  1 2 3 4 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        149     -0.8019  0.9720     0.2658      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        150     -0.5758  0.9725     0.2261      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 256 257 275 278 280 288 290 291 293 294 296 298 304 309 311
        151     -0.3858  0.9729     0.1900      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        152     -0.2265  0.9733     0.1593      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 212 213 215 216 218 219 220 228 232 237 241 242 243 248 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        153     -0.0920  0.9738     0.1346      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 212 213 215 216 218 219 220 228 232 237 241 242 243 248 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        154      0.0259  0.9742     0.1178      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 208 209 211 212 213 215 216 218 219 220 228 232 237 241 242 243 248 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        155      0.1257  0.9747     0.0999      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 205 208 209 211 212 213 215 216 218 219 220 228 232 237 241 242 243 248 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        156      0.2105  0.9750     0.0847      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 205 208 209 211 212 213 215 216 218 219 220 228 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        157      0.2839  0.9754     0.0735      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 205 208 209 211 212 213 215 216 218 219 220 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        158      0.3506  0.9758     0.0666      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 205 208 209 211 212 213 215 216 218 219 220 221 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        159      0.4027  0.9760     0.0521      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 204 205 208 209 211 212 213 215 216 218 219 220 221 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        160      0.4540  0.9763     0.0513      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 218 219 220 221 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        161      0.5028  0.9768     0.0488      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 218 219 220 221 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        162      0.5446  0.9773     0.0418      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        163      0.5824  0.9777     0.0377      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        164      0.6166  0.9782     0.0343      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        165      0.6468  0.9786     0.0302      9  1 2 3 4 5 12 13 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        166      0.6743  0.9790     0.0274      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        167      0.6979  0.9794     0.0236      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        168      0.7216  0.9799     0.0237      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 288 290 291 293 294 296 298 304 309 311
        169      0.7427  0.9803     0.0211      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 237 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 309 311
        170      0.7618  0.9808     0.0191      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 237 240 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 309 311
        171      0.7783  0.9811     0.0165      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 237 240 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 309 311
        172      0.7921  0.9814     0.0138      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 309 311
        173      0.8056  0.9817     0.0135      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 305 309 311
        174      0.8196  0.9821     0.0140      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 305 306 309 311
        175      0.8316  0.9825     0.0121      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 305 306 309 311
        176      0.8415  0.9828     0.0098      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 272 275 278 280 286 288 290 291 293 294 296 298 304 305 306 309 311
        177      0.8514  0.9831     0.0100      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        178      0.8611  0.9835     0.0097      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        179      0.8693  0.9838     0.0082      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        180      0.8752  0.9838     0.0059      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 235 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        181      0.8826  0.9841     0.0073      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 235 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 258 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        182      0.8890  0.9844     0.0065      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 228 229 232 235 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 258 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        183      0.8962  0.9848     0.0072      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 228 229 232 235 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 258 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        184      0.9015  0.9850     0.0053      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 235 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 258 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        185      0.9076  0.9853     0.0060      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 240 241 242 243 246 248 249 251 252 253 254 255 256 257 258 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        186      0.9127  0.9856     0.0051      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 240 241 242 243 245 246 248 249 251 252 253 254 255 256 257 258 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        187      0.9176  0.9859     0.0048      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 240 241 242 243 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        188      0.9223  0.9862     0.0047      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        189      0.9265  0.9865     0.0042      9  1 2 3 4 5 12 13 16 19 20 21 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        190      0.9306  0.9868     0.0041      9  1 2 3 4 5 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        191      0.9343  0.9871     0.0038      9  1 2 3 4 5 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        192      0.9379  0.9873     0.0035      9  1 2 3 4 5 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 304 305 306 309 311
        193      0.9410  0.9876     0.0031      9  1 2 3 4 5 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 309 311
        194      0.9443  0.9879     0.0033      9  1 2 3 4 5 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 307 309 311
        195      0.9466  0.9880     0.0023      9  1 2 3 4 5 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 307 309 311
        196      0.9493  0.9882     0.0027      9  1 2 3 4 5 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 307 309 311
        197      0.9519  0.9885     0.0026      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 307 309 311
        198      0.9545  0.9888     0.0026      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 307 309 311
        199      0.9571  0.9891     0.0026      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 307 309 311
        200      0.9592  0.9893     0.0021      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 303 304 305 306 307 309 311
        201      0.9610  0.9895     0.0018      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        202      0.9627  0.9896     0.0017      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        203      0.9641  0.9897     0.0014      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        204      0.9656  0.9899     0.0015      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        205      0.9672  0.9901     0.0016      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        206      0.9687  0.9903     0.0015      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        207      0.9697  0.9903     0.0010      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        208      0.9710  0.9905     0.0013      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        209      0.9722  0.9906     0.0012      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        210      0.9733  0.9908     0.0012      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        211      0.9744  0.9909     0.0011      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        212      0.9754  0.9911     0.0010      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        213      0.9764  0.9912     0.0009      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        214      0.9775  0.9914     0.0011      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        215      0.9785  0.9916     0.0010      9  1 2 3 4 5 11 12 13 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        216      0.9794  0.9917     0.0009      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        217      0.9804  0.9919     0.0009      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        218      0.9812  0.9921     0.0008      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        219      0.9819  0.9922     0.0008      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        220      0.9828  0.9924     0.0008      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        221      0.9836  0.9926     0.0008      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        222      0.9843  0.9928     0.0008      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        223      0.9851  0.9930     0.0007      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        224      0.9857  0.9931     0.0006      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 293 294 296 298 301 303 304 305 306 307 309 311
        225      0.9864  0.9933     0.0007      9  1 2 3 4 5 11 12 13 15 16 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 293 294 296 297 298 301 303 304 305 306 307 309 311
        226      0.9870  0.9935     0.0006      9  1 2 3 4 5 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 293 294 296 297 298 301 303 304 305 306 307 309 311
        227      0.9876  0.9936     0.0006      9  1 2 3 4 5 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 293 294 296 297 298 301 303 304 305 306 307 309 311
        228      0.9882  0.9938     0.0006      9  1 2 3 4 5 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        229      0.9888  0.9940     0.0005      9  1 2 3 4 5 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        230      0.9894  0.9942     0.0006      9  1 2 3 4 5 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        231      0.9898  0.9943     0.0004      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        232      0.9902  0.9944     0.0004      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        233      0.9905  0.9945     0.0003      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        234      0.9909  0.9946     0.0004      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        235      0.9913  0.9947     0.0004      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        236      0.9915  0.9948     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        237      0.9919  0.9949     0.0004      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        238      0.9921  0.9950     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        239      0.9925  0.9951     0.0003      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 165 166 167 168 170 171 172 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        240      0.9928  0.9952     0.0003      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        241      0.9931  0.9953     0.0003      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        242      0.9933  0.9954     0.0003      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        243      0.9935  0.9954     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 200 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        244      0.9937  0.9955     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 200 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        245      0.9939  0.9955     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 200 201 202 203 204 205 206 208 209 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 271 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        246      0.9941  0.9956     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 264 265 266 268 271 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        247      0.9943  0.9957     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 264 265 266 268 271 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        248      0.9945  0.9958     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        249      0.9947  0.9958     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        250      0.9948  0.9959     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        251      0.9950  0.9960     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        252      0.9952  0.9960     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        253      0.9954  0.9961     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        254      0.9955  0.9962     0.0002      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        255      0.9957  0.9962     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 301 303 304 305 306 307 309 311
        256      0.9958  0.9963     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        257      0.9959  0.9963     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        258      0.9960  0.9964     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 264 265 266 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        259      0.9962  0.9965     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        260      0.9963  0.9965     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        261      0.9964  0.9966     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        262      0.9965  0.9966     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        263      0.9966  0.9967     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        264      0.9967  0.9967     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 226 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        265      0.9968  0.9967     0.0001      9  1 2 3 4 5 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        266      0.9968  0.9968     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        267      0.9969  0.9968     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        268      0.9970  0.9968     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        269      0.9970  0.9968     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        270      0.9971  0.9968     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        271      0.9972  0.9969     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        272      0.9972  0.9969     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        273      0.9973  0.9969     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        274      0.9973  0.9969     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        275      0.9974  0.9969     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 311
        276      0.9974  0.9969     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 310 311
        277      0.9975  0.9970     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 310 311
        278      0.9975  0.9970     0.0001      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 310 311
        279      0.9976  0.9970     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 310 311
        280      0.9976  0.9970     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 310 311
        281      0.9977  0.9970     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 310 311
        282      0.9977  0.9970     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 309 310 311
        283      0.9977  0.9971     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        284      0.9978  0.9971     0.0000      9  1 2 3 4 5 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 295 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        285      0.9978  0.9971     0.0000      9  1 2 3 4 5 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 288 290 291 292 293 294 295 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        286      0.9979  0.9971     0.0000      9  1 2 3 4 5 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        287      0.9979  0.9971     0.0000      9  1 2 3 4 5 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        288      0.9979  0.9971     0.0000      9  1 2 3 4 5 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        289      0.9979  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        290      0.9980  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 301 303 304 305 306 307 308 309 310 311
        291      0.9980  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        292      0.9980  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        293      0.9981  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        294      0.9981  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        295      0.9981  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        296      0.9981  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        297      0.9982  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 112 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        298      0.9982  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 112 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        299      0.9982  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 112 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        300      0.9982  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 303 304 305 306 307 308 309 310 311
        301      0.9982  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        302      0.9983  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        303      0.9983  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        304      0.9983  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        305      0.9983  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        306      0.9983  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        307      0.9984  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 280 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        308      0.9984  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        309      0.9984  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
        310      0.9984  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311
chosen  311      0.9984  0.9971     0.0000      9  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311

Prune method "backward" penalty 3 nprune 311: selected 311 of 311 terms, and 9 of 9 predictors
After backward pass GRSq 0.9984 RSq 0.9971 
Warning: GCV effective number 776 of parameters >= number 330 of cases
> printh(a.no.thresh)
=== a.no.thresh
Selected 311 of 311 terms, and 9 of 9 predictors 
Importance: temp, ibh, dpg, vis, humidity, doy, wind, ibt, vh
Number of terms at each degree of interaction: 1 21 289
GCV 0.10041    RSS 60.526    GRSq 0.99844    RSq 0.99713
> printh(summary(a.no.thresh))
=== summary(a.no.thresh)
Call: earth(formula=O3~., data=ozone1, trace=4, thresh=0, 
      nk=1000, degree=2)

                                  O3
(Intercept)                  39.9913
h(vh-5740)                   -0.2297
h(vh-5830)                   -1.0165
h(vh-5870)                    1.8626
h(5870-vh)                   -0.3301
wind                         -1.3257
h(humidity-65)                2.3884
h(65-humidity)                0.2411
h(temp-58)                    5.7813
h(58-temp)                    3.3705
h(temp-83)                    0.6636
h(ibh-1108)                  -0.0081
h(1108-ibh)                  -0.0184
h(dpg-13)                    -0.0247
h(13-dpg)                    -2.0784
h(dpg-46)                     0.4005
h(ibt-234)                   -0.2045
h(234-ibt)                    0.4591
h(vis-200)                    0.0581
h(200-vis)                    0.4603
h(doy-92)                    -0.0200
h(92-doy)                    -0.0477
h(vh-5740) * h(wind-6)        0.0276
h(vh-5740) * h(6-wind)       -0.0243
h(vh-5740) * h(wind-8)        0.0224
h(vh-5830) * h(wind-4)        0.1091
h(vh-5830) * h(4-wind)        0.0092
h(vh-5830) * h(wind-6)       -0.4896
h(5870-vh) * wind             0.0081
h(vh-5870) * wind            -0.0063
h(vh-5740) * h(humidity-70)  -0.0103
h(vh-5740) * h(70-humidity)  -0.0002
h(vh-5740) * h(humidity-76)   0.0310
h(vh-5830) * h(humidity-80)  -0.0415
h(vh-5830) * h(80-humidity)  -0.0122
h(vh-5870) * h(humidity-72)  -0.0304
h(vh-5870) * h(72-humidity)  -0.0127
h(vh-5870) * h(humidity-77)  -0.0993
h(5870-vh) * h(humidity-78)   0.0034
h(5870-vh) * h(78-humidity)   0.0018
h(vh-5610) * h(58-temp)      -0.0093
h(vh-5750) * h(58-temp)       0.0106
h(vh-5790) * h(58-temp)       0.0585
h(5870-vh) * h(temp-65)       0.0275
h(5870-vh) * h(65-temp)       0.0010
h(5870-vh) * h(temp-74)      -0.0456
h(5870-vh) * h(temp-78)       0.0195
h(5870-vh) * h(temp-67)      -0.0578
h(5870-vh) * h(temp-69)       0.0523
h(5870-vh) * h(temp-41)       0.0034
h(vh-5880) * h(temp-58)      -0.0264
h(5880-vh) * h(temp-58)      -0.0176
h(vh-5730) * h(ibh-1108)      0.0001
h(5730-vh) * h(ibh-1108)      0.0000
h(vh-5740) * h(ibh-111)      -0.0001
h(vh-5830) * h(ibh-111)       0.0000
h(vh-5870) * h(ibh-111)      -0.0003
h(vh-5740) * h(dpg-60)       -0.0198
h(vh-5740) * h(60-dpg)        0.0073
h(vh-5740) * h(dpg-46)        0.0052
h(vh-5750) * h(dpg-13)        0.0089
h(5750-vh) * h(dpg-13)        0.0011
h(vh-5810) * h(13-dpg)        0.0104
h(5810-vh) * h(13-dpg)       -0.0022
h(vh-5830) * h(dpg-42)       -0.0028
h(vh-5830) * h(42-dpg)        0.0047
h(5870-vh) * h(dpg-28)       -0.0009
h(5870-vh) * h(dpg-54)       -0.0001
h(vh-5810) * h(234-ibt)       0.0128
h(5870-vh) * h(ibt-266)      -0.0513
h(5870-vh) * h(266-ibt)       0.0008
h(5870-vh) * h(ibt-228)      -0.0057
h(5870-vh) * h(ibt-195)      -0.0001
h(vh-5740) * h(vis-100)       0.0014
h(vh-5740) * h(100-vis)       0.0018
h(vh-5740) * h(vis-200)      -0.0005
h(vh-5830) * h(vis-0)        -0.0012
h(vh-5870) * h(vis-100)       0.0066
h(vh-5870) * h(100-vis)      -0.0106
h(vh-5880) * h(200-vis)       0.0037
h(5880-vh) * h(200-vis)       0.0003
h(vh-5740) * h(doy-284)       0.0003
h(vh-5740) * h(284-doy)      -0.0022
h(vh-5740) * h(doy-347)      -0.0129
h(vh-5740) * h(doy-371)       0.0975
h(vh-5740) * h(doy-363)      -0.0142
h(vh-5780) * h(doy-92)       -0.0024
h(vh-5790) * h(92-doy)       -0.0121
h(vh-5820) * h(92-doy)       -0.0186
h(5820-vh) * h(92-doy)       -0.0007
h(vh-5830) * h(doy-346)      -0.0388
h(vh-5830) * h(346-doy)       0.0055
h(vh-5850) * h(doy-92)        0.0002
h(5850-vh) * h(doy-92)        0.0003
h(vh-5870) * h(doy-268)       0.0001
h(vh-5870) * h(268-doy)      -0.0079
wind * h(65-humidity)         0.0663
wind * h(humidity-65)         0.0893
wind * h(temp-83)             0.7042
wind * h(58-temp)            -0.0625
h(wind-4) * h(temp-58)        0.3797
h(4-wind) * h(temp-58)        0.3080
h(wind-5) * h(temp-58)       -0.4752
h(wind-7) * h(temp-58)        0.1866
h(wind-8) * h(temp-58)        1.2363
h(wind-5) * h(ibh-1108)      -0.0007
h(5-wind) * h(ibh-1108)      -0.0002
h(wind-6) * h(1108-ibh)      -0.0186
h(6-wind) * h(1108-ibh)       0.0005
h(wind-3) * h(13-dpg)        -0.0449
h(3-wind) * h(13-dpg)         0.0602
h(wind-6) * h(dpg-13)        -0.0810
h(6-wind) * h(dpg-13)         0.0637
h(wind-8) * h(dpg-46)         0.3677
h(8-wind) * h(dpg-46)        -0.1019
h(wind-6) * h(ibt-234)        0.5779
h(6-wind) * h(ibt-234)        0.2812
h(wind-8) * h(234-ibt)        0.0117
h(8-wind) * h(234-ibt)       -0.0114
h(wind-5) * h(vis-200)        0.0189
h(5-wind) * h(vis-200)       -0.0150
h(wind-7) * h(200-vis)        0.0076
h(7-wind) * h(200-vis)       -0.0092
h(wind-8) * h(200-vis)       -0.0826
h(wind-6) * h(doy-92)         0.0163
h(6-wind) * h(doy-92)         0.0060
h(wind-6) * h(92-doy)        -0.0844
h(6-wind) * h(92-doy)         0.0467
h(wind-8) * h(doy-92)        -0.0616
h(humidity-19) * h(temp-83)  -0.0879
h(humidity-55) * h(temp-58)   0.0110
h(55-humidity) * h(temp-58)   0.0144
h(humidity-60) * h(58-temp)  -0.0177
h(60-humidity) * h(58-temp)  -0.0133
h(humidity-64) * h(temp-58)  -0.0115
h(humidity-71) * h(58-temp)   0.0091
h(humidity-48) * h(1108-ibh)  0.0007
h(48-humidity) * h(1108-ibh) -0.0001
h(humidity-50) * h(ibh-1108)  0.0000
h(50-humidity) * h(ibh-1108)  0.0001
h(humidity-65) * h(1108-ibh) -0.0011
h(humidity-65) * h(ibh-111)   0.0003
h(humidity-76) * h(1108-ibh)  0.0054
h(humidity-81) * h(ibh-1108)  0.0002
h(humidity-48) * h(13-dpg)    0.0067
h(humidity-65) * h(dpg- -69) -0.0117
h(humidity-71) * h(dpg-46)    0.0098
h(71-humidity) * h(dpg-46)    0.0192
h(humidity-74) * h(dpg-13)   -0.0109
h(humidity-76) * h(13-dpg)    0.0603
h(76-humidity) * h(13-dpg)   -0.0033
h(humidity-79) * h(dpg-13)   -0.0384
h(79-humidity) * h(dpg-13)   -0.0137
h(humidity-80) * h(13-dpg)   -0.0396
h(humidity-67) * h(234-ibt)  -0.0092
h(67-humidity) * h(234-ibt)  -0.0047
h(humidity-72) * h(ibt-234)   0.0266
h(72-humidity) * h(ibt-234)   0.0122
h(humidity-45) * h(vis-200)  -0.0028
h(45-humidity) * h(vis-200)  -0.0070
h(humidity-65) * h(vis-0)    -0.0014
h(humidity-70) * h(200-vis)  -0.0068
h(70-humidity) * h(200-vis)  -0.0017
h(humidity-81) * h(200-vis)   0.0064
h(humidity-62) * h(92-doy)   -0.0191
h(62-humidity) * h(92-doy)    0.0042
h(humidity-65) * h(doy-33)   -0.0064
h(humidity-71) * h(doy-92)    0.0029
h(humidity-73) * h(92-doy)   -0.0482
h(humidity-76) * h(doy-92)   -0.0072
h(76-humidity) * h(doy-92)    0.0009
h(temp-53) * h(ibh-1108)     -0.0001
h(53-temp) * h(ibh-1108)      0.0003
h(temp-58) * h(ibh-2234)      0.0005
h(temp-58) * h(2234-ibh)     -0.0013
h(temp-58) * h(ibh-3234)      0.0007
h(temp-58) * h(ibh-4281)     -0.0008
h(temp-64) * h(ibh-1108)     -0.0006
h(temp-71) * h(ibh-1108)      0.0016
h(temp-75) * h(1108-ibh)      0.0027
h(75-temp) * h(1108-ibh)     -0.0001
h(temp-75) * h(ibh-1108)     -0.0026
h(temp-83) * h(ibh-111)      -0.0005
h(temp-58) * h(dpg-54)       -0.0019
h(temp-58) * h(54-dpg)        0.0133
h(temp-58) * h(dpg-30)        0.0173
h(58-temp) * h(dpg-49)       -0.0092
h(temp-74) * h(dpg-13)        0.0522
h(74-temp) * h(dpg-13)        0.0047
h(temp-75) * h(13-dpg)        0.0596
h(temp-80) * h(13-dpg)        0.3164
h(80-temp) * h(13-dpg)        0.0537
h(temp-58) * h(ibt-266)       0.1456
h(temp-58) * h(266-ibt)      -0.0508
h(58-temp) * h(ibt-178)       0.0793
h(58-temp) * h(ibt-223)      -0.9993
h(58-temp) * h(ibt-114)      -0.0189
h(temp-62) * h(234-ibt)       0.0028
h(temp-69) * h(234-ibt)      -0.0607
h(temp-75) * h(234-ibt)       0.2250
h(temp-76) * h(234-ibt)      -0.2002
h(76-temp) * h(234-ibt)      -0.0201
h(temp-80) * h(ibt-234)      -0.1487
h(80-temp) * h(ibt-234)       0.1688
h(temp-58) * h(vis-120)      -0.0089
h(temp-58) * h(120-vis)       0.0007
h(58-temp) * h(vis-250)      -0.0034
h(temp-61) * h(vis-200)      -0.0007
h(61-temp) * h(vis-200)      -0.0128
h(temp-72) * h(200-vis)      -0.0353
h(72-temp) * h(200-vis)      -0.0046
h(temp-75) * h(200-vis)       0.0225
h(temp-83) * h(vis-100)      -0.1630
h(temp-83) * h(100-vis)       0.0200
h(temp-58) * h(doy-159)      -0.0071
h(temp-58) * h(159-doy)       0.0062
h(temp-58) * h(doy-339)       0.0229
h(58-temp) * h(doy-360)       0.0500
h(58-temp) * h(360-doy)       0.0020
h(temp-58) * h(doy-311)       0.0014
h(temp-61) * h(92-doy)        0.0234
h(61-temp) * h(92-doy)        0.0027
h(temp-83) * h(doy-267)      -0.0507
h(temp-83) * h(267-doy)       0.0319
h(ibh-111) * h(dpg-46)       -0.0001
h(1108-ibh) * h(dpg-44)       0.0008
h(1108-ibh) * h(44-dpg)      -0.0001
h(ibh-1108) * h(dpg-38)      -0.0001
h(ibh-1108) * h(38-dpg)       0.0001
h(1108-ibh) * h(dpg-60)      -0.0008
h(ibh-3608) * h(dpg-13)       0.0000
h(3608-ibh) * h(dpg-13)      -0.0001
h(1108-ibh) * h(ibt-273)     -0.0020
h(1108-ibh) * h(273-ibt)      0.0000
h(ibh-1108) * h(ibt-148)     -0.0001
h(ibh-1108) * h(ibt-186)     -0.0001
h(ibh-1108) * h(ibt-220)      0.0002
h(ibh-3234) * h(234-ibt)      0.0000
h(3234-ibh) * h(234-ibt)     -0.0001
h(1108-ibh) * h(vis-60)       0.0001
h(1108-ibh) * h(60-vis)      -0.0003
h(1108-ibh) * h(vis-120)     -0.0006
h(1108-ibh) * h(vis-150)      0.0006
h(ibh-1108) * h(vis-300)      0.0001
h(ibh-1108) * h(300-vis)      0.0000
h(ibh-3720) * h(200-vis)      0.0001
h(3720-ibh) * h(200-vis)      0.0000
h(1108-ibh) * h(doy-353)     -0.0005
h(1108-ibh) * h(353-doy)      0.0000
h(ibh-1108) * h(doy-295)      0.0001
h(ibh-1108) * h(295-doy)      0.0000
h(ibh-2982) * h(doy-92)       0.0000
h(2982-ibh) * h(doy-92)       0.0000
h(ibh-4212) * h(92-doy)       0.0004
h(dpg-9) * h(ibt-234)         0.0404
h(9-dpg) * h(ibt-234)        -0.0423
h(dpg-13) * h(ibt-138)        0.0006
h(dpg-13) * h(138-ibt)        0.0012
h(13-dpg) * h(ibt-211)        0.0151
h(13-dpg) * h(211-ibt)       -0.0006
h(dpg-13) * h(ibt-175)       -0.0118
h(dpg-32) * h(ibt-234)       -0.0090
h(dpg-46) * h(ibt- -25)      -0.0015
h(dpg-13) * h(vis-70)         0.0066
h(dpg-13) * h(70-vis)        -0.0006
h(dpg-13) * h(vis-100)       -0.0007
h(13-dpg) * h(vis-200)        0.0035
h(13-dpg) * h(200-vis)        0.0098
h(dpg-13) * h(vis-300)       -0.0045
h(dpg-46) * h(vis-200)        0.0007
h(dpg-46) * h(200-vis)       -0.0023
h(dpg-46) * h(vis-120)       -0.0036
h(dpg-70) * h(200-vis)        0.0061
h(70-dpg) * h(200-vis)       -0.0072
h(dpg-13) * h(doy-267)        0.0032
h(dpg-13) * h(267-doy)       -0.0051
h(13-dpg) * h(doy-353)       -0.0138
h(13-dpg) * h(353-doy)        0.0024
h(dpg-13) * h(doy-201)       -0.0032
h(dpg-13) * h(doy-363)       -0.0385
h(dpg-13) * h(doy-339)       -0.0283
h(dpg-23) * h(92-doy)        -0.0033
h(23-dpg) * h(92-doy)        -0.0104
h(dpg-46) * h(doy-209)       -0.0002
h(dpg-46) * h(209-doy)        0.0087
h(dpg-52) * h(doy-92)         0.0023
h(ibt-77) * h(vis-200)        0.0002
h(77-ibt) * h(vis-200)        0.0035
h(ibt-154) * h(vis-200)      -0.0018
h(ibt-191) * h(200-vis)      -0.0042
h(ibt-234) * h(vis-40)       -0.0355
h(ibt-234) * h(40-vis)        0.0025
h(ibt-234) * h(vis-70)        0.0358
h(ibt-260) * h(200-vis)      -0.0106
h(260-ibt) * h(200-vis)      -0.0005
h(ibt-200) * h(doy-92)        0.0010
h(200-ibt) * h(doy-92)       -0.0008
h(ibt-234) * h(doy-268)      -0.0239
h(ibt-234) * h(268-doy)      -0.0127
h(234-ibt) * h(doy-371)      -0.0108
h(234-ibt) * h(doy-339)       0.0021
h(vis-100) * h(doy-92)        0.0000
h(100-vis) * h(doy-92)       -0.0005
h(vis-200) * h(doy-135)       0.0001
h(vis-200) * h(135-doy)      -0.0007
h(vis-200) * h(92-doy)        0.0031
h(200-vis) * h(92-doy)        0.0009
h(vis-200) * h(doy-367)       0.0170
h(200-vis) * h(doy-371)       0.0071
h(200-vis) * h(doy-319)       0.0004
h(vis-250) * h(92-doy)        0.0030

Selected 311 of 311 terms, and 9 of 9 predictors 
Importance: temp, ibh, dpg, vis, humidity, doy, wind, ibt, vh
Number of terms at each degree of interaction: 1 21 289
GCV 0.10041    RSS 60.526    GRSq 0.99844    RSq 0.99713
> plotmo(a.no.thresh, degree1=1, degree2=c(4,9,16), clip=0, , caption="test with thresh=0")
> 
> cat("--- ../../tests/test.earth.R -------------------------\n")
--- ../../tests/test.earth.R -------------------------
> 
> options(options.old)
> source("../../tests/test.earth.R")
Call: earth(formula=O3~., data=ozone1, trace=4, degree=2)
x is a 330 by 9 matrix: 1=vh, 2=wind, 3=humidity, 4=temp, 5=ibh, 6=dpg, 7=ibt, 8=vis, 9=doy
First few rows of x are
       vh wind humidity temp  ibh dpg ibt vis doy
[1,] 5710    4       28   40 2693 -25  87 250  33
[2,] 5700    3       37   45  590 -24 128 100  34
[3,] 5760    3       51   54 1450  25 139  60  35
[4,] 5720    4       69   35 1568  15 121  60  36
[5,] 5790    6       19   45 2631 -33 123 100  37
[6,] 5790    3       25   55  554 -28 182 250  38
y is a 330 by 1 matrix: 1=O3
First few rows of y are
     O3
[1,]  3
[2,]  5
[3,]  5
[4,]  6
[5,]  4
[6,]  4
Approximate memory use after expanding x and y matrices: 0.2 MBytes
Forward pass: minspan 8 endspan 15

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   Parents
1      0.0000 0.0000                                             1
2      0.6493 0.6599       0.6599    4         temp          58  2   3   
4      0.6903 0.7088      0.04898    5          ibh        1108  4   5   
6      0.7102 0.7361      0.02722    9          doy          92  6   7   
8      0.7295 0.7614      0.02532    3     humidity          55  8   9   2   
10     0.7546 0.7904      0.02906    6          dpg          54  10  11  2   
12     0.7597 0.8015      0.01109    8          vis         200  12  13  
14     0.7632 0.8109     0.009396    2         wind           7  14  15  13  
16     0.7640 0.8179      0.00697    6          dpg          44  16  17  5   
18     0.7685 0.8275     0.009595    7          ibt         234  18  19  
20     0.7662 0.8318     0.004351    9          doy         159  20  21  2   

Reached max number of terms 21
After forward pass GRSq 0.7662 RSq 0.8318
Forward pass complete: 21 terms

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6408  0.6462     0.6408      1  1 2
          3      0.6910  0.7003     0.0502      2  1 2 4
          4      0.7022  0.7156     0.0112      3  1 2 9 19
          5      0.7114  0.7286     0.0092      4  1 2 6 9 19
          6      0.7379  0.7574     0.0265      4  1 2 6 7 9 19
          7      0.7566  0.7783     0.0187      5  1 2 6 7 9 11 19
          8      0.7658  0.7900     0.0091      6  1 2 6 7 9 11 13 19
          9      0.7772  0.8035     0.0115      7  1 2 6 7 9 11 13 17 19
         10      0.7855  0.8138     0.0082      7  1 2 6 7 9 10 11 13 17 19
chosen   11      0.7913  0.8218     0.0059      8  1 2 6 7 9 10 11 13 14 17 19
         12      0.7897  0.8234    -0.0016      8  1 2 6 7 9 10 11 13 14 17 19 20
         13      0.7893  0.8260    -0.0004      8  1 2 6 7 9 10 11 13 14 17 19 20 21
         14      0.7869  0.8269    -0.0024      8  1 2 5 6 7 9 10 11 13 14 17 19 20 21
         15      0.7853  0.8285    -0.0016      8  1 2 5 6 7 9 10 11 13 14 16 17 19 20 21
         16      0.7832  0.8298    -0.0021      8  1 2 5 6 7 9 10 11 13 14 15 16 17 19 20 21
         17      0.7806  0.8307    -0.0025      8  1 2 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         18      0.7774  0.8312    -0.0033      8  1 2 4 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         19      0.7739  0.8315    -0.0034      8  1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         20      0.7702  0.8318    -0.0037      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21
         21      0.7662  0.8318    -0.0040      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21

Prune method "backward" penalty 3 nprune 21: selected 11 of 21 terms, and 8 of 9 predictors
After backward pass GRSq 0.7913 RSq 0.8218 
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.4    RSS 3762    GRSq 0.791    RSq 0.822
Call: earth(formula=O3~., data=ozone1, trace=4, degree=2)

                                O3
(Intercept)                 15.029
h(temp-58)                   0.313
h(234-ibt)                  -0.046
h(200-vis)                   0.022
h(doy-92)                   -0.024
h(92-doy)                   -0.134
h(wind-7) * h(200-vis)      -0.019
h(55-humidity) * h(temp-58) -0.022
h(temp-58) * h(dpg-54)      -0.019
h(temp-58) * h(54-dpg)       0.004
h(1108-ibh) * h(44-dpg)      0.000

Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.4    RSS 3762    GRSq 0.791    RSq 0.822
          col used nsubsets     gcv       rss  
temp        4    1       10 100.000 1 100.000 1
humidity    3    1        8  12.676 1  14.784 1
ibt         7    1        8  12.676 1  14.784 1
doy         9    1        7  11.265 1  12.926 1
dpg         6    1        5   6.754 1   7.838 1
ibh         5    1        4   9.577 0  10.455 0
vis         8    1        4   4.384 1   5.295 1
wind        2    1        1   0.741 1   0.977 1
vh-unused   1    0        0   0.000 1   0.000 1
Selected 5 of 21 terms, and 4 of 9 predictors 
Importance: temp, humidity, ibt, ibh-unused, doy, vh-unused, wind-unused, dpg-unused, vis-unused
Number of terms at each degree of interaction: 1 3 1
GCV 18.6    RSS 5730    GRSq 0.711    RSq 0.729

0 1 2 
1 3 1 
[1] 0 1 1 1 1 1 1 2 2
[1] "vh"       "wind"     "humidity"
[1] 5730
[1] 1 2 5 3 4
       O3
[1,] 6.63
Selected 12 of 20 terms, and 9 of 9 predictors 
Importance: temp, vh, humidity, dpg, doy, ibh, ibt, vis, wind
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.6731    RSS 4190.68    GRSq 0.77207    RSq 0.801534
Call: earth(formula=O3~., data=ozone1, degree=1, minspan=1)

O3 =
  12.5618
  -  0.0164945 * pmax(0,     5740 -       vh) 
  -   0.333539 * pmax(0,     wind -        3) 
  -   0.133342 * pmax(0,       54 - humidity) 
  +   0.318748 * pmax(0,     temp -       58) 
  - 0.00442377 * pmax(0,     1023 -      ibh) 
  -   0.100506 * pmax(0,      dpg -       12) 
  +  0.0372147 * pmax(0,      ibt -      120) 
  +  0.0446173 * pmax(0,       80 -      vis) 
  +  0.0419030 * pmax(0,      doy -       89) 
  -   0.114964 * pmax(0,       89 -      doy) 
  -  0.0833327 * pmax(0,      doy -      159) 

Selected 12 of 20 terms, and 9 of 9 predictors 
Importance: temp, vh, humidity, dpg, doy, ibh, ibt, vis, wind
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.6731    RSS 4190.68    GRSq 0.77207    RSq 0.801534
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
