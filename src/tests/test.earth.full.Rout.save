> # test.earth.full.R: test earth
> 
> print(R.version.string)
[1] "R version 2.9.2  (2009-10-01 Ra 1.2.8)"
> 
> library(earth)
Loading required package: leaps
> library(mda)
Loading required package: class
> source("check.models.equal.R")
> data(ozone1)
> data(trees)
> data(etitanic)
> if(!interactive())
+     postscript()
> 
> PRINT.TIME <- FALSE         # FALSE for no time results (for diff against reference)
> PLOT <- TRUE                # TRUE to do plots too, FALSE for speed
> options.old <- options()
> options(warn=1) # print warnings as they occur
> options(digits=5)
> 
> printh <- function(x, expect.warning=FALSE, max.print=0) # like print but with a header
+ {
+     cat("===", deparse(substitute(x)), " ", sep="")
+     if(expect.warning)
+         cat(" expect warning -->")
+     else if (NROW(x) > 1)
+         cat("\n")
+     if (max.print > 0)
+         print(head(x, n=max.print))
+     else
+         print(x)
+ }
> 
> #--- test examples from man pages ------------------------------------------------------------
> 
> cat("--- earth.Rd -----------------------------\n")
--- earth.Rd -----------------------------
> example(earth)

earth> a <- earth(Volume ~ ., data = trees)

earth> summary(a, digits = 2, style = "pmax")
Call: earth(formula=Volume~., data=trees)

Volume =
  27
  +  6.2 * pmax(0,  Girth -     14) 
  -  3.3 * pmax(0,     14 -  Girth) 
  + 0.49 * pmax(0, Height -     72) 

Selected 4 of 6 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 11    RSS 197    GRSq 0.96    RSq 0.98
> 
> a <- earth(mpg ~ ., data = mtcars, pmethod = "none", trace = 4)
Call: earth(formula=mpg~., data=mtcars, trace=4, pmethod="none")
x is a 32 by 10 matrix: 1=cyl, 2=disp, 3=hp, 4=drat, 5=wt, 6=qsec, 7=vs, 8=am, 9=gear, 10=carb
First few rows of x are
     cyl disp  hp drat    wt  qsec vs am gear carb
[1,]   6  160 110 3.90 2.620 16.46  0  1    4    4
[2,]   6  160 110 3.90 2.875 17.02  0  1    4    4
[3,]   4  108  93 3.85 2.320 18.61  1  1    4    1
[4,]   6  258 110 3.08 3.215 19.44  1  0    3    1
[5,]   8  360 175 3.15 3.440 17.02  0  0    3    2
[6,]   6  225 105 2.76 3.460 20.22  1  0    3    1
y is a 32 by 1 matrix: 1=mpg
First few rows of y are
      mpg
[1,] 21.0
[2,] 21.0
[3,] 22.8
[4,] 21.4
[5,] 18.7
[6,] 18.1
Approximate memory use after expanding x and y matrices: 0.05 MBytes
Forward pass: minspan 5 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.8157 0.8602       0.8602    2         disp         145  2   3   
4      0.7815 0.8797      0.01956    3           hp         123  4   5   
6      0.7601 0.9099      0.03016    6         qsec       18.52  6   7   
8      0.6839 0.9260      0.01611    4         drat        3.15  8   9   
10     0.5031 0.9374      0.01144    9         gear           4  10  11  
12     0.3575 0.9458     0.008417    2         disp       275.8  12      
14     0.0073 0.9494     0.003535    6         qsec       17.02  13      
16    -0.5893 0.9587     0.009271    7           vs           0< 14      
18   -32.1650 0.9655     0.006835    1          cyl           6  15  16  reject term

Reached min GRSq (GRSq -32.165 < -10)
After forward pass GRSq -32.17 RSq 0.9655
Forward pass complete: 17 terms (14 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6706  0.7118     0.6706      1  1 3
          3      0.8157  0.8602     0.1450      1  1 2 3
          4      0.7988  0.8691    -0.0169      2  1 2 3 4
          5      0.7815  0.8797    -0.0173      2  1 2 3 4 5
          6      0.7601  0.8899    -0.0214      4  1 3 4 6 13 14
          7      0.7934  0.9224     0.0332      4  1 3 4 5 6 13 14
          8      0.7852  0.9354    -0.0082      5  1 3 4 5 6 9 13 14
          9      0.7579  0.9433    -0.0272      5  1 3 4 5 6 9 12 13 14
         10      0.6997  0.9472    -0.0582      6  1 3 4 5 6 9 10 12 13 14
         11      0.6132  0.9513    -0.0865      6  1 2 3 4 5 6 9 10 12 13 14
         12      0.4534  0.9539    -0.1598      6  1 2 3 4 5 6 9 10 11 12 13 14
         13      0.1741  0.9579    -0.2793      6  1 2 3 4 5 6 8 9 10 11 12 13 14
chosen   14     -0.5893  0.9587    -0.7634      6  1 2 3 4 5 6 7 8 9 10 11 12 13 14

Prune method "none" penalty 2 nprune 14: selected 14 of 14 terms, and 6 of 10 predictors
After backward pass GRSq -0.5893 RSq 0.9587 
> 
> set.seed(1)
> train.subset <- sample(1:nrow(trees), .8 * nrow(trees))
> test.subset <- (1:nrow(trees))[-train.subset]
> a <- earth(Volume ~ ., data = trees[train.subset, ])
> yhat <- predict(a, newdata = trees[test.subset, ])
> y <- trees$Volume[test.subset]
> printh(sum((yhat - mean(yhat))^2) / sum((y - mean(y))^2)) # print R-Squared
===sum((yhat - mean(yhat))^2)/sum((y - mean(y))^2) [1] 1.0577
> get.used.pred.names <- function(obj) # obj is an earth object
+ {
+   any1 <- function(x) any(x != 0)    # like any but no warning if x is double
+   names(which(apply(obj$dirs[obj$selected.terms,,drop=FALSE],2,any1)))
+ }
> printh(get.used.pred.names(a))
===get.used.pred.names(a) 
[1] "Girth"  "Height"
> 
> a1 <- earth(survived ~ ., data=etitanic,   # c.f. Harrell "Reg. Mod. Strat." ch. 12
+              degree=2, trace=1,
+              glm=list(family=binomial))
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=survived
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.4069 RSq 0.4487
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4222 RSq 0.4441 
GLM survived: null.deviance 1414.6 (1045 dof)   deviance 879.62 (1037 dof)   iters 5
> printh(a1)
===a1 
Earth selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
Earth GCV 0.13985    RSS 140.47    GRSq 0.42218    RSq 0.44409

GLM null.deviance 1414.6 (1045 dof)   deviance 879.62 (1037 dof)   iters 5
> 
> a1a <- earth(etitanic[,-2], etitanic[,2],  # equivalent but using earth.default
+              degree=2, trace=1,
+              glm=list(family=binomial))
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=etitanic[,2]
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.4069 RSq 0.4487
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4222 RSq 0.4441 
GLM etitanic[,2]: null.deviance 1414.6 (1045 dof)   deviance 879.62 (1037 dof)   iters 5
> printh(a1a)
===a1a 
Earth selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
Earth GCV 0.13985    RSS 140.47    GRSq 0.42218    RSq 0.44409

GLM null.deviance 1414.6 (1045 dof)   deviance 879.62 (1037 dof)   iters 5
> 
> a2 <- earth(pclass ~ ., data=etitanic, trace=1, glm=list(family=binomial))
x is a 1046 by 5 matrix: 1=survived, 2=sexmale, 3=age, 4=sibsp, 5=parch
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14
Reached delta RSq threshold (DeltaRSq 0.00061857 < 0.001)
After forward pass GRSq 0.163 RSq 0.1947
Prune method "backward" penalty 2 nprune 10: selected 8 of 10 terms, and 4 of 5 predictors
After backward pass GRSq 0.1670 RSq 0.1891 
GLM 1st: null.deviance 1223.3 (1045 dof)   deviance 920.8 (1038 dof)   iters 5
GLM 2nd: null.deviance 1175.3 (1045 dof)   deviance 1147.5 (1038 dof)   iters 5
GLM 3rd: null.deviance 1448.2 (1045 dof)   deviance 1142.8 (1038 dof)   iters 5
> printh(a2)
===a2 
Earth selected 8 of 10 terms, and 4 of 5 predictors 
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

Earth
        GCV    RSS       GRSq      RSq
1st 0.14834 150.75  0.2514487 0.271371
2nd 0.18855 191.61 -0.0049713 0.021776
3rd 0.19277 195.90  0.2290327 0.249552
All 0.52966 538.25  0.1669694 0.189140

GLM (family binomial, link logit)
    null.deviance   df deviance   df iters converged
1st        1223.3 1045    920.8 1038     5         1
2nd        1175.3 1045   1147.5 1038     5         1
3rd        1448.2 1045   1142.8 1038     5         1
> 
> ldose <- rep(0:5, 2) - 2 # V&R 4th ed. p. 191
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> pair <- cbind(numdead, numalive=20 - numdead)
> 
> a3 <- earth(pair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=binomial(link=probit), maxit=100))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 124.88 (11 dof)   deviance 5.566 (9 dof)   iters 4
> printh(a3)
===a3 
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 2.3761    RSS 9.7024    GRSq 0.95249    RSq 0.98076

GLM null.deviance 124.88 (11 dof)   deviance 5.566 (9 dof)   iters 4
> 
> numdead2 <- c(2,8,11,12,20,23,0,4,6,16,12,14) # bogus data
> doublepair <- cbind(numdead, numalive=20-numdead,
+                     numdead2=numdead2, numalive2=30-numdead2)
> 
> a4 <- earth(doublepair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family="binomial"))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.658 RSq 0.9293
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.8255 RSq 0.9293 
GLM numdead: null.deviance 124.88 (11 dof)   deviance 6.757 (9 dof)   iters 4
GLM numdead2: null.deviance 91.625 (11 dof)   deviance 16.067 (9 dof)   iters 4
> printh(a4)
===a4 
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
             GCV     RSS    GRSq     RSq
numdead   2.3761  9.7024 0.95249 0.98076
numdead2 15.7738 64.4095 0.70798 0.88175
All      18.1499 74.1119 0.82552 0.92934

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead        124.876 11    6.757  9     4         1
numdead2        91.625 11   16.067  9     4         1
> 
> counts <- c(18,17,15,20,10,20,25,13,12) # Dobson 1990 p. 93
> outcome <- gl(3,1,9)
> treatment <- gl(3,3)
> 
> a5 <- earth(counts ~ outcome + treatment, trace=1, pmethod="none",
+             glm=list(family=poisson))
x is a 9 by 4 matrix: 1=outcome2, 2=outcome3, 3=treatment2, 4=treatment3
y is a 9 by 1 matrix: 1=counts
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -6.576 RSq 0.5265
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 4 predictors
After backward pass GRSq -0.894 RSq 0.5265 
GLM counts: null.deviance 10.581 (8 dof)   deviance 5.1291 (6 dof)   iters 4
> printh(a5)
===a5 
Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.333    GRSq -0.89394    RSq 0.52652

GLM null.deviance 10.581 (8 dof)   deviance 5.1291 (6 dof)   iters 4
> 
> a6 <- earth(numdead ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=gaussian(link=identity)))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 504.25 (11 dof)   deviance 9.7024 (9 dof)   iters 2
> printh(a6$coefficients == a6$glm.coefficients)  # all TRUE
===a6$coefficients == a6$glm.coefficients 
            numdead
(Intercept)    TRUE
h(ldose--2)    TRUE
sexmale        TRUE
> printh(a6)
===a6 
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 2.3761    RSS 9.7024    GRSq 0.95249    RSq 0.98076

GLM null.deviance 504.25 (11 dof)   deviance 9.7024 (9 dof)   iters 2
> 
> remove(ldose)
> remove(sex)
> remove(numdead)
> remove(pair)
> remove(numdead2)
> remove(doublepair)
> remove(counts)
> remove(outcome)
> remove(treatment)
> 
> printh(earth(cbind(Volume,lvol=log(Volume)) ~ ., data=trees))
===earth(cbind(Volume, lvol = log(Volume)) ~ ., data = trees) 
Selected 4 of 6 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

            GCV      RSS    GRSq     RSq
Volume 10.60632 197.0722 0.96201 0.97569
lvol    0.01354   0.2515 0.95270 0.96973
All    10.61985 197.3237 0.96200 0.97568
> attach(trees)
> printh(earth(data.frame(Girth,Height), data.frame(Volume,lvol=log(Volume))))
===earth(data.frame(Girth, Height), data.frame(Volume, lvol = log(Volume))) 
Selected 4 of 6 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

            GCV      RSS    GRSq     RSq
Volume 10.60632 197.0722 0.96201 0.97569
lvol    0.01354   0.2515 0.95270 0.96973
All    10.61985 197.3237 0.96200 0.97568
> detach(trees)
> 
> cat("--- print.default of earth object---------\n")
--- print.default of earth object---------
> print.default(a, digits=3)
$bx
      (Intercept) h(Girth-13.7) h(13.7-Girth) h(Height-75)
 [1,]           1           0.0           2.6            5
 [2,]           1           0.0           2.3            1
 [3,]           1           0.0           0.8           10
 [4,]           1           3.6           0.0            6
 [5,]           1           0.0           2.9            8
 [6,]           1           2.3           0.0            0
 [7,]           1           4.2           0.0            5
 [8,]           1           0.0           0.8            0
 [9,]           1           0.0           1.7            0
[10,]           1           0.0           5.1            0
[11,]           1           0.0           3.0            6
[12,]           1           0.0           3.2            0
[13,]           1           0.0           2.0            0
[14,]           1           0.0           2.7            0
[15,]           1           0.0           0.0            0
[16,]           1           0.0           2.7            0
[17,]           1           0.0           2.4            4
[18,]           1           4.3           0.0            5
[19,]           1           0.3           0.0            3
[20,]           1           0.0           2.5            0
[21,]           1           0.8           0.0            0
[22,]           1           0.0           4.9            0
[23,]           1           3.8           0.0            7
[24,]           1           0.5           0.0            5

$dirs
              Girth Height
(Intercept)       0      0
h(Girth-13.7)     1      0
h(13.7-Girth)    -1      0
h(Height-75)      0      1
h(75-Height)      0     -1

$cuts
              Girth Height
(Intercept)     0.0      0
h(Girth-13.7)  13.7      0
h(13.7-Girth)  13.7      0
h(Height-75)    0.0     75
h(75-Height)    0.0     75

$selected.terms
[1] 1 2 3 4

$prune.terms
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    0    0    0    0
[2,]    1    2    0    0    0
[3,]    1    2    3    0    0
[4,]    1    2    3    4    0
[5,]    1    2    3    4    5

$rss
[1] 126

$rsq
[1] 0.973

$gcv
[1] 10.5

$grsq
[1] 0.951

$rss.per.response
[1] 126

$rsq.per.response
[1] 0.973

$gcv.per.response
[1] 10.5

$grsq.per.response
[1] 0.951

$rss.per.subset
[1] 4739  796  236  126  125

$gcv.per.subset
[1] 215.0  43.3  15.7  10.5  13.4

$fitted.values
      Volume
 [1,]  21.82
 [2,]  19.95
 [3,]  32.02
 [4,]  52.91
 [5,]  22.95
 [6,]  40.92
 [7,]  55.66
 [8,]  24.64
 [9,]  21.38
[10,]   9.07
[11,]  21.11
[12,]  15.95
[13,]  20.30
[14,]  17.76
[15,]  27.54
[16,]  17.76
[17,]  21.80
[18,]  56.24
[19,]  31.50
[20,]  18.49
[21,]  32.19
[22,]   9.80
[23,]  54.81
[24,]  34.14

$residuals
      Volume
 [1,]  0.784
 [2,]  1.051
 [3,]  1.775
 [4,]  2.492
 [5,] -3.245
 [6,] -2.616
 [7,]  2.640
 [8,] -2.441
 [9,] -2.283
[10,]  1.226
[11,] -2.307
[12,]  0.448
[13,]  1.003
[14,] -2.163
[15,] -1.837
[16,]  0.437
[17,]  2.398
[18,] -4.742
[19,]  3.003
[20,]  1.413
[21,]  4.109
[22,]  0.402
[23,]  0.890
[24,] -2.437

$coefficients
              Volume
(Intercept)   27.537
h(Girth-13.7)  5.817
h(13.7-Girth) -3.620
h(Height-75)   0.738

$penalty
[1] 2

$namesx.org
[1] "Girth"  "Height"

$namesx
[1] "Girth"  "Height"

$terms
Volume ~ Girth + Height
attr(,"variables")
list(Volume, Girth, Height)
attr(,"factors")
       Girth Height
Volume     0      0
Girth      1      0
Height     0      1
attr(,"term.labels")
[1] "Girth"  "Height"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(Volume, Girth, Height)
attr(,"dataClasses")
   Volume     Girth    Height 
"numeric" "numeric" "numeric" 

$call
earth(formula = Volume ~ ., data = trees[train.subset, ])

attr(,"class")
[1] "earth"
> cat("--- done print.default of earth object----\n")
--- done print.default of earth object----
> if (PLOT)
+     plot(a)
> library(mda)
> (a <- fda(Species~., data=iris, method=earth, keepxy=TRUE))
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.84 100.00 

Training Misclassification Error: 0.02667 ( N = 150 )
> if (PLOT)
+     plot(a)
> printh(summary(a$fit))
===summary(a$fit) 
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE)

                          y1       y2
(Intercept)         -2.25936 -0.57709
h(Sepal.Length-4.9) -0.14994 -0.30581
h(Petal.Length-3.6)  1.39103  0.31757
h(Petal.Length-4.5) -0.50095  1.27312
h(4.5-Petal.Length)  1.14941 -0.02317
h(Petal.Length-5.4) -0.84627 -1.47152
h(Petal.Width-1.6)   2.29784  3.94512
h(Petal.Width-1.9)  -2.72633 -4.69223

Selected 8 of 13 terms, and 3 of 4 predictors 
Importance: Petal.Length, Petal.Width, Sepal.Length, Sepal.Width-unused
Number of terms at each degree of interaction: 1 7 (additive model)

         GCV    RSS    GRSq     RSq
y1  0.064453  7.831 0.93640 0.94779
y2  0.125599 15.260 0.87607 0.89826
All 0.190052 23.091 0.90624 0.92303
> if (PLOT) {
+     plot(a$fit)
+     plotmo(a$fit, ycolumn=1, ylim=c(-1.5,1.5), clip=FALSE)
+     plotmo(a$fit, ycolumn=2, ylim=c(-1.5,1.5), clip=FALSE)
+ }
> a <- update(a, nk=3) # not on man page
> printh(a)
===a 
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE, 
    nk = 3)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 94.38 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> printh(summary(a$fit))
===summary(a$fit) 
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE, nk=3)

                        y1        y2
(Intercept)        -1.3008 -0.743677
h(Petal.Width-1.2)  1.3512  2.223662
h(1.2-Petal.Width)  2.6013  0.038969

Selected 3 of 3 terms, and 1 of 4 predictors 
Importance: Petal.Width, Sepal.Length-unused, Sepal.Width-unused, Petal.Length-unused
Number of terms at each degree of interaction: 1 2 (additive model)

        GCV    RSS    GRSq     RSq
y1  0.11904 16.685 0.88255 0.88877
y2  0.24302 34.063 0.76021 0.77292
All 0.36205 50.748 0.82138 0.83084
> head(etitanic) # pclass and sex are unordered factors
  pclass survived    sex     age sibsp parch
1    1st        1 female 29.0000     0     0
2    1st        1   male  0.9167     1     2
3    1st        0 female  2.0000     1     2
4    1st        0   male 30.0000     1     2
5    1st        0 female 25.0000     1     2
6    1st        1   male 48.0000     0     0
> earth(pclass ~ ., data=etitanic, trace=2)
x is a 1046 by 5 matrix: 1=survived, 2=sexmale, 3=age, 4=sibsp, 5=parch
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 6 endspan 9

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0910 0.0980      0.09797    3          age          26  2   3   
4      0.1525 0.1622       0.0642    1     survived           0< 4       
6      0.1598 0.1758      0.01368    4        sibsp           1  5   6   
8      0.1670 0.1891       0.0133    5        parch           2  7   8   
10     0.1664 0.1918     0.002617    3          age          21  9       
12     0.1656 0.1941     0.002356    3          age          56  10      
14     0.1630 0.1947    0.0006186    3          age          48  11      reject term

Reached delta RSq threshold (DeltaRSq 0.00061857 < 0.001)
After forward pass GRSq 0.163 RSq 0.1947
Forward pass complete: 13 terms (10 terms used)
Prune method "backward" penalty 2 nprune 10: selected 8 of 10 terms, and 4 of 5 predictors
After backward pass GRSq 0.1670 RSq 0.1891 
Selected 8 of 10 terms, and 4 of 5 predictors 
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

        GCV    RSS       GRSq      RSq
1st 0.14834 150.75  0.2514487 0.271371
2nd 0.18855 191.61 -0.0049713 0.021776
3rd 0.19277 195.90  0.2290327 0.249552
All 0.52966 538.25  0.1669694 0.189140
> 
> cat("--- format.earth.Rd ----------------------\n")
--- format.earth.Rd ----------------------
> as.func <- function( # convert expression string to func
+                object, digits = 8, use.names = TRUE, ...)
+   eval(parse(text=paste(
+     "function(x)\n",
+     "{\n",
+     "if(is.vector(x))\n",
+     "  x <- matrix(x, nrow = 1, ncol = length(x))\n",
+     "with(as.data.frame(x),\n",
+     format(object, digits = digits, use.names = use.names, style = "p", ...),
+     ")\n",
+     "}\n", sep = "")))
> a <- earth(Volume ~ ., data = trees)
> my.func <- as.func(a, use.names = FALSE)
> printh(my.func(c(10,80)))     # yields 17.76888
===my.func(c(10, 80)) [1] 18.111
> printh(predict(a, c(10,80)))  # yields 17.76888, but is slower
===predict(a, c(10, 80))      Volume
[1,] 18.111
> example(format.earth)

frmt.r> a <- earth(Volume ~ ., data = trees)

frmt.r> cat(format(a))
  27.246
  +  6.1767 * h(Girth-14)
  -  3.2662 * h(14-Girth)
  + 0.49121 * h(Height-72)

frmt.r> # yields:
frmt.r> #    27.2
frmt.r> #    +  6.18 * h(Girth-14)
frmt.r> #    -  3.27 * h(14-Girth)
frmt.r> #    + 0.491 * h(Height-72)
frmt.r> 
frmt.r> cat(format(a, style="pmax")) # default formatting style prior to earth version 1.4
  27.246
  +  6.1767 * pmax(0,  Girth -     14) 
  -  3.2662 * pmax(0,     14 -  Girth) 
  + 0.49121 * pmax(0, Height -     72) 

frmt.r> # yields:
frmt.r> #    27.2
frmt.r> #    +  6.18 * pmax(0,  Girth -     14) 
frmt.r> #    -  3.27 * pmax(0,     14 -  Girth) 
frmt.r> #    + 0.491 * pmax(0, Height -     72) 
frmt.r> 
frmt.r> cat(format(a, style="bf"))
  27.246
  +  6.1767 * bf1
  -  3.2662 * bf2
  + 0.49121 * bf3

   bf1  h(Girth-14)
   bf2  h(14-Girth)
   bf3  h(Height-72)
> a <- earth(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.earth
  27.246
  +  6.1767 * h(Girth-14)
  -  3.2662 * h(14-Girth)
  + 0.49121 * h(Height-72)
> cat(format(a, digits=4))
  27.25
  +  6.177 * h(Girth-14)
  -  3.266 * h(14-Girth)
  + 0.4912 * h(Height-72)
> # cat(format(a, use.names=FALSE))
> cat(format(a, style="pmax"))
  27.246
  +  6.1767 * pmax(0,  Girth -     14) 
  -  3.2662 * pmax(0,     14 -  Girth) 
  + 0.49121 * pmax(0, Height -     72) 
> cat(format(a, style="max"))
  27.246
  +  6.1767 * max(0,  Girth -     14) 
  -  3.2662 * max(0,     14 -  Girth) 
  + 0.49121 * max(0, Height -     72) 
> cat(format(a, style="bf"))
  27.246
  +  6.1767 * bf1
  -  3.2662 * bf2
  + 0.49121 * bf3

   bf1  h(Girth-14)
   bf2  h(14-Girth)
   bf3  h(Height-72)
> cat(format(a, use.names=FALSE, style="p"))
  27.246
  +  6.1767 * pmax(0, x[,1] -    14) 
  -  3.2662 * pmax(0,    14 - x[,1]) 
  + 0.49121 * pmax(0, x[,2] -    72) 
> cat(format(a, use.names=FALSE, style="m"))
  27.246
  +  6.1767 * max(0, x[,1] -    14) 
  -  3.2662 * max(0,    14 - x[,1]) 
  + 0.49121 * max(0, x[,2] -    72) 
> a <- earth(Volume ~ Girth*Height, data = trees, pmethod="none")
> cat(format(a))
  23.999
  +   2.3324 * h(Girth-12.9)
  -   0.7651 * h(12.9-Girth)
  + 0.040335 * h(Girth:Height-954.6)
  - 0.026536 * h(954.6-Girth:Height)
> cat(format(a, colon.char="*"))
  23.999
  +   2.3324 * h(Girth-12.9)
  -   0.7651 * h(12.9-Girth)
  + 0.040335 * h(Girth*Height-954.6)
  - 0.026536 * h(954.6-Girth*Height)
> a <- lm(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.lm
  -57.988
  +  4.7082 * Girth
  + 0.33925 * Height
> cat(format(a, digits=4))
  -57.99
  +  4.708 * Girth
  + 0.3393 * Height
> cat(format(a, use.names=FALSE))
  -57.988
  +  4.7082 * x[,1]
  + 0.33925 * x[,2]
> cat(format(a, style="p"))
  -57.988
  +  4.7082 * Girth
  + 0.33925 * Height
> cat(format(a, use.names=FALSE, style="p"))
  -57.988
  +  4.7082 * x[,1]
  + 0.33925 * x[,2]
> a <- lm(Volume ~ Girth*Height, data = trees)
> cat(format(a))
  69.396
  -  5.8558 * Girth
  -  1.2971 * Height
  + 0.13465 * Girth:Height
> cat(format(a, colon.char="*"))
  69.396
  -  5.8558 * Girth
  -  1.2971 * Height
  + 0.13465 * Girth*Height
> cat("--- mars.to.earth.Rd ----------------------\n")
--- mars.to.earth.Rd ----------------------
> example(mars.to.earth) # doesn't do anything

mrs.t.> if (require(mda)) {
mrs.t.+     a <- mars(trees[,-3], trees[,3])
mrs.t.+     a <- mars.to.earth(a)
mrs.t.+     summary(a, digits = 2) # the standard earth functions can now be used
mrs.t.+ 
mrs.t.+     # yields (note the reconstructed call):
mrs.t.+     #    Call: earth(x=trees[, -3], y=trees[, 3])
mrs.t.+     #
mrs.t.+     #                    y
mrs.t.+     #   (Intercept)  19.76
mrs.t.+     #   h(Girth-12)   5.40
mrs.t.+     #   h(12-Girth)  -2.56
mrs.t.+     #   h(Height-76)  0.72
mrs.t.+     #
mrs.t.+     #   Selected 4 of 5 terms, and 2 of 2 predictors
mrs.t.+     #   Importance: Girth, Height
mrs.t.+     #   Number of terms at each degree of interaction: 1 3 (additive model)
mrs.t.+     #   GCV 13    RSS 251    GRSq 0.95    RSq 0.97
mrs.t.+ }
Converted mars(x=trees[, -3], y=trees[, 3])
to        earth(x=trees[, -3], y=trees[, 3])
Call: earth(x=trees[, -3], y=trees[, 3])

             coefficients
(Intercept)         19.76
h(Girth-12)          5.40
h(12-Girth)         -2.56
h(Height-76)         0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> library(mda)
> a <- mars(trees[,-3], trees[,3])
> a <- mars.to.earth(a)
Converted mars(x=trees[, -3], y=trees[, 3])
to        earth(x=trees[, -3], y=trees[, 3])
> summary(a, digits = 2)
Call: earth(x=trees[, -3], y=trees[, 3])

             coefficients
(Intercept)         19.76
h(Girth-12)          5.40
h(12-Girth)         -2.56
h(Height-76)         0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> printh(summary(a, digits=2))
===summary(a, digits = 2) 
Call: earth(x=trees[, -3], y=trees[, 3])

             coefficients
(Intercept)         19.76
h(Girth-12)          5.40
h(12-Girth)         -2.56
h(Height-76)         0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> printh(summary(a, digits=2, style="bf"))
===summary(a, digits = 2, style = "bf") 
Call: earth(x=trees[, -3], y=trees[, 3])

y =
  20
  +  5.4 * bf1
  -  2.6 * bf2
  + 0.72 * bf3

   bf1  h(Girth-12)
   bf2  h(12-Girth)
   bf3  h(Height-76)

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> cat("--- plot.earth.models.Rd ----------------------\n")
--- plot.earth.models.Rd ----------------------
> if (PLOT)
+     example(plot.earth.models)

plt.r.> data(ozone1)

plt.r.> a1 <- earth(O3 ~ .,          data = ozone1, degree = 2)

plt.r.> a2 <- earth(O3 ~ .-wind,     data = ozone1, degree = 2, nk = 31)

plt.r.> a3 <- earth(O3 ~ .-humidity, data = ozone1, degree = 2, nk = 31)

plt.r.> plot.earth.models(list(a1,a2,a3), rlim=c(.6,.8))
> cat("--- plot.earth.Rd ----------------------\n")
--- plot.earth.Rd ----------------------
> if (PLOT) {
+     data(etitanic)
+     a <- earth(survived ~ ., data=etitanic, glm=list(family=binomial))
+     par(mfrow=c(2,2))
+     plot(a$glm.list[[1]])
+     example(plot.earth)
+ }

plt.rt> data(ozone1)

plt.rt> a <- earth(O3 ~ ., data = ozone1, degree = 2)

plt.rt> plot(a)
> cat("--- predict.earth.Rd ----------------------\n")
--- predict.earth.Rd ----------------------
> example(predict.earth)

prdct.> data(trees)

prdct.> a <- earth(Volume ~ ., data = trees)

prdct.> predict(a)           # same as a$fitted.values
       Volume
 [1,]  8.6284
 [2,]  9.6083
 [3,] 10.2615
 [4,] 15.8141
 [5,] 20.8882
 [6,] 22.1973
 [7,] 17.4472
 [8,] 18.9208
 [9,] 21.7035
[10,] 19.5741
[11,] 21.8655
[12,] 20.7185
[13,] 20.7185
[14,] 19.7336
[15,] 22.1871
[16,] 24.6355
[17,] 30.0387
[18,] 31.8364
[19,] 26.2660
[20,] 26.5927
[21,] 30.1931
[22,] 32.4109
[23,] 31.3167
[24,] 39.5993
[25,] 43.9083
[26,] 52.0498
[27,] 53.7764
[28,] 55.2647
[29,] 55.8823
[30,] 55.8823
[31,] 75.3802

prdct.> predict(a, c(10,80)) # yields 18.11
     Volume
[1,] 18.111
> cat("--- update.earth.Rd ----------------------\n")
--- update.earth.Rd ----------------------
> example(update.earth)

updt.r> data(ozone1)

updt.r> (a <- earth(O3 ~ ., data = ozone1, degree = 2))
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.454    RSS 3767.9    GRSq 0.791    RSq 0.82156

updt.r> # yields:
updt.r> #    Selected 11 of 21 terms, and 8 of 9 predictors 
updt.r> #    Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
updt.r> #    Number of terms at each degree of interaction: 1 5 5
updt.r> #    GCV 13.5    RSS 3768    GRSq 0.791    RSq 0.822
updt.r> 
updt.r> update(a, formula = O3 ~ . - temp) # requires forward pass and pruning
Selected 14 of 21 terms, and 8 of 8 predictors 
Importance: ibt, humidity, doy, vh, ibh, dpg, wind, vis
Number of terms at each degree of interaction: 1 5 8
GCV 13.134    RSS 3498.9    GRSq 0.79598    RSq 0.8343

updt.r> # yields:
updt.r> #    Selected 14 of 21 terms, and 8 of 8 predictors 
updt.r> #    Importance: ibt, humidity, doy, vh, ibh, dpg, wind, vis
updt.r> #    Number of terms at each degree of interaction: 1 5 8
updt.r> #    GCV 13.1    RSS 3499    GRSq 0.796    RSq 0.834
updt.r> 
updt.r> update(a, nprune = 8)              # requires only pruning
Selected 8 of 21 terms, and 6 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh-unused, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 2
GCV 15.082    RSS 4434.6    GRSq 0.76572    RSq 0.78998

updt.r> # yields:
updt.r> #    Selected 8 of 21 terms, and 6 of 9 predictors 
updt.r> #    Importance: temp, humidity, ibt, doy, dpg, ibh-unused, vis, vh-unused, wind-unused
updt.r> #    Number of terms at each degree of interaction: 1 5 2
updt.r> #    GCV 15.1    RSS 4435    GRSq 0.766    RSq 0.79
updt.r> 
updt.r> update(a, penalty=1, ponly=TRUE)   # pruning pass only with a new penalty
Selected 13 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 7
GCV 12.525    RSS 3671.1    GRSq 0.80544    RSq 0.82614
> cat("--- evimp.Rd -----------------------------\n")
--- evimp.Rd -----------------------------
> example(evimp)

evimp> data(ozone1)

evimp> a <- earth(O3 ~ ., data=ozone1, degree=2)

evimp> ev <- evimp(a, trim=FALSE, sqrt.=TRUE)

evimp> plot(ev)

evimp> print(ev)
          col used nsubsets      gcv        rss  
temp        4    1       10 100.0000 1 100.0000 1
humidity    3    1        8  35.5699 1  38.4267 1
ibt         7    1        8  35.5699 1  38.4267 1
doy         9    1        7  33.5772 1  35.9699 1
dpg         6    1        5  25.9476 1  27.9679 1
ibh         5    1        4  30.8791 0  32.2796 0
vis         8    1        4  20.8403 1  22.9380 1
wind        2    1        1   8.6581 1   9.9253 1
vh-unused   1    0        0   0.0000 1   0.0000 1
> cat("--- plot.evimp.Rd ------------------------\n")
--- plot.evimp.Rd ------------------------
> example(plot.evimp)

plt.vm> data(ozone1)

plt.vm> a <- earth(O3 ~ ., data=ozone1, degree=2)

plt.vm> ev <- evimp(a)

plt.vm> plot(ev)

plt.vm> print(ev)
         col used nsubsets       gcv         rss  
temp       4    1       10 100.00000 1 100.00000 1
humidity   3    1        8  12.65218 1  14.76609 1
ibt        7    1        8  12.65218 1  14.76609 1
doy        9    1        7  11.27428 1  12.93835 1
dpg        6    1        5   6.73277 1   7.82206 1
ibh        5    1        4   9.53521 0  10.41972 0
vis        8    1        4   4.34319 1   5.26150 1
wind       2    1        1   0.74963 1   0.98511 1
> 
> cat("--- test predict.earth -------------------\n")
--- test predict.earth -------------------
> 
> a <- earth(Volume ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
===predict(a, c(10, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
predict.earth: returning earth predictions 
     Volume
[1,] 18.111
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
===predict(a, c(10, 10, 80, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    10     80
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           4            8
predict.earth: returning earth predictions 

     Volume
[1,] 18.111
[2,] 18.111
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
===predict(a, c(10, 11, 80, 81), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    11     81
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           3            9
predict.earth: returning earth predictions 

     Volume
[1,] 18.111
[2,] 21.868
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

      Volume
[1,]  8.6284
[2,]  9.6083
[3,] 10.2615
[4,] 15.8141
[5,] 20.8882
[6,] 22.1973
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
===predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
predict.earth: returning earth predictions 
     Volume
[1,] 14.181
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
===predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),     trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
2    10     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
[2,]           1           0           4            0
predict.earth: returning earth predictions 

     Volume
[1,] 14.181
[2,] 14.181
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume
[1,] 18.111
[2,] 29.555
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume
[1,] 18.111
[2,] 29.555
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume
[1,] 18.111
[2,] 29.555
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6a predict(a, xpredict with reversed columns and colnames)\n")
6a predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume
[1,] 18.111
[2,] 29.555
> xpredict2 <- cbind(xpredict[,1], xpredict[,2]) # nameless matrix
> cat("6b predict(a, xpredict2)\n")
6b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1))
===predict(a, xpredict2, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    80     10
2    90     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1          66           0            0
[2,]           1          76           0            0
predict.earth: returning earth predictions 

     Volume
[1,] 434.91
[2,] 496.67
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, trees$Volume)
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

     trees$Volume
[1,]       8.6284
[2,]       9.6083
[3,]      10.2615
[4,]      15.8141
[5,]      20.8882
[6,]      22.1973
> cat("7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     trees$Volume
[1,]       18.111
[2,]       29.555
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     trees$Volume
[1,]       18.111
[2,]       29.555
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     trees$Volume
[1,]       18.111
[2,]       29.555
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("none.such", "joe")
> cat("10a predict(a, xpredict2)\n")
10a predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
===predict(a, xpredict2, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: none.such joe
    New names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 
     trees$Volume
[1,]       18.111
[2,]       29.555
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("Height", "Girth") # reversed
> cat("10b predict(a, xpredict2)\n")
10b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
===predict(a, xpredict2, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    80     10
[2,]    90     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1          66           0            0
[2,]           1          76           0            0
predict.earth: returning earth predictions 
     trees$Volume
[1,]       434.91
[2,]       496.67
> 
> cat("--- test predict.earth with multiple response models-------------------\n")
--- test predict.earth with multiple response models-------------------
> 
> a <- earth(cbind(Volume, Volume + 100) ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
===predict(a, c(10, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
predict.earth: returning earth predictions 
     Volume     y2
[1,] 18.111 118.11
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
===predict(a, c(10, 10, 80, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    10     80
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           4            8
predict.earth: returning earth predictions 

     Volume     y2
[1,] 18.111 118.11
[2,] 18.111 118.11
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
===predict(a, c(10, 11, 80, 81), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    11     81
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           3            9
predict.earth: returning earth predictions 

     Volume     y2
[1,] 18.111 118.11
[2,] 21.868 121.87
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

      Volume     y2
[1,]  8.6284 108.63
[2,]  9.6083 109.61
[3,] 10.2615 110.26
[4,] 15.8141 115.81
[5,] 20.8882 120.89
[6,] 22.1973 122.20
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
===predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
predict.earth: returning earth predictions 
     Volume     y2
[1,] 14.181 114.18
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
===predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),     trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
2    10     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
[2,]           1           0           4            0
predict.earth: returning earth predictions 

     Volume     y2
[1,] 14.181 114.18
[2,] 14.181 114.18
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6 predict(a, xpredict with reversed columns and colnames)\n")
6 predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     Volume     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, cbind(trees$Volume, trees$Volume+100))
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

          y1     y2
[1,]  8.6284 108.63
[2,]  9.6083 109.61
[3,] 10.2615 110.26
[4,] 15.8141 115.81
[5,] 20.8882 120.89
[6,] 22.1973 122.20
> cat("7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

         y1     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

         y1     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

         y1     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("10 predict(a, xpredict)\n")
10 predict(a, xpredict)
> printh(predict(a, xpredict, trace=1), expect.warning=TRUE)
===predict(a, xpredict, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 
         y1     y2
[1,] 18.111 118.11
[2,] 29.555 129.56
> 
> cat("--- test reorder.earth ----------------------\n")
--- test reorder.earth ----------------------
> a <- earth(O3 ~ ., data = ozone1, degree = 2)
> earth:::reorder.earth(a, decomp = "none")
 [1]  1  2  3  4  5  6  7  8  9 10 11
> earth:::reorder.earth(a)   # defaults to decomp = "anova"
 [1]  1  2 11  8  3  4  9  5  6  7 10
> a$selected.terms[earth:::reorder.earth(a)]
 [1]  1  2 19 13  6  7 14  9 10 11 17
> 
> cat("--- test model building capabilities ----------------------\n")
--- test model building capabilities ----------------------
> itest <- 0
> N <- 100
> set.seed(1)
> x1 <- runif(N, -1, 1)
> x2 <- runif(N, -1, 1)
> x3 <- runif(N, -1, 1)
> x4 <- runif(N, -1, 1)
> x5 <- runif(N, -1, 1)
> x6 <- runif(N, -1, 1)
> x7 <- runif(N, -1, 1)
> x8 <- runif(N, -1, 1)
> x9 <- runif(N, -1, 1)
> x10 <- runif(N, -1, 1)
> 
> make.func <- function(
+     obj      = stop("no 'obj' arg"),
+     digits   = 14,
+     use.names = TRUE,   # use predictor names, else "x[,1]" etc
+     ...)                # extra args passed onto format
+ {
+     s <- paste(
+         "function(x)\n",
+         "{\n",
+         "if(is.vector(x))\n",
+         "  x <- matrix(x, nrow=1, ncol=length(x))\n",
+         "with(as.data.frame(x),\n",
+         format(obj, digits=digits, use.names=use.names, style="p", ...),
+         ")\n",
+         "}\n", sep="")
+ 
+     eval.parent(parse(text=s))
+ }
> 
> # this cross checks that RSq and GRSq claimed by
> # the model versus an independent calc of RSq and GRSq
> 
> test.model.rsq <- function(object, x, y, MarsFunc, nCases, nUsedTerms, penalty, RefFunc=NULL, ...)
+ {
+     y1 <- RefFunc(x, ...)
+     rss <- sum((y1 - MarsFunc(x))^2)
+     rss.null <- sum((y - mean(y))^2)
+     gcv.null <- earth:::get.gcv(rss.null, 1, penalty, nCases)
+     gcv <- earth:::get.gcv(rss, nUsedTerms, penalty, nCases)
+     if(is.finite(object$rsq))
+         if(!isTRUE(all.equal(object$rsq, 1 - rss/rss.null)))
+             cat("\nWarning: RSq mismatch object$rsq", object$rsq, "calculated RSq", 1 - rss/rss.null)
+         else if(!isTRUE(all.equal(object$grsq, 1 - gcv/gcv.null)))
+             cat("\nWarning GRSq mismatch object$grsq", object$grsq, "calculated GRSq", 1 - gcv/gcv.null)
+ }
> 
> # this uses the global matrix data.global (data.global[,1] is the response)
> 
> test.earth <- function(itest, func, degree=2, nk=51, plotit=PLOT,
+                        test.rsq=TRUE, trace=0, linpreds=FALSE)
+ {
+     cat("itest", sprintf("%-3d", itest), sprintf("%-32s", deparse(substitute(func))),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk))
+     if(trace)
+         cat("\n")
+     gc()
+     earthTime <- system.time(fite <- earth(data.global[,-1], data.global[,1],
+                                         degree=degree, trace=trace, nk=nk,
+                                         pmethod="b", fast.k=-1, linpreds=linpreds))
+     funca <- make.func(fite)
+     nCases <- nrow(data.global)
+     penalty <- ifelse(degree>1,3,2)
+     nUsedTerms <- sum(fite$selected.terms!=0)
+     cat(" nTerms",  sprintf("%-2d", nUsedTerms), "of", sprintf("%-3d ", nrow(fite$dirs)))
+     if(PRINT.TIME)
+         cat(" time", earthTime[1])
+     cat("GRSq", sprintf("%4.2g", fite$grsq))
+     caption <- paste("itest ", itest, ": ", deparse(substitute(func)),
+                         " degree=", degree, " nk=", nk, sep="")
+     if(test.rsq)
+         test.model.rsq(fite, x=data.global[,-1, drop=FALSE], y=data.global[,1], MarsFunc=funca,
+             nCases=nCases, nUsedTerms=nUsedTerms, penalty=penalty, RefFunc=func)
+     # TODO add printh(evimp(fite))
+     if(plotit) {
+         plotmo(fite, func=func, caption=caption)
+         plot(fite, nresiduals=500, caption=caption)
+     }
+     cat("\n")
+     fite
+ }
> 
> ozone.test <- function(itest, sModel, x, y, degree=2, nk=51,
+                     plotit=PLOT, trace=0, col.loess="lightblue")
+ {
+     fite <- earth(x, y, degree=degree, nk=nk, trace=trace)
+     fitm <- mars(x, y, degree=degree, nk=nk)
+ 
+     cat("itest",
+         sprintf("%-3d", itest),
+         sprintf("%-32s", sModel),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk),
+         "nTerms",  sprintf("%-2d", sum(fite$selected.terms != 0)),
+         "of", sprintf("%-3d", nrow(fite$dirs)),
+         "GRSq", sprintf("%4.2g", fite$grsq),
+         "GRSq ratio", fite$grsq/mars.to.earth(fitm)$grsq,
+         "\n")
+     caption <- paste("itest ", itest, ": ", sModel, " degree=", degree, " nk=", nk, sep="")
+     printh(summary(fite))
+     printh(summary(fite, style="bf"))
+     if(plotit) {
+         fitme <- mars.to.earth(fitm)
+         plotmo(fite, caption=paste("EARTH", caption))
+         plotmo(fitme, caption=paste("MARS", caption))
+         plot(fite, nresiduals=500, col.loess=col.loess, caption=paste("EARTH", caption))
+         plot(fitme, caption=paste("MARS", caption))
+         fitme <- update(fitme)  # generate model selection data
+         plot.earth.models(list(fite, fitme), caption=paste(itest, ": Compare earth to mars ", sModel, sep=""))
+     }
+     fite
+ }
> 
> funcNoise <- function(x)    # noise
+ {
+     rnorm(length(x))
+ }
> x <- cbind(x1)
> data.global <- cbind(funcNoise(x), x1)
> # plotit=FALSE because there is only an intercept
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=1, plotit=FALSE, test.rsq=FALSE)
itest 1   funcNoise                        degree 1  nk 5   nTerms 1  of 4   GRSq    0
Selected 1 of 4 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=2, plotit=FALSE, test.rsq=FALSE)
itest 2   funcNoise                        degree 2  nk 5   nTerms 1  of 4   GRSq    0
Selected 1 of 4 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> itest <- itest+1; test.earth(itest, funcNoise, nk=51, degree=1, plotit=FALSE, test.rsq=FALSE)
itest 3   funcNoise                        degree 1  nk 51  nTerms 1  of 8   GRSq    0
Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> itest <- itest+1; a <- test.earth(itest, funcNoise, nk=51, degree=2, plotit=FALSE, test.rsq=FALSE)
itest 4   funcNoise                        degree 2  nk 51  nTerms 1  of 8   GRSq    0
> printh(summary(a, fixed.point=FALSE)) # check that print summary works with intercept only model
===summary(a, fixed.point = FALSE) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

            coefficients
(Intercept)    -0.044519

Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> printh(summary(a, fixed.point=FALSE, style="bf")) # ditto
===summary(a, fixed.point = FALSE, style = "bf") 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

data.global[,1] =
  -0.044519


Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> printh(summary(a, details=1, fixed.point=FALSE))
===summary(a, details = 1, fixed.point = FALSE) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

            coefficients
(Intercept)    -0.044519

Number of cases: 100
Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.94293    RSS 92.417    GRSq 0    RSq 0
> 
> func1 <- function(x)
+ {
+     sin(3 * x[,1]) + x[,2]
+ }
> x.global <- cbind(                    x1, x2)
> data.global <- cbind(func1(x.global), x1, x2)
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=1)
itest 5   func1                            degree 1  nk 5   nTerms 5  of 5   GRSq 0.86
Selected 5 of 5 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 4 (additive model)
GCV 0.12203    RSS 10.105    GRSq 0.85597    RSq 0.8783
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=2)
itest 6   func1                            degree 2  nk 5   nTerms 5  of 5   GRSq 0.85
Selected 5 of 5 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 4 (additive model)
GCV 0.12758    RSS 10.105    GRSq 0.84943    RSq 0.8783
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=1)
itest 7   func1                            degree 1  nk 51  nTerms 9  of 9   GRSq    1
Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)
GCV 0.0010490    RSS 0.072267    GRSq 0.99876    RSq 0.99913
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=2)
itest 8   func1                            degree 2  nk 51  nTerms 9  of 9   GRSq    1
Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)
GCV 0.0011579    RSS 0.072267    GRSq 0.99863    RSq 0.99913
> 
> func7 <- function(x)    # just one predictor
+ {
+     sin(5 * x[,1])
+ }
> x.global <- cbind(                    x1)
> data.global <- cbind(func7(x.global), x1)
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=1)
itest 9   func7                            degree 1  nk 5   nTerms 4  of 4   GRSq 0.74
Selected 4 of 4 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.13553    RSS 11.722    GRSq 0.73586    RSq 0.76691
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=2)
itest 10  func7                            degree 2  nk 5   nTerms 4  of 4   GRSq 0.73
Selected 4 of 4 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.14001    RSS 11.722    GRSq 0.72713    RSq 0.76691
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=1)
itest 11  func7                            degree 1  nk 51  nTerms 7  of 8   GRSq 0.99
Selected 7 of 8 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 0.0071343    RSS 0.54    GRSq 0.9861    RSq 0.98926
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=2)
itest 12  func7                            degree 2  nk 51  nTerms 7  of 8   GRSq 0.99
Selected 7 of 8 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 0.007653    RSS 0.54    GRSq 0.98509    RSq 0.98926
> 
> func8 <- function(x)
+ {
+     ret <- 0
+     for (i in 1:5)
+         ret <- ret + sin(2 * x[,i])
+     ret + x[,1]*cos(4 * x[,2]) + (x[,3]-2)* x[,4]
+ }
> 
> func8noise <- function(x)
+ {
+     func8(x) + rnorm(nrow(x),0,1)
+ }
> 
> x.global <- cbind(                    x1,  x2,  x3,  x4,  x5)
> data.global <- cbind(func8(x.global), x1,  x2,  x3,  x4,  x5)
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=1)
itest 13  func8                            degree 1  nk 11  nTerms 10 of 11  GRSq 0.89
Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.30612    RSS 20.084    GRSq 0.89467    RSq 0.92949
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=2)
itest 14  func8                            degree 2  nk 11  nTerms 10 of 11  GRSq 0.88
Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.34319    RSS 20.084    GRSq 0.88191    RSq 0.92949
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=10)
itest 15  func8                            degree 10 nk 11  nTerms 10 of 11  GRSq 0.88
Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.34319    RSS 20.084    GRSq 0.88191    RSq 0.92949
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=1)
itest 16  func8                            degree 1  nk 51  nTerms 12 of 17  GRSq 0.92
Selected 12 of 17 terms, and 5 of 5 predictors 
Importance: x3, x5, x2, x1, x4
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 0.23238    RSS 13.778    GRSq 0.92004    RSq 0.95163
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=2)
itest 17  func8                            degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.051303    RSS 1.3607    GRSq 0.98235    RSq 0.99522
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=10)
itest 18  func8                            degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.051303    RSS 1.3607    GRSq 0.98235    RSq 0.99522
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=1,  test.rsq=FALSE)
itest 19  func8noise                       degree 1  nk 11  nTerms 10 of 11  GRSq 0.89
Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.30612    RSS 20.084    GRSq 0.89467    RSq 0.92949
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=2,  test.rsq=FALSE)
itest 20  func8noise                       degree 2  nk 11  nTerms 10 of 11  GRSq 0.88
Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.34319    RSS 20.084    GRSq 0.88191    RSq 0.92949
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=10, test.rsq=FALSE)
itest 21  func8noise                       degree 10 nk 11  nTerms 10 of 11  GRSq 0.88
Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.34319    RSS 20.084    GRSq 0.88191    RSq 0.92949
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=1,  test.rsq=FALSE)
itest 22  func8noise                       degree 1  nk 51  nTerms 12 of 17  GRSq 0.92
Selected 12 of 17 terms, and 5 of 5 predictors 
Importance: x3, x5, x2, x1, x4
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 0.23238    RSS 13.778    GRSq 0.92004    RSq 0.95163
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=2,  test.rsq=FALSE)
itest 23  func8noise                       degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.051303    RSS 1.3607    GRSq 0.98235    RSq 0.99522
> 
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=10, test.rsq=FALSE)
itest 24  func8noise                       degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.051303    RSS 1.3607    GRSq 0.98235    RSq 0.99522
> 
> eqn56 <- function(x) # Friedman MARS paper equation 56
+ {
+     0.1 * exp(4*x[,1]) +
+     4 / (1 + exp(-20*(x[,2]-0.5))) +
+     3 * x[,3] +
+     2 * x[,4] +
+     x[,5]
+ }
> 
> neg.eqn56 <- function(x)
+ {
+     -eqn56(x)
+ }
> 
> eqn56noise <- function(x)
+ {
+     eqn56(x) + rnorm(nrow(x),0,1)
+ }
> 
> neg.eqn56noise <- function(x)
+ {
+     -eqn56noise(x)
+ }
> 
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=1)
itest 25  eqn56                            degree 1  nk 11  nTerms 11 of 11  GRSq 0.96
Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.33676    RSS 21.017    GRSq 0.96003    RSq 0.97455
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=2)
itest 26  eqn56                            degree 2  nk 11  nTerms 11 of 11  GRSq 0.95
Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.38380    RSS 21.017    GRSq 0.95444    RSq 0.97455
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=10)
itest 27  eqn56                            degree 10 nk 11  nTerms 11 of 11  GRSq 0.95
Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.38380    RSS 21.017    GRSq 0.95444    RSq 0.97455
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=1)
itest 28  eqn56                            degree 1  nk 51  nTerms 13 of 15  GRSq    1
Selected 13 of 15 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.026607    RSS 1.4966    GRSq 0.99684    RSq 0.99819
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=2)
itest 29  eqn56                            degree 2  nk 51  nTerms 13 of 16  GRSq    1
Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.024406    RSS 1.1620    GRSq 0.9971    RSq 0.9986
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=10)
itest 30  eqn56                            degree 10 nk 51  nTerms 13 of 16  GRSq    1
Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.024406    RSS 1.1620    GRSq 0.9971    RSq 0.9986
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=1,  test.rsq=FALSE)
itest 31  eqn56noise                       degree 1  nk 11  nTerms 11 of 11  GRSq 0.96
Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.33676    RSS 21.017    GRSq 0.96003    RSq 0.97455
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=2,  test.rsq=FALSE)
itest 32  eqn56noise                       degree 2  nk 11  nTerms 11 of 11  GRSq 0.95
Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.38380    RSS 21.017    GRSq 0.95444    RSq 0.97455
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=10, test.rsq=FALSE)
itest 33  eqn56noise                       degree 10 nk 11  nTerms 11 of 11  GRSq 0.95
Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.38380    RSS 21.017    GRSq 0.95444    RSq 0.97455
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=1,  test.rsq=FALSE)
itest 34  eqn56noise                       degree 1  nk 51  nTerms 13 of 15  GRSq    1
Selected 13 of 15 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.026607    RSS 1.4966    GRSq 0.99684    RSq 0.99819
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=2,  test.rsq=FALSE)
itest 35  eqn56noise                       degree 2  nk 51  nTerms 13 of 16  GRSq    1
Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.024406    RSS 1.1620    GRSq 0.9971    RSq 0.9986
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=10, test.rsq=FALSE)
itest 36  eqn56noise                       degree 10 nk 51  nTerms 13 of 16  GRSq    1
Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.024406    RSS 1.1620    GRSq 0.9971    RSq 0.9986
> 
> robotArm <- function(x) # Friedman Fast MARS paper
+ {
+     l1     <- x[,1]
+     l2     <- x[,2]
+     theta1 <- x[,3]
+     theta2 <- x[,4]
+     phi    <- x[,5]
+ 
+     x1 <- l1 * cos(theta1) - l2 * cos(theta1 + theta2) * cos(phi)
+     y <-  l1 * sin(theta1) - l2 * sin(theta1 + theta2) * cos(phi)
+     z <-  l2 *  sin(theta2) * sin(phi)
+ 
+     sqrt(x1^2 + y^2 + z^2)
+ }
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                       (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robotArm(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global) <- c("l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.earth(itest, robotArm, nk=51, degree=1)
itest 37  robotArm                         degree 1  nk 51  nTerms 11 of 19  GRSq 0.79
Selected 11 of 19 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.039726    RSS 2.4793    GRSq 0.78737    RSq 0.8646
> itest <- itest+1; a87 <- test.earth(itest, robotArm, nk=51, degree=10)
itest 38  robotArm                         degree 10 nk 51  nTerms 20 of 39  GRSq 0.89
> printh(summary(a87))
===summary(a87) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

                                                         coefficients
(Intercept)                                                    3.3542
h(l1-0.875321)                                                 1.9013
h(0.875321-l1)                                                -0.8716
h(l2-1.10154)                                                  0.7870
h(1.10154-l2)                                                 -1.1134
h(theta2-2.64029)                                             -0.6764
h(theta2-4.14578)                                              0.3851
h(4.14578-theta2)                                             -0.7512
h(0.875321-l1) * h(2.91516-theta2)                             0.3795
h(0.875321-l1) * h(theta2-5.22555)                            -0.8680
h(l1-0.875321) * h(phi-1.19202)                             -292.2748
h(1.10154-l2) * h(theta2-5.99132)                              3.7814
h(1.10154-l2) * h(5.99132-theta2)                              0.1049
h(theta2-1.3937) * h(phi-1.37959)                             -2.6910
h(theta2-1.3937) * h(1.37959-phi)                             -0.2451
h(theta2-1.3937) * h(phi-0.046284)                            -0.3336
h(theta2-2.64029) * h(1.36883-phi)                             0.2275
h(0.777321-l1) * h(theta2-1.3937) * h(phi-0.046284)           -0.3394
h(0.875321-l1) * h(theta2-2.91516) * h(phi- -0.00669771)       1.1212
h(0.875321-l1) * h(theta2-2.91516) * h(-0.00669771-phi)        0.2595

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.020722    RSS 0.5496    GRSq 0.88909    RSq 0.96999
> printh(summary(a87, style="bf"))
===summary(a87, style = "bf") 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

data.global[,1] =
  3.3542
  +    1.9013 * bf1
  -    0.8716 * bf2
  +     0.787 * bf3
  -    1.1134 * bf4
  -   0.67636 * bf5
  +   0.38511 * bf6
  -   0.75118 * bf7
  +   0.37948 * bf2 * bf8
  -   0.86798 * bf2 * bf9
  -    292.27 * bf1 * bf10
  +    3.7814 * bf4 * bf11
  +   0.10490 * bf4 * bf12
  -    2.6910 * bf13 * bf14
  -   0.24511 * bf13 * bf15
  -   0.33363 * bf13 * bf16
  +   0.22751 * bf5 * bf17
  -   0.33941 * bf18 * bf13 * bf16
  +    1.1212 * bf2 * bf19 * bf20
  +   0.25949 * bf2 * bf19 * bf21

   bf1  h(l1-0.875321)
   bf2  h(0.875321-l1)
   bf3  h(l2-1.10154)
   bf4  h(1.10154-l2)
   bf5  h(theta2-2.64029)
   bf6  h(theta2-4.14578)
   bf7  h(4.14578-theta2)
   bf8  h(2.91516-theta2)
   bf9  h(theta2-5.22555)
  bf10  h(phi-1.19202)
  bf11  h(theta2-5.99132)
  bf12  h(5.99132-theta2)
  bf13  h(theta2-1.3937)
  bf14  h(phi-1.37959)
  bf15  h(1.37959-phi)
  bf16  h(phi-0.046284)
  bf17  h(1.36883-phi)
  bf18  h(0.777321-l1)
  bf19  h(theta2-2.91516)
  bf20  h(phi--0.00669771)
  bf21  h(-0.00669771-phi)

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.020722    RSS 0.5496    GRSq 0.88909    RSq 0.96999
> itest <- itest+1; test.earth(itest, robotArm, nk=201, degree=1)
itest 39  robotArm                         degree 1  nk 201 nTerms 11 of 19  GRSq 0.79
Selected 11 of 19 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.039726    RSS 2.4793    GRSq 0.78737    RSq 0.8646
> itest <- itest+1; a88 <- test.earth(itest, robotArm, nk=201, degree=10)
itest 40  robotArm                         degree 10 nk 201 nTerms 20 of 39  GRSq 0.89
> printh(summary(a88))
===summary(a88) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

                                                         coefficients
(Intercept)                                                    3.3542
h(l1-0.875321)                                                 1.9013
h(0.875321-l1)                                                -0.8716
h(l2-1.10154)                                                  0.7870
h(1.10154-l2)                                                 -1.1134
h(theta2-2.64029)                                             -0.6764
h(theta2-4.14578)                                              0.3851
h(4.14578-theta2)                                             -0.7512
h(0.875321-l1) * h(2.91516-theta2)                             0.3795
h(0.875321-l1) * h(theta2-5.22555)                            -0.8680
h(l1-0.875321) * h(phi-1.19202)                             -292.2748
h(1.10154-l2) * h(theta2-5.99132)                              3.7814
h(1.10154-l2) * h(5.99132-theta2)                              0.1049
h(theta2-1.3937) * h(phi-1.37959)                             -2.6910
h(theta2-1.3937) * h(1.37959-phi)                             -0.2451
h(theta2-1.3937) * h(phi-0.046284)                            -0.3336
h(theta2-2.64029) * h(1.36883-phi)                             0.2275
h(0.777321-l1) * h(theta2-1.3937) * h(phi-0.046284)           -0.3394
h(0.875321-l1) * h(theta2-2.91516) * h(phi- -0.00669771)       1.1212
h(0.875321-l1) * h(theta2-2.91516) * h(-0.00669771-phi)        0.2595

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.020722    RSS 0.5496    GRSq 0.88909    RSq 0.96999
> printh(summary(a88, style="bf"))
===summary(a88, style = "bf") 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

data.global[,1] =
  3.3542
  +    1.9013 * bf1
  -    0.8716 * bf2
  +     0.787 * bf3
  -    1.1134 * bf4
  -   0.67636 * bf5
  +   0.38511 * bf6
  -   0.75118 * bf7
  +   0.37948 * bf2 * bf8
  -   0.86798 * bf2 * bf9
  -    292.27 * bf1 * bf10
  +    3.7814 * bf4 * bf11
  +   0.10490 * bf4 * bf12
  -    2.6910 * bf13 * bf14
  -   0.24511 * bf13 * bf15
  -   0.33363 * bf13 * bf16
  +   0.22751 * bf5 * bf17
  -   0.33941 * bf18 * bf13 * bf16
  +    1.1212 * bf2 * bf19 * bf20
  +   0.25949 * bf2 * bf19 * bf21

   bf1  h(l1-0.875321)
   bf2  h(0.875321-l1)
   bf3  h(l2-1.10154)
   bf4  h(1.10154-l2)
   bf5  h(theta2-2.64029)
   bf6  h(theta2-4.14578)
   bf7  h(4.14578-theta2)
   bf8  h(2.91516-theta2)
   bf9  h(theta2-5.22555)
  bf10  h(phi-1.19202)
  bf11  h(theta2-5.99132)
  bf12  h(5.99132-theta2)
  bf13  h(theta2-1.3937)
  bf14  h(phi-1.37959)
  bf15  h(1.37959-phi)
  bf16  h(phi-0.046284)
  bf17  h(1.36883-phi)
  bf18  h(0.777321-l1)
  bf19  h(theta2-2.91516)
  bf20  h(phi--0.00669771)
  bf21  h(-0.00669771-phi)

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.020722    RSS 0.5496    GRSq 0.88909    RSq 0.96999
> 
> cat("--- linear predictors -------------------------\n")
--- linear predictors -------------------------
> 
> # Build a linear-only earth model and an identical lm model to compare predict().
> # The somewhat strange args are to force the models to use the same predictors.
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 41  
> a <- earth(O3 ~ ., linpreds=TRUE, data = ozone1, pmethod="none", thresh=1e-10)
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=ozone1, linpreds=TRUE, pmethod="none", 
      thresh=1e-10)

            coefficients
(Intercept)     -9.29409
wind            -0.02724
humidity         0.08327
temp             0.26496
ibh             -0.00032
dpg             -0.00266
ibt              0.02359
vis             -0.00772
doy             -0.00938

Selected 9 of 9 terms, and 8 of 9 predictors 8 linear predictors
Importance: temp, humidity, ibh, ibt, doy, vis, dpg, wind, vh-unused
Number of terms at each degree of interaction: 1 8 (additive model)
GCV 21.323    RSS 6330.2    GRSq 0.66878    RSq 0.70021
> alin <- lm(O3 ~ . - vh, data = ozone1)
> printh(summary(alin))
===summary(alin) 

Call:
lm(formula = O3 ~ . - vh, data = ozone1)

Residuals:
    Min      1Q  Median      3Q     Max 
-12.008  -2.866  -0.222   2.764  13.453 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -9.294094   1.996850   -4.65  4.8e-06 ***
wind        -0.027242   0.132073   -0.21  0.83671    
humidity     0.083265   0.018701    4.45  1.2e-05 ***
temp         0.264955   0.048664    5.44  1.0e-07 ***
ibh         -0.000323   0.000282   -1.15  0.25282    
dpg         -0.002660   0.011259   -0.24  0.81340    
ibt          0.023592   0.012206    1.93  0.05415 .  
vis         -0.007719   0.003741   -2.06  0.03987 *  
doy         -0.009379   0.002763   -3.39  0.00077 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 4.44 on 321 degrees of freedom
Multiple R-squared:  0.7,	Adjusted R-squared: 0.693 
F-statistic: 93.7 on 8 and 321 DF,  p-value: <2e-16 

> printh(summary(alin, style="bf"))
===summary(alin, style = "bf") 

Call:
lm(formula = O3 ~ . - vh, data = ozone1)

Residuals:
    Min      1Q  Median      3Q     Max 
-12.008  -2.866  -0.222   2.764  13.453 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -9.294094   1.996850   -4.65  4.8e-06 ***
wind        -0.027242   0.132073   -0.21  0.83671    
humidity     0.083265   0.018701    4.45  1.2e-05 ***
temp         0.264955   0.048664    5.44  1.0e-07 ***
ibh         -0.000323   0.000282   -1.15  0.25282    
dpg         -0.002660   0.011259   -0.24  0.81340    
ibt          0.023592   0.012206    1.93  0.05415 .  
vis         -0.007719   0.003741   -2.06  0.03987 *  
doy         -0.009379   0.002763   -3.39  0.00077 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 4.44 on 321 degrees of freedom
Multiple R-squared:  0.7,	Adjusted R-squared: 0.693 
F-statistic: 93.7 on 8 and 321 DF,  p-value: <2e-16 

> stopifnot(all.equal(as.double(predict(a)), as.double(predict(alin))))
> newdata <- data.frame(
+         vh = c(5700,5701,5702),
+         wind = c(3,4,5),
+         humidity = c(30,40,50),
+         temp = c(31,42,53),
+         ibh = c(1000, 1000, 1000),
+         dpg = c(-10, 0, 10),
+         ibt = c(90, 80, 60),
+         vis = c(100, 110, 120),
+         doy= c(12, 34, 56))
> apred <- as.double(predict(a, newdata=newdata))
> alinpred <- as.double(predict(alin, newdata=newdata))
> stopifnot(all.equal(apred, alinpred))
> # printh(head(predict(a, type="terms")))
> printh(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
===earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms) 
[1] 0 1 2 3 4 5 6 7 8
> 
> # test with mixed linear and standard predictors
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 42  
> a <- earth(O3 ~ ., linpreds=c(3, 8), data = ozone1, degree=2, trace=4)  # 3,8 is humidity,vis
Call: earth(formula=O3~., data=ozone1, trace=4, linpreds=c(3, 
      8), degree=2)
x is a 330 by 9 matrix: 1=vh, 2=wind, 3=humidity, 4=temp, 5=ibh, 6=dpg, 7=ibt, 8=vis, 9=doy
First few rows of x are
       vh wind humidity temp  ibh dpg ibt vis doy
[1,] 5710    4       28   40 2693 -25  87 250  33
[2,] 5700    3       37   45  590 -24 128 100  34
[3,] 5760    3       51   54 1450  25 139  60  35
[4,] 5720    4       69   35 1568  15 121  60  36
[5,] 5790    6       19   45 2631 -33 123 100  37
[6,] 5790    3       25   55  554 -28 182 250  38
y is a 330 by 1 matrix: 1=O3
First few rows of y are
     O3
[1,]  3
[2,]  5
[3,]  5
[4,]  6
[5,]  4
[6,]  4
linear predictors 3=humidity 8=vis
Approximate memory use after expanding x and y matrices: 0.2 MBytes
Forward pass: minspan 6 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.6493 0.6599       0.6599    4         temp          58  2   3   
4      0.6908 0.7094      0.04948    5          ibh        1069  4   5   
6      0.7110 0.7368      0.02744    9          doy          89  6   7   
8      0.7337 0.7613       0.0245    3     humidity          19< 8       2   
10     0.7524 0.7851       0.0238    6          dpg          11  9   10  
12     0.7573 0.7962      0.01107    1           vh        5900  11  12  
14     0.7642 0.8052     0.009048    8          vis           0< 13      
16     0.7694 0.8127     0.007528    9          doy         151  14      
18     0.7692 0.8188     0.006099    2         wind           4  15  16  12  
20     0.7675 0.8237     0.004849    4         temp          72  17  18  16  

Reached max number of terms 21
After forward pass GRSq 0.7675 RSq 0.8237
Forward pass complete: 21 terms (18 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6721  0.6771     0.6721      2  1 8
          3      0.6909  0.7002     0.0188      2  1 2 4
          4      0.7278  0.7400     0.0369      4  1 4 7 8
          5      0.7373  0.7530     0.0095      4  1 4 6 7 8
          6      0.7495  0.7682     0.0122      5  1 4 6 7 8 9
          7      0.7642  0.7852     0.0147      6  1 7 8 9 12 13 14
          8      0.7753  0.7986     0.0111      6  1 7 8 9 10 12 13 14
          9      0.7793  0.8053     0.0040      7  1 4 7 8 9 10 12 13 14
         10      0.7793  0.8085    -0.0000      7  1 4 7 8 9 10 12 13 14 17
         11      0.7821  0.8139     0.0027      7  1 4 7 8 9 10 11 12 13 14 17
         12      0.7809  0.8160    -0.0011      8  1 4 7 8 9 10 11 12 13 14 16 17
chosen   13      0.7833  0.8210     0.0024      8  1 4 7 8 9 10 11 12 13 14 15 16 17
         14      0.7808  0.8220    -0.0025      8  1 4 6 7 8 9 10 11 12 13 14 15 16 17
         15      0.7782  0.8229    -0.0026      8  1 2 4 6 7 8 9 10 11 12 13 14 15 16 17
         16      0.7751  0.8235    -0.0031      8  1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17
         17      0.7715  0.8237    -0.0036      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
         18      0.7675  0.8237    -0.0040      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18

Prune method "backward" penalty 3 nprune 18: selected 13 of 18 terms, and 8 of 9 predictors
After backward pass GRSq 0.7833 RSq 0.821 
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=ozone1, trace=4, linpreds=c(3, 
      8), degree=2)

                        coefficients
(Intercept)                 18.00574
vis                         -0.01138
h(vh-5900)                   0.40178
h(5900-vh)                  -0.01542
h(ibh-1069)                 -0.00051
h(dpg-11)                   -0.09272
h(11-dpg)                   -0.05791
h(89-doy)                   -0.14093
h(doy-151)                  -0.02745
humidity * h(temp-58)        0.00758
h(vh-5900) * h(wind-4)      -0.08672
h(vh-5900) * h(4-wind)      -0.39960
h(temp-72) * h(doy-151)     -0.00342

Selected 13 of 18 terms, and 8 of 9 predictors 2 linear predictors
Importance: temp, humidity, doy, ibh, dpg, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 8 4
GCV 13.948    RSS 3778.7    GRSq 0.78333    RSq 0.82105
> if (PLOT) {
+     plot(a)
+     plotmo(a)
+ }
> printh(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
===earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms) 
 [1] 0 2 2 4 4 5 6 6 7 7 7 8 8 8 8 8 8 8
> printh(earth:::get.nterms.per.degree(a))
===earth:::get.nterms.per.degree(a) 

0 1 2 
1 8 4 
> # printh(head(predict(a, type="terms")))
> 
> # this is a good example because it has linear preds in both 1 and 2 degree terms
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56,     nk=21, degree=2, linpreds=c(3,5))
itest 43  eqn56                            degree 2  nk 21  nTerms 11 of 14  GRSq    1
Selected 11 of 14 terms, and 5 of 10 predictors 3 linear predictors
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 1
GCV 0.022541    RSS 1.2343    GRSq 0.99732    RSq 0.9985
> # check symmetry by using negative of eqn56
> itest <- itest+1; data.global <- cbind(neg.eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> test.earth(itest, neg.eqn56, nk=21, degree=2, linpreds=c(3,5))
itest 44  neg.eqn56                        degree 2  nk 21  nTerms 11 of 14  GRSq    1
Selected 11 of 14 terms, and 5 of 10 predictors 3 linear predictors
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 1
GCV 0.022541    RSS 1.2343    GRSq 0.99732    RSq 0.9985
> 
> cat("--- tests with ozone data ----------------------\n")
--- tests with ozone data ----------------------
> 
> data(ozone1)
> attach(ozone1)
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=1, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 45  doy ~ wind+humidity+temp+vis     degree 1  nk 21  nTerms 6  of 15  GRSq 0.18 GRSq ratio 1.3634 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

               coefficients
(Intercept)        133.5871
h(3-wind)           57.5238
h(humidity-28)       1.4834
h(28-humidity)       8.7491
h(temp-49)           1.1405
h(49-temp)          -4.9034

Selected 6 of 15 terms, and 3 of 4 predictors 
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 8930.5    RSS 2753871    GRSq 0.18275    RSq 0.23168
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  133.59
  +  57.524 * bf1
  +  1.4834 * bf2
  +   8.749 * bf3
  +  1.1405 * bf4
  -  4.9034 * bf5

   bf1  h(3-wind)
   bf2  h(humidity-28)
   bf3  h(28-humidity)
   bf4  h(temp-49)
   bf5  h(49-temp)

Selected 6 of 15 terms, and 3 of 4 predictors 
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 8930.5    RSS 2753871    GRSq 0.18275    RSq 0.23168
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 6 of 15 terms, and 3 of 4 predictors 
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 8930.5    RSS 2753871    GRSq 0.18275    RSq 0.23168
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; a91 <- ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 46  doy ~ wind+humidity+temp+vis     degree 2  nk 21  nTerms 8  of 20  GRSq 0.21 GRSq ratio 1.7107 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                     140.1222
h(3-wind)                        55.2710
h(humidity-28)                    1.9135
h(28-humidity) * h(temp-60)       1.4852
h(28-humidity) * h(60-temp)       1.1288
h(humidity-54) * h(49-temp)      -0.6598
h(humidity-77) * h(49-temp)       4.2524
h(77-humidity) * h(49-temp)      -0.1622

Selected 8 of 20 terms, and 3 of 4 predictors 
Importance: wind, humidity, temp, vis-unused
Number of terms at each degree of interaction: 1 2 5
GCV 8636.8    RSS 2539541    GRSq 0.20963    RSq 0.29148
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  140.12
  +   55.271 * bf1
  +   1.9135 * bf2
  +   1.4852 * bf3 * bf4
  +   1.1288 * bf3 * bf5
  -  0.65982 * bf6 * bf7
  +   4.2524 * bf8 * bf7
  -  0.16218 * bf9 * bf7

   bf1  h(3-wind)
   bf2  h(humidity-28)
   bf3  h(28-humidity)
   bf4  h(temp-60)
   bf5  h(60-temp)
   bf6  h(humidity-54)
   bf7  h(49-temp)
   bf8  h(humidity-77)
   bf9  h(77-humidity)

Selected 8 of 20 terms, and 3 of 4 predictors 
Importance: wind, humidity, temp, vis-unused
Number of terms at each degree of interaction: 1 2 5
GCV 8636.8    RSS 2539541    GRSq 0.20963    RSq 0.29148
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
> 
> # this is a basic test of RegressAndFix (because this generates lin dep bx cols)
> 
> cat("--Expect warning from mda::mars: NAs introduced by coercion\n") # why do we get a warning?
--Expect warning from mda::mars: NAs introduced by coercion
> x.global <- cbind(wind, exp(humidity))
> y <- doy
> # col.loess is 0 else get loess errors
> itest <- itest+1; ozone.test(itest, "doy ~ wind+exp(humidity)", x.global, y, degree=1, nk=21, col.loess=0)
Warning in storage.mode(tagx) <- "integer" : NAs introduced by coercion
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 47  doy ~ wind+exp(humidity)         degree 1  nk 21  nTerms 3  of 7   GRSq  0.1 GRSq ratio 1.6407 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

            coefficients
(Intercept)      202.179
h(3-wind)         50.040
h(wind-9)        -61.155

Selected 3 of 7 terms, and 1 of 2 predictors 
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.6    RSS 3143644    GRSq 0.10121    RSq 0.12293
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  202.18
  +  50.04 * bf1
  - 61.155 * bf2

   bf1  h(3-wind)
   bf2  h(wind-9)

Selected 3 of 7 terms, and 1 of 2 predictors 
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.6    RSS 3143644    GRSq 0.10121    RSq 0.12293
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 3 of 7 terms, and 1 of 2 predictors 
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.6    RSS 3143644    GRSq 0.10121    RSq 0.12293
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~.", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 48  O3~.                             degree 2  nk 21  nTerms 11 of 21  GRSq 0.79 GRSq ratio 1.0101 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                     14.88852
h(temp-58)                       0.32079
h(233-ibt)                      -0.04562
h(200-vis)                       0.02202
h(doy-89)                       -0.02325
h(89-doy)                       -0.14366
h(wind-7) * h(200-vis)          -0.01872
h(56-humidity) * h(temp-58)     -0.02096
h(temp-58) * h(dpg-54)          -0.01891
h(temp-58) * h(54-dpg)           0.00410
h(1069-ibh) * h(44-dpg)         -0.00008

Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.454    RSS 3767.9    GRSq 0.791    RSq 0.82156
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  14.889
  +    0.32079 * bf1
  -   0.045618 * bf2
  +   0.022015 * bf3
  -   0.023247 * bf4
  -    0.14366 * bf5
  -   0.018715 * bf6 * bf3
  -    0.02096 * bf7 * bf1
  -   0.018909 * bf1 * bf8
  +  0.0041001 * bf1 * bf9
  - 8.0517e-05 * bf10 * bf11

   bf1  h(temp-58)
   bf2  h(233-ibt)
   bf3  h(200-vis)
   bf4  h(doy-89)
   bf5  h(89-doy)
   bf6  h(wind-7)
   bf7  h(56-humidity)
   bf8  h(dpg-54)
   bf9  h(54-dpg)
  bf10  h(1069-ibh)
  bf11  h(44-dpg)

Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.454    RSS 3767.9    GRSq 0.791    RSq 0.82156
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.454    RSS 3767.9    GRSq 0.791    RSq 0.82156
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~., nk=51", x.global, y, degree=2, nk=51)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 49  O3~., nk=51                      degree 2  nk 51  nTerms 27 of 48  GRSq 0.81 GRSq ratio 1.0106 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                     12.01352
h(temp-58)                       0.65783
h(ibt-233)                       0.22037
h(233-ibt)                      -0.02968
h(200-vis)                       0.05764
h(doy-89)                       -0.02068
h(89-doy)                       -0.11638
h(vh-5870) * h(temp-58)         -0.00812
h(vh-5890) * h(200-vis)          0.00291
h(5890-vh) * h(200-vis)         -0.00012
h(vh-5850) * h(doy-89)           0.00056
h(7-wind) * h(temp-81)          -0.47212
h(wind-6) * h(ibt-233)          -0.18107
h(6-wind) * h(ibt-233)          -0.03040
h(56-humidity) * h(temp-58)     -0.01276
h(71-humidity) * h(ibt-233)     -0.00732
h(temp-58) * h(dpg-54)          -0.01481
h(temp-76) * h(233-ibt)         -0.05426
h(temp-72) * h(200-vis)         -0.00377
h(temp-84) * h(200-vis)          0.01989
h(temp-88) * h(200-vis)         -0.02278
h(temp-58) * h(doy-159)         -0.00212
h(temp-58) * h(159-doy)         -0.00533
h(1069-ibh) * h(ibt-268)         0.00065
h(dpg-17) * h(200-vis)          -0.00060
h(17-dpg) * h(200-vis)          -0.00054
h(ibt-258) * h(200-vis)         -0.00251

Selected 27 of 48 terms, and 9 of 9 predictors 
Importance: temp, ibt, doy, vis, dpg, ibh, humidity, wind, vh
Number of terms at each degree of interaction: 1 6 20
GCV 12.455    RSS 2630.5    GRSq 0.80652    RSq 0.87542
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  12.014
  +    0.65783 * bf1
  +    0.22037 * bf2
  -   0.029683 * bf3
  +   0.057645 * bf4
  -   0.020685 * bf5
  -    0.11638 * bf6
  -  0.0081176 * bf7 * bf1
  +  0.0029107 * bf8 * bf4
  - 0.00011682 * bf9 * bf4
  +  0.0005563 * bf10 * bf5
  -    0.47212 * bf11 * bf12
  -    0.18107 * bf13 * bf2
  -   0.030404 * bf14 * bf2
  -   0.012757 * bf15 * bf1
  -  0.0073213 * bf16 * bf2
  -   0.014807 * bf1 * bf17
  -    0.05426 * bf18 * bf3
  -   0.003772 * bf19 * bf4
  +   0.019891 * bf20 * bf4
  -   0.022779 * bf21 * bf4
  -  0.0021176 * bf1 * bf22
  -  0.0053335 * bf1 * bf23
  + 0.00064509 * bf24 * bf25
  -  0.0006026 * bf26 * bf4
  - 0.00054483 * bf27 * bf4
  -  0.0025072 * bf28 * bf4

   bf1  h(temp-58)
   bf2  h(ibt-233)
   bf3  h(233-ibt)
   bf4  h(200-vis)
   bf5  h(doy-89)
   bf6  h(89-doy)
   bf7  h(vh-5870)
   bf8  h(vh-5890)
   bf9  h(5890-vh)
  bf10  h(vh-5850)
  bf11  h(7-wind)
  bf12  h(temp-81)
  bf13  h(wind-6)
  bf14  h(6-wind)
  bf15  h(56-humidity)
  bf16  h(71-humidity)
  bf17  h(dpg-54)
  bf18  h(temp-76)
  bf19  h(temp-72)
  bf20  h(temp-84)
  bf21  h(temp-88)
  bf22  h(doy-159)
  bf23  h(159-doy)
  bf24  h(1069-ibh)
  bf25  h(ibt-268)
  bf26  h(dpg-17)
  bf27  h(17-dpg)
  bf28  h(ibt-258)

Selected 27 of 48 terms, and 9 of 9 predictors 
Importance: temp, ibt, doy, vis, dpg, ibh, humidity, wind, vh
Number of terms at each degree of interaction: 1 6 20
GCV 12.455    RSS 2630.5    GRSq 0.80652    RSq 0.87542
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
Selected 27 of 48 terms, and 9 of 9 predictors 
Importance: temp, ibt, doy, vis, dpg, ibh, humidity, wind, vh
Number of terms at each degree of interaction: 1 6 20
GCV 12.455    RSS 2630.5    GRSq 0.80652    RSq 0.87542
> 
> detach(ozone1)
> 
> cat("--- fast mars -----------------------------------\n")
--- fast mars -----------------------------------
> 
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = -1, fast.beta = 1))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = -1,     fast.beta = 1) 
Selected 11 of 31 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.454    RSS 3767.9    GRSq 0.791    RSq 0.82156
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = -1, fast.beta = 0))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = -1,     fast.beta = 0) 
Selected 11 of 31 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.454    RSS 3767.9    GRSq 0.791    RSq 0.82156
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 1))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 5,     fast.beta = 1) 
Selected 13 of 30 terms, and 8 of 9 predictors 
Importance: temp, humidity, dpg, ibt, doy, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 6 6
GCV 12.817    RSS 3472.3    GRSq 0.8009    RSq 0.83556
> printh(earth(O3 ~ ., data=ozone1, degree=2, nk = 31, fast.k = 5, fast.beta = 0))
===earth(O3 ~ ., data = ozone1, degree = 2, nk = 31, fast.k = 5,     fast.beta = 0) 
Selected 18 of 31 terms, and 9 of 9 predictors 
Importance: temp, ibt, humidity, doy, dpg, vis, ibh, wind, vh
Number of terms at each degree of interaction: 1 7 10
GCV 13.171    RSS 3276.1    GRSq 0.7954    RSq 0.84485
> 
> cat("--- plot.earth and plot.earth.models ------------\n")
--- plot.earth and plot.earth.models ------------
> 
> a <- earth(O3 ~ ., data=ozone1) # formula interface
> 
> if (PLOT)
+     plot(a, caption="plot.earth test 1", col.rsq=3, col.loess=4, col.qq="pink",
+          col.vline=1, col.npreds=0, nresiduals=100, cum.grid="grid")
> 
> set.seed(1)
> if (PLOT) {
+     plot(a, caption="plot.earth test 2", which=c(3,4,1), rlim=c(.2,.9),
+          jitter=.01, id.n=5, legend.pos=c(10,.4), pch=20, lty.vline=1)
+ 
+     plot(a, caption="plot.earth test 3", which=c(2), main="test main")
+ }
> 
> a1 <- earth(ozone1[,c(2:4,10)], ozone1[,1])     # x,y interface
> 
> if (PLOT) {
+     plot(a, caption="plot.earth test 4", id.n=1)
+     set.seed(1)
+     plot.earth.models(a, which=1, rlim=c(.4,.8), jitter=.01)
+ 
+     plot.earth.models(a1)
+ 
+     plot.earth.models(list(a, a1), col.cum=c(3,4),  col.grsq=c(1,2), col.rsq=c(3,4),
+          col.npreds=1, col.vline=1, lty.vline=3,
+          legend.pos=c(5,.4), legend.text=c("a", "b", "c"))
+ }
> 
> cat("--- test minspan --------------------------------\n")
--- test minspan --------------------------------
> 
> a <- earth(O3 ~ ., data=ozone1, minspan=2)
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=ozone1, minspan=2)

               coefficients
(Intercept)         8.56318
h(vh-5740)          0.01541
h(5740-vh)         -0.01350
h(9-wind)           0.30409
h(humidity-39)      0.24195
h(humidity-54)     -0.22718
h(temp-58)          0.37881
h(ibh-1046)        -0.00060
h(1046-ibh)        -0.00300
h(dpg-12)          -0.10732
h(80-vis)           0.04563
h(doy-89)           0.04698
h(89-doy)          -0.12486
h(doy-159)         -0.09115

Selected 14 of 19 terms, and 8 of 9 predictors 
Importance: temp, ibh, doy, dpg, humidity, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 13 (additive model)
GCV 14.819    RSS 4122.8    GRSq 0.7698    RSq 0.80475
> 
> a <- earth(O3 ~ ., data=ozone1, minspan=0)
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=ozone1, minspan=0)

               coefficients
(Intercept)         8.69108
h(vh-5740)          0.01526
h(5740-vh)         -0.01301
h(9-wind)           0.30446
h(humidity-41)      0.27530
h(humidity-54)     -0.26151
h(temp-58)          0.38020
h(ibh-1069)        -0.00062
h(1069-ibh)        -0.00291
h(dpg-11)          -0.10609
h(80-vis)           0.04590
h(doy-89)           0.04718
h(89-doy)          -0.12645
h(doy-159)         -0.09158

Selected 14 of 19 terms, and 8 of 9 predictors 
Importance: temp, ibh, doy, dpg, humidity, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 13 (additive model)
GCV 14.859    RSS 4134    GRSq 0.76918    RSq 0.80422
> 
> a <- earth(O3 ~ ., data=ozone1, minspan=-1) # minspan=-1 added in earth 2.4-0
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=ozone1, minspan=-1)

               coefficients
(Intercept)        13.99702
h(5860-vh)         -0.01378
h(wind-3)          -0.34494
h(55-humidity)     -0.13130
h(temp-58)          0.27810
h(1108-ibh)        -0.00330
h(dpg-10)          -0.09981
h(ibt-121)          0.03250
h(150-vis)          0.02322
h(doy-92)           0.04134
h(92-doy)          -0.11683
h(doy-159)         -0.08480

Selected 12 of 20 terms, and 9 of 9 predictors 
Importance: temp, humidity, dpg, doy, vh, ibh, vis, ibt, wind
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 14.590    RSS 4166.9    GRSq 0.77336    RSq 0.80266
> 
> cat("--- test multiple responses ---------------------\n")
--- test multiple responses ---------------------
> 
> # this uses the global matrix data.global (data.global[,1:2] is the response)
> 
> test.earth.two.responses <- function(itest, func1, func2,
+     degree=2, nk=51, plotit=PLOT, test.rsq=TRUE, trace=0, minspan=0,
+     test.mars.to.earth=FALSE)
+ {
+     if(typeof(func1) == "character")
+         funcnames <- paste("multiple responses", func1, func2)
+     else
+         funcnames <- paste("multiple responses", deparse(substitute(func1)), deparse(substitute(func2)))
+     cat("itest", sprintf("%-3d", itest), funcnames,
+         " degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk), "\n\n")
+     gc()
+     fite <- earth(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+                 degree=degree, trace=trace, nk=nk, pmethod="b", fast.k=-1, minspan=minspan)
+     printh(fite)
+     caption <- paste("itest ", itest, ": ", funcnames, " degree=", degree, " nk=", nk, sep="")
+     if(plotit) {
+         if(typeof(func1) == "character") {
+             plotmo(fite, caption=caption)
+             plotmo(fite, ycolumn=2)
+         } else {
+             plotmo(fite, func=func1, caption=caption)
+             plotmo(fite, func=func2, ycolumn=2)
+         }
+         plot(fite, caption=caption)
+         plot(fite, ycolumn=2)
+     }
+     cat("\n")
+     if(test.mars.to.earth) {
+         cat("Testing mars.to.earth with a multiple response model\n")
+         fitm <- mars(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+                      degree=degree, trace=(trace!=0), nk=nk)
+         fitme <- mars.to.earth(fitm)
+         printh(fitme)
+         printh(summary(fitme))
+         if(plotit) {
+             plotmo(fitm, func=func1, caption=caption)
+             plotmo(fitm, func=func2, ycolumn=2)
+         }
+ # TODO following code causes error "nk" not found, looking in wrong environment?
+ #       cat("Expect warnings because of weights in the mars model\n")
+ #       fitm <- mars(data.global[,c(-1,-2), drop=FALSE], data.global[,1:2],
+ #                    degree=degree, trace=(trace!=0), nk=nk, wp=c(1,2))
+ #       fitme <- mars.to.earth(fitm)
+ #       printh(fitme)
+ #       printh(summary(fitme))
+     }
+     fite
+ }
> 
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1", "func7", "x1", "x2")
> itest <- itest+1; a <- test.earth.two.responses(itest, func1, func7, nk=51, degree=1)
itest 50  multiple responses func1 func7  degree 1  nk 51  

===fite 
Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

            GCV     RSS    GRSq     RSq
func1 0.0023786 0.16386 0.99719 0.99803
func7 0.0096411 0.66418 0.98121 0.98679
All   0.0120197 0.82803 0.99116 0.99379

> printh(summary(a))
===summary(a) 
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], trace=trace, degree=degree, nk=nk, pmethod="b", 
      fast.k=-1, minspan=minspan)

                    func1    func7
(Intercept)      -1.42982 -0.64229
h(x1- -0.483966)  1.73804 -1.51722
h(-0.483966-x1)   1.48240  4.01156
h(x1- -0.23993)   0.99670  5.46759
h(x1-0.29412)    -1.00703 -5.32110
h(x1-0.422242)   -2.18175 -3.23891
h(x1-0.728679)   -2.20310  1.93806
h(x2- -0.342445)  0.98985 -0.01181
h(-0.342445-x2)  -1.00889  0.08316

Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

            GCV     RSS    GRSq     RSq
func1 0.0023786 0.16386 0.99719 0.99803
func7 0.0096411 0.66418 0.98121 0.98679
All   0.0120197 0.82803 0.99116 0.99379
> printh(summary(a, style="bf"))
===summary(a, style = "bf") 
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], trace=trace, degree=degree, nk=nk, pmethod="b", 
      fast.k=-1, minspan=minspan)

func1 =
  -1.4298
  +  1.7380 * bf1
  +  1.4824 * bf2
  +  0.9967 * bf3
  -  1.0070 * bf4
  -  2.1818 * bf5
  -  2.2031 * bf6
  + 0.98985 * bf7
  -  1.0089 * bf8

   bf1  h(x1--0.483966)
   bf2  h(-0.483966-x1)
   bf3  h(x1--0.23993)
   bf4  h(x1-0.29412)
   bf5  h(x1-0.422242)
   bf6  h(x1-0.728679)
   bf7  h(x2--0.342445)
   bf8  h(-0.342445-x2)

func7 =
  -0.64229
  -   1.5172 * bf1
  +   4.0116 * bf2
  +   5.4676 * bf3
  -   5.3211 * bf4
  -   3.2389 * bf5
  +   1.9381 * bf6
  - 0.011813 * bf7
  + 0.083162 * bf8

   bf1  h(x1--0.483966)
   bf2  h(-0.483966-x1)
   bf3  h(x1--0.23993)
   bf4  h(x1-0.29412)
   bf5  h(x1-0.422242)
   bf6  h(x1-0.728679)
   bf7  h(x2--0.342445)
   bf8  h(-0.342445-x2)

Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

            GCV     RSS    GRSq     RSq
func1 0.0023786 0.16386 0.99719 0.99803
func7 0.0096411 0.66418 0.98121 0.98679
All   0.0120197 0.82803 0.99116 0.99379
> if (PLOT) {
+     plotmo(a, ycolumn=1)     # test generation of caption based on response name
+     plotmo(a, ycolumn=2)
+     plot(a, ycolumn=1)
+     plot(a, ycolumn=2)
+ }
> x.global <- cbind(                                     x1, x2)
> data.global <- cbind(func1(x.global), func7(x.global), x1, x2)
> colnames(data.global) = c("func1", "a.very.long.in.fact.extremely.long.name", "x1", "x2")
> itest <- itest+1; a <- test.earth.two.responses(itest, func1, func7, nk=51, degree=3)
itest 51  multiple responses func1 func7  degree 3  nk 51  

===fite 
Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

                                              GCV     RSS    GRSq     RSq
func1                                   0.0026255 0.16386 0.99690 0.99803
a.very.long.in.fact.extremely.long.name 0.0106421 0.66418 0.97926 0.98679
All                                     0.0132677 0.82803 0.99025 0.99379

> printh(summary(a))
===summary(a) 
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], trace=trace, degree=degree, nk=nk, pmethod="b", 
      fast.k=-1, minspan=minspan)

                    func1 a.very.long.in.fact.extremely.long.name
(Intercept)      -1.42982                                -0.64229
h(x1- -0.483966)  1.73804                                -1.51722
h(-0.483966-x1)   1.48240                                 4.01156
h(x1- -0.23993)   0.99670                                 5.46759
h(x1-0.29412)    -1.00703                                -5.32110
h(x1-0.422242)   -2.18175                                -3.23891
h(x1-0.728679)   -2.20310                                 1.93806
h(x2- -0.342445)  0.98985                                -0.01181
h(-0.342445-x2)  -1.00889                                 0.08316

Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)

                                              GCV     RSS    GRSq     RSq
func1                                   0.0026255 0.16386 0.99690 0.99803
a.very.long.in.fact.extremely.long.name 0.0106421 0.66418 0.97926 0.98679
All                                     0.0132677 0.82803 0.99025 0.99379
> 
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56=eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = c("", "neg.eqn56noise", "x1", "x2", "x3", "x4", "x5")
> itest <- itest+1; a <- test.earth.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=1)
itest 52  multiple responses eqn56 neg.eqn56noise  degree 1  nk 51  

===fite 
Selected 11 of 16 terms, and 5 of 5 predictors 
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 10 (additive model)

                    GCV     RSS    GRSq     RSq
y1             0.048674  3.0378 0.99422 0.99632
neg.eqn56noise 1.148413 71.6725 0.85934 0.91043
All            1.197088 74.7102 0.92784 0.95405

> 
> x.global <- cbind(                                           x1, x2, x3, x4, x5)
> data.global <- cbind(eqn56=eqn56(x.global), neg.eqn56noise(x.global), x1, x2, x3, x4, x5)
> colnames(data.global) = NULL
> itest <- itest+1; a70 <- test.earth.two.responses(itest, eqn56, neg.eqn56noise, nk=51, degree=2)
itest 53  multiple responses eqn56 neg.eqn56noise  degree 2  nk 51  

===fite 
Selected 10 of 31 terms, and 5 of 5 predictors 
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 9 (additive model)

         GCV     RSS    GRSq     RSq
y1  0.099389  5.8165 0.98820 0.99296
y2  1.081621 63.2991 0.87584 0.92587
All 1.181010 69.1156 0.93108 0.95885

> printh(summary(a70))
===summary(a70) 
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], trace=trace, degree=degree, nk=nk, pmethod="b", 
      fast.k=-1, minspan=minspan)

                        y1        y2
(Intercept)       -0.54386   0.28625
h(x1- -0.349296)   0.75412  -0.57691
h(x1-0.578712)     8.47335  -9.42115
h(x2-0.423488)    25.67582 -23.86772
h(x2-0.55997)    -24.39882  22.93473
h(x3-0.299159)     2.93738  -3.22515
h(0.299159-x3)    -3.06068   2.96141
h(x4- -0.464244)   1.91562  -1.93435
h(-0.464244-x4)   -2.34946   2.83263
h(x5- -0.478141)   1.12595  -0.91654

Selected 10 of 31 terms, and 5 of 5 predictors 
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 9 (additive model)

         GCV     RSS    GRSq     RSq
y1  0.099389  5.8165 0.98820 0.99296
y2  1.081621 63.2991 0.87584 0.92587
All 1.181010 69.1156 0.93108 0.95885
> printh(summary(a70, style="bf"))
===summary(a70, style = "bf") 
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], trace=trace, degree=degree, nk=nk, pmethod="b", 
      fast.k=-1, minspan=minspan)

y1 =
  -0.54386
  +  0.75412 * bf1
  +   8.4733 * bf2
  +   25.676 * bf3
  -   24.399 * bf4
  +   2.9374 * bf5
  -   3.0607 * bf6
  +   1.9156 * bf7
  -   2.3495 * bf8
  +   1.1260 * bf9

   bf1  h(x1--0.349296)
   bf2  h(x1-0.578712)
   bf3  h(x2-0.423488)
   bf4  h(x2-0.55997)
   bf5  h(x3-0.299159)
   bf6  h(0.299159-x3)
   bf7  h(x4--0.464244)
   bf8  h(-0.464244-x4)
   bf9  h(x5--0.478141)

y2 =
  0.28625
  -  0.57691 * bf1
  -   9.4211 * bf2
  -   23.868 * bf3
  +   22.935 * bf4
  -   3.2251 * bf5
  +   2.9614 * bf6
  -   1.9343 * bf7
  +   2.8326 * bf8
  -  0.91654 * bf9

   bf1  h(x1--0.349296)
   bf2  h(x1-0.578712)
   bf3  h(x2-0.423488)
   bf4  h(x2-0.55997)
   bf5  h(x3-0.299159)
   bf6  h(0.299159-x3)
   bf7  h(x4--0.464244)
   bf8  h(-0.464244-x4)
   bf9  h(x5--0.478141)

Selected 10 of 31 terms, and 5 of 5 predictors 
Importance: x3, x2, x4, x1, x5
Number of terms at each degree of interaction: 1 9 (additive model)

         GCV     RSS    GRSq     RSq
y1  0.099389  5.8165 0.98820 0.99296
y2  1.081621 63.2991 0.87584 0.92587
All 1.181010 69.1156 0.93108 0.95885
> 
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                                        (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robotArm(x.global), eqn56(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global)    <- c(                "l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "eqn56", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=51, degree=1)
itest 54  multiple responses robotArm eqn56  degree 1  nk 51  

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.061604 3.8447 0.67027 0.79004
eqn56 0.042585 2.6577 0.99911 0.99943
All   0.104189 6.5024 0.99783 0.99862

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.061604 3.8447 0.67027 0.79004
eqn56 0.042585 2.6577 0.99911 0.99943
All   0.104189 6.5024 0.99783 0.99862
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=51, degree=2, test.mars.to.earth=TRUE)
itest 55  multiple responses robotArm eqn56  degree 2  nk 51  

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.070210 3.8447 0.62420 0.79004
eqn56 0.048534 2.6577 0.99899 0.99943
All   0.118744 6.5024 0.99753 0.99862

Testing mars.to.earth with a multiple response model
Converted mars(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
          1:2], degree=degree, nk=nk, trace.mars=(trace!=0))
to        earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
          1:2], degree=degree, nk=nk)
===fitme 
Selected 14 of 14 terms, and 5 of 5 predictors 
Importance: l1, l2, theta1, theta2, phi
Number of terms at each degree of interaction: 1 11 2

           GCV    RSS    GRSq     RSq
arm   0.073080 3.2318 0.60884 0.82351
eqn56 0.026114 1.1548 0.99945 0.99975
All   0.099193 4.3866 0.99976 0.99989
===summary(fitme) 
Call: earth(x=data.global[, c(-1, -2), drop=FALSE], y=data.global[, 
      1:2], degree=degree, nk=nk)

                                         arm    eqn56
(Intercept)                         1.137120 16.81727
h(l1-0.434659)                      0.754467  2.79229
h(l1-0.712515)                      0.220952  9.08473
h(0.712515-l1)                     -0.293684 -1.12632
h(l2-0.680866)                      0.852962  0.01560
h(0.680866-l2)                     -0.444329 -7.44728
h(theta1-1.99268)                   0.015752  3.03011
h(1.99268-theta1)                   0.062994 -2.96905
h(theta2-3.09961)                  -0.193984  2.02819
h(3.09961-theta2)                  -0.156002 -1.97747
h(phi- -0.0759479)                 -0.232519  0.98325
h(-0.0759479-phi)                  -0.150194 -0.97498
h(0.434659-l1)                     -0.150766 -0.05519
h(l1-0.434659) * h(theta2-1.51306) -1.823933 -0.39212

Selected 14 of 14 terms, and 5 of 5 predictors 
Importance: l1, l2, theta1, theta2, phi
Number of terms at each degree of interaction: 1 11 2

           GCV    RSS    GRSq     RSq
arm   0.073080 3.2318 0.60884 0.82351
eqn56 0.026114 1.1548 0.99945 0.99975
All   0.099193 4.3866 0.99976 0.99989
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.070210 3.8447 0.62420 0.79004
eqn56 0.048534 2.6577 0.99899 0.99943
All   0.118744 6.5024 0.99753 0.99862
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=1)
itest 56  multiple responses robotArm eqn56  degree 1  nk 201 

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.061604 3.8447 0.67027 0.79004
eqn56 0.042585 2.6577 0.99911 0.99943
All   0.104189 6.5024 0.99783 0.99862

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.061604 3.8447 0.67027 0.79004
eqn56 0.042585 2.6577 0.99911 0.99943
All   0.104189 6.5024 0.99783 0.99862
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=2)
itest 57  multiple responses robotArm eqn56  degree 2  nk 201 

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.070210 3.8447 0.62420 0.79004
eqn56 0.048534 2.6577 0.99899 0.99943
All   0.118744 6.5024 0.99753 0.99862

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.070210 3.8447 0.62420 0.79004
eqn56 0.048534 2.6577 0.99899 0.99943
All   0.118744 6.5024 0.99753 0.99862
> itest <- itest+1; test.earth.two.responses(itest, robotArm, eqn56, nk=201, degree=10)
itest 58  multiple responses robotArm eqn56  degree 10 nk 201 

===fite 
Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.070210 3.8447 0.62420 0.79004
eqn56 0.048534 2.6577 0.99899 0.99943
All   0.118744 6.5024 0.99753 0.99862

Selected 11 of 11 terms, and 5 of 5 predictors 
Importance: theta1, theta2, l1, phi, l2
Number of terms at each degree of interaction: 1 10 (additive model)

           GCV    RSS    GRSq     RSq
arm   0.070210 3.8447 0.62420 0.79004
eqn56 0.048534 2.6577 0.99899 0.99943
All   0.118744 6.5024 0.99753 0.99862
> 
> attach(ozone1)
> x.global <- cbind(                wind, humidity, temp, ibh, dpg, ibt, vis)
> data.global <- cbind(O3, doy, vh, wind, humidity, temp, ibh, dpg, ibt, vis)
> itest <- itest+1; test.earth.two.responses(itest, "O3", "doy", nk=51, degree=2)
itest 59  multiple responses O3 doy  degree 2  nk 51  

===fite 
Selected 24 of 49 terms, and 8 of 8 predictors 
Importance: wind, ibt, ibh, vis, temp, dpg, vh, humidity
Number of terms at each degree of interaction: 1 8 15

        GCV     RSS    GRSq     RSq
O3    23.99    5359 0.62732 0.74620
doy 7228.49 1614632 0.33851 0.54952
All 7252.49 1619991 0.34020 0.55067

Selected 24 of 49 terms, and 8 of 8 predictors 
Importance: wind, ibt, ibh, vis, temp, dpg, vh, humidity
Number of terms at each degree of interaction: 1 8 15

        GCV     RSS    GRSq     RSq
O3    23.99    5359 0.62732 0.74620
doy 7228.49 1614632 0.33851 0.54952
All 7252.49 1619991 0.34020 0.55067
> detach(ozone1)
> 
> cat("--- formula based multiple response -------------\n")
--- formula based multiple response -------------
> 
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> if (PLOT) {
+     plotmo(a2)                  # test generation of caption based on response name
+     plotmo(a2, ycolumn=1)
+     plotmo(a2, ycolumn=2)
+     plot(a2)
+     plot(a2, ycolumn=1)
+     plot(a2, ycolumn=2)
+ }
> 
> cat("--- test plot.earth.models with multiple responses ---\n")
--- test plot.earth.models with multiple responses ---
> 
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> a2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=2)
> b2 <- earth(cbind(O3,doy) ~ ., data=ozone1, degree=1)
> if (PLOT) {
+     plot.earth.models(list(a, a2), caption="plot.earth.models with multiple responses, list(a,a2)")
+     plot.earth.models(list(a2, a), caption="plot.earth.models with multiple responses, list(a2,a)")
+     plot.earth.models(list(a2, b2), caption="plot.earth.models with multiple responses, list(a2,b2)")
+ }
> 
> cat("--- subset --------------------------------------\n")
--- subset --------------------------------------
> 
> set.seed(9)
> train.subset <- sample(1:nrow(ozone1), .8 * nrow(ozone1))
> test.subset <- (1:nrow(ozone1))[-train.subset]
> 
> # all the following models should be identical
> a <- earth(ozone1[,-1], ozone1[,1], subset=train.subset, nprune=7, degree=2)
> printh(a)
===a 
Selected 7 of 21 terms, and 5 of 9 predictors 
Importance: temp, ibt, doy, dpg, vis, ibh-unused, vh-unused, wind-unused, humidity-unused
Number of terms at each degree of interaction: 1 5 1
GCV 15.901    RSS 3704.5    GRSq 0.75146    RSq 0.779
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[,-1], ozone1[,1], subset=train.subset)")
> 
> a <- earth(ozone1[train.subset,-1], ozone1[train.subset,1], nprune=7, degree=2)
> printh(a)
===a 
Selected 7 of 21 terms, and 5 of 9 predictors 
Importance: temp, ibt, doy, dpg, vis, ibh-unused, vh-unused, wind-unused, humidity-unused
Number of terms at each degree of interaction: 1 5 1
GCV 15.901    RSS 3704.5    GRSq 0.75146    RSq 0.779
> if (PLOT)
+     plotmo(a, caption="test subset: earth(ozone1[train.subset,-1], ozone1[train.subset,1]")
> 
> a <- earth(O3 ~ ., data=ozone1, subset=train.subset, nprune=7, degree=2)
> printh(a)
===a 
Selected 7 of 21 terms, and 5 of 9 predictors 
Importance: temp, ibt, doy, dpg, vis, ibh-unused, vh-unused, wind-unused, humidity-unused
Number of terms at each degree of interaction: 1 5 1
GCV 15.901    RSS 3704.5    GRSq 0.75146    RSq 0.779
> if (PLOT)
+     plotmo(a, caption="test subset: earth(O3 ~ ., data=ozone1, subset=train.subset")
> 
> y <- ozone1[test.subset, 1]
> yhat <- predict(a, newdata = ozone1[test.subset, -1])
> printh(1 - sum((y - yhat)^2)/sum((y - mean(y))^2)) # print RSquared
===1 - sum((y - yhat)^2)/sum((y - mean(y))^2) [1] 0.71948
> 
> cat("--- update -------------------------\n")
--- update -------------------------
> 
> a <- earth(O3 ~ ., data=ozone1, degree=2)
> printh(update(a, penalty = -1, ponly=TRUE))
===update(a, penalty = -1, ponly = TRUE) 
Selected 21 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 10 10
GCV 10.771    RSS 3554.4    GRSq 0.83167    RSq 0.83167
> printh(update(a, penalty = 10, ponly=TRUE))
===update(a, penalty = 10, ponly = TRUE) 
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 17.183    RSS 3767.9    GRSq 0.73308    RSq 0.82156
> a <- earth(O3 ~ ., data=ozone1, nk=31, pmethod="n", degree=2)
> a.none <- printh(update(a, nprune=10, pmethod="n"))
===update(a, nprune = 10, pmethod = "n") 
Selected 10 of 31 terms, and 5 of 9 predictors 
Importance: temp, humidity, ibt-unused, doy, dpg, ibh, vis-unused, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 6 3
GCV 13.836    RSS 3938.8    GRSq 0.78507    RSq 0.81346
> printh(update(a.none, pmethod="b"))
===update(a.none, pmethod = "b") 
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.836    RSS 3938.8    GRSq 0.78507    RSq 0.81346
> printh(update(a.none, nprune=4, pmethod="e"))
===update(a.none, nprune = 4, pmethod = "e") 
Selected 4 of 31 terms, and 3 of 9 predictors 
Importance: temp, ibh, humidity, vh-unused, wind-unused, dpg-unused, ibt-unused, vis-unused, doy-unused
Number of terms at each degree of interaction: 1 2 1
GCV 18.559    RSS 5813.1    GRSq 0.7117    RSq 0.7247
> a.updated <- update(a.none, nprune=10, pmethod="b")
> printh(a.updated)
===a.updated 
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.836    RSS 3938.8    GRSq 0.78507    RSq 0.81346
> a.backwards <- update(a, nprune=10, pmethod="b")
> printh(a.backwards)
===a.backwards 
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.836    RSS 3938.8    GRSq 0.78507    RSq 0.81346
> printh(all.equal(a.updated$bx, a.backwards$bx))
===all.equal(a.updated$bx, a.backwards$bx) [1] TRUE
> a <- earth(O3 ~ ., data=ozone1, nk=31, nprune=10, pmethod="b", degree=2)
> printh(a)
===a 
Selected 10 of 31 terms, and 7 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 4
GCV 13.836    RSS 3938.8    GRSq 0.78507    RSq 0.81346
> printh(all.equal(a$bx, a.backwards$bx))
===all.equal(a$bx, a.backwards$bx) [1] TRUE
> 
> cat("--- Force.xtx.prune -----------------------------\n")
--- Force.xtx.prune -----------------------------
> 
> m1 <- earth(Volume ~ ., data = trees)
> m2 <- earth(Volume ~ ., data = trees, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 1", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 1 [but within numerical tolerances]
> 
> m1 <- earth(O3 ~ wind+temp, data = ozone1, nk=51)
> m2 <- earth(O3 ~ wind+temp, data = ozone1, nk=51, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 2", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 2 [but within numerical tolerances]
> 
> # TODO there appears to be a bug in leaps --- to see run the call below
> # with trace=4 and in the prune pass display note that at subset size 15
> # several terms are added and deleted -- but only one term should be added per step
> m1 <- earth(O3 ~ ., data = ozone1, nk=51, degree=2)
> m2 <- earth(O3 ~ ., data = ozone1, nk=51, degree=2, Force.xtx.prune=TRUE)
> check.models.equal(m1, m2, "Force.xtx.prune test 3", check.subsets=FALSE)
check.models.equal not identical: Force.xtx.prune test 3 [but within numerical tolerances]
> 
> cat("--- extractAIC.earth ----------------------------\n")
--- extractAIC.earth ----------------------------
> 
> a <-earth(O3 ~ ., data=ozone1, degree=2)
> cat("Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC\n")
Ignore 10 warnings: extractAIC.earth: using GCV instead of AIC
> printh(drop1(a), expect.warning=TRUE)
===drop1(a)  expect warning -->Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Warning: extractAIC.earth: returning GCV instead of AIC
Single term deletions

Model:
O3 ~ vh + wind + humidity + temp + ibh + dpg + ibt + vis + doy
            Df  AIC
<none>         13.4
vh         0.0 13.4
wind     -10.0 14.2
humidity -10.0 15.1
temp      -7.5 13.1
ibh       -2.5 13.0
dpg        0.0 14.7
ibt       -5.0 13.9
vis        0.0 14.6
doy        0.0 14.6
> printh(drop1(a, warn=FALSE)) # repeat but with warnings suppressed
===drop1(a, warn = FALSE) 
Single term deletions

Model:
O3 ~ vh + wind + humidity + temp + ibh + dpg + ibt + vis + doy
            Df  AIC
<none>         13.4
vh         0.0 13.4
wind     -10.0 14.2
humidity -10.0 15.1
temp      -7.5 13.1
ibh       -2.5 13.0
dpg        0.0 14.7
ibt       -5.0 13.9
vis        0.0 14.6
doy        0.0 14.6
> 
> cat("--- fda and mda with earth -----------------------------------\n")
--- fda and mda with earth -----------------------------------
> 
> am <- fda(Species ~ ., data=iris, method=mars, degree=1, keepxy=TRUE)
> printh(am)
===am 
Call:
fda(formula = Species ~ ., data = iris, method = mars, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 95.31 100.00 

Training Misclassification Error: 0.02 ( N = 150 )
> a <- fda(Species ~ ., data=iris, method=earth, degree=1, keepxy=TRUE)
> printh(a)
===a 
Call:
fda(formula = Species ~ ., data = iris, method = earth, degree = 1, 
    keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.84 100.00 

Training Misclassification Error: 0.02667 ( N = 150 )
> printh(confusion(a))
===confusion(a) 
            true
object       setosa versicolor virginica
  setosa         50          0         0
  versicolor      0         49         3
  virginica       0          1        47
attr(,"error")
[1] 0.026667
> if (PLOT) {
+     par(mar=c(3, 3, 2, .5))  # small margins and text to pack figs in
+     par(mgp=c(1.6, 0.6, 0))  # flatten axis elements
+     par(oma=c(0,0,4,0))      # make space for caption
+     layout(rbind(c(1,1,0,0), c(2,3,4,5), c(6,7,8,9)), heights=c(2,1,1))
+     plot(a)
+     plotmo(a$fit, ycolumn=1, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE)
+     plotmo(a$fit, ycolumn=2, ylim=c(-1.5,1.5), clip=FALSE, do.par=FALSE)
+     mtext("fda test", outer=TRUE, font=2, line=1.5, cex=1)
+ }
> 
> data(glass)
> set.seed(123)
> samp <- sample(c(1:214), size=100, replace=FALSE)
> glass.train <- glass[samp,]
> glass.test <- glass[-samp,]
> am <- mda(Type ~ ., data=glass.train, method=mars,  keepxy=TRUE, degree=2)
> a <-  mda(Type ~ ., data=glass.train, method=earth, keepxy=TRUE, degree=2, keep.fitted=TRUE)
> printh(am)
===am 
Call:
mda(formula = Type ~ ., data = glass.train, method = mars, keepxy = TRUE, 
    degree = 2)

Dimension: 8 

Percent Between-Group Variance Explained:
    v1     v2     v3     v4     v5     v6     v7     v8 
 44.62  75.74  84.36  91.27  95.96  98.38  99.40 100.00 

Training Misclassification Error: 0.32 ( N = 100 )

Deviance: 151.38 
> printh(a)
===a 
Call:
mda(formula = Type ~ ., data = glass.train, method = earth, keep.fitted = TRUE, 
    keepxy = TRUE, degree = 2)

Dimension: 12 

Percent Between-Group Variance Explained:
    v1     v2     v3     v4     v5     v6     v7     v8     v9    v10    v11 
 64.06  84.61  91.10  95.24  96.82  97.86  98.74  99.33  99.74  99.88 100.00 
   v12 
100.00 

Training Misclassification Error: 0.24 ( N = 100 )

Deviance: 163.77 
> cat("mda with mars  ", attr(confusion(am), "error"), "\n")
mda with mars   0.32 
> cat("mda with earth ", attr(confusion(a),  "error"), "\n")
mda with earth  0.24 
> if (PLOT) {
+     plot(a$fit, caption="mda on glass data")
+     plotmo(a$fit, ycolumn=9, clip=FALSE, ylim=NA, caption="mda on glass data")
+ }
> 
> cat("\n---- update and keepxy, formula interface --------------------------\n")

---- update and keepxy, formula interface --------------------------
> 
> new.trees <- trees + c(1,2,3,4)
> new.trees <- new.trees[, -c(20:23)]
> a.formula <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees)
> cat("\nupdate(a, trace=1)\n")

update(a, trace=1)
> a.formula.1update <- update(a.formula, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Skipped forward pass
Prune method "backward" penalty 2 nprune 6: selected 4 of 6 terms, and 2 of 2 predictors
After backward pass GRSq 0.962 RSq 0.9757 
> a.formula.1  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees)
> check.models.equal(a.formula.1update, a.formula.1, msg="a1update a1")
check.models.equal identical: a1update a1

> 
> cat("\nupdate(a.formula, data=new.trees, trace=1)\n")

update(a.formula, data=new.trees, trace=1)
> a.formula.2update <- update(a.formula, data=new.trees, trace=1)
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6, 8, 10, 12
Reached delta RSq threshold (DeltaRSq 8.77394e-05 < 0.001)
After forward pass GRSq 0.71 RSq 0.9369
Prune method "backward" penalty 2 nprune 8: selected 4 of 8 terms, and 2 of 2 predictors
After backward pass GRSq 0.883 RSq 0.9251 
> a.formula.2  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = new.trees)
> check.models.equal(a.formula.2update, a.formula.2, msg="a2update a2")
check.models.equal identical: a2update a2

> 
> cat("\nupdate(a.formula, wp=2, trace=1)\n")

update(a.formula, wp=2, trace=1)
> a.formula.3update <- update(a.formula, wp=2, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6, 8
Reached delta RSq threshold (DeltaRSq 0.000280038 < 0.001)
After forward pass GRSq 0.9372 RSq 0.9774
Prune method "backward" penalty 2 nprune 6: selected 4 of 6 terms, and 2 of 2 predictors
After backward pass GRSq 0.962 RSq 0.9757 
> a.formula.3  <- earth(Volume ~ ., subset=rep(TRUE, nrow(trees)), data = trees, wp=2)
> check.models.equal(a.formula.3update, a.formula.3, msg="a3update a3")
check.models.equal identical: a3update a3

> 
> cat("\nupdate(a.formula, subset=subset.new, trace=1)\n")

update(a.formula, subset=subset.new, trace=1)
> subset.new <- rep(TRUE, nrow(trees))
> subset.new[1:4] = FALSE
> a.formula.4update <- update(a.formula, subset=subset.new, trace=1)
update.earth: using 31 by 3 data argument from original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0.000205816 < 0.001)
After forward pass GRSq 0.925 RSq 0.9716
Prune method "backward" penalty 2 nprune 5: selected 4 of 5 terms, and 2 of 2 predictors
After backward pass GRSq 0.9474 RSq 0.969 
> a.formula.4  <- earth(Volume ~ ., data = trees, subset=subset.new)
> check.models.equal(a.formula.4update, a.formula.4, msg="a4update a4")
check.models.equal identical: a4update a4

> 
> # now use keepxy=TRUE
> 
> a.formula <- earth(Volume ~ ., wp=1, data = trees, keepxy=TRUE)
> 
> cat("\nupdate(a.formula, trace=1)\n")

update(a.formula, trace=1)
> a.formula.5update <- update(a.formula, trace=1)
update.earth: using 31 by 3 data saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Skipped forward pass
Prune method "backward" penalty 2 nprune 6: selected 4 of 6 terms, and 2 of 2 predictors
After backward pass GRSq 0.962 RSq 0.9757 
> a.formula.5  <- earth(Volume ~ ., wp=1, data = trees, keepxy=TRUE)
> check.models.equal(a.formula.5update, a.formula.5, msg="a5update a5")
check.models.equal identical: a5update a5

> 
> cat("\nupdate(a.formula, data=new.trees, trace=1)\n")

update(a.formula, data=new.trees, trace=1)
> a.formula.6update <- update(a.formula, data=new.trees, trace=1)
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6, 8, 10, 12
Reached delta RSq threshold (DeltaRSq 8.77394e-05 < 0.001)
After forward pass GRSq 0.71 RSq 0.9369
Prune method "backward" penalty 2 nprune 8: selected 4 of 8 terms, and 2 of 2 predictors
After backward pass GRSq 0.883 RSq 0.9251 
> a.formula.6  <- earth(Volume ~ ., wp=1, data = new.trees, keepxy=TRUE)
> check.models.equal(a.formula.6update, a.formula.6, msg="a6update a6")
check.models.equal identical: a6update a6

> 
> cat("\nupdate(a.formula, wp=2, trace=1)\n")

update(a.formula, wp=2, trace=1)
> a.formula.7update <- update(a.formula, wp=2, trace=1)
update.earth: using 31 by 3 data saved by keepxy in original call to earth
x is a 31 by 2 matrix: 1=Girth, 2=Height
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4, 6, 8
Reached delta RSq threshold (DeltaRSq 0.000280038 < 0.001)
After forward pass GRSq 0.9372 RSq 0.9774
Prune method "backward" penalty 2 nprune 6: selected 4 of 6 terms, and 2 of 2 predictors
After backward pass GRSq 0.962 RSq 0.9757 
> a.formula.7  <- earth(Volume ~ ., wp=2, data = trees, keepxy=TRUE)
> check.models.equal(a.formula.7update, a.formula.7, msg="a7update a7")
check.models.equal identical: a7update a7

> 
> cat("\n----- update and keepxy, matrix interface--------------------------\n")

----- update and keepxy, matrix interface--------------------------
> 
> Volume <- trees$Volume
> x <- cbind(trees$Height, trees$Volume)
> colnames(x) <- c("Height", "Volume")
> 
> new.x <- cbind(new.trees$Height, new.trees$Volume)
> colnames(new.x) <- c("Height", "Volume")
> 
> a <- earth(x, Volume, subset=rep(TRUE, nrow(trees)))
> cat("\nupdate(a, trace=1)\n")

update(a, trace=1)
> a1update <- update(a, trace=1)
update.earth: using 31 by 2 x argument from original call to earth
update.earth: using 31 by 1 y argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Height, 2=Volume
y is a 31 by 1 matrix: 1=Volume
Skipped forward pass
Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
> a1  <- earth(x, Volume, subset=rep(TRUE, nrow(trees)))
> check.models.equal(a1update, a1, msg="a1update a1")
check.models.equal identical: a1update a1

> 
> cat("\nupdate(a, x=new.x, trace=1)\n")

update(a, x=new.x, trace=1)
> a2update <- update(a, x=new.x, trace=1)
update.earth: using 31 by 1 y argument from original call to earth
update.earth: using 31 by 1 subset argument from original call to earth
x is a 31 by 2 matrix: 1=Height, 2=Volume
y is a 31 by 1 matrix: 1=Volume
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0.000269988 < 0.001)
After forward pass GRSq 0.9919 RSq 0.9956
Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.9938 RSq 0.9954 
> a2  <- earth(new.x, Volume, subset=rep(TRUE, nrow(trees)))
> check.models.equal(a2update, a2, msg="a2update a2")
check.models.equal identical: a2update a2

> 
> cat("\nupdate(a, wp=2, trace=0)\n")

update(a, wp=2, trace=0)
> a3update <- update(a, wp=2, trace=0)
> a3  <- earth(x, Volume, subset=rep(TRUE, nrow(trees)), wp=2)
> check.models.equal(a3update, a3, msg="a3update a3")
check.models.equal identical: a3update a3

> 
> cat("\nupdate(a, subset=subset.new, trace=4)\n")

update(a, subset=subset.new, trace=4)
> subset.new <- rep(TRUE, nrow(trees))
> subset.new[1:4] = FALSE
> a4update <- update(a, subset=subset.new, trace=4)
update.earth: using 31 by 2 x argument from original call to earth
update.earth: using 31 by 1 y argument from original call to earth
Call: earth(x=x, y=Volume, subset=subset.new, trace=4)
x is a 31 by 2 matrix: 1=Height, 2=Volume
First few rows of x are
     Height Volume
[1,]     70   10.3
[2,]     65   10.3
[3,]     63   10.2
[4,]     72   16.4
[5,]     81   18.8
[6,]     83   19.7
y is a 31 by 1 matrix: 1=Volume
First few rows of y are
     Volume
[1,]   10.3
[2,]   10.3
[3,]   10.2
[4,]   16.4
[5,]   18.8
[6,]   19.7
Approximate memory use after expanding x and y matrices: 0.02 MBytes
Forward pass: minspan 4 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    2       Volume        15.6< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
> a4  <- earth(x, Volume, subset=subset.new)
> check.models.equal(a4update, a4, msg="a4update a4")
check.models.equal identical: a4update a4

> 
> # now use keepxy=TRUE
> 
> a <- earth(x, Volume, wp=1, keepxy=TRUE)
> 
> cat("\nupdate(a, trace=4)\n")

update(a, trace=4)
> a5update <- update(a, trace=4)
update.earth: using 31 by 2 x saved by keepxy in original call to earth
update.earth: using 31 by 1 y saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
Call: earth(x=structure(c(70, 65, 63, 72, 81, 83, 66, 75, 80, 75, 
      79, 76, 76, 69, 75, 74, 85, 86, 71, 64, 78, 80, 74, 72, 77, 81, 
      82, 80, 80, 80, 87, 10.3, 10.3, 10.2, 16.4, 18.8, 19.7, 15.6, 
      18.2, 22.6, 19.9, 24.2, 21, 21.4, 21.3, 19.1, 22.2, 33.8, 27.4, 
      25.7, 24.9, 34.5, 31.7, 36.3, 38.3, 42.6, 55.4, 55.7, 58.3, 51.5, 
      51, 77), .Dim=c(31L, 2L), .Dimnames=list(NULL, c("Height", 
      "Volume"))), y=structure(c(10.3, 10.3, 10.2, 16.4, 18.8, 19.7, 
      15.6, 18.2, 22.6, 19.9, 24.2, 21, 21.4, 21.3, 19.1, 22.2, 33.8, etc.
x is a 31 by 2 matrix: 1=Height, 2=Volume
First few rows of x are
     Height Volume
[1,]     70   10.3
[2,]     65   10.3
[3,]     63   10.2
[4,]     72   16.4
[5,]     81   18.8
[6,]     83   19.7
y is a 31 by 1 matrix: 1=Volume
First few rows of y are
     Volume
[1,]   10.3
[2,]   10.3
[3,]   10.2
[4,]   16.4
[5,]   18.8
[6,]   19.7
Skipped forward pass
Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
> a5  <- earth(x, Volume, wp=1, keepxy=TRUE)
> check.models.equal(a5update, a5, msg="a5update a5")
check.models.equal identical: a5update a5

> 
> cat("\nupdate(a, x=new.x, trace=4)\n")

update(a, x=new.x, trace=4)
> a6update <- update(a, x=new.x, trace=4)
update.earth: using 31 by 1 y saved by keepxy in original call to earth
update.earth: using 1 by 1 wp saved by keepxy in original call to earth
Call: earth(x=new.x, y=structure(c(10.3, 10.3, 10.2, 16.4, 18.8, 
      19.7, 15.6, 18.2, 22.6, 19.9, 24.2, 21, 21.4, 21.3, 19.1, 22.2, 
      33.8, 27.4, 25.7, 24.9, 34.5, 31.7, 36.3, 38.3, 42.6, 55.4, 55.7, 
      58.3, 51.5, 51, 77), .Dim=structure(c(31L, 1L), .Names=c("nrow", 
      "ncol")), .Dimnames=list(NULL, "Volume")), wp=1, trace=4, 
      keepxy=TRUE)
x is a 31 by 2 matrix: 1=Height, 2=Volume
First few rows of x are
     Height Volume
[1,]     74   13.3
[2,]     66   14.3
[3,]     65   11.2
[4,]     75   18.4
[5,]     85   21.8
[6,]     84   23.7
y is a 31 by 1 matrix: 1=Volume
First few rows of y are
     Volume
[1,]   10.3
[2,]   10.3
[3,]   10.2
[4,]   16.4
[5,]   18.8
[6,]   19.7
Approximate memory use after expanding x and y matrices: 0.02 MBytes
Forward pass: minspan 4 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.9938 0.9954       0.9954    2       Volume        36.8  2   3   
4      0.9919 0.9956      0.00027    1       Height          75  4   5   reject term

Reached delta RSq threshold (DeltaRSq 0.000269988 < 0.001)
After forward pass GRSq 0.9919 RSq 0.9956
Forward pass complete: 3 terms

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.8057  0.8307     0.8057      1  1 2
chosen    3      0.9938  0.9954     0.1882      1  1 2 3

Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.9938 RSq 0.9954 
> a6  <- earth(new.x, Volume, wp=1, keepxy=TRUE)
> check.models.equal(a6update, a6, msg="\"allowed\" function a6update a6")
check.models.equal identical: "allowed" function a6update a6

> 
> cat("\nupdate(a, wp=2)\n")

update(a, wp=2)
> a7update <- update(a, wp=2)
> a7  <- earth(x, Volume, wp=2, keepxy=TRUE)
> check.models.equal(a7update, a7, msg="\"allowed\" function a7update a7")
check.models.equal identical: "allowed" function a7update a7

> 
> cat("--- \"allowed\" argument -----------------\n")
--- "allowed" argument -----------------
> 
> example1  <- function(degree, pred, parents)
+ {
+     pred != 2  # disallow predictor 2, which is "Height"
+ }
> a1 <- earth(Volume ~ ., data = trees, allowed = example1)
> printh(summary(a1))
===summary(a1) 
Call: earth(formula=Volume~., data=trees, allowed=example1)

            coefficients
(Intercept)      29.7482
h(Girth-14)       6.6486
h(14-Girth)      -3.5140

Selected 3 of 3 terms, and 1 of 2 predictors 
Importance: Girth, Height-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 14.372    RSS 313.41    GRSq 0.94853    RSq 0.96134
> 
> example1a  <- function(degree, pred, parents, namesx)
+ {
+     namesx[pred] != "Height"  # disallow "Height"
+ }
> a1a <- earth(Volume ~ ., data = trees, allowed = example1a)
> check.models.equal(a1, a1a, msg="\"allowed\" function a1 a1a")
check.models.equal identical: "allowed" function a1 a1a

> 
> iheight <- 0
> example1b  <- function(degree, pred, parents, namesx, first)
+ {
+     if (first) {
+         iheight <<- which(namesx == "Height") # note use of <<- not <-
+         if (length(iheight) != 1)
+             stop("could not find Height in ", paste(namesx, collapse=" "))
+     }
+     pred != iheight
+ }
> a1b <- earth(Volume ~ ., data = trees, allowed = example1b)
> check.models.equal(a1, a1a, msg="\"allowed\" function a1 a1b")
check.models.equal identical: "allowed" function a1 a1b

> 
> example2 <- function(degree, pred, parents)
+ {
+     # disallow humidity in terms of degree > 1
+     # 3 is the "humidity" column in the input matrix
+     if (degree > 1 && (pred == 3 || parents[3]))
+         return(FALSE)
+     TRUE
+ }
> a2 <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example2)
> printh(summary(a2))
===summary(a2) 
Call: earth(formula=O3~., data=ozone1, degree=2, allowed=example2)

                         coefficients
(Intercept)                  12.02691
h(vh-5740)                    0.02196
h(5740-vh)                   -0.02051
h(temp-58)                    0.34627
h(ibh-1069)                  -0.00133
h(dpg-11)                    -0.07355
h(11-dpg)                    -0.08526
h(80-vis)                     0.06840
h(doy-89)                     0.05694
h(89-doy)                    -0.10600
h(doy-159)                   -0.09673
h(vh-5740) * h(dpg-54)       -0.00327
h(wind-6) * h(1069-ibh)      -0.00726
h(ibh-1069) * h(doy-278)      0.00001
h(ibh-1069) * h(278-doy)      0.00001

Selected 15 of 20 terms, and 7 of 9 predictors 
Importance: temp, doy, ibh, dpg, vh, vis, wind, humidity-unused, ibt-unused
Number of terms at each degree of interaction: 1 10 4
GCV 15.048    RSS 3941.6    GRSq 0.76624    RSq 0.81333
> example3 <- function(degree, pred, parents)
+ {
+     # allow only humidity and temp in terms of degree > 1
+     # 3 and 4 are the "humidity" and "temp" columns
+     allowed.set = c(3,4)
+     if (degree > 1 && (all(pred != allowed.set) || any(parents[-allowed.set])))
+         return(FALSE)
+     TRUE
+ }
> a3 <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example3)
> printh(summary(a3))
===summary(a3) 
Call: earth(formula=O3~., data=ozone1, degree=2, allowed=example3)

                            coefficients
(Intercept)                     12.08042
h(5860-vh)                      -0.01301
h(wind-6)                       -0.58210
h(temp-58)                       0.25762
h(1069-ibh)                     -0.00287
h(dpg-11)                       -0.10128
h(11-dpg)                       -0.06533
h(ibt-116)                       0.04489
h(200-vis)                       0.01807
h(doy-89)                        0.04230
h(89-doy)                       -0.11112
h(doy-151)                      -0.07978
h(56-humidity) * h(temp-58)     -0.01675

Selected 13 of 20 terms, and 9 of 9 predictors 
Importance: temp, vis, doy, dpg, humidity, vh, ibh, ibt, wind
Number of terms at each degree of interaction: 1 11 1
GCV 13.830    RSS 3746.6    GRSq 0.78517    RSq 0.82257
> 
> ihumidity <- 0
> itemp <- 0
> example3a  <- function(degree, pred, parents, namesx, first)
+ {
+     if (first) {
+         ihumidity <<- which(namesx == "humidity") # note use of <<- not <-
+         if (length(ihumidity) != 1)
+             stop("could not find humidity in ", paste(namesx, collapse=" "))
+         itemp <<- which(namesx == "temp") # note use of <<- not <-
+         if (length(itemp) != 1)
+             stop("could not find temp in ", paste(namesx, collapse=" "))
+     }
+     # allow only humidity and temp in terms of degree > 1
+     allowed.set = c(ihumidity, itemp)
+     if (degree > 1 && (all(pred != allowed.set) || any(parents[-allowed.set])))
+         return(FALSE)
+     TRUE
+ }
> a3a <- earth(O3 ~ ., data = ozone1, degree = 2, allowed = example3)
> check.models.equal(a3, a3a, msg="\"allowed\" function a3 a3a")
check.models.equal identical: "allowed" function a3 a3a

> 
> # "allowed" function checks, these check error handling by forcing an error
> 
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = 99))
Error in check.allowed.arg(allowed) : 
  your "allowed" argument is not a function
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example7  <- function(degree, pred) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example7))
Error : your "allowed" function does not have the correct number of arguments
  The "allowed" function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example8  <- function(degree, pred, parents99) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example8))
Error :   The "allowed" function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
  You have:
      degree pred parents99
> if (class(z) != "try-error")
+     stop("test failed")
> 
> example9  <- function(degree, pred, parents, namesx99) pred!=2
> cat("Expect an error here ")
Expect an error here > z <- try(earth(Volume ~ ., data = trees, allowed = example9))
Error :   The "allowed" function needs the following arguments (but namesx and first are optional):
      degree pred parents namesx first
  You have:
      degree pred parents namesx99
> if (class(z) != "try-error")
+     stop("test failed")
> 
> cat("--- beta cache -------------------------\n")
--- beta cache -------------------------
> 
> a1 <- earth(O3 ~ ., data = ozone1, degree = 3)
> a2 <- earth(O3 ~ ., data = ozone1, degree = 3, Use.beta.cache=FALSE)
> a1$call <- NULL
> a2$call <- NULL
> stopifnot(identical(a1, a2))
> 
> cat("--- test \"call\" printing in earth.default and summary.earth ---\n")
--- test "call" printing in earth.default and summary.earth ---
> # we want to make sure that long x or y aren't printed but short ones are
> 
> x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+       0,1,2,3,4,5,6,7,8,9,0)
> 
> a <- earth(x = x, y=y, trace=4)
Call: earth(x=x, y=y, trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 4 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> a.longx  <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y=y,
+                   trace=4)
Call: earth(x="[102, 1]-too-long-to-display", y=y, trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 4 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> a.longy  <- earth(x = x,
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: earth(x=x, y="[102, 1]-too-long-to-display", trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 4 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> a.longxy <- earth(x = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   y = c(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,
+                         0,1,2,3,4,5,6,7,8,9,0),
+                   trace=4)
Call: earth(x="[102, 1]-too-long-to-display", y="[102, 1]-too-long-to-display", 
      trace=4)
x is a 101 by 1 matrix: 1=x
First few rows of x are
     x
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
y is a 101 by 1 matrix: 1=y
First few rows of y are
     y
[1,] 0
[2,] 1
[3,] 2
[4,] 3
[5,] 4
[6,] 5
Approximate memory use after expanding x and y matrices: 0.04 MBytes
Forward pass: minspan 4 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      1.0000 1.0000            1    1            x           0< 2       

Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Forward pass complete: 3 terms (2 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
chosen    2      1.0000  1.0000     1.0000      1  1 2

Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> printh(summary(a))
===summary(a) 
Call: earth(x=x, y=y, trace=4)

            coefficients
(Intercept)   -9.894e-16
x              1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> printh(summary(a.longx))
===summary(a.longx) 
Call: earth(x="[102, 1]-too-long-to-display", y=y, trace=4)

            coefficients
(Intercept)   -9.894e-16
x              1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> printh(summary(a.longy))
===summary(a.longy) 
Call: earth(x=x, y="[102, 1]-too-long-to-display", trace=4)

            coefficients
(Intercept)   -9.894e-16
x              1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> printh(summary(a.longxy))
===summary(a.longxy) 
Call: earth(x="[102, 1]-too-long-to-display", y="[102, 1]-too-long-to-display", 
      trace=4)

            coefficients
(Intercept)   -9.894e-16
x              1.000e+00

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> printh(summary(a.longxy, style="bf"))
===summary(a.longxy, style = "bf") 
Call: earth(x="[102, 1]-too-long-to-display", y="[102, 1]-too-long-to-display", 
      trace=4)

y =
  -9.8941e-16
  + 1 * bf1

   bf1  x

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: x
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 7.1581e-31    RSS 6.8066e-29    GRSq 1    RSq 1
> 
> cat("--- factors with x,y interface -------------------------\n")
--- factors with x,y interface -------------------------
> # this also tests for integer variables in the input matrix
> data(etitanic)
> attach(etitanic)
> a1 <- earth(pclass, sex, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 2 matrix: 1=2nd, 2=3rd
y is a 1046 by 1 matrix: 1=sex
Forward pass: minspan 6 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0133 0.0180      0.01797    2          3rd           0< 2       
4      0.0116 0.0210     0.003025    1          2nd           0< 3       
6      0.0068 0.0210            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.006792 RSq 0.021
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 2 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.01326 RSq 0.01797 
> printh(summary(a1))
===summary(a1) 
Call: earth(x=pclass, y=sex, trace=2, degree=2)

            coefficients
(Intercept)      0.56697
3rd              0.12963

Selected 2 of 3 terms, and 1 of 2 predictors 
Importance: 3rd, 2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.23069    RSS 239.69    GRSq 0.013257    RSq 0.017973
> printh(summary(a1, style="bf"))
===summary(a1, style = "bf") 
Call: earth(x=pclass, y=sex, trace=2, degree=2)

sex =
  0.56697
  + 0.12963 * bf1

   bf1  3rd

Selected 2 of 3 terms, and 1 of 2 predictors 
Importance: 3rd, 2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.23069    RSS 239.69    GRSq 0.013257    RSq 0.017973
> if (PLOT)
+     plot(a1)
> a2 <- earth(sex, pclass, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 1 matrix: 1=sex
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 5 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0073 0.0120      0.01202    1          sex           0< 2       
4      0.0025 0.0120            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.002501 RSq 0.01202
Forward pass complete: 3 terms (2 terms used)
Prune method "backward" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.00728 RSq 0.01202 
> printh(summary(a2))
===summary(a2) 
Call: earth(x=sex, y=pclass, trace=2, degree=2)

                 1st       2nd     3rd
(Intercept)  0.34278  0.265464 0.39175
sex         -0.11330 -0.025342 0.13864

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: sex
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq        RSq
1st 0.19611 203.76  0.0104150 0.01514418
2nd 0.18837 195.72 -0.0039978 0.00080028
3rd 0.24672 256.35  0.0132572 0.01797283
All 0.63120 655.82  0.0072798 0.01202394
> if (PLOT)
+     plot(a2)
> a3 <- earth(pclass, age, degree=2, trace=2)        # x=unordered y=numeric
x is a 1046 by 2 matrix: 1=2nd, 2=3rd
y is a 1046 by 1 matrix: 1=age
Forward pass: minspan 6 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.1094 0.1136       0.1136    2          3rd           0< 2       
4      0.1640 0.1720      0.05838    1          2nd           0< 3       
6      0.1600 0.1720            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.16 RSq 0.172
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.164 RSq 0.172 
> printh(summary(a3))
===summary(a3) 
Call: earth(x=pclass, y=age, trace=2, degree=2)

            coefficients
(Intercept)      39.1599
2nd              -9.6532
3rd             -14.3436

Selected 3 of 3 terms, and 2 of 2 predictors 
Importance: 3rd, 2nd
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 173.84    RSS 179758    GRSq 0.16401    RSq 0.17199
> if (PLOT)
+     plot(a3)
> a4 <- earth(age, pclass, degree=2, trace=2)        # x=numeric y=unordered
x is a 1046 by 1 matrix: 1=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 5 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    1          age          26  2   3   
4      0.0891 0.1021     0.004178    1          age          55  4       
6      0.0881 0.1055     0.003357    1          age          16  5       
8      0.0849 0.1067      0.00116    1          age          44  6       
10     0.0813 0.1075    0.0008104    1          age          48  7       reject term

Reached delta RSq threshold (DeltaRSq 0.000810417 < 0.001)
After forward pass GRSq 0.08129 RSq 0.1075
Forward pass complete: 9 terms (6 terms used)
Prune method "backward" penalty 3 nprune 6: selected 2 of 6 terms, and 1 of 1 predictors
After backward pass GRSq 0.09302 RSq 0.09735 
> printh(summary(a4))
===summary(a4) 
Call: earth(x=age, y=pclass, trace=2, degree=2)

                 1st         2nd       3rd
(Intercept) 0.064394  0.25633356  0.679272
h(age-16)   0.013886 -0.00045667 -0.013429

Selected 2 of 6 terms, and 1 of 1 predictors 
Importance: age
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq       RSq
1st 0.16700 173.52  0.1572778 0.1613052
2nd 0.18849 195.84 -0.0046167 0.0001843
3rd 0.22120 229.82  0.1153475 0.1195752
All 0.57668 599.18  0.0930171 0.0973516
> if (PLOT)
+     plot(a4)
> a5 <- earth(etitanic[,c(2:4)], pclass, degree=2, trace=2)  # x=mixed  y=unordered
x is a 1046 by 3 matrix: 1=survived, 2=sexmale, 3=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 6 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    3          age          26  2   3   
4      0.1500 0.1622       0.0642    1     survived           0< 4       
6      0.1557 0.1758      0.01364    3          age          16  5   6   4   
8      0.1603 0.1842     0.008445    2      sexmale           0< 7       4   
10     0.1631 0.1909     0.006652    2      sexmale           0< 8       
12     0.1616 0.1934     0.002532    3          age          56  9       
14     0.1598 0.1956     0.002142    2      sexmale           0< 10      2   
16     0.1532 0.1971      0.00157    3          age          55  11  12  10  
18     0.1497 0.1978    0.0006704    3          age          44  13      reject term

Reached delta RSq threshold (DeltaRSq 0.000670385 < 0.001)
After forward pass GRSq 0.1497 RSq 0.1978
Forward pass complete: 17 terms (12 terms used)
Prune method "backward" penalty 3 nprune 12: selected 9 of 12 terms, and 3 of 3 predictors
After backward pass GRSq 0.1631 RSq 0.1949 
> printh(summary(a5))
===summary(a5) 
Call: earth(x=etitanic[, c(2:4)], y=pclass, trace=2, degree=2)

                           1st        2nd       3rd
(Intercept)          -0.019851  0.2290093  0.790842
survived              0.364266  0.1589838 -0.523250
h(age-26)             0.015422 -0.0069111 -0.008511
h(26-age)            -0.000623 -0.0157462  0.016369
survived * sexmale   -0.082755 -0.3087717  0.391527
survived * h(16-age) -0.021344  0.0389664 -0.017623
sexmale * h(age-26)   0.006189  0.0075511 -0.013740
sexmale * h(age-55)  -0.025753 -0.0020029  0.027756
sexmale * h(55-age)   0.001858  0.0028773 -0.004736

Selected 9 of 12 terms, and 3 of 3 predictors 
Importance: age, survived, sexmale
Number of terms at each degree of interaction: 1 3 5

        GCV    RSS     GRSq      RSq
1st 0.15056 151.23 0.240231 0.269034
2nd 0.18457 185.39 0.016226 0.053522
3rd 0.19697 197.84 0.212247 0.242111
All 0.53211 534.46 0.163127 0.194854
> if (PLOT)
+     plot(a5)
> a6 <- earth(etitanic[,c(1,3,4,5,6)], survived, degree=2, trace=2)  # x=mixed y=unordered
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=survived
Forward pass: minspan 6 endspan 9

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.2860 0.2894       0.2894    3      sexmale           0< 2       
4      0.3297 0.3361      0.04669    2    pclass3rd           0< 3       
6      0.3588 0.3710      0.03488    4          age          16  4   5   2   
8      0.3962 0.4106      0.03954    1    pclass2nd           0< 6       2   
10     0.4143 0.4338       0.0232    5        sibsp           4  7   8   4   
12     0.4133 0.4383     0.004574    6        parch           1  9   10  
14     0.4150 0.4427      0.00437    2    pclass3rd           0< 11      2   
16     0.4116 0.4449     0.002169    5        sibsp           1  12  13  2   
18     0.4108 0.4469     0.002011    1    pclass2nd           0< 14      13  
20     0.4069 0.4487     0.001831    4          age          64  15  16  

Reached max number of terms 21
After forward pass GRSq 0.4069 RSq 0.4487
Forward pass complete: 21 terms (16 terms used)
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4222 RSq 0.4441 
> printh(summary(a6))
===summary(a6) 
Call: earth(x=etitanic[, c(1, 3, 4, 5, 6)], y=survived, trace=2, 
      degree=2)

                       coefficients
(Intercept)                0.853750
pclass3rd                 -0.868595
sexmale                   -0.595667
h(64-age)                  0.003529
pclass2nd * sexmale       -0.156631
pclass2nd * h(1-parch)    -0.128397
pclass3rd * sexmale        0.237578
pclass3rd * h(4-sibsp)     0.104075
sexmale * h(16-age)        0.036499

Selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
GCV 0.13985    RSS 140.47    GRSq 0.42218    RSq 0.44409
> if (PLOT)
+     plot(a6)
> a7 <- earth(etitanic[,c(2,3,5,6)], etitanic[,c(1,4)], degree=2, trace=2)  # x=mixed y=mixed
x is a 1046 by 4 matrix: 1=survived, 2=sexmale, 3=sibsp, 4=parch
y is a 1046 by 4 matrix: 1=pclass1st, 2=pclass2nd, 3=pclass3rd, 4=age
Forward pass: minspan 6 endspan 9

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0813 0.0901      0.09011    4        parch           2  2   3   
4      0.1049 0.1219      0.03183    3        sibsp           1  4   5   
6      0.1068 0.1323      0.01034    4        parch           1  6   7   4   
8      0.1085 0.1381     0.005851    4        parch           3  8       
10     0.1093 0.1431     0.004932    3        sibsp           2  9       
12     0.1042 0.1465     0.003484    4        parch           1  10  11  5   
14     0.1024 0.1490     0.002449    2      sexmale           0< 12      3   
16     0.0997 0.1506     0.001629    1     survived           0< 13      4   
18     0.0971 0.1524     0.001744    1     survived           0< 14      10  
20     0.0902 0.1543     0.001933    3        sibsp           1  15  16  2   

Reached max number of terms 21
After forward pass GRSq 0.09017 RSq 0.1543
Forward pass complete: 21 terms (16 terms used)
Prune method "backward" penalty 3 nprune 16: selected 8 of 16 terms, and 2 of 4 predictors
After backward pass GRSq 0.1125 RSq 0.1419 
> printh(summary(a7))
===summary(a7) 
Call: earth(x=etitanic[, c(2, 3, 5, 6)], y=etitanic[, c(1, 4)], 
      trace=2, degree=2)

                        pclass1st pclass2nd pclass3rd      age
(Intercept)              0.367592  0.341480  0.290928  22.8228
h(sibsp-1)              -0.104673 -0.031749  0.136421 -13.2263
h(sibsp-2)              -0.040808 -0.076671  0.117479   9.1566
h(parch-2)              -0.058341 -0.027418  0.085760  18.7475
h(2-parch)              -0.048621 -0.047629  0.096250   4.5986
h(parch-3)              -0.050441 -0.126271  0.176712 -18.6861
h(sibsp-1) * h(parch-1)  0.056197 -0.014339 -0.041858   3.4196
h(sibsp-1) * h(1-parch)  0.048915  0.064819 -0.113734  11.1807

Selected 8 of 16 terms, and 2 of 4 predictors 
Importance: sibsp, parch, survived-unused, sexmale-unused
Number of terms at each degree of interaction: 1 5 2

               GCV      RSS      GRSq      RSq
pclass1st   0.2014    203.2 -0.016149 0.017600
pclass2nd   0.1904    192.2 -0.014944 0.018765
pclass3rd   0.2449    247.2  0.020667 0.053192
age       184.4896 186210.4  0.112808 0.142274
All       185.1263 186853.0  0.112460 0.141937
> if (PLOT)
+     plot(a7)
> 
> cat("--- factors with formula interface -------------------------\n")
--- factors with formula interface -------------------------
> # these correspond to the models above (except a7 which is a multiple response model)
> a1f <- earth(sex ~ pclass, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 2 matrix: 1=pclass2nd, 2=pclass3rd
y is a 1046 by 1 matrix: 1=male
Forward pass: minspan 6 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0133 0.0180      0.01797    2    pclass3rd           0< 2       
4      0.0116 0.0210     0.003025    1    pclass2nd           0< 3       
6      0.0068 0.0210            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.006792 RSq 0.021
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 2 of 3 terms, and 1 of 2 predictors
After backward pass GRSq 0.01326 RSq 0.01797 
> printh(summary(a1f))
===summary(a1f) 
Call: earth(formula=sex~pclass, trace=2, degree=2)

            coefficients
(Intercept)      0.56697
pclass3rd        0.12963

Selected 2 of 3 terms, and 1 of 2 predictors 
Importance: pclass3rd, pclass2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.23069    RSS 239.69    GRSq 0.013257    RSq 0.017973
> printh(summary(a1f, style="bf"))
===summary(a1f, style = "bf") 
Call: earth(formula=sex~pclass, trace=2, degree=2)

male =
  0.56697
  + 0.12963 * bf1

   bf1  pclass3rd

Selected 2 of 3 terms, and 1 of 2 predictors 
Importance: pclass3rd, pclass2nd-unused
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 0.23069    RSS 239.69    GRSq 0.013257    RSq 0.017973
> if (PLOT)
+     plot(a1f)
> a2f <- earth(pclass ~ sex, degree=2, trace=2)        # x=unordered y=unordered
x is a 1046 by 1 matrix: 1=sexmale
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 5 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0073 0.0120      0.01202    1      sexmale           0< 2       
4      0.0025 0.0120            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.002501 RSq 0.01202
Forward pass complete: 3 terms (2 terms used)
Prune method "backward" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.00728 RSq 0.01202 
> printh(summary(a2f))
===summary(a2f) 
Call: earth(formula=pclass~sex, trace=2, degree=2)

                 1st       2nd     3rd
(Intercept)  0.34278  0.265464 0.39175
sexmale     -0.11330 -0.025342 0.13864

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: sexmale
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq        RSq
1st 0.19611 203.76  0.0104150 0.01514418
2nd 0.18837 195.72 -0.0039978 0.00080028
3rd 0.24672 256.35  0.0132572 0.01797283
All 0.63120 655.82  0.0072798 0.01202394
> if (PLOT)
+     plot(a2f)
> a3f <- earth(age ~ pclass, degree=2, trace=2)        # x=unordered y=numeric
x is a 1046 by 2 matrix: 1=pclass2nd, 2=pclass3rd
y is a 1046 by 1 matrix: 1=age
Forward pass: minspan 6 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.1094 0.1136       0.1136    2    pclass3rd           0< 2       
4      0.1640 0.1720      0.05838    1    pclass2nd           0< 3       
6      0.1600 0.1720            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.16 RSq 0.172
Forward pass complete: 5 terms (3 terms used)
Prune method "backward" penalty 3 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.164 RSq 0.172 
> printh(summary(a3f))
===summary(a3f) 
Call: earth(formula=age~pclass, trace=2, degree=2)

            coefficients
(Intercept)      39.1599
pclass2nd        -9.6532
pclass3rd       -14.3436

Selected 3 of 3 terms, and 2 of 2 predictors 
Importance: pclass3rd, pclass2nd
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 173.84    RSS 179758    GRSq 0.16401    RSq 0.17199
> if (PLOT)
+     plot(a3f)
> a4f <- earth(pclass ~ age, degree=2, trace=2)        # x=numeric y=unordered
x is a 1046 by 1 matrix: 1=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 5 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    1          age          26  2   3   
4      0.0891 0.1021     0.004178    1          age          55  4       
6      0.0881 0.1055     0.003357    1          age          16  5       
8      0.0849 0.1067      0.00116    1          age          44  6       
10     0.0813 0.1075    0.0008104    1          age          48  7       reject term

Reached delta RSq threshold (DeltaRSq 0.000810417 < 0.001)
After forward pass GRSq 0.08129 RSq 0.1075
Forward pass complete: 9 terms (6 terms used)
Prune method "backward" penalty 3 nprune 6: selected 2 of 6 terms, and 1 of 1 predictors
After backward pass GRSq 0.09302 RSq 0.09735 
> printh(summary(a4f))
===summary(a4f) 
Call: earth(formula=pclass~age, trace=2, degree=2)

                 1st         2nd       3rd
(Intercept) 0.064394  0.25633356  0.679272
h(age-16)   0.013886 -0.00045667 -0.013429

Selected 2 of 6 terms, and 1 of 1 predictors 
Importance: age
Number of terms at each degree of interaction: 1 1 (additive model)

        GCV    RSS       GRSq       RSq
1st 0.16700 173.52  0.1572778 0.1613052
2nd 0.18849 195.84 -0.0046167 0.0001843
3rd 0.22120 229.82  0.1153475 0.1195752
All 0.57668 599.18  0.0930171 0.0973516
> if (PLOT)
+     plot(a4f)
> a5f <- earth(pclass ~ survived + sex + age, data=etitanic, degree=2, trace=2)  # x=mixed y=unordered
x is a 1046 by 3 matrix: 1=survived, 2=sexmale, 3=age
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 6 endspan 8

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0893 0.0980      0.09797    3          age          26  2   3   
4      0.1500 0.1622       0.0642    1     survived           0< 4       
6      0.1557 0.1758      0.01364    3          age          16  5   6   4   
8      0.1603 0.1842     0.008445    2      sexmale           0< 7       4   
10     0.1631 0.1909     0.006652    2      sexmale           0< 8       
12     0.1616 0.1934     0.002532    3          age          56  9       
14     0.1598 0.1956     0.002142    2      sexmale           0< 10      2   
16     0.1532 0.1971      0.00157    3          age          55  11  12  10  
18     0.1497 0.1978    0.0006704    3          age          44  13      reject term

Reached delta RSq threshold (DeltaRSq 0.000670385 < 0.001)
After forward pass GRSq 0.1497 RSq 0.1978
Forward pass complete: 17 terms (12 terms used)
Prune method "backward" penalty 3 nprune 12: selected 9 of 12 terms, and 3 of 3 predictors
After backward pass GRSq 0.1631 RSq 0.1949 
> printh(summary(a5f))
===summary(a5f) 
Call: earth(formula=pclass~survived+sex+age, data=etitanic, 
      trace=2, degree=2)

                           1st        2nd       3rd
(Intercept)          -0.019851  0.2290093  0.790842
survived              0.364266  0.1589838 -0.523250
h(age-26)             0.015422 -0.0069111 -0.008511
h(26-age)            -0.000623 -0.0157462  0.016369
survived * sexmale   -0.082755 -0.3087717  0.391527
survived * h(16-age) -0.021344  0.0389664 -0.017623
sexmale * h(age-26)   0.006189  0.0075511 -0.013740
sexmale * h(age-55)  -0.025753 -0.0020029  0.027756
sexmale * h(55-age)   0.001858  0.0028773 -0.004736

Selected 9 of 12 terms, and 3 of 3 predictors 
Importance: age, survived, sexmale
Number of terms at each degree of interaction: 1 3 5

        GCV    RSS     GRSq      RSq
1st 0.15056 151.23 0.240231 0.269034
2nd 0.18457 185.39 0.016226 0.053522
3rd 0.19697 197.84 0.212247 0.242111
All 0.53211 534.46 0.163127 0.194854
> if (PLOT)
+     plot(a5f)
> a6f <- earth(survived ~ ., data=etitanic, degree=2, trace=2)  # x=mixed y=unordered
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=survived
Forward pass: minspan 6 endspan 9

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.2860 0.2894       0.2894    3      sexmale           0< 2       
4      0.3297 0.3361      0.04669    2    pclass3rd           0< 3       
6      0.3588 0.3710      0.03488    4          age          16  4   5   2   
8      0.3962 0.4106      0.03954    1    pclass2nd           0< 6       2   
10     0.4143 0.4338       0.0232    5        sibsp           4  7   8   4   
12     0.4133 0.4383     0.004574    6        parch           1  9   10  
14     0.4150 0.4427      0.00437    2    pclass3rd           0< 11      2   
16     0.4116 0.4449     0.002169    5        sibsp           1  12  13  2   
18     0.4108 0.4469     0.002011    1    pclass2nd           0< 14      13  
20     0.4069 0.4487     0.001831    4          age          64  15  16  

Reached max number of terms 21
After forward pass GRSq 0.4069 RSq 0.4487
Forward pass complete: 21 terms (16 terms used)
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4222 RSq 0.4441 
> printh(summary(a6f))
===summary(a6f) 
Call: earth(formula=survived~., data=etitanic, trace=2, degree=2)

                       coefficients
(Intercept)                0.853750
pclass3rd                 -0.868595
sexmale                   -0.595667
h(64-age)                  0.003529
pclass2nd * sexmale       -0.156631
pclass2nd * h(1-parch)    -0.128397
pclass3rd * sexmale        0.237578
pclass3rd * h(4-sibsp)     0.104075
sexmale * h(16-age)        0.036499

Selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
GCV 0.13985    RSS 140.47    GRSq 0.42218    RSq 0.44409
> if (PLOT)
+     plot(a6f)
> detach(etitanic)
> 
> # basic test with ordered factors
> ff <- factor(substring("statistics", 1:10, 1:10), levels=letters, ordered=TRUE)
> ff <- c(ff, ff, ff)
> vowels = (ff == 1 | ff == 9) * 3
> printh(head(ff))
===head(ff) 
[1] 19 20  1 20  9 19
> printh(head(vowels))
===head(vowels) 
[1] 0 0 3 0 3 0
> a8 <- earth(ff, vowels, degree=1, trace=2)        # x=ordered y=numeric
x is a 30 by 1 matrix: 1=ff
y is a 30 by 1 matrix: 1=vowels
Forward pass: minspan 3 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.5906 0.6958       0.6958    1           ff           9  2   3   
4      0.5250 0.7012     0.005454    1           ff          19  4       
6      0.4302 0.7012            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.4302 RSq 0.7012
Forward pass complete: 5 terms (4 terms used)
Prune method "backward" penalty 2 nprune 4: selected 3 of 4 terms, and 1 of 1 predictors
After backward pass GRSq 0.5906 RSq 0.6958 
> printh(summary(a8))
===summary(a8) 
Call: earth(x=ff, y=vowels, trace=2, degree=1)

            coefficients
(Intercept)      2.74643
h(ff-9)         -0.26097
h(9-ff)         -0.14450

Selected 3 of 4 terms, and 1 of 1 predictors 
Importance: ff
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 0.82802    RSS 17.250    GRSq 0.59061    RSq 0.69576
> if (PLOT)
+     plot(a8)
> a9 <- earth(vowels, ff, degree=1, trace=2)        # x=numeric y=ordered
x is a 30 by 1 matrix: 1=vowels
y is a 30 by 1 matrix: 1=ff
Forward pass: minspan 3 endspan 7

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.3877 0.4693       0.4693    1       vowels           0< 2       
4      0.2858 0.4693            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.2858 RSq 0.4693
Forward pass complete: 3 terms (2 terms used)
Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.3877 RSq 0.4693 
> if (PLOT)
+     plot(a9)
> printh(summary(a9))
===summary(a9) 
Call: earth(x=vowels, y=ff, trace=2, degree=1)

            coefficients
(Intercept)      17.1429
vowels           -3.6032

Selected 2 of 2 terms, and 1 of 1 predictors 
Importance: vowels
Number of terms at each degree of interaction: 1 1 (additive model)
GCV 34.262    RSS 832.57    GRSq 0.38772    RSq 0.46926
> 
> cat("--- wp argument---------------------------------\n")
--- wp argument---------------------------------
> set.seed(79)
> NWP <- 100
> x1 <- runif(NWP)
> x2 <- runif(NWP)
> y1 <- (x1 > .5) + .3 * runif(1)
> y2 <- sin(3 * x2) + .3 * runif(1)
> myw <- 10
> m <- mars(cbind(x1,x2), cbind(y1, y2))
> me1 <- mars.to.earth(m)
Converted mars(x=cbind(x1, x2), y=cbind(y1, y2))
to        earth(x=cbind(x1, x2), y=cbind(y1, y2))
> printh(me1)
===me1 
Selected 7 of 11 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

           GCV      RSS    GRSq     RSq
y1  0.02433520 1.841932 0.90460 0.92632
y2  0.00084028 0.063601 0.99177 0.99365
All 0.02517549 1.905532 0.92986 0.94583
> e1 <- earth(cbind(x1,x2), cbind(y1, y2))
> printh(e1)
===e1 
Selected 7 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

          GCV      RSS    GRSq     RSq
y1  0.0198480 1.502292 0.92219 0.93991
y2  0.0007267 0.055004 0.99289 0.99450
All 0.0205747 1.557296 0.94240 0.95552
> e2 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(1,1))
> printh(e2)
===e2 
Selected 7 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

          GCV      RSS    GRSq     RSq
y1  0.0198480 1.502292 0.92219 0.93991
y2  0.0007267 0.055004 0.99289 0.99450
All 0.0205747 1.557296 0.94240 0.95552
> e1$call <- NULL
> e2$call <- NULL
> e1$wp <- NULL
> e2$wp <- NULL
> stopifnot(identical(e1, e2))
> e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=c(.001,1))
> printh(e3)
===e3 
Selected 7 of 8 terms, and 2 of 2 predictors 
Importance: x2, x1
Number of terms at each degree of interaction: 1 6 (additive model)

          GCV     RSS    GRSq     RSq
y1  0.0589288 4.46032 0.76898 0.82159
y2  0.0002907 0.02201 0.99715 0.99780
All 0.0006987 0.05288 0.99659 0.99736
> wp <- c(1, 2)
> e3 <- earth(cbind(x1,x2), cbind(y1, y2),  wp=wp)
> printh(e3)
===e3 
Selected 7 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 6 (additive model)

          GCV      RSS    GRSq     RSq
y1  0.0198480 1.502292 0.92219 0.93991
y2  0.0007267 0.055004 0.99289 0.99450
All 0.0142009 1.074867 0.95363 0.96419
> m3 <- mars(cbind(x1,x2), cbind(y1, y2),  wp=wp)
> cat("response weights: wp", wp, "earth gcv", e3$gcv, 
+     "mars gcv", m3$gcv, "mars gcv*length(wp)", 
+     m3$gcv * length(wp), "\n")
response weights: wp 1 2 earth gcv 0.014201 mars gcv 0.008665 mars gcv*length(wp) 0.01733 
> 
> e4 <- earth(cbind(O3, O3) ~ ., data=ozone1, wp=c(1, .01))
> printh(e4) # both sub models should be the same
===e4 
Selected 14 of 19 terms, and 8 of 9 predictors 
Importance: temp, ibh, doy, dpg, humidity, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 13 (additive model)

        GCV  RSS    GRSq     RSq
O3   14.859 4134 0.76918 0.80422
O3.1 14.859 4134 0.76918 0.80422
All  29.719 8268 0.76918 0.80422
> printh(summary(e4))
===summary(e4) 
Call: earth(formula=cbind(O3, O3)~., data=ozone1, wp=c(1, 0.01))

                     O3     O3.1
(Intercept)     8.69108  8.69108
h(vh-5740)      0.01526  0.01526
h(5740-vh)     -0.01301 -0.01301
h(9-wind)       0.30446  0.30446
h(humidity-41)  0.27530  0.27530
h(humidity-54) -0.26151 -0.26151
h(temp-58)      0.38020  0.38020
h(ibh-1069)    -0.00062 -0.00062
h(1069-ibh)    -0.00291 -0.00291
h(dpg-11)      -0.10609 -0.10609
h(80-vis)       0.04590  0.04590
h(doy-89)       0.04718  0.04718
h(89-doy)      -0.12645 -0.12645
h(doy-159)     -0.09158 -0.09158

Selected 14 of 19 terms, and 8 of 9 predictors 
Importance: temp, ibh, doy, dpg, humidity, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 13 (additive model)

        GCV  RSS    GRSq     RSq
O3   14.859 4134 0.76918 0.80422
O3.1 14.859 4134 0.76918 0.80422
All  29.719 8268 0.76918 0.80422
> 
> # wp with formula interface
> e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(1, 1))
> printh(e5)
===e5 
Selected 13 of 19 terms, and 8 of 8 predictors 
Importance: temp, humidity, dpg, doy, vh, vis, ibh, ibt
Number of terms at each degree of interaction: 1 12 (additive model)

         GCV     RSS    GRSq     RSq
O3   14.9107 4203.23 0.76838 0.80094
wind  3.5166  991.32 0.21768 0.32766
All  18.4273 5194.55 0.73244 0.77005
> printh(summary(e5))
===summary(e5) 
Call: earth(formula=cbind(O3, wind)~., data=ozone1, wp=c(1, 
      1))

                     O3     wind
(Intercept)     8.89758  5.53063
h(vh-5590)      0.01754 -0.00659
h(5590-vh)     -0.01764  0.01375
h(54-humidity) -0.14637  0.01525
h(temp-56)      0.24179  0.03623
h(1069-ibh)    -0.00339 -0.00087
h(dpg-13)      -0.10362  0.00049
h(ibt-120)      0.03323 -0.00353
h(150-vis)      0.02197  0.00048
h(doy-89)       0.03881  0.00924
h(89-doy)      -0.11797 -0.00623
h(doy-159)     -0.08912 -0.00366
h(doy-295)      0.03204 -0.05302

Selected 13 of 19 terms, and 8 of 8 predictors 
Importance: temp, humidity, dpg, doy, vh, vis, ibh, ibt
Number of terms at each degree of interaction: 1 12 (additive model)

         GCV     RSS    GRSq     RSq
O3   14.9107 4203.23 0.76838 0.80094
wind  3.5166  991.32 0.21768 0.32766
All  18.4273 5194.55 0.73244 0.77005
> e5 <- earth(cbind(O3, wind) ~ ., data=ozone1, wp=c(.3, 1))
> printh(e5)
===e5 
Selected 11 of 19 terms, and 7 of 8 predictors 
Importance: temp, ibh, doy, humidity, dpg, vh, vis, ibt-unused
Number of terms at each degree of interaction: 1 10 (additive model)

         GCV    RSS    GRSq     RSq
O3   15.2518 4412.9 0.76308 0.79101
wind  3.3957  982.5 0.24458 0.33364
All  12.2635 3548.3 0.66518 0.70465
> printh(summary(e5))
===summary(e5) 
Call: earth(formula=cbind(O3, wind)~., data=ozone1, wp=c(0.3, 
      1))

                     O3     wind
(Intercept)     7.08204  4.73251
h(vh-5590)      0.01662 -0.00378
h(5590-vh)     -0.01171  0.01281
h(humidity-32)  0.08909  0.01081
h(temp-55)      0.36831  0.02966
h(ibh-1069)    -0.00044  0.00029
h(dpg-13)      -0.08468  0.00057
h(200-vis)      0.01689 -0.00087
h(89-doy)      -0.15725 -0.01160
h(doy-151)     -0.03726  0.00306
h(doy-295)      0.02321 -0.04104

Selected 11 of 19 terms, and 7 of 8 predictors 
Importance: temp, ibh, doy, humidity, dpg, vh, vis, ibt-unused
Number of terms at each degree of interaction: 1 10 (additive model)

         GCV    RSS    GRSq     RSq
O3   15.2518 4412.9 0.76308 0.79101
wind  3.3957  982.5 0.24458 0.33364
All  12.2635 3548.3 0.66518 0.70465
> # wp with factors
> e6 <- earth(pclass ~ ., data=etitanic, degree=2, wp=c(.001,.001,1))
> printh(e6)
===e6 
Selected 9 of 17 terms, and 5 of 5 predictors 
Importance: age, survived, sexmale, sibsp, parch
Number of terms at each degree of interaction: 1 5 3

        GCV    RSS     GRSq      RSq
1st 0.14973 150.40 0.244428 0.273073
2nd 0.18733 188.16 0.001535 0.039388
3rd 0.18801 188.84 0.248086 0.276592
All 0.56390 566.39 0.247898 0.276411
> printh(summary(e6))
===summary(e6) 
Call: earth(formula=pclass~., data=etitanic, wp=c(0.001, 0.001, 
      1), degree=2)

                              1st        2nd       3rd
(Intercept)            -0.0464701  0.2755170  0.770953
survived                0.3058866  0.1704173 -0.476304
sexmale                 0.1416557  0.1922534 -0.333909
h(age-9)                0.0116337 -0.0032570 -0.008377
h(sibsp-1)             -0.0179840 -0.1044578  0.122442
h(parch-2)             -0.1220224 -0.0801554  0.202178
survived * sexmale     -0.0742978 -0.2926181  0.366916
sexmale * h(1-sibsp)   -0.1215528 -0.0766236  0.198176
h(57-age) * h(2-parch) -0.0016848 -0.0013049  0.002990

Selected 9 of 17 terms, and 5 of 5 predictors 
Importance: age, survived, sexmale, sibsp, parch
Number of terms at each degree of interaction: 1 5 3

        GCV    RSS     GRSq      RSq
1st 0.14973 150.40 0.244428 0.273073
2nd 0.18733 188.16 0.001535 0.039388
3rd 0.18801 188.84 0.248086 0.276592
All 0.56390 566.39 0.247898 0.276411
> e7 <- earth(pclass ~ ., data=etitanic, degree=2, wp=c(1,.001,.001))
> printh(e7)
===e7 
Selected 10 of 17 terms, and 5 of 5 predictors 
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6

        GCV    RSS      GRSq      RSq
1st 0.14611 146.04  0.262715 0.294122
2nd 0.19173 191.64 -0.021931 0.021602
3rd 0.19923 199.14  0.203193 0.237136
All 0.43862 438.42  0.262371 0.293793
> printh(summary(e7))
===summary(e7) 
Call: earth(formula=pclass~., data=etitanic, wp=c(1, 0.001, 
      0.001), degree=2)

                              1st        2nd       3rd
(Intercept)              0.130163  0.2179871  0.651850
survived                 0.481456 -0.1647047 -0.316751
h(age-54)                0.063641 -0.0130126 -0.050629
h(2-parch)               0.157252  0.1049369 -0.262189
survived * h(52-age)    -0.008783  0.0078765  0.000906
sexmale * h(age-26)      0.006626 -0.0024825 -0.004144
h(age-55) * h(2-parch)  -0.038689  0.0045557  0.034133
h(55-age) * h(2-parch)  -0.004470 -0.0025385  0.007008
h(sibsp-1) * h(2-parch) -0.060345 -0.0228899  0.083235
h(1-sibsp) * h(2-parch) -0.068508 -0.0259267  0.094435

Selected 10 of 17 terms, and 5 of 5 predictors 
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6

        GCV    RSS      GRSq      RSq
1st 0.14611 146.04  0.262715 0.294122
2nd 0.19173 191.64 -0.021931 0.021602
3rd 0.19923 199.14  0.203193 0.237136
All 0.43862 438.42  0.262371 0.293793
> if (PLOT)
+     plot(e7)
> 
> cat("--- earth.regress ---------------------------------\n")
--- earth.regress ---------------------------------
> 
> msg = "earth.regress with trees data, single response, no weights"
> cat("Test:", msg, "\n")
Test: earth.regress with trees data, single response, no weights 
> 
> data(trees)
> y <- trees$Volume
> x <- cbind(trees$Girth, trees$Height)
> colnames(x) <- c("girth", "height")
> 
> a.lm <- lm(y ~ x)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2)
> if (is.null(dim(a.lm$coefficients)))
+     dim(a.lm$coefficients) <- c(length(a.lm$coefficients), 1)
> a <- earth:::earth.regress(x, y)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]"))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]"))
> 
> msg = "earth.regress with ozone1 data, multiple responses, no weights"
> cat("Test:", msg, "\n")
Test: earth.regress with ozone1 data, multiple responses, no weights 
> 
> data(ozone1)
> y <- cbind(ozone1$O3, ozone1$O3 ^ 2)
> colnames(y) <- c("O3", "O32")
> x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp)
> colnames(x) <- c("wind", "humidity", "temp")
> 
> a.lm <- lm(y ~ x)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2)
> a <- earth:::earth.regress(x, y)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]"))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress with ozone1 data, multiple responses with case weights"
> cat("Test:", msg, "\n")
Test: earth.regress with ozone1 data, multiple responses with case weights 
> 
> # options(digits=10)
> weights. <- rep(.5, nrow(x))
> weights.[1] <- 1
> weights.[2] <- 2
> weights.[3] <- 3
> weights.[4] <- 4
> weights.[5] <- 5
> a.lm <- lm(y ~ x, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights.)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights 1"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights 1 
> 
> weights. <- rep(1, nrow(x))
> weights.[2] <- 0
> weights.[4] <- 0
> a.lm <- lm(y ~ x, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights.)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> # options(digits=10)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights 2"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights 2 
> weights. <- rep(1, nrow(x))
> weights.[5] <- 0
> weights.[6] <- 0
> weights.[7] <- 0
> weights.[21] <- 0
> weights.[22] <- 0
> weights.[23] <- 0
> weights.[24] <- 0
> weights.[25] <- 0
> weights.[26] <- 0
> weights.[27] <- 0
> a.lm <- lm(y ~ x, weights=weights.)
> # a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights.)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights and missing columns 1"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights and missing columns 1 
> x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp, ozone1$wind^2, ozone1$humidity^2, ozone1$temp^2)
> weights. <- rep(1, nrow(x))
> weights.[5] <- 0
> weights.[6] <- 0
> weights.[7] <- 0
> weights.[21] <- 0
> weights.[22] <- 0
> weights.[23] <- 0
> weights.[24] <- 0
> weights.[25] <- 0
> weights.[26] <- 0
> weights.[27] <- 0
> colnames(x) <- c("wind", "humidity", "temp", "wind2", "humidity2", "temp2")
> used.cols = as.logical(c(1,0,1,0,1,1))
> x.missing <- x[,used.cols]
> a.lm <- lm(y ~ x.missing, weights=weights.)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights., used.cols=used.cols)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> msg = "earth.regress case weights with zero weights and missing columns 2"
> cat("Test:", msg, "\n")
Test: earth.regress case weights with zero weights and missing columns 2 
> x <- cbind(ozone1$wind, ozone1$humidity, ozone1$temp, ozone1$wind^2, ozone1$humidity^2, ozone1$temp^2)
> weights. <- rep(1, nrow(x))
> weights.[5] <- .1
> weights.[6] <- .2
> weights.[7] <- 1.9
> weights.[21] <- .59
> colnames(x) <- c("wind", "humidity", "temp", "wind2", "humidity2", "temp2")
> used.cols = as.logical(c(0,1,0,0,1,0))
> x.missing <- x[,used.cols]
> a.lm <- lm(y ~ x.missing, weights=weights.)
> a.lm.rss <- sum((a.lm$fitted.values - y)^2) # line below is equivalent
> a.lm.rss <- sum(a.lm$residuals^2)
> a <- earth:::earth.regress(x, y, weights=weights., used.cols=used.cols)
> rownames(a.lm$coefficients) <- rownames(a$coefficients)
> check.fuzzy.equal(a.lm$coefficients, a$coefficients, msg=paste("coefficients [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm.rss, a$rss, msg=paste("rss [", msg, "]", sep=""))
> check.fuzzy.equal(a.lm$residuals, a$residuals, fuzz=1e-6, msg=paste("residuals [", msg, "]", sep=""))
> 
> cat("---standard method functions ------------------------\n")
---standard method functions ------------------------
> 
> short.etitanic <- etitanic[seq(from=1, to=1000, by=20),]
> a1 <- earth(pclass ~ ., data=short.etitanic, glm=list(family=binomial), trace=0)
> printh(variable.names(a1))
===variable.names(a1) 
[1] "survived" "sexmale"  "age"      "sibsp"    "parch"   
> printh(case.names(a1))
===case.names(a1) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> printh(case.names(a1, use.names=FALSE))
===case.names(a1, use.names = FALSE) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> 
> named.short.etitanic <- short.etitanic
> rownames(named.short.etitanic) <- paste("xx", 1:nrow(named.short.etitanic))
> a2 <- earth(pclass ~ ., data=named.short.etitanic, glm=list(family=binomial), trace=0)
> printh(variable.names(a2))
===variable.names(a2) 
[1] "survived" "sexmale"  "age"      "sibsp"    "parch"   
> printh(case.names(a2))
===case.names(a2) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> printh(case.names(a2, use.names=FALSE))
===case.names(a2, use.names = FALSE) 
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45"
[46] "46" "47" "48" "49" "50"
> 
> printh(deviance(a1), expect.warning=TRUE)
===deviance(a1)  expect warning -->Warning: deviance.earth: returning earth (not GLM) deviance
[1] 25.487
> printh(deviance(a1, warn=FALSE))
===deviance(a1, warn = FALSE) [1] 25.487
> printh(effects(a1), expect.warning=TRUE)
===effects(a1)  expect warning -->Warning: effects.earth: returning NULL
NULL
> printh(effects(a1, warn=FALSE))
===effects(a1, warn = FALSE) NULL
> printh(family(a1))
===family(a1) 

Family: binomial 
Link function: logit 

> printh(anova(a1), expect.warning=TRUE)
===anova(a1)  expect warning -->Warning: anova.earth: returning NULL
NULL
> printh(anova(a1, warn=FALSE))
===anova(a1, warn = FALSE) NULL
> printh(family(a1))
===family(a1) 

Family: binomial 
Link function: logit 

> 
> # TODO removed because causes different results on different machines
> # cat("--- thresh=0 -----------------------------------------\n")
> # 
> # a.no.thresh <- earth(O3 ~ ., data = ozone1, thresh=0, nk=1000, degree=2, trace=4)
> # printh(a.no.thresh)
> # printh(summary(a.no.thresh))
> # plotmo(a.no.thresh, degree1=1, degree2=c(4,9,16), clip=0, , caption="test with thresh=0")
> 
> cat("--- ../../tests/test.earth.R -------------------------\n")
--- ../../tests/test.earth.R -------------------------
> 
> options(options.old)
> source("../../tests/test.earth.R")
Call: earth(formula=O3~., data=ozone1, trace=4, degree=2)
x is a 330 by 9 matrix: 1=vh, 2=wind, 3=humidity, 4=temp, 5=ibh, 6=dpg, 7=ibt, 8=vis, 9=doy
First few rows of x are
       vh wind humidity temp  ibh dpg ibt vis doy
[1,] 5710    4       28   40 2693 -25  87 250  33
[2,] 5700    3       37   45  590 -24 128 100  34
[3,] 5760    3       51   54 1450  25 139  60  35
[4,] 5720    4       69   35 1568  15 121  60  36
[5,] 5790    6       19   45 2631 -33 123 100  37
[6,] 5790    3       25   55  554 -28 182 250  38
y is a 330 by 1 matrix: 1=O3
First few rows of y are
     O3
[1,]  3
[2,]  5
[3,]  5
[4,]  6
[5,]  4
[6,]  4
Approximate memory use after expanding x and y matrices: 0.2 MBytes
Forward pass: minspan 6 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.6493 0.6599       0.6599    4         temp          58  2   3   
4      0.6908 0.7094      0.04948    5          ibh        1069  4   5   
6      0.7110 0.7368      0.02744    9          doy          89  6   7   
8      0.7300 0.7618        0.025    3     humidity          56  8   9   2   
10     0.7546 0.7904      0.02865    6          dpg          54  10  11  2   
12     0.7597 0.8015       0.0111    8          vis         200  12  13  
14     0.7633 0.8110     0.009428    2         wind           7  14  15  13  
16     0.7637 0.8177     0.006729    6          dpg          44  16  17  5   
18     0.7678 0.8270     0.009305    7          ibt         233  18  19  
20     0.7659 0.8317     0.004672    9          doy         159  20  21  2   

Reached max number of terms 21
After forward pass GRSq 0.7659 RSq 0.8317
Forward pass complete: 21 terms

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6408  0.6462     0.6408      1  1 2
          3      0.6909  0.7002     0.0501      2  1 2 4
          4      0.7018  0.7153     0.0109      3  1 2 9 19
          5      0.7108  0.7281     0.0090      4  1 2 6 9 19
          6      0.7377  0.7573     0.0269      4  1 2 6 7 9 19
          7      0.7566  0.7783     0.0189      5  1 2 6 7 9 11 19
          8      0.7657  0.7900     0.0091      6  1 2 6 7 9 11 13 19
          9      0.7768  0.8031     0.0111      7  1 2 6 7 9 11 13 17 19
         10      0.7851  0.8135     0.0082      7  1 2 6 7 9 10 11 13 17 19
chosen   11      0.7910  0.8216     0.0059      8  1 2 6 7 9 10 11 13 14 17 19
         12      0.7897  0.8234    -0.0013      8  1 2 6 7 9 10 11 13 14 17 19 20
         13      0.7895  0.8261    -0.0002      8  1 2 6 7 9 10 11 13 14 17 19 20 21
         14      0.7872  0.8272    -0.0023      8  1 2 5 6 7 9 10 11 13 14 17 19 20 21
         15      0.7854  0.8286    -0.0018      8  1 2 5 6 7 9 10 11 13 14 16 17 19 20 21
         16      0.7833  0.8298    -0.0021      8  1 2 5 6 7 9 10 11 13 14 15 16 17 19 20 21
         17      0.7804  0.8306    -0.0028      8  1 2 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         18      0.7772  0.8310    -0.0032      8  1 2 4 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         19      0.7738  0.8314    -0.0034      8  1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21
         20      0.7700  0.8316    -0.0038      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21
         21      0.7659  0.8317    -0.0040      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21

Prune method "backward" penalty 3 nprune 21: selected 11 of 21 terms, and 8 of 9 predictors
After backward pass GRSq 0.791 RSq 0.8216 
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.5    RSS 3768    GRSq 0.791    RSq 0.822
Call: earth(formula=O3~., data=ozone1, trace=4, degree=2)

                            coefficients
(Intercept)                       14.889
h(temp-58)                         0.321
h(233-ibt)                        -0.046
h(200-vis)                         0.022
h(doy-89)                         -0.023
h(89-doy)                         -0.144
h(wind-7) * h(200-vis)            -0.019
h(56-humidity) * h(temp-58)       -0.021
h(temp-58) * h(dpg-54)            -0.019
h(temp-58) * h(54-dpg)             0.004
h(1069-ibh) * h(44-dpg)            0.000

Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.5    RSS 3768    GRSq 0.791    RSq 0.822
          col used nsubsets    gcv       rss  
temp        4    1       10 100.00 1 100.000 1
humidity    3    1        8  12.65 1  14.766 1
ibt         7    1        8  12.65 1  14.766 1
doy         9    1        7  11.27 1  12.938 1
dpg         6    1        5   6.73 1   7.822 1
ibh         5    1        4   9.54 0  10.420 0
vis         8    1        4   4.34 1   5.262 1
wind        2    1        1   0.75 1   0.985 1
vh-unused   1    0        0   0.00 1   0.000 1
Selected 5 of 21 terms, and 4 of 9 predictors 
Importance: temp, humidity, ibt, ibh-unused, doy, vh-unused, wind-unused, dpg-unused, vis-unused
Number of terms at each degree of interaction: 1 3 1
GCV 18.6    RSS 5741    GRSq 0.711    RSq 0.728

0 1 2 
1 3 1 
[1] 0 1 1 1 1 1 1 2 2
[1] "vh"       "wind"     "humidity"
[1] 5741
[1] 1 2 5 3 4
       O3
[1,] 6.63
Selected 14 of 19 terms, and 8 of 9 predictors 
Importance: temp, ibh, doy, dpg, humidity, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 13 (additive model)
GCV 14.8126    RSS 4121    GRSq 0.769904    RSq 0.804834
Call: earth(formula=O3~., data=ozone1, degree=1, minspan=1)

O3 =
  8.56555
  +   0.0153584 * pmax(0,       vh -     5740) 
  -   0.0135079 * pmax(0,     5740 -       vh) 
  +    0.303387 * pmax(0,        9 -     wind) 
  +     0.24189 * pmax(0, humidity -       39) 
  -    0.227282 * pmax(0, humidity -       54) 
  +    0.378576 * pmax(0,     temp -       58) 
  - 0.000600086 * pmax(0,      ibh -     1023) 
  -  0.00313283 * pmax(0,     1023 -      ibh) 
  -    0.107166 * pmax(0,      dpg -       12) 
  +   0.0456812 * pmax(0,       80 -      vis) 
  +   0.0469864 * pmax(0,      doy -       89) 
  -    0.124658 * pmax(0,       89 -      doy) 
  -   0.0911118 * pmax(0,      doy -      159) 

Selected 14 of 19 terms, and 8 of 9 predictors 
Importance: temp, ibh, doy, dpg, humidity, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 13 (additive model)
GCV 14.8126    RSS 4121    GRSq 0.769904    RSq 0.804834
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
