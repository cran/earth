> # test.earth.glm.R: tests glm and factors added for earth release 2.0
> 
> library(earth)
Loading required package: leaps
> if(!interactive())
+     postscript()
> data(ozone1)
> data(trees)
> data(etitanic)
> source("check.models.equal.R")
> options(warn=1) # print warnings as they occur
> 
> printh <- function(x, expect.warning=FALSE, max.print=0) # like print but with a header
+ {
+     cat("===", deparse(substitute(x)))
+     if(expect.warning)
+         cat(" expect warning -->")
+     else if (NROW(x) > 1)
+         cat("\n")
+     if (max.print > 0)
+         print(head(x, n=max.print))
+     else
+         print(x)
+ }
> 
> count <- 0
> 
> print.earth.models <- function(a)
+ {
+     model.name <- deparse(substitute(a))
+     cat("\nPrint", model.name, "\n\n")
+     print(a)
+     cat("\nSummary", model.name, "\n\n")
+     print(summary(a))
+     count <<- count + 1
+     if (count %% 2 == 0) {  # an attempt at trying different parameters without combin explosion.
+         cat("\nSummary", model.name, "decomp=\"none\", digits=5, fixed.point=FALSE, details=TRUE\n\n")
+         print(summary(a, decomp="none", digits=5, fixed.point=FALSE, details=TRUE))
+     } else {
+         cat("\nSummary", model.name, "digits=3, details=TRUE\n\n")
+         print(summary(a, decomp="none", digits=3, details=TRUE))
+     }
+     cat("\nevimp", model.name, "\n\n")
+     print(evimp(a))
+     cat("\nevimp", model.name, "trim=FALSE\n\n")
+     ev <- evimp(a, trim=FALSE)
+     print(ev)
+     plot(a, caption=model.name)
+     plot(ev)
+     cat("\nplotmo", model.name, "\n")
+     plotmo(a)
+     cat("-------------------------------------------------------------------------------\n\n")
+ }
> 
> # print contents of earth.model, for sanity checking that all fields are present as usual
> # but strip big fields to reduce amount of printing
> 
> print.stripped.earth.model <- function(a, model.name)
+ {
+     a$bx <- NULL
+     a$fitted.values <- NULL
+     a$residuals <- NULL
+     cat("print.stripped.earth.model(", model.name, ")\n", sep="")
+     print.default(a)
+     cat("-------------------------------------------------------------------------------\n\n")
+ }
> 
> # binomial models
> 
> ldose  <- rep(0:5, 2) - 2
> # ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
> ldose1 <- c(0.1, 1.2, 0.1, 1.2, 1.0, 0.1, 0.3, 1.4, 0.1, 1.2, 0.1, 0.9)
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> SF <- cbind(numdead, numalive=20 - numdead)
> numdead2 <- c(2,3,10,13,19,20,0,3,7,11,13,17)
> SF2 <- cbind(numdead2, numalive2=20 - numdead2)
> 
> # single response glm model but with a binomial pair of y columns
> cat("a1: single response glm model but with a binomial pair of y columns, with ldose1 data degree=2\n\n")
a1: single response glm model but with a binomial pair of y columns, with ldose1 data degree=2

> a1 <-  earth(SF ~ sex + ldose + ldose1, glm=list(family="binomial"), trace=4, pmethod="none", degree=2)
Call: earth(formula=SF~sex+ldose+ldose1, glm=list(family="binomial"), 
      trace=4, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
First few rows of x are
     sexmale ldose ldose1
[1,]       1    -2    0.1
[2,]       1    -1    1.2
[3,]       1     0    0.1
[4,]       1     1    1.2
[5,]       1     2    1.0
[6,]       1     3    0.1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
First few rows of y are
     numdead numalive
[1,]       1       19
[2,]       4       16
[3,]       9       11
[4,]      13        7
[5,]      18        2
[6,]      20        0
Approximate memory use after expanding x and y matrices: 0.02 MBytes
Forward pass: minspan 4 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.8679 0.9211       0.9211    2        ldose          -2< 2       
4      0.9603 0.9882      0.06708    1      sexmale           0< 3       2   
6      0.9165 0.9915     0.003362    3       ldose1         0.1< 4       2   
8      0.7309 0.9978     0.006231    3       ldose1         0.1< 5       
10     0.9313 0.9987     0.000947    1      sexmale           0< 6       reject term

Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Forward pass complete: 9 terms (5 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.8679  0.9211     0.8679      1  1 2
          3      0.9603  0.9882     0.0924      2  1 2 3
          4      0.9165  0.9915    -0.0438      3  1 2 3 4
chosen    5      0.7309  0.9978    -0.1856      3  1 2 3 4 5

Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 

y arg to glm() is a 12 by 2 matrix: 1=numdead, 2=numalive
First few rows of y arg to glm() are
     numdead numalive
[1,]       1       19
[2,]       4       16
[3,]       9       11
[4,]      13        7
[5,]      18        2
[6,]      20        0
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> print.earth.models(a1)

Print a1 

Earth selected 5 of 5 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, ldose1
Number of terms at each degree of interaction: 1 2 2
Earth GCV 13.45533    RSS 1.121278    GRSq 0.7309378    RSq 0.9977763

GLM null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4

Summary a1 

Call: earth(formula=SF~sex+ldose+ldose1, glm=list(family="binomial"), 
      trace=4, pmethod="none", degree=2)

GLM coefficients
                                 numdead
(Intercept)                  -2.97667726
h(ldose- -2)                  0.92085659
h(ldose1-0.1)                 0.12092855
sexmale * h(ldose- -2)        0.41267810
h(ldose- -2) * h(ldose1-0.1) -0.06981786

Earth selected 5 of 5 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, ldose1
Number of terms at each degree of interaction: 1 2 2
Earth GCV 13.45533    RSS 1.121278    GRSq 0.7309378    RSq 0.9977763

GLM null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4

Summary a1 digits=3, details=TRUE

Call: earth(formula=SF~sex+ldose+ldose1, glm=list(family="binomial"), 
      trace=4, pmethod="none", degree=2)

Earth coefficients
                             numdead
(Intercept)                    0.820
h(ldose- -2)                   2.716
sexmale * h(ldose- -2)         1.177
h(ldose- -2) * h(ldose1-0.1)   0.827
h(ldose1-0.1)                 -1.799

GLM coefficients
                             numdead
(Intercept)                  -2.9767
h(ldose- -2)                  0.9209
sexmale * h(ldose- -2)        0.4127
h(ldose- -2) * h(ldose1-0.1) -0.0698
h(ldose1-0.1)                 0.1209

GLM deviance residuals:
     Min        1Q    Median        3Q       Max  
-1.42678  -0.37625   0.00377   0.40816   0.99279  

GLM coefficients (family binomial, link logit)
                             Estimate Std. Error z value Pr(>|z|)
(Intercept)                   -2.9767     0.5655   -5.26  1.4e-07
h(ldose- -2)                   0.9209     0.1976    4.66  3.2e-06
sexmale * h(ldose- -2)         0.4127     0.1268    3.25   0.0011
h(ldose- -2) * h(ldose1-0.1)  -0.0698     0.2703   -0.26   0.7962
h(ldose1-0.1)                  0.1209     0.7243    0.17   0.8674

Number of cases: 12
Earth selected 5 of 5 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, ldose1
Number of terms at each degree of interaction: 1 2 2
Earth GCV 13.5    RSS 1.12    GRSq 0.731    RSq 0.998

GLM null.deviance 125 (11 dof)   deviance 4.96 (7 dof)   iters 4

evimp a1 

        col used nsubsets       gcv           rss  
ldose     2    1        4 100.00000 1 100.0000000 1
sexmale   1    1        3 -18.73263 1   7.6848001 1
ldose1    3    1        2 -31.37693 1   0.9614167 1

evimp a1 trim=FALSE

        col used nsubsets       gcv           rss  
ldose     2    1        4 100.00000 1 100.0000000 1
sexmale   1    1        3 -18.73263 1   7.6848001 1
ldose1    3    1        2 -31.37693 1   0.9614167 1

plotmo a1 
Note: plotmo cannot use factors as axes for degree2 plots,
      so skipping degree2 plots for: sex
-------------------------------------------------------------------------------

> printh(evimp(a1, trim=FALSE, sqrt=TRUE)) # this tests sqrt param with negative evimps
=== evimp(a1, trim = FALSE, sqrt = TRUE)
        col used nsubsets       gcv          rss  
ldose     2    1        4 100.00000 1 100.000000 1
sexmale   1    1        3 -43.28121 1  27.721472 1
ldose1    3    1        2 -56.01511 1   9.805186 1
> a1update <- update(a1, trace=0)
> check.models.equal(a1, a1update, msg="a1update a1")
check.models.equal not identical: a1update a1 [but within numerical tolerances]
> 
> # test some different but equivalent glm specs
> a1a <-  earth(SF ~ sex + ldose + ldose1, glm=list(family="binomial"), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> check.models.equal(a1a, a1, msg="a1 a1a")
check.models.equal not identical: a1 a1a [but within numerical tolerances]
> a1b <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> check.models.equal(a1, a1b, msg="a1 a1b")
check.models.equal not identical: a1 a1b [but within numerical tolerances]
> a1c <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial()), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> check.models.equal(a1, a1c, msg="a1 a1c")
check.models.equal not identical: a1 a1c [but within numerical tolerances]
> a1d <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit")), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> check.models.equal(a1, a1d, msg="a1 a1d")
check.models.equal not identical: a1 a1d [but within numerical tolerances]
> a1e <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),offset=NULL), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> check.models.equal(a1, a1e, msg="a1 a1e")
check.models.equal not identical: a1 a1e [but within numerical tolerances]
> a1f <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),offset=rep(0,nrow(SF))), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> check.models.equal(a1, a1f, msg="a1 a1f")
check.models.equal not identical: a1 a1f [but within numerical tolerances]
> a1g <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),control=glm.control()), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> check.models.equal(a1, a1g, msg="a1 a1g")
check.models.equal not identical: a1 a1g [but within numerical tolerances]
> # following should cause a "did not converge warning" because maxit=2
> a1h <-  earth(SF ~ sex + ldose + ldose1, glm=list(family=binomial(link="logit"),control=glm.control(epsilon=1e-8, maxit=2, trace=TRUE)), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
Deviance = 4.982452 Iterations - 1 
Deviance = 4.956514 Iterations - 2 
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956514 (7 dof)   iters 2 did not converge
> print(a1h)          # check that "did not converge" is printed
Earth selected 5 of 5 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, ldose1
Number of terms at each degree of interaction: 1 2 2
Earth GCV 13.45533    RSS 1.121278    GRSq 0.7309378    RSq 0.9977763

GLM null.deviance 124.8756 (11 dof)   deviance 4.956514 (7 dof)   iters 2 did not converge
> print(summary(a1h)) # ditto
Call: earth(formula=SF~sex+ldose+ldose1, glm=list(family=binomial(link="logit"), 
      control=glm.control(epsilon=1e-08, maxit=2, trace=TRUE)), 
      trace=1, pmethod="none", degree=2)

GLM coefficients
                                 numdead
(Intercept)                  -2.97469341
h(ldose- -2)                  0.92024106
h(ldose1-0.1)                 0.11935290
sexmale * h(ldose- -2)        0.41249352
h(ldose- -2) * h(ldose1-0.1) -0.06924441

Earth selected 5 of 5 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, ldose1
Number of terms at each degree of interaction: 1 2 2
Earth GCV 13.45533    RSS 1.121278    GRSq 0.7309378    RSq 0.9977763

GLM null.deviance 124.8756 (11 dof)   deviance 4.956514 (7 dof)   iters 2 did not converge
> check.models.equal(a1, a1g, msg="a1 a1h") # models should still be equal within numeric tolerance
check.models.equal not identical: a1 a1h [but within numerical tolerances]
> 
> # basic check with an I in formula
> a1i <-  earth(SF ~ sex + ldose + I(ldose1-3), glm=list(family="binomial"), trace=1, pmethod="none", degree=2)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=I(ldose1-3)
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> print(summary(a1i))
Call: earth(formula=SF~sex+ldose+I(ldose1-3), glm=list(family="binomial"), 
      trace=1, pmethod="none", degree=2)

GLM coefficients
                                        numdead
(Intercept)                         -2.97667726
h(ldose- -2)                         0.92085659
h(I(ldose1-3)- -2.9)                 0.12092855
sexmale * h(ldose- -2)               0.41267810
h(ldose- -2) * h(I(ldose1-3)- -2.9) -0.06981786

Earth selected 5 of 5 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, I(ldose1-3)
Number of terms at each degree of interaction: 1 2 2
Earth GCV 13.45533    RSS 1.121278    GRSq 0.7309378    RSq 0.9977763

GLM null.deviance 124.8756 (11 dof)   deviance 4.956501 (7 dof)   iters 4
> 
> cat("a2: single response glm model but with a binomial pair of y columns, degree=1\n\n")
a2: single response glm model but with a binomial pair of y columns, degree=1

> a2 <-  earth(SF ~ sex*ldose, glm=list(fa="b"), trace=3, pmethod="none")
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=sexmale:ldose
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass: minspan 4 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.8821 0.9211       0.9211    2        ldose          -2< 2       
4      0.9525 0.9808      0.05966    1      sexmale           0< 3       
6      0.9569 0.9911      0.01033    3 sexmale:ldos          -2< 4       
8      0.8801 0.9911            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.8801 RSq 0.9911
Forward pass complete: 7 terms (4 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.8821  0.9211     0.8821      1  
          3      0.9525  0.9808     0.0704      2  
chosen    4      0.9569  0.9911     0.0044      3  

Prune method "none" penalty 2 nprune 4: selected 4 of 4 terms, and 3 of 3 predictors
After backward pass GRSq 0.9569 RSq 0.991 

GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.993727 (8 dof)   iters 4
> print.earth.models(a2)

Print a2 

Earth selected 4 of 4 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, sexmale:ldose
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 2.157714    RSS 4.495238    GRSq 0.9568528    RSq 0.9910853

GLM null.deviance 124.8756 (11 dof)   deviance 4.993727 (8 dof)   iters 4

Summary a2 

Call: earth(formula=SF~sex*ldose, glm=list(fa="b"), trace=3, 
      pmethod="none")

GLM coefficients
                        numdead
(Intercept)          -3.6993677
sexmale               0.8808128
h(ldose- -2)          0.9060364
h(sexmale:ldose- -2)  0.3529130

Earth selected 4 of 4 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, sexmale:ldose
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 2.157714    RSS 4.495238    GRSq 0.9568528    RSq 0.9910853

GLM null.deviance 124.8756 (11 dof)   deviance 4.993727 (8 dof)   iters 4

Summary a2 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=SF~sex*ldose, glm=list(fa="b"), trace=3, 
      pmethod="none")

Earth coefficients
                      numdead
(Intercept)          -2.01905
h(ldose- -2)          3.25714
sexmale               2.78095
h(sexmale:ldose- -2)  0.77143

GLM coefficients
                      numdead
(Intercept)          -3.69937
h(ldose- -2)          0.90604
sexmale               0.88081
h(sexmale:ldose- -2)  0.35291

GLM deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.398493  -0.320939  -0.075918   0.382202   1.103746  

GLM coefficients (family binomial, link logit)
                     Estimate Std. Error z value  Pr(>|z|)
(Intercept)          -3.69937    0.51117 -7.2371 4.584e-13
h(ldose- -2)          0.90604    0.16710  5.4221 5.891e-08
sexmale               0.88081    0.38842  2.2677   0.02335
h(sexmale:ldose- -2)  0.35291    0.26999  1.3071   0.19117

Number of cases: 12
Earth selected 4 of 4 terms, and 3 of 3 predictors 
Importance: ldose, sexmale, sexmale:ldose
Number of terms at each degree of interaction: 1 3 (additive model)
Earth GCV 2.1577    RSS 4.4952    GRSq 0.95685    RSq 0.99109

GLM null.deviance 124.88 (11 dof)   deviance 4.9937 (8 dof)   iters 4

evimp a2 

              col used nsubsets         gcv          rss  
ldose           2    1        3 100.0000000 1 100.000000 1
sexmale         1    1        2   7.8086158 1   7.061559 1
sexmale:ldose   3    1        1   0.4563772 1   1.041940 1

evimp a2 trim=FALSE

              col used nsubsets         gcv          rss  
ldose           2    1        3 100.0000000 1 100.000000 1
sexmale         1    1        2   7.8086158 1   7.061559 1
sexmale:ldose   3    1        1   0.4563772 1   1.041940 1

plotmo a2 
-------------------------------------------------------------------------------

> # repeat with bpairs arg
> a2a <- earth(SF ~ sex*ldose, glm=list(family="binomial", bpairs=c(TRUE,FALSE)), trace=3, pmethod="none")
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=sexmale:ldose
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass: minspan 4 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.8821 0.9211       0.9211    2        ldose          -2< 2       
4      0.9525 0.9808      0.05966    1      sexmale           0< 3       
6      0.9569 0.9911      0.01033    3 sexmale:ldos          -2< 4       
8      0.8801 0.9911            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.8801 RSq 0.9911
Forward pass complete: 7 terms (4 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2      0.8821  0.9211     0.8821      1  
          3      0.9525  0.9808     0.0704      2  
chosen    4      0.9569  0.9911     0.0044      3  

Prune method "none" penalty 2 nprune 4: selected 4 of 4 terms, and 3 of 3 predictors
After backward pass GRSq 0.9569 RSq 0.991 

GLM numdead: null.deviance 124.8756 (11 dof)   deviance 4.993727 (8 dof)   iters 4
> stopifnot(identical(a2$glm.list[[1]]$coefficients, a2a$glm.list[[1]]$coefficients))
> 
> a2c <- earth(SF ~ sex, glm=list(family="binomial", bpairs=c(TRUE,FALSE)), trace=0, pmethod="none")
> a2update <- update(a2, SF ~ sex, trace=0)
> check.models.equal(a2c, a2update, msg="a2c a2update")
check.models.equal not identical: a2c a2update [but within numerical tolerances]
> 
> # build a standard GLM model for comparison
> cat("a3: direct GLM a3:\n\n")
a3: direct GLM a3:

> a3 <- glm(SF ~ sex * ldose, family="binomial")
> print(summary(a3))

Call:
glm(formula = SF ~ sex * ldose, family = "binomial")

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-1.39849  -0.32094  -0.07592   0.38220   1.10375  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -1.1815     0.2853  -4.141 3.46e-05 ***
sexmale         0.8808     0.3884   2.268   0.0234 *  
ldose           0.9060     0.1671   5.422 5.89e-08 ***
sexmale:ldose   0.3529     0.2700   1.307   0.1912    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 124.8756  on 11  degrees of freedom
Residual deviance:   4.9937  on  8  degrees of freedom
AIC: 43.104

Number of Fisher Scoring iterations: 4

> plotmo(a3, caption="a3 <- glm(SF ~ sex * ldose, family=\"binomial\")")
Note: plotmo cannot use factors as axes for degree2 plots,
      so skipping degree2 plots for: sex
> cat("-------------------------------------------------------------------------------\n\n")
-------------------------------------------------------------------------------

> 
> # double response glm model with two binomial paired cols
> SF.both <- cbind(SF, SF2)
> cat("a4: double response glm model with two binomial paired cols\n\n")
a4: double response glm model with two binomial paired cols

> a4 <-  earth(SF.both ~ sex*ldose, glm=list(family="binomial"), trace=1)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=sexmale:ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6, 8
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.7832 RSq 0.9839
Prune method "backward" penalty 2 nprune 4: selected 3 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.9393 RSq 0.9754 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> print.earth.models(a4)

Print a4 

Earth selected 3 of 4 terms, and 2 of 3 predictors 
Importance: ldose, sexmale, sexmale:ldose-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a4 

Call: earth(formula=SF.both~sex*ldose, glm=list(family="binomial"), 
      trace=1)

GLM coefficients
               numdead   numdead2
(Intercept)  -3.473155 -3.2140605
sexmale       1.100743  0.9311515
h(ldose- -2)  1.064214  1.0759950

Earth selected 3 of 4 terms, and 2 of 3 predictors 
Importance: ldose, sexmale, sexmale:ldose-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a4 digits=3, details=TRUE

Call: earth(formula=SF.both~sex*ldose, glm=list(family="binomial"), 
      trace=1)

Earth coefficients
             numdead numdead2
(Intercept)    -1.44   -0.786
h(ldose- -2)    3.64    3.714
sexmale         3.17    2.667

GLM coefficients
             numdead numdead2
(Intercept)    -3.47   -3.214
h(ldose- -2)    1.06    1.076
sexmale         1.10    0.931

GLM numdead deviance residuals:
    Min       1Q   Median       3Q      Max  
-1.1054  -0.6534  -0.0222   0.4847   1.4294  

GLM numdead coefficients (family binomial, link logit)
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    -3.473      0.469   -7.41  1.2e-13
h(ldose- -2)    1.064      0.131    8.12  4.7e-16
sexmale         1.101      0.356    3.09   0.0020

GLM numdead2 deviance residuals:
   Min      1Q  Median      3Q     Max  
-1.255  -0.736   0.203   0.691   1.330  

GLM numdead2 coefficients (family binomial, link logit)
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    -3.214      0.447   -7.19  6.3e-13
h(ldose- -2)    1.076      0.131    8.20  2.4e-16
sexmale         0.931      0.352    2.64   0.0082

Number of cases: 12
Earth selected 3 of 4 terms, and 2 of 3 predictors 
Importance: ldose, sexmale, sexmale:ldose-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
          GCV  RSS  GRSq   RSq
numdead  2.38  9.7 0.953 0.981
numdead2 3.79 15.5 0.926 0.970
All      6.17 25.2 0.939 0.975

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead            125 11     6.76  9     4         1
numdead2           128 11     8.57  9     4         1

evimp a4 

        col used nsubsets        gcv          rss  
ldose     2    1        2 100.000000 1 100.000000 1
sexmale   1    1        1   5.432272 1   5.148163 1

evimp a4 trim=FALSE

                     col used nsubsets        gcv          rss  
ldose                  2    1        2 100.000000 1 100.000000 1
sexmale                1    1        1   5.432272 1   5.148163 1
sexmale:ldose-unused   3    0        0   0.000000 1   0.000000 1

plotmo a4 
-------------------------------------------------------------------------------

> print.stripped.earth.model(a4, "a4")
print.stripped.earth.model(a4)
$dirs
                    sexmale ldose sexmale:ldose
(Intercept)               0     0             0
h(ldose--2)               0     1             0
sexmale                   1     0             0
h(sexmale:ldose--2)       0     0             1

$cuts
                    sexmale ldose sexmale:ldose
(Intercept)               0     0             0
h(ldose--2)               0    -2             0
sexmale                   0     0             0
h(sexmale:ldose--2)       0     0            -2

$selected.terms
[1] 1 2 3

$prune.terms
     [,1] [,2] [,3] [,4]
[1,]    1    0    0    0
[2,]    1    2    0    0
[3,]    1    2    3    0
[4,]    1    2    3    4

$rss
[1] 25.17857

$rsq
[1] 0.9754096

$gcv
[1] 6.166181

$grsq
[1] 0.9392766

$rss.per.response
[1]  9.70238 15.47619

$rsq.per.response
[1] 0.9807588 0.9702190

$gcv.per.response
[1] 2.376093 3.790087

$grsq.per.response
[1] 0.9524860 0.9264592

$rss.per.subset
[1] 1023.91667   76.59524   25.17857   16.51429

$gcv.per.subset
[1] 101.545455  11.347443   6.166181   7.926857

$coefficients
              numdead   numdead2
(Intercept) -1.440476 -0.7857143
h(ldose--2)  3.642857  3.7142857
sexmale      3.166667  2.6666667

$penalty
[1] 2

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame,      weights = glm$weights, na.action = na.action, start = glm$start,      etastart = glm$etastart, mustart = glm$mustart, offset = glm$offset,      control = control, model = TRUE, method = "glm.fit", x = TRUE,      y = TRUE, contrasts = NULL, trace = (trace >= 2)) 

Coefficients:
  (Intercept)  `h(ldose--2)`        sexmale  
       -3.473          1.064          1.101  

Degrees of Freedom: 11 Total (i.e. Null);  9 Residual
Null Deviance:	    124.9 
Residual Deviance: 6.757 	AIC: 42.87 

$glm.list[[2]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame,      weights = glm$weights, na.action = na.action, start = glm$start,      etastart = glm$etastart, mustart = glm$mustart, offset = glm$offset,      control = control, model = TRUE, method = "glm.fit", x = TRUE,      y = TRUE, contrasts = NULL, trace = (trace >= 2)) 

Coefficients:
  (Intercept)  `h(ldose--2)`        sexmale  
      -3.2141         1.0760         0.9312  

Degrees of Freedom: 11 Total (i.e. Null);  9 Residual
Null Deviance:	    128 
Residual Deviance: 8.572 	AIC: 44.6 


$glm.coefficients
              numdead   numdead2
(Intercept) -3.473155 -3.2140605
h(ldose--2)  1.064214  1.0759950
sexmale      1.100743  0.9311515

$glm.bpairs
[1]  TRUE FALSE  TRUE FALSE

$namesx.org
[1] "sex"   "ldose"

$namesx
[1] "sex"   "ldose"

$terms
SF.both ~ sex * ldose
attr(,"variables")
list(SF.both, sex, ldose)
attr(,"factors")
        sex ldose sex:ldose
SF.both   0     0         0
sex       1     0         1
ldose     0     1         1
attr(,"term.labels")
[1] "sex"       "ldose"     "sex:ldose"
attr(,"order")
[1] 1 1 2
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(SF.both, sex, ldose)
attr(,"dataClasses")
    SF.both         sex       ldose 
"nmatrix.4"    "factor"   "numeric" 

$call
earth(formula = SF.both ~ sex * ldose, glm = list(family = "binomial"), 
    trace = 1)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> # repeat with bpairs arg
> a4a <- earth(SF.both ~ sex*ldose, glm=list(fam="bi", bpa=c(TRUE,FALSE,TRUE,FALSE)), trace=1)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=sexmale:ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6, 8
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.7832 RSq 0.9839
Prune method "backward" penalty 2 nprune 4: selected 3 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.9393 RSq 0.9754 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> stopifnot(identical(a4$glm.list[[1]]$coefficients, a4a$glm.list[[1]]$coefficients))
> stopifnot(identical(a4$glm.list[[2]]$coefficients, a4a$glm.list[[2]]$coefficients))
> a4update <- update(a4a, trace=0)
> check.models.equal(a4update, a4a, msg="a4update a4a")
check.models.equal not identical: a4update a4a [but within numerical tolerances]
> 
> # alternative way of specifying bpairs
> a4aa <- earth(SF.both ~ sex*ldose, glm=list(fam="bi", bpa=c(1,3)), trace=1)
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=sexmale:ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6, 8
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.7832 RSq 0.9839
Prune method "backward" penalty 2 nprune 4: selected 3 of 4 terms, and 2 of 3 predictors
After backward pass GRSq 0.9393 RSq 0.9754 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> check.models.equal(a4aa, a4a, msg="a4aa a4a")
check.models.equal not identical: a4aa a4a [but within numerical tolerances]
> 
> a4d <- earth(SF.both ~ ldose, glm=list(fam="bino", bpa=c(TRUE,FALSE,TRUE,FALSE)), trace=0)
> a4update <- update(a4a, form=SF.both ~ ldose)
x is a 12 by 1 matrix: 1=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.8153 RSq 0.9252
Prune method "backward" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 0.8883 RSq 0.9252 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 16.98403 (10 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 15.90252 (10 dof)   iters 4
> check.models.equal(a4update, a4d, msg="a4update a4d no keepxy")
check.models.equal not identical: a4update a4d no keepxy [but within numerical tolerances]
> 
> # titanic data, multiple responses (i.e. 3 level factor)
> cat("a5: titanic data, multiple responses (i.e. 3 level factor)\n\n")
a5: titanic data, multiple responses (i.e. 3 level factor)

> a5 <- earth(pclass ~ ., data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> print.earth.models(a5)

Print a5 

Earth selected 9 of 17 terms, and 5 of 5 predictors 
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 4 4

Earth
          GCV      RSS        GRSq        RSq
1st 0.1478715 148.5253 0.253819943 0.28210854
2nd 0.1869804 187.8072 0.003405389 0.04118751
3rd 0.1895587 190.3968 0.241872961 0.27061448
All 0.5244105 526.7293 0.175229617 0.20649767

GLM (family binomial, link logit)
    null.deviance   df  deviance   df iters converged
1st      1223.308 1045  894.8141 1037     5         1
2nd      1175.305 1045 1126.9441 1037     5         1
3rd      1448.213 1045 1118.9411 1037     5         1

Summary a5 

Call: earth(formula=pclass~., data=etitanic, glm=list(family="binomial"), 
      trace=0, degree=2)

GLM coefficients
                                1st         2nd         3rd
(Intercept)             -2.66307135 -1.93136147  1.37992944
survived                 2.84788552  1.06418271 -2.84378575
sexmale                  1.42483431  0.96598862 -1.45239590
h(sibsp-1)              -0.52879762 -0.64928949  0.79974678
h(2-parch)               1.25518755  0.06534587 -1.29855706
survived * sexmale      -1.25498201 -1.95099222  2.28554497
survived * h(16-age)    -0.17824991  0.09390085  0.02011681
h(55-age) * h(2-parch)  -0.04946408  0.00043737  0.04146455
h(1-sibsp) * h(1-parch) -1.02162885 -0.21902436  1.12490799

Earth selected 9 of 17 terms, and 5 of 5 predictors 
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 4 4

Earth
          GCV      RSS        GRSq        RSq
1st 0.1478715 148.5253 0.253819943 0.28210854
2nd 0.1869804 187.8072 0.003405389 0.04118751
3rd 0.1895587 190.3968 0.241872961 0.27061448
All 0.5244105 526.7293 0.175229617 0.20649767

GLM (family binomial, link logit)
    null.deviance   df  deviance   df iters converged
1st      1223.308 1045  894.8141 1037     5         1
2nd      1175.305 1045 1126.9441 1037     5         1
3rd      1448.213 1045 1118.9411 1037     5         1

Summary a5 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=pclass~., data=etitanic, glm=list(family="binomial"), 
      trace=0, degree=2)

Earth coefficients
                               1st         2nd        3rd
(Intercept)              0.1396780  1.3822e-01  0.7221057
survived                 0.3518559  1.6023e-01 -0.5120905
h(sibsp-1)              -0.0479585 -6.7564e-02  0.1155224
h(2-parch)               0.2173334  9.4235e-03 -0.2267568
survived * h(16-age)    -0.0232585  1.8686e-02  0.0045728
survived * sexmale      -0.0959323 -3.0327e-01  0.3992025
sexmale                  0.1093674  1.3653e-01 -0.2458963
h(55-age) * h(2-parch)  -0.0078473  3.5599e-05  0.0078117
h(1-sibsp) * h(1-parch) -0.1623930 -3.2878e-02  0.1952714

GLM coefficients
                              1st         2nd       3rd
(Intercept)             -2.663071 -1.93136147  1.379929
survived                 2.847886  1.06418271 -2.843786
h(sibsp-1)              -0.528798 -0.64928949  0.799747
h(2-parch)               1.255188  0.06534587 -1.298557
survived * h(16-age)    -0.178250  0.09390085  0.020117
survived * sexmale      -1.254982 -1.95099222  2.285545
sexmale                  1.424834  0.96598862 -1.452396
h(55-age) * h(2-parch)  -0.049464  0.00043737  0.041465
h(1-sibsp) * h(1-parch) -1.021629 -0.21902436  1.124908

GLM 1st deviance residuals:
     Min        1Q    Median        3Q       Max  
-2.02122  -0.68435  -0.35766   0.56892   2.66017  

GLM 1st coefficients (family binomial, link logit)
                          Estimate Std. Error  z value  Pr(>|z|)
(Intercept)             -2.6630714  0.5298325  -5.0263 5.002e-07
survived                 2.8478855  0.5104917   5.5787 2.423e-08
h(sibsp-1)              -0.5287976  0.2365149  -2.2358 0.0253656
h(2-parch)               1.2551876  0.1875848   6.6913 2.212e-11
survived * h(16-age)    -0.1782499  0.0515714  -3.4564 0.0005475
survived * sexmale      -1.2549820  0.5640362  -2.2250 0.0260811
sexmale                  1.4248343  0.5092679   2.7978 0.0051451
h(55-age) * h(2-parch)  -0.0494641  0.0044068 -11.2244 < 2.2e-16
h(1-sibsp) * h(1-parch) -1.0216289  0.2129941  -4.7965 1.615e-06

GLM 2nd deviance residuals:
     Min        1Q    Median        3Q       Max  
-1.45407  -0.80675  -0.77534  -0.10402   2.07089  

GLM 2nd coefficients (family binomial, link logit)
                           Estimate  Std. Error z value  Pr(>|z|)
(Intercept)             -1.93136147  0.37697795 -5.1233 3.003e-07
survived                 1.06418271  0.34979070  3.0423 0.0023475
h(sibsp-1)              -0.64928949  0.22307746 -2.9106 0.0036073
h(2-parch)               0.06534587  0.17330956  0.3770 0.7061386
survived * h(16-age)     0.09390085  0.02842944  3.3029 0.0009568
survived * sexmale      -1.95099222  0.43722003 -4.4623 8.110e-06
sexmale                  0.96598862  0.34300568  2.8162 0.0048588
h(55-age) * h(2-parch)   0.00043737  0.00357988  0.1222 0.9027599
h(1-sibsp) * h(1-parch) -0.21902436  0.19299092 -1.1349 0.2564195

GLM 3rd deviance residuals:
     Min        1Q    Median        3Q       Max  
-2.32939  -0.83909  -0.32160   0.89944   2.61933  

GLM 3rd coefficients (family binomial, link logit)
                          Estimate Std. Error z value  Pr(>|z|)
(Intercept)              1.3799294  0.3534087  3.9046 9.437e-05
survived                -2.8437858  0.3383356 -8.4052 < 2.2e-16
h(sibsp-1)               0.7997468  0.1912028  4.1827 2.880e-05
h(2-parch)              -1.2985571  0.1912192 -6.7909 1.114e-11
survived * h(16-age)     0.0201168  0.0284533  0.7070    0.4796
survived * sexmale       2.2855450  0.3990264  5.7278 1.017e-08
sexmale                 -1.4523959  0.3219393 -4.5114 6.440e-06
h(55-age) * h(2-parch)   0.0414645  0.0040611 10.2101 < 2.2e-16
h(1-sibsp) * h(1-parch)  1.1249080  0.2035671  5.5260 3.276e-08

Number of cases: 1046
Earth selected 9 of 17 terms, and 5 of 5 predictors 
Importance: age, parch, survived, sibsp, sexmale
Number of terms at each degree of interaction: 1 4 4

Earth
        GCV    RSS      GRSq      RSq
1st 0.14787 148.53 0.2538199 0.282108
2nd 0.18698 187.81 0.0034054 0.041188
3rd 0.18956 190.40 0.2418730 0.270614
All 0.52441 526.73 0.1752296 0.206498

GLM (family binomial, link logit)
    null.deviance   df deviance   df iters converged
1st        1223.3 1045   894.81 1037     5         1
2nd        1175.3 1045  1126.94 1037     5         1
3rd        1448.2 1045  1118.94 1037     5         1

evimp a5 

         col used nsubsets       gcv         rss  
age        3    1        8 100.00000 1 100.00000 1
parch      5    1        8 100.00000 1 100.00000 1
survived   1    1        7  63.44537 1  66.81445 1
sibsp      4    1        5  16.22113 1  22.99755 1
sexmale    2    1        4  11.82295 1  17.37608 1

evimp a5 trim=FALSE

         col used nsubsets       gcv         rss  
age        3    1        8 100.00000 1 100.00000 1
parch      5    1        8 100.00000 1 100.00000 1
survived   1    1        7  63.44537 1  66.81445 1
sibsp      4    1        5  16.22113 1  22.99755 1
sexmale    2    1        4  11.82295 1  17.37608 1

plotmo a5 
Note: plotmo cannot use factors as axes for degree2 plots,
      so skipping degree2 plots for: sex
-------------------------------------------------------------------------------

> printh(a5$levels)
=== a5$levels
[1] "1st" "2nd" "3rd"
> print.stripped.earth.model(a5, "a5")
print.stripped.earth.model(a5)
$dirs
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0   1     0     0
h(26-age)                    0       0  -1     0     0
survived                     1       0   0     0     0
h(sibsp-1)                   0       0   0     1     0
h(1-sibsp)                   0       0   0    -1     0
h(parch-2)                   0       0   0     0     1
h(2-parch)                   0       0   0     0    -1
survived*h(age-16)           1       0   1     0     0
survived*h(16-age)           1       0  -1     0     0
survived*sexmale             1       1   0     0     0
sexmale                      0       1   0     0     0
h(age-55)*h(2-parch)         0       0   1     0    -1
h(55-age)*h(2-parch)         0       0  -1     0    -1
h(1-sibsp)*h(parch-1)        0       0   0    -1     1
h(1-sibsp)*h(1-parch)        0       0   0    -1    -1
h(age-54)                    0       0   1     0     0

$cuts
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0  26     0     0
h(26-age)                    0       0  26     0     0
survived                     0       0   0     0     0
h(sibsp-1)                   0       0   0     1     0
h(1-sibsp)                   0       0   0     1     0
h(parch-2)                   0       0   0     0     2
h(2-parch)                   0       0   0     0     2
survived*h(age-16)           0       0  16     0     0
survived*h(16-age)           0       0  16     0     0
survived*sexmale             0       0   0     0     0
sexmale                      0       0   0     0     0
h(age-55)*h(2-parch)         0       0  55     0     2
h(55-age)*h(2-parch)         0       0  55     0     2
h(1-sibsp)*h(parch-1)        0       0   0     1     1
h(1-sibsp)*h(1-parch)        0       0   0     1     1
h(age-54)                    0       0  54     0     0

$selected.terms
[1]  1  4  5  8 10 11 12 14 16

$prune.terms
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0
 [2,]    1   14    0    0    0    0    0    0    0     0     0     0     0
 [3,]    1    4   14    0    0    0    0    0    0     0     0     0     0
 [4,]    1    4    8   14    0    0    0    0    0     0     0     0     0
 [5,]    1    4    8   14   16    0    0    0    0     0     0     0     0
 [6,]    1    4    8   11   14   16    0    0    0     0     0     0     0
 [7,]    1    4    8   11   12   14   16    0    0     0     0     0     0
 [8,]    1    4    5    8   11   12   14   16    0     0     0     0     0
 [9,]    1    4    5    8   10   11   12   14   16     0     0     0     0
[10,]    1    4    5    8   10   11   12   14   16    17     0     0     0
[11,]    1    4    5    8   10   11   12   13   14    16    17     0     0
[12,]    1    4    5    7    8   10   11   12   13    14    16    17     0
[13,]    1    3    4    5    7    8   10   11   12    13    14    16    17
[14,]    1    3    4    5    7    8    9   10   11    12    13    14    16
[15,]    1    3    4    5    6    7    8    9   10    11    12    13    14
[16,]    1    3    4    5    6    7    8    9   10    11    12    13    14
[17,]    1    2    3    4    5    6    7    8    9    10    11    12    13
      [,14] [,15] [,16] [,17]
 [1,]     0     0     0     0
 [2,]     0     0     0     0
 [3,]     0     0     0     0
 [4,]     0     0     0     0
 [5,]     0     0     0     0
 [6,]     0     0     0     0
 [7,]     0     0     0     0
 [8,]     0     0     0     0
 [9,]     0     0     0     0
[10,]     0     0     0     0
[11,]     0     0     0     0
[12,]     0     0     0     0
[13,]     0     0     0     0
[14,]    17     0     0     0
[15,]    16    17     0     0
[16,]    15    16    17     0
[17,]    14    15    16    17

$rss
[1] 526.7293

$rsq
[1] 0.2064977

$gcv
[1] 0.5244105

$grsq
[1] 0.1752296

$rss.per.response
[1] 148.5253 187.8072 190.3968

$rsq.per.response
[1] 0.28210854 0.04118751 0.27061448

$gcv.per.response
[1] 0.1478715 0.1869804 0.1895587

$grsq.per.response
[1] 0.253819943 0.003405389 0.241872961

$rss.per.subset
 [1] 663.8031 618.3144 587.1155 558.2529 550.5473 546.0083 539.0533 532.1400
 [9] 526.7293 526.1097 522.0963 519.3960 516.5436 515.0676 514.2161 513.5054
[17] 513.3259

$gcv.per.subset
 [1] 0.6358261 0.5950986 0.5677911 0.5424834 0.5375831 0.5357360 0.5314825
 [8] 0.5272225 0.5244105 0.5263582 0.5249065 0.5247609 0.5244530 0.5255400
[15] 0.5272719 0.5291595 0.5316095

$coefficients
                               1st           2nd          3rd
(Intercept)            0.139677983  0.1382163301  0.722105687
survived               0.351855854  0.1602346217 -0.512090476
h(sibsp-1)            -0.047958497 -0.0675639271  0.115522424
h(2-parch)             0.217333399  0.0094234505 -0.226756850
survived*h(16-age)    -0.023258457  0.0186856516  0.004572806
survived*sexmale      -0.095932289 -0.3032702269  0.399202516
sexmale                0.109367428  0.1365288369 -0.245896265
h(55-age)*h(2-parch)  -0.007847314  0.0000355992  0.007811715
h(1-sibsp)*h(1-parch) -0.162393009 -0.0328783910  0.195271400

$penalty
[1] 3

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame,      weights = glm$weights, na.action = na.action, start = glm$start,      etastart = glm$etastart, mustart = glm$mustart, offset = glm$offset,      control = control, model = TRUE, method = "glm.fit", x = TRUE,      y = TRUE, contrasts = NULL, trace = (trace >= 2)) 

Coefficients:
            (Intercept)                 survived             `h(sibsp-1)`  
               -2.66307                  2.84789                 -0.52880  
           `h(2-parch)`     `survived*h(16-age)`       `survived*sexmale`  
                1.25519                 -0.17825                 -1.25498  
                sexmale   `h(55-age)*h(2-parch)`  `h(1-sibsp)*h(1-parch)`  
                1.42483                 -0.04946                 -1.02163  

Degrees of Freedom: 1045 Total (i.e. Null);  1037 Residual
Null Deviance:	    1223 
Residual Deviance: 894.8 	AIC: 912.8 

$glm.list[[2]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame,      weights = glm$weights, na.action = na.action, start = glm$start,      etastart = glm$etastart, mustart = glm$mustart, offset = glm$offset,      control = control, model = TRUE, method = "glm.fit", x = TRUE,      y = TRUE, contrasts = NULL, trace = (trace >= 2)) 

Coefficients:
            (Intercept)                 survived             `h(sibsp-1)`  
             -1.9313615                1.0641827               -0.6492895  
           `h(2-parch)`     `survived*h(16-age)`       `survived*sexmale`  
              0.0653459                0.0939009               -1.9509922  
                sexmale   `h(55-age)*h(2-parch)`  `h(1-sibsp)*h(1-parch)`  
              0.9659886                0.0004374               -0.2190244  

Degrees of Freedom: 1045 Total (i.e. Null);  1037 Residual
Null Deviance:	    1175 
Residual Deviance: 1127 	AIC: 1145 

$glm.list[[3]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame,      weights = glm$weights, na.action = na.action, start = glm$start,      etastart = glm$etastart, mustart = glm$mustart, offset = glm$offset,      control = control, model = TRUE, method = "glm.fit", x = TRUE,      y = TRUE, contrasts = NULL, trace = (trace >= 2)) 

Coefficients:
            (Intercept)                 survived             `h(sibsp-1)`  
                1.37993                 -2.84379                  0.79975  
           `h(2-parch)`     `survived*h(16-age)`       `survived*sexmale`  
               -1.29856                  0.02012                  2.28554  
                sexmale   `h(55-age)*h(2-parch)`  `h(1-sibsp)*h(1-parch)`  
               -1.45240                  0.04146                  1.12491  

Degrees of Freedom: 1045 Total (i.e. Null);  1037 Residual
Null Deviance:	    1448 
Residual Deviance: 1119 	AIC: 1137 


$glm.coefficients
                              1st          2nd         3rd
(Intercept)           -2.66307135 -1.931361472  1.37992944
survived               2.84788552  1.064182711 -2.84378575
h(sibsp-1)            -0.52879762 -0.649289486  0.79974678
h(2-parch)             1.25518755  0.065345867 -1.29855706
survived*h(16-age)    -0.17824991  0.093900852  0.02011681
survived*sexmale      -1.25498201 -1.950992216  2.28554497
sexmale                1.42483431  0.965988623 -1.45239590
h(55-age)*h(2-parch)  -0.04946408  0.000437374  0.04146455
h(1-sibsp)*h(1-parch) -1.02162885 -0.219024356  1.12490799

$namesx.org
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$namesx
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$levels
[1] "1st" "2nd" "3rd"

$terms
pclass ~ survived + sex + age + sibsp + parch
attr(,"variables")
list(pclass, survived, sex, age, sibsp, parch)
attr(,"factors")
         survived sex age sibsp parch
pclass          0   0   0     0     0
survived        1   0   0     0     0
sex             0   1   0     0     0
age             0   0   1     0     0
sibsp           0   0   0     1     0
parch           0   0   0     0     1
attr(,"term.labels")
[1] "survived" "sex"      "age"      "sibsp"    "parch"   
attr(,"order")
[1] 1 1 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(pclass, survived, sex, age, sibsp, parch)
attr(,"dataClasses")
   pclass  survived       sex       age     sibsp     parch 
 "factor" "numeric"  "factor" "numeric" "numeric" "numeric" 

$call
earth(formula = pclass ~ ., data = etitanic, glm = list(family = "binomial"), 
    trace = 0, degree = 2)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> 
> a5d <- earth(pclass ~ .-age, data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> a5update <- update(a5, form=pclass ~ .-age)
> check.models.equal(a5update, a5d, msg="a5update a5d")
check.models.equal not identical: a5update a5d [but within numerical tolerances]
> 
> a5d <- earth(pclass ~ .-age, data=etitanic, degree=2, glm=list(family="binomial"), trace=0, keepxy=1)
> a5update <- update(a5, form=pclass ~ .-age)
> check.models.equal(a5update, a5d, msg="a5update a5d with keepxy")
check.models.equal not identical: a5update a5d with keepxy [but within numerical tolerances]
> 
> # titanic data, one logical response
> cat("a6: titanic data, one logical response\n\n")
a6: titanic data, one logical response

> pclass1 = (etitanic[,1] == "1st")
> a6 <- earth(pclass1 ~ ., data=etitanic[,-1], degree=2, glm=list(family="binomial"), trace=1)
x is a 1046 by 5 matrix: 1=survived, 2=sexmale, 3=age, 4=sibsp, 5=parch
y is a 1046 by 1 matrix: 1=pclass1
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.2465 RSq 0.3031
Prune method "backward" penalty 3 nprune 17: selected 10 of 17 terms, and 5 of 5 predictors
After backward pass GRSq 0.2627 RSq 0.2941 
GLM pclass1: null.deviance 1223.308 (1045 dof)   deviance 898.9086 (1036 dof)   iters 5
> print.earth.models(a6)

Print a6 

Earth selected 10 of 17 terms, and 5 of 5 predictors 
Importance: age, survived, parch, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6
Earth GCV 0.1461131    RSS 146.0441    GRSq 0.2626931    RSq 0.2941013

GLM null.deviance 1223.308 (1045 dof)   deviance 898.9086 (1036 dof)   iters 5

Summary a6 

Call: earth(formula=pclass1~., data=etitanic[, -1], glm=list(family="binomial"), 
      trace=1, degree=2)

GLM coefficients
                            pclass1
(Intercept)             -2.15483815
survived                 2.45709243
h(age-54)                0.46637043
h(2-parch)               1.14840644
survived * h(51-age)    -0.03085682
sexmale * h(age-26)      0.03606179
h(age-55) * h(2-parch)  -0.28939382
h(55-age) * h(2-parch)  -0.03469689
h(sibsp-1) * h(2-parch) -0.75862068
h(1-sibsp) * h(2-parch) -0.44868361

Earth selected 10 of 17 terms, and 5 of 5 predictors 
Importance: age, survived, parch, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6
Earth GCV 0.1461131    RSS 146.0441    GRSq 0.2626931    RSq 0.2941013

GLM null.deviance 1223.308 (1045 dof)   deviance 898.9086 (1036 dof)   iters 5

Summary a6 digits=3, details=TRUE

Call: earth(formula=pclass1~., data=etitanic[, -1], glm=list(family="binomial"), 
      trace=1, degree=2)

Earth coefficients
                        pclass1
(Intercept)              0.1304
survived                 0.4744
survived * h(51-age)    -0.0088
h(2-parch)               0.1578
h(sibsp-1) * h(2-parch) -0.0602
h(1-sibsp) * h(2-parch) -0.0685
sexmale * h(age-26)      0.0066
h(age-55) * h(2-parch)  -0.0389
h(55-age) * h(2-parch)  -0.0045
h(age-54)                0.0643

GLM coefficients
                        pclass1
(Intercept)             -2.1548
survived                 2.4571
survived * h(51-age)    -0.0309
h(2-parch)               1.1484
h(sibsp-1) * h(2-parch) -0.7586
h(1-sibsp) * h(2-parch) -0.4487
sexmale * h(age-26)      0.0361
h(age-55) * h(2-parch)  -0.2894
h(55-age) * h(2-parch)  -0.0347
h(age-54)                0.4664

GLM deviance residuals:
   Min      1Q  Median      3Q     Max  
-2.343  -0.650  -0.386   0.454   2.617  

GLM coefficients (family binomial, link logit)
                        Estimate Std. Error z value Pr(>|z|)
(Intercept)             -2.15484    0.26659   -8.08  6.3e-16
survived                 2.45709    0.33140    7.41  1.2e-13
survived * h(51-age)    -0.03086    0.01212   -2.55    0.011
h(2-parch)               1.14841    0.24647    4.66  3.2e-06
h(sibsp-1) * h(2-parch) -0.75862    0.32618   -2.33    0.020
h(1-sibsp) * h(2-parch) -0.44868    0.10926   -4.11  4.0e-05
sexmale * h(age-26)      0.03606    0.01524    2.37    0.018
h(age-55) * h(2-parch)  -0.28939    0.11543   -2.51    0.012
h(55-age) * h(2-parch)  -0.03470    0.00748   -4.64  3.5e-06
h(age-54)                0.46637    0.21418    2.18    0.029

Number of cases: 1046
Earth selected 10 of 17 terms, and 5 of 5 predictors 
Importance: age, survived, parch, sibsp, sexmale
Number of terms at each degree of interaction: 1 3 6
Earth GCV 0.146    RSS 146    GRSq 0.263    RSq 0.294

GLM null.deviance 1223 (1045 dof)   deviance 899 (1036 dof)   iters 5

evimp a6 

         col used nsubsets        gcv          rss  
age        3    1        9 100.000000 1 100.000000 1
survived   1    1        8  40.089657 1  45.118516 1
parch      5    1        5   5.680862 1  10.881834 1
sibsp      4    1        4   4.582762 1   8.727465 1
sexmale    2    1        3   2.496725 1   5.732125 1

evimp a6 trim=FALSE

         col used nsubsets        gcv          rss  
age        3    1        9 100.000000 1 100.000000 1
survived   1    1        8  40.089657 1  45.118516 1
parch      5    1        5   5.680862 1  10.881834 1
sibsp      4    1        4   4.582762 1   8.727465 1
sexmale    2    1        3   2.496725 1   5.732125 1

plotmo a6 
Note: plotmo cannot use factors as axes for degree2 plots,
      so skipping degree2 plots for: sex
-------------------------------------------------------------------------------

> printh(a6$levels) # expect levels to be NULL
=== a6$levels
[1] FALSE  TRUE
> print.stripped.earth.model(a6, "a6")
print.stripped.earth.model(a6)
$dirs
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0   1     0     0
h(26-age)                    0       0  -1     0     0
survived                     1       0   0     0     0
survived*h(age-51)           1       0   1     0     0
survived*h(51-age)           1       0  -1     0     0
h(parch-2)                   0       0   0     0     1
h(2-parch)                   0       0   0     0    -1
h(age-26)*h(sibsp-2)         0       0   1     1     0
h(age-26)*h(2-sibsp)         0       0   1    -1     0
h(sibsp-1)*h(2-parch)        0       0   0     1    -1
h(1-sibsp)*h(2-parch)        0       0   0    -1    -1
sexmale*h(age-26)            0       1   1     0     0
h(age-55)*h(2-parch)         0       0   1     0    -1
h(55-age)*h(2-parch)         0       0  -1     0    -1
h(age-54)                    0       0   1     0     0
h(age-17)                    0       0   1     0     0

$cuts
                      survived sexmale age sibsp parch
(Intercept)                  0       0   0     0     0
h(age-26)                    0       0  26     0     0
h(26-age)                    0       0  26     0     0
survived                     0       0   0     0     0
survived*h(age-51)           0       0  51     0     0
survived*h(51-age)           0       0  51     0     0
h(parch-2)                   0       0   0     0     2
h(2-parch)                   0       0   0     0     2
h(age-26)*h(sibsp-2)         0       0  26     2     0
h(age-26)*h(2-sibsp)         0       0  26     2     0
h(sibsp-1)*h(2-parch)        0       0   0     1     2
h(1-sibsp)*h(2-parch)        0       0   0     1     2
sexmale*h(age-26)            0       0  26     0     0
h(age-55)*h(2-parch)         0       0  55     0     2
h(55-age)*h(2-parch)         0       0  55     0     2
h(age-54)                    0       0  54     0     0
h(age-17)                    0       0  17     0     0

$selected.terms
 [1]  1  4  6  8 11 12 13 14 15 16

$prune.terms
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0
 [2,]    1    2    0    0    0    0    0    0    0     0     0     0     0
 [3,]    1    2    4    0    0    0    0    0    0     0     0     0     0
 [4,]    1    2    4    6    0    0    0    0    0     0     0     0     0
 [5,]    1    2    3    4    6    0    0    0    0     0     0     0     0
 [6,]    1    4    6    8   12   13    0    0    0     0     0     0     0
 [7,]    1    4    6    8   14   15   16    0    0     0     0     0     0
 [8,]    1    4    6    8   12   14   15   16    0     0     0     0     0
 [9,]    1    4    6    8   12   13   14   15   16     0     0     0     0
[10,]    1    4    6    8   11   12   13   14   15    16     0     0     0
[11,]    1    4    6    8   11   12   13   14   15    16    17     0     0
[12,]    1    2    4    6    8   11   12   13   14    15    16    17     0
[13,]    1    2    3    4    6    8   11   12   13    14    15    16    17
[14,]    1    2    3    4    6    7    8   11   12    13    14    15    16
[15,]    1    2    3    4    6    7    8   10   11    12    13    14    15
[16,]    1    2    3    4    6    7    8    9   10    11    12    13    14
[17,]    1    2    3    4    5    6    7    8    9    10    11    12    13
      [,14] [,15] [,16] [,17]
 [1,]     0     0     0     0
 [2,]     0     0     0     0
 [3,]     0     0     0     0
 [4,]     0     0     0     0
 [5,]     0     0     0     0
 [6,]     0     0     0     0
 [7,]     0     0     0     0
 [8,]     0     0     0     0
 [9,]     0     0     0     0
[10,]     0     0     0     0
[11,]     0     0     0     0
[12,]     0     0     0     0
[13,]     0     0     0     0
[14,]    17     0     0     0
[15,]    16    17     0     0
[16,]    15    16    17     0
[17,]    14    15    16    17

$rss
[1] 146.0441

$rsq
[1] 0.2941013

$gcv
[1] 0.1461131

$grsq
[1] 0.2626931

$rss.per.response
[1] 146.0441

$rsq.per.response
[1] 0.2941013

$gcv.per.response
[1] 0.1461131

$grsq.per.response
[1] 0.2626931

$rss.per.subset
 [1] 206.8910 173.4973 156.0461 152.9408 152.6654 151.1495 149.8386 148.0161
 [9] 146.8058 146.0441 145.8513 145.6449 145.1884 144.6296 144.3070 144.1910
[17] 144.1905

$gcv.per.subset
 [1] 0.1981713 0.1669830 0.1509100 0.1486205 0.1490704 0.1483059 0.1477342
 [8] 0.1466483 0.1461596 0.1461131 0.1466364 0.1471493 0.1474115 0.1475702
[15] 0.1479709 0.1485866 0.1493263

$coefficients
                           pclass1
(Intercept)            0.130384980
survived               0.474359984
survived*h(51-age)    -0.008835517
h(2-parch)             0.157779506
h(sibsp-1)*h(2-parch) -0.060166349
h(1-sibsp)*h(2-parch) -0.068500969
sexmale*h(age-26)      0.006566997
h(age-55)*h(2-parch)  -0.038910867
h(55-age)*h(2-parch)  -0.004491528
h(age-54)              0.064255122

$penalty
[1] 3

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame,      weights = glm$weights, na.action = na.action, start = glm$start,      etastart = glm$etastart, mustart = glm$mustart, offset = glm$offset,      control = control, model = TRUE, method = "glm.fit", x = TRUE,      y = TRUE, contrasts = NULL, trace = (trace >= 2)) 

Coefficients:
            (Intercept)                 survived     `survived*h(51-age)`  
               -2.15484                  2.45709                 -0.03086  
           `h(2-parch)`  `h(sibsp-1)*h(2-parch)`  `h(1-sibsp)*h(2-parch)`  
                1.14841                 -0.75862                 -0.44868  
    `sexmale*h(age-26)`   `h(age-55)*h(2-parch)`   `h(55-age)*h(2-parch)`  
                0.03606                 -0.28939                 -0.03470  
            `h(age-54)`  
                0.46637  

Degrees of Freedom: 1045 Total (i.e. Null);  1036 Residual
Null Deviance:	    1223 
Residual Deviance: 898.9 	AIC: 918.9 


$glm.coefficients
                          pclass1
(Intercept)           -2.15483815
survived               2.45709243
survived*h(51-age)    -0.03085682
h(2-parch)             1.14840644
h(sibsp-1)*h(2-parch) -0.75862068
h(1-sibsp)*h(2-parch) -0.44868361
sexmale*h(age-26)      0.03606179
h(age-55)*h(2-parch)  -0.28939382
h(55-age)*h(2-parch)  -0.03469689
h(age-54)              0.46637043

$namesx.org
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$namesx
[1] "survived" "sex"      "age"      "sibsp"    "parch"   

$levels
[1] FALSE  TRUE

$terms
pclass1 ~ survived + sex + age + sibsp + parch
attr(,"variables")
list(pclass1, survived, sex, age, sibsp, parch)
attr(,"factors")
         survived sex age sibsp parch
pclass1         0   0   0     0     0
survived        1   0   0     0     0
sex             0   1   0     0     0
age             0   0   1     0     0
sibsp           0   0   0     1     0
parch           0   0   0     0     1
attr(,"term.labels")
[1] "survived" "sex"      "age"      "sibsp"    "parch"   
attr(,"order")
[1] 1 1 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(pclass1, survived, sex, age, sibsp, parch)
attr(,"dataClasses")
  pclass1  survived       sex       age     sibsp     parch 
"logical" "numeric"  "factor" "numeric" "numeric" "numeric" 

$call
earth(formula = pclass1 ~ ., data = etitanic[, -1], glm = list(family = "binomial"), 
    trace = 1, degree = 2)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> 
> # titanic data, one response which is a two level factor
> cat("a7: titanic data, one response which is a two level factor\n\n")
a7: titanic data, one response which is a two level factor

> a7 <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family="binomial"), trace=1)
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.3425 RSq 0.3858
Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.355 RSq 0.3825 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 937.0176 (1036 dof)   iters 5
> print.earth.models(a7)

Print a7 

Earth selected 10 of 15 terms, and 6 of 6 predictors 
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.1507864    RSS 150.7153    GRSq 0.3550334    RSq 0.3825081

GLM null.deviance 1379.574 (1045 dof)   deviance 937.0176 (1036 dof)   iters 5

Summary a7 

Call: earth(formula=sex~., data=etitanic, glm=list(family="binomial"), 
      trace=1, degree=2)

GLM coefficients
                              male
(Intercept)              1.8467663
pclass3rd               -2.8044243
survived                -3.5703913
pclass2nd * survived    -0.7864156
pclass3rd * survived     1.6791880
pclass3rd * h(3-parch)   0.5987717
survived * h(16-age)     0.2112001
h(25-age) * h(3-parch)  -0.0289967
h(sibsp-2) * h(3-parch)  0.5923304
h(2-sibsp) * h(3-parch)  0.2100782

Earth selected 10 of 15 terms, and 6 of 6 predictors 
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.1507864    RSS 150.7153    GRSq 0.3550334    RSq 0.3825081

GLM null.deviance 1379.574 (1045 dof)   deviance 937.0176 (1036 dof)   iters 5

Summary a7 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=sex~., data=etitanic, glm=list(family="binomial"), 
      trace=1, degree=2)

Earth coefficients
                              male
(Intercept)              0.8061976
survived                -0.6293690
survived * h(16-age)     0.0389243
h(25-age) * h(3-parch)  -0.0050294
pclass3rd * survived     0.2606447
h(sibsp-2) * h(3-parch)  0.1062343
h(2-sibsp) * h(3-parch)  0.0302976
pclass3rd               -0.5044026
pclass3rd * h(3-parch)   0.1380229
pclass2nd * survived    -0.1343256

GLM coefficients
                             male
(Intercept)              1.846766
survived                -3.570391
survived * h(16-age)     0.211200
h(25-age) * h(3-parch)  -0.028997
pclass3rd * survived     1.679188
h(sibsp-2) * h(3-parch)  0.592330
h(2-sibsp) * h(3-parch)  0.210078
pclass3rd               -2.804424
pclass3rd * h(3-parch)   0.598772
pclass2nd * survived    -0.786416

GLM deviance residuals:
     Min        1Q    Median        3Q       Max  
-2.51037  -0.70996   0.35670   0.56578   2.10072  

GLM coefficients (family binomial, link logit)
                          Estimate Std. Error  z value  Pr(>|z|)
(Intercept)              1.8467663  0.3326603   5.5515 2.832e-08
survived                -3.5703913  0.3098767 -11.5220 < 2.2e-16
survived * h(16-age)     0.2112001  0.0355011   5.9491 2.696e-09
h(25-age) * h(3-parch)  -0.0289967  0.0088431  -3.2790 0.0010417
pclass3rd * survived     1.6791880  0.3928026   4.2749 1.912e-05
h(sibsp-2) * h(3-parch)  0.5923304  0.1616979   3.6632 0.0002491
h(2-sibsp) * h(3-parch)  0.2100782  0.0507478   4.1396 3.478e-05
pclass3rd               -2.8044243  0.5270413  -5.3211 1.032e-07
pclass3rd * h(3-parch)   0.5987717  0.1740645   3.4399 0.0005818
pclass2nd * survived    -0.7864156  0.3099715  -2.5371 0.0111788

Number of cases: 1046
Earth selected 10 of 15 terms, and 6 of 6 predictors 
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.15079    RSS 150.72    GRSq 0.35503    RSq 0.38251

GLM null.deviance 1379.6 (1045 dof)   deviance 937.02 (1036 dof)   iters 5

evimp a7 

          col used nsubsets         gcv          rss  
survived    3    1        9 100.0000000 1 100.000000 1
pclass3rd   2    1        8  19.4351486 1  24.329924 1
parch       6    1        6  13.3685900 1  17.002027 1
age         4    1        5   6.4001465 1   9.798418 1
sibsp       5    1        4   4.5087239 1   7.258397 1
pclass2nd   1    1        1   0.5526548 1   1.283877 1

evimp a7 trim=FALSE

          col used nsubsets         gcv          rss  
survived    3    1        9 100.0000000 1 100.000000 1
pclass3rd   2    1        8  19.4351486 1  24.329924 1
parch       6    1        6  13.3685900 1  17.002027 1
age         4    1        5   6.4001465 1   9.798418 1
sibsp       5    1        4   4.5087239 1   7.258397 1
pclass2nd   1    1        1   0.5526548 1   1.283877 1

plotmo a7 
Note: plotmo cannot use factors as axes for degree2 plots,
      so skipping degree2 plots for: pclass
-------------------------------------------------------------------------------

> printh(a7$levels)
=== a7$levels
[1] "female" "male"  
> print.stripped.earth.model(a7, "a7")
print.stripped.earth.model(a7)
$dirs
                      pclass2nd pclass3rd survived age sibsp parch
(Intercept)                   0         0        0   0     0     0
survived                      0         0        1   0     0     0
h(parch-3)                    0         0        0   0     0     1
h(3-parch)                    0         0        0   0     0    -1
survived*h(age-16)            0         0        1   1     0     0
survived*h(16-age)            0         0        1  -1     0     0
h(age-25)*h(3-parch)          0         0        0   1     0    -1
h(25-age)*h(3-parch)          0         0        0  -1     0    -1
pclass3rd*survived            0         1        1   0     0     0
h(sibsp-2)*h(3-parch)         0         0        0   0     1    -1
h(2-sibsp)*h(3-parch)         0         0        0   0    -1    -1
pclass3rd                     0         1        0   0     0     0
pclass3rd*h(3-parch)          0         1        0   0     0    -1
pclass2nd*survived            1         0        1   0     0     0
survived*h(age-26)            0         0        1   1     0     0

$cuts
                      pclass2nd pclass3rd survived age sibsp parch
(Intercept)                   0         0        0   0     0     0
survived                      0         0        0   0     0     0
h(parch-3)                    0         0        0   0     0     3
h(3-parch)                    0         0        0   0     0     3
survived*h(age-16)            0         0        0  16     0     0
survived*h(16-age)            0         0        0  16     0     0
h(age-25)*h(3-parch)          0         0        0  25     0     3
h(25-age)*h(3-parch)          0         0        0  25     0     3
pclass3rd*survived            0         0        0   0     0     0
h(sibsp-2)*h(3-parch)         0         0        0   0     2     3
h(2-sibsp)*h(3-parch)         0         0        0   0     2     3
pclass3rd                     0         0        0   0     0     0
pclass3rd*h(3-parch)          0         0        0   0     0     3
pclass2nd*survived            0         0        0   0     0     0
survived*h(age-26)            0         0        0  26     0     0

$selected.terms
 [1]  1  2  6  8  9 10 11 12 13 14

$prune.terms
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0
 [2,]    1    2    0    0    0    0    0    0    0     0     0     0     0
 [3,]    1    2    9    0    0    0    0    0    0     0     0     0     0
 [4,]    1    2    9   12    0    0    0    0    0     0     0     0     0
 [5,]    1    2    9   12   13    0    0    0    0     0     0     0     0
 [6,]    1    2    6    9   12   13    0    0    0     0     0     0     0
 [7,]    1    2    6    9   11   12   13    0    0     0     0     0     0
 [8,]    1    2    6    9   10   11   12   13    0     0     0     0     0
 [9,]    1    2    6    8    9   10   11   12   13     0     0     0     0
[10,]    1    2    6    8    9   10   11   12   13    14     0     0     0
[11,]    1    2    6    8    9   10   11   12   13    14    15     0     0
[12,]    1    2    5    6    8    9   10   11   12    13    14    15     0
[13,]    1    2    3    5    6    8    9   10   11    12    13    14    15
[14,]    1    2    3    5    6    7    8    9   10    11    12    13    14
[15,]    1    2    3    4    5    6    7    8    9    10    11    12    13
      [,14] [,15]
 [1,]     0     0
 [2,]     0     0
 [3,]     0     0
 [4,]     0     0
 [5,]     0     0
 [6,]     0     0
 [7,]     0     0
 [8,]     0     0
 [9,]     0     0
[10,]     0     0
[11,]     0     0
[12,]     0     0
[13,]     0     0
[14,]    15     0
[15,]    14    15

$rss
[1] 150.7153

$rsq
[1] 0.3825081

$gcv
[1] 0.1507864

$grsq
[1] 0.3550334

$rss.per.response
[1] 150.7153

$rsq.per.response
[1] 0.3825081

$gcv.per.response
[1] 0.1507864

$grsq.per.response
[1] 0.3550334

$rss.per.subset
 [1] 244.0765 173.4300 170.0254 166.5886 159.8632 157.4918 155.7449 154.0322
 [9] 151.9139 150.7153 150.6820 150.1499 149.9420 149.9095 149.9090

$gcv.per.subset
 [1] 0.2337895 0.1669182 0.1644292 0.1618828 0.1560988 0.1545288 0.1535575
 [8] 0.1526087 0.1512452 0.1507864 0.1514931 0.1517008 0.1522379 0.1529575
[15] 0.1537151

$coefficients
                              male
(Intercept)            0.806197553
survived              -0.629369047
survived*h(16-age)     0.038924307
h(25-age)*h(3-parch)  -0.005029401
pclass3rd*survived     0.260644661
h(sibsp-2)*h(3-parch)  0.106234285
h(2-sibsp)*h(3-parch)  0.030297604
pclass3rd             -0.504402612
pclass3rd*h(3-parch)   0.138022859
pclass2nd*survived    -0.134325609

$penalty
[1] 3

$glm.list
$glm.list[[1]]

Call:  glm(formula = yarg ~ ., family = family, data = bx.data.frame,      weights = glm$weights, na.action = na.action, start = glm$start,      etastart = glm$etastart, mustart = glm$mustart, offset = glm$offset,      control = control, model = TRUE, method = "glm.fit", x = TRUE,      y = TRUE, contrasts = NULL, trace = (trace >= 2)) 

Coefficients:
            (Intercept)                 survived     `survived*h(16-age)`  
                1.84677                 -3.57039                  0.21120  
 `h(25-age)*h(3-parch)`     `pclass3rd*survived`  `h(sibsp-2)*h(3-parch)`  
               -0.02900                  1.67919                  0.59233  
`h(2-sibsp)*h(3-parch)`                pclass3rd   `pclass3rd*h(3-parch)`  
                0.21008                 -2.80442                  0.59877  
   `pclass2nd*survived`  
               -0.78642  

Degrees of Freedom: 1045 Total (i.e. Null);  1036 Residual
Null Deviance:	    1380 
Residual Deviance: 937 	AIC: 957 


$glm.coefficients
                             male
(Intercept)            1.84676630
survived              -3.57039128
survived*h(16-age)     0.21120008
h(25-age)*h(3-parch)  -0.02899673
pclass3rd*survived     1.67918799
h(sibsp-2)*h(3-parch)  0.59233041
h(2-sibsp)*h(3-parch)  0.21007815
pclass3rd             -2.80442434
pclass3rd*h(3-parch)   0.59877169
pclass2nd*survived    -0.78641561

$namesx.org
[1] "pclass"   "survived" "age"      "sibsp"    "parch"   

$namesx
[1] "pclass"   "survived" "age"      "sibsp"    "parch"   

$levels
[1] "female" "male"  

$terms
sex ~ pclass + survived + age + sibsp + parch
attr(,"variables")
list(sex, pclass, survived, age, sibsp, parch)
attr(,"factors")
         pclass survived age sibsp parch
sex           0        0   0     0     0
pclass        1        0   0     0     0
survived      0        1   0     0     0
age           0        0   1     0     0
sibsp         0        0   0     1     0
parch         0        0   0     0     1
attr(,"term.labels")
[1] "pclass"   "survived" "age"      "sibsp"    "parch"   
attr(,"order")
[1] 1 1 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(sex, pclass, survived, age, sibsp, parch)
attr(,"dataClasses")
      sex    pclass  survived       age     sibsp     parch 
 "factor"  "factor" "numeric" "numeric" "numeric" "numeric" 

$call
earth(formula = sex ~ ., data = etitanic, glm = list(family = "binomial"), 
    trace = 1, degree = 2)

attr(,"class")
[1] "earth"
-------------------------------------------------------------------------------

> 
> a7d <- earth(sex ~ .-pclass, data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> a7dupdate <- update(a7, form=sex ~ .-pclass)
update.earth: using 1046 by 6 data argument from original call to earth
x is a 1046 by 4 matrix: 1=survived, 2=age, 3=sibsp, 4=parch
y is a 1046 by 1 matrix: 1=male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.3095 RSq 0.3646
Prune method "backward" penalty 3 nprune 18: selected 7 of 18 terms, and 4 of 4 predictors
After backward pass GRSq 0.333 RSq 0.352 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 977.9563 (1039 dof)   iters 4
> check.models.equal(a7dupdate, a7d, msg="a7update a7d")
check.models.equal not identical: a7update a7d [but within numerical tolerances]
> printh(a7d$levels)
=== a7d$levels
[1] "female" "male"  
> 
> a7d <- earth(sex ~ .-pclass, data=etitanic, degree=2, glm=list(family="binomial"), trace=0, keepxy=1)
> a7dupdate <- update(a7, form=sex ~ .-pclass)
update.earth: using 1046 by 6 data argument from original call to earth
x is a 1046 by 4 matrix: 1=survived, 2=age, 3=sibsp, 4=parch
y is a 1046 by 1 matrix: 1=male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.3095 RSq 0.3646
Prune method "backward" penalty 3 nprune 18: selected 7 of 18 terms, and 4 of 4 predictors
After backward pass GRSq 0.333 RSq 0.352 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 977.9563 (1039 dof)   iters 4
> check.models.equal(a7dupdate, a7d, msg="a7update a7d with keepxy")
check.models.equal not identical: a7update a7d with keepxy [but within numerical tolerances]
> 
> subset. <- rep(TRUE, nrow(etitanic))
> subset.[1:10] <- FALSE
> a7e <- earth(sex ~ ., subset=subset., data=etitanic, degree=2, glm=list(family="binomial"), trace=0)
> a7eupdate <- update(a7, subset=subset.)
update.earth: using 1046 by 6 data argument from original call to earth
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.3378 RSq 0.388
Prune method "backward" penalty 3 nprune 17: selected 11 of 17 terms, and 6 of 6 predictors
After backward pass GRSq 0.3494 RSq 0.3805 
GLM male: null.deviance 1365.015 (1035 dof)   deviance 923.7842 (1025 dof)   iters 5
> check.models.equal(a7eupdate, a7e, msg="a7update a7e")
check.models.equal not identical: a7update a7e [but within numerical tolerances]
> 
> subset. <- 1:nrow(etitanic) # another way of specifying a subset
> subset.[1:10] <- 0
> a7eeupdate <- update(a7, subset=subset.)
update.earth: using 1046 by 6 data argument from original call to earth
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.3378 RSq 0.388
Prune method "backward" penalty 3 nprune 17: selected 11 of 17 terms, and 6 of 6 predictors
After backward pass GRSq 0.3494 RSq 0.3805 
GLM male: null.deviance 1365.015 (1035 dof)   deviance 923.7842 (1025 dof)   iters 5
> check.models.equal(a7eeupdate, a7e, msg="a7update a7e with alternative subset")
check.models.equal not identical: a7update a7e with alternative subset [but within numerical tolerances]
> 
> a7f <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family=binomial(link="probit")), trace=0)
> a7fupdate <- update(a7, glm=list(family=binomial(link="probit")))
update.earth: using 1046 by 6 data argument from original call to earth
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=male
Skipped forward pass
Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.355 RSq 0.3825 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 936.1344 (1036 dof)   iters 5
> check.models.equal(a7fupdate, a7f, msg="a7update a7f with link=probit")
check.models.equal not identical: a7update a7f with link=probit [but within numerical tolerances]
> 
> a7 <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family="binomial"), keepxy=1)
> a7g <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family=binomial(link="probit")), trace=0)
> a7gupdate <- update(a7, glm=list(family=binomial(link="probit")), trace=1)
update.earth: using 1046 by 6 data saved by keepxy in original call to earth
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=age, 5=sibsp, 6=parch
y is a 1046 by 1 matrix: 1=male
Skipped forward pass
Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.355 RSq 0.3825 
GLM male: null.deviance 1379.574 (1045 dof)   deviance 936.1344 (1036 dof)   iters 5
> check.models.equal(a7gupdate, a7g, msg="a7update a7g with link=probit and keepxy")
check.models.equal not identical: a7update a7g with link=probit and keepxy [but within numerical tolerances]
> 
> a8 <- earth(sex ~ ., data=etitanic, degree=2, glm=list(family="binomial"), keepxy=1)
> a8g <- earth(sex ~ ., data=etitanic[100:900,], degree=2, glm=list(family=binomial), trace=0)
> a8gupdate <- update(a8, data=etitanic[100:900,], trace=1)
x is a 801 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=age, 5=sibsp, 6=parch
y is a 801 by 1 matrix: 1=male
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.3445 RSq 0.4084
Prune method "backward" penalty 3 nprune 17: selected 8 of 17 terms, and 6 of 6 predictors
After backward pass GRSq 0.3663 RSq 0.3937 
GLM male: null.deviance 1053.094 (800 dof)   deviance 699.1533 (793 dof)   iters 5
> check.models.equal(a8gupdate, a8g, msg="a8update a8g with new data")
check.models.equal not identical: a8update a8g with new data [but within numerical tolerances]
> 
> # poisson models
> 
> counts <- c(18,17,15,20,10,20,25,13,12)
> counts2 <- c(181,171,151,201,101,201,251,131,121)
> outcome <- gl(3,1,9)
> treatment <- gl(3,3)
> d.AD <- data.frame(treatment, outcome, counts, counts2)
> 
> # one response poisson model
> cat("a8p: one response poisson model\n\n")
a8p: one response poisson model

> a8p <- earth(counts ~ outcome + treatment, glm=list(family=poisson()), trace=3, pmethod="none")
x is a 9 by 4 matrix: 1=outcome2, 2=outcome3, 3=treatment2, 4=treatment3
y is a 9 by 1 matrix: 1=counts
Forward pass: minspan 4 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2     -0.2727 0.2841       0.2841    1     outcome2           0< 2       
4     -0.8939 0.5265       0.2424    2     outcome3           0< 3       
6     -6.5758 0.5265            0    -                                reject term

Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -6.576 RSq 0.5265
Forward pass complete: 5 terms (3 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds
          1      0.0000  0.0000     0.0000      0  
          2     -0.2727  0.2841    -0.2727      1  
chosen    3     -0.8939  0.5265    -0.6212      2  

Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 4 predictors
After backward pass GRSq -0.894 RSq 0.5265 

GLM counts: null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
> print.earth.models(a8p)

Print a8p 

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.33333    GRSq -0.8939394    RSq 0.5265152

GLM null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4

Summary a8p 

Call: earth(formula=counts~outcome+treatment, glm=list(family=poisson()), 
      trace=3, pmethod="none")

GLM coefficients
                counts
(Intercept)  3.0445224
outcome2    -0.4542553
outcome3    -0.2929871

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.33333    GRSq -0.8939394    RSq 0.5265152

GLM null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4

Summary a8p digits=3, details=TRUE

Call: earth(formula=counts~outcome+treatment, glm=list(family=poisson()), 
      trace=3, pmethod="none")

Earth coefficients
            counts
(Intercept)  21.00
outcome2     -7.67
outcome3     -5.33

GLM coefficients
            counts
(Intercept)  3.045
outcome2    -0.454
outcome3    -0.293

GLM deviance residuals:
   Min      1Q  Median      3Q     Max  
-0.967  -0.671  -0.170   0.847   1.049  

GLM coefficients (family poisson, link log)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)    3.045      0.126   24.17   <2e-16
outcome2      -0.454      0.202   -2.25    0.025
outcome3      -0.293      0.193   -1.52    0.128

Number of cases: 9
Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.9    RSS 83.3    GRSq -0.894    RSq 0.527

GLM null.deviance 10.6 (8 dof)   deviance 5.13 (6 dof)   iters 4

evimp a8p 

         col used nsubsets        gcv         rss  
outcome2   1    1        2 -100.00000 1 100.00000 1
outcome3   2    1        1  -69.49153 0  46.04317 1

evimp a8p trim=FALSE

                  col used nsubsets        gcv         rss  
outcome2            1    1        2 -100.00000 1 100.00000 1
outcome3            2    1        1  -69.49153 0  46.04317 1
treatment2-unused   3    0        0    0.00000 0   0.00000 1
treatment3-unused   4    0        0    0.00000 1   0.00000 1

plotmo a8p 
-------------------------------------------------------------------------------

> # build a standard GLM model for comparison
> cat("a9: one response poisson model, standard GLM model for comparison\n\n")
a9: one response poisson model, standard GLM model for comparison

> a9 <- glm(counts ~ outcome + treatment, family="poisson")
> cat("Direct GLM a9 summary:\n\n")
Direct GLM a9 summary:

> print(summary(a9))

Call:
glm(formula = counts ~ outcome + treatment, family = "poisson")

Deviance Residuals: 
       1         2         3         4         5         6         7         8  
-0.67125   0.96272  -0.16965  -0.21999  -0.95552   1.04939   0.84715  -0.09167  
       9  
-0.96656  

Coefficients:
              Estimate Std. Error  z value Pr(>|z|)    
(Intercept)  3.045e+00  1.709e-01   17.815   <2e-16 ***
outcome2    -4.543e-01  2.022e-01   -2.247   0.0246 *  
outcome3    -2.930e-01  1.927e-01   -1.520   0.1285    
treatment2   8.717e-16  2.000e-01 4.36e-15   1.0000    
treatment3   4.557e-16  2.000e-01 2.28e-15   1.0000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

(Dispersion parameter for poisson family taken to be 1)

    Null deviance: 10.5814  on 8  degrees of freedom
Residual deviance:  5.1291  on 4  degrees of freedom
AIC: 56.761

Number of Fisher Scoring iterations: 4

> plotmo(a9, grid.levels=list(outcome="2"), caption="a9 <- glm(counts ~ outcome + treatment, family=\"poisson\")")
Note: setting outcome in the degree1 grid to [1] 2
Note: setting treatment in the degree1 grid to [1] 1
> 
> # two response poisson model
> cat("a10: two response poisson model\n\n")
a10: two response poisson model

> a10 <- earth(cbind(counts, counts2) ~ outcome + treatment, glm=list(fam="po"), trace=1, pmethod="none")
x is a 9 by 4 matrix: 1=outcome2, 2=outcome3, 3=treatment2, 4=treatment3
y is a 9 by 2 matrix: 1=counts, 2=counts2
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -6.576 RSq 0.5265
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 4 predictors
After backward pass GRSq -0.894 RSq 0.5265 
GLM counts: null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
GLM counts2: null.deviance 105.166 (8 dof)   deviance 50.96448 (6 dof)   iters 4
> print.earth.models(a10)

Print a10 

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
             GCV       RSS       GRSq       RSq
counts    46.875   83.3333 -0.8939394 0.5265152
counts2 4687.500 8333.3333 -0.8939394 0.5265152
All     4734.375 8416.6667 -0.8939394 0.5265152

GLM (family poisson, link log)
        null.deviance df  deviance df iters converged
counts       10.58145  8  5.129141  6     4         1
counts2     105.16600  8 50.964475  6     4         1

Summary a10 

Call: earth(formula=cbind(counts, counts2)~outcome+treatment, 
      glm=list(fam="po"), trace=1, pmethod="none")

GLM coefficients
                counts    counts2
(Intercept)  3.0445224  5.3518581
outcome2    -0.4542553 -0.4515339
outcome3    -0.2929871 -0.2913750

Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
             GCV       RSS       GRSq       RSq
counts    46.875   83.3333 -0.8939394 0.5265152
counts2 4687.500 8333.3333 -0.8939394 0.5265152
All     4734.375 8416.6667 -0.8939394 0.5265152

GLM (family poisson, link log)
        null.deviance df  deviance df iters converged
counts       10.58145  8  5.129141  6     4         1
counts2     105.16600  8 50.964475  6     4         1

Summary a10 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(formula=cbind(counts, counts2)~outcome+treatment, 
      glm=list(fam="po"), trace=1, pmethod="none")

Earth coefficients
             counts counts2
(Intercept) 21.0000 211.000
outcome2    -7.6667 -76.667
outcome3    -5.3333 -53.333

GLM coefficients
              counts  counts2
(Intercept)  3.04452  5.35186
outcome2    -0.45426 -0.45153
outcome3    -0.29299 -0.29138

GLM counts deviance residuals:
     Min        1Q    Median        3Q       Max  
-0.96656  -0.67125  -0.16965   0.84715   1.04939  

GLM counts coefficients (family poisson, link log)
            Estimate Std. Error z value Pr(>|z|)
(Intercept)  3.04452    0.12599 24.1651  < 2e-16
outcome2    -0.45426    0.20217 -2.2469  0.02465
outcome3    -0.29299    0.19274 -1.5201  0.12849

GLM counts2 deviance residuals:
     Min        1Q    Median        3Q       Max  
-3.04594  -2.11738  -0.53474   2.67294   3.30873  

GLM counts2 coefficients (family poisson, link log)
             Estimate Std. Error  z value  Pr(>|z|)
(Intercept)  5.351858   0.039746 134.6500 < 2.2e-16
outcome2    -0.451534   0.063727  -7.0854 1.386e-12
outcome3    -0.291375   0.060778  -4.7941 1.634e-06

Number of cases: 9
Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
            GCV     RSS     GRSq     RSq
counts    46.88   83.33 -0.89394 0.52651
counts2 4687.50 8333.33 -0.89394 0.52651
All     4734.37 8416.67 -0.89394 0.52651

GLM (family poisson, link log)
        null.deviance df deviance df iters converged
counts         10.581  8   5.1291  6     4         1
counts2       105.166  8  50.9645  6     4         1

evimp a10 

         col used nsubsets        gcv         rss  
outcome2   1    1        2 -100.00000 1 100.00000 1
outcome3   2    1        1  -69.49153 0  46.04317 1

evimp a10 trim=FALSE

                  col used nsubsets        gcv         rss  
outcome2            1    1        2 -100.00000 1 100.00000 1
outcome3            2    1        1  -69.49153 0  46.04317 1
treatment2-unused   3    0        0    0.00000 0   0.00000 1
treatment3-unused   4    0        0    0.00000 1   0.00000 1

plotmo a10 
-------------------------------------------------------------------------------

> 
> # compare family=gaussian to standard earth model
> cat("a11: compare family=gaussian to standard earth model\n\n")
a11: compare family=gaussian to standard earth model

> a11 <- earth(etitanic$sex ~ ., data=etitanic, degree=2, glm=list(family="gaussian"), trace=4)
Call: earth(formula=etitanic$sex~., data=etitanic, glm=list(family="gaussian"), 
      trace=4, degree=2)
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=age, 5=sibsp, 6=parch
First few rows of x are
     pclass2nd pclass3rd survived     age sibsp parch
[1,]         0         0        1 29.0000     0     0
[2,]         0         0        1  0.9167     1     2
[3,]         0         0        0  2.0000     1     2
[4,]         0         0        0 30.0000     1     2
[5,]         0         0        0 25.0000     1     2
[6,]         0         0        1 48.0000     0     0
y is a 1046 by 1 matrix: 1=male
First few rows of y are
     male
[1,]    0
[2,]    1
[3,]    0
[4,]    1
[5,]    0
[6,]    1
Approximate memory use after expanding x and y matrices: 0.4 MBytes
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.2860 0.2894       0.2894    3     survived           0< 2       
4      0.3055 0.3154      0.02598    6        parch           3  3   4   
6      0.3164 0.3327      0.01723    4          age          16  5   6   2   
8      0.3199 0.3425     0.009871    4          age          25  7   8   5   
10     0.3279 0.3534      0.01087    2    pclass3rd           0< 9       2   
12     0.3302 0.3619     0.008513    5        sibsp           2  10  11  5   
14     0.3355 0.3700      0.00809    2    pclass3rd           0< 12      
16     0.3415 0.3788     0.008795    2    pclass3rd           0< 13      5   
18     0.3432 0.3834      0.00458    1    pclass2nd           0< 14      2   
20     0.3425 0.3858     0.002437    4          age          26  15      2   

Reached max number of terms 21
After forward pass GRSq 0.3425 RSq 0.3858
Forward pass complete: 21 terms (15 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.2860  0.2894     0.2860      1  1 2
          3      0.2967  0.3034     0.0106      2  1 2 9
          4      0.3076  0.3175     0.0109      2  1 2 9 12
          5      0.3323  0.3450     0.0247      3  1 2 9 12 13
          6      0.3390  0.3547     0.0067      4  1 2 6 9 12 13
          7      0.3432  0.3619     0.0042      5  1 2 6 9 11 12 13
          8      0.3472  0.3689     0.0041      5  1 2 6 9 10 11 12 13
          9      0.3531  0.3776     0.0058      5  1 2 6 8 9 10 11 12 13
chosen   10      0.3550  0.3825     0.0020      6  1 2 6 8 9 10 11 12 13 14
         11      0.3520  0.3826    -0.0030      6  1 2 6 8 9 10 11 12 13 14 15
         12      0.3511  0.3848    -0.0009      6  1 2 5 6 8 9 10 11 12 13 14 15
         13      0.3488  0.3857    -0.0023      6  1 2 3 5 6 8 9 10 11 12 13 14 15
         14      0.3457  0.3858    -0.0031      6  1 2 3 5 6 7 8 9 10 11 12 13 14 15
         15      0.3425  0.3858    -0.0032      6  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

Prune method "backward" penalty 3 nprune 15: selected 10 of 15 terms, and 6 of 6 predictors
After backward pass GRSq 0.355 RSq 0.3825 

y arg to glm() is a 1046 by 1 matrix: 1=male
First few rows of y arg to glm() are
     male
[1,]    0
[2,]    1
[3,]    0
[4,]    1
[5,]    0
[6,]    1
GLM male: null.deviance 244.0765 (1045 dof)   deviance 150.7153 (1036 dof)   iters 2
> cat("\nsummary(a11, details=TRUE)\n\n", sep="")

summary(a11, details=TRUE)

> print(summary(a11, details=TRUE))
Call: earth(formula=etitanic$sex~., data=etitanic, glm=list(family="gaussian"), 
      trace=4, degree=2)

Earth coefficients
                               male
(Intercept)              0.80619755
pclass3rd               -0.50440261
survived                -0.62936905
pclass2nd * survived    -0.13432561
pclass3rd * survived     0.26064466
pclass3rd * h(3-parch)   0.13802286
survived * h(16-age)     0.03892431
h(25-age) * h(3-parch)  -0.00502940
h(sibsp-2) * h(3-parch)  0.10623429
h(2-sibsp) * h(3-parch)  0.03029760

GLM coefficients
                               male
(Intercept)              0.80619755
pclass3rd               -0.50440261
survived                -0.62936905
pclass2nd * survived    -0.13432561
pclass3rd * survived     0.26064466
pclass3rd * h(3-parch)   0.13802286
survived * h(16-age)     0.03892431
h(25-age) * h(3-parch)  -0.00502940
h(sibsp-2) * h(3-parch)  0.10623429
h(2-sibsp) * h(3-parch)  0.03029760

GLM deviance residuals:
        Min           1Q       Median           3Q          Max  
-0.98798317  -0.23742371   0.07236964   0.16350484   0.89690190  

GLM coefficients (family gaussian, link identity)
                            Estimate   Std. Error   t value   Pr(>|t|)
(Intercept)              0.806197553  0.042134875  19.13374 < 2.22e-16
survived                -0.629369047  0.037707293 -16.69091 < 2.22e-16
survived * h(16-age)     0.038924307  0.005897477   6.60016 6.5442e-11
h(25-age) * h(3-parch)  -0.005029401  0.001379986  -3.64453 0.00028118
pclass3rd * survived     0.260644661  0.055399997   4.70478 2.8855e-06
h(sibsp-2) * h(3-parch)  0.106234285  0.024515480   4.33336 1.6115e-05
h(2-sibsp) * h(3-parch)  0.030297604  0.007320326   4.13883 3.7742e-05
pclass3rd               -0.504402612  0.081581674  -6.18279 9.0457e-10
pclass3rd * h(3-parch)   0.138022859  0.027974000   4.93397 9.3825e-07
pclass2nd * survived    -0.134325609  0.046796406  -2.87043 0.00418259

GLM dispersion parameter for gaussian family taken to be 0.1454780

Number of cases: 1046
Earth selected 10 of 15 terms, and 6 of 6 predictors 
Importance: survived, pclass3rd, parch, age, sibsp, pclass2nd
Number of terms at each degree of interaction: 1 2 7
Earth GCV 0.1507864    RSS 150.7153    GRSq 0.3550334    RSq 0.3825081

GLM null.deviance 244.0765 (1045 dof)   deviance 150.7153 (1036 dof)   iters 2
> stopifnot(identical(a11$coefficients, a11$glm.coefficients))
> cat("-------------------------------------------------------------------------------\n\n")
-------------------------------------------------------------------------------

> 
> cat("a12: compare family=gaussian to standard earth model with two responses\n\n")
a12: compare family=gaussian to standard earth model with two responses

> a12 <- earth(cbind(etitanic$sex, (as.integer(etitanic$age)^2)) ~ ., data=etitanic, degree=2, glm=list(family="gaussian"), trace=4)
Call: earth(formula=cbind(etitanic$sex, (as.integer(etitanic$age)^2))~
      ., data=etitanic, glm=list(family="gaussian"), trace=4, 
      degree=2)
x is a 1046 by 5 matrix: 1=pclass2nd, 2=pclass3rd, 3=survived, 4=sibsp, 5=parch
First few rows of x are
     pclass2nd pclass3rd survived sibsp parch
[1,]         0         0        1     0     0
[2,]         0         0        1     1     2
[3,]         0         0        0     1     2
[4,]         0         0        0     1     2
[5,]         0         0        0     1     2
[6,]         0         0        1     0     0
y is a 1046 by 2 matrix: 1=y1, 2=y2
First few rows of y are
     y1   y2
[1,]  1  841
[2,]  2    0
[3,]  1    4
[4,]  2  900
[5,]  1  625
[6,]  2 2304
Approximate memory use after expanding x and y matrices: 0.4 MBytes
Forward pass: minspan 9 endspan 17

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.1060 0.1103       0.1103    2    pclass3rd           0< 2       
4      0.1653 0.1733      0.06303    1    pclass2nd           0< 3       
6      0.2059 0.2210      0.04767    5        parch           2  4   5   
8      0.2210 0.2396      0.01859    3     survived           0< 6       
10     0.2223 0.2481     0.008525    5        parch           2  7   8   2   
12     0.2234 0.2565      0.00837    4        sibsp           1  9   10  
14     0.2219 0.2587     0.002244    5        parch           1  11      2   
16     0.2204 0.2608     0.002136    3     survived           0< 12      2   
18     0.2146 0.2627     0.001817    5        parch           1  13  14  8   
20     0.2090 0.2647     0.002048    5        parch           1  15  16  4   

Reached max number of terms 21
After forward pass GRSq 0.209 RSq 0.2647
Forward pass complete: 21 terms (16 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.1060  0.1103     0.1060      1  1 2
          3      0.1653  0.1733     0.0593      2  1 2 3
          4      0.1807  0.1925     0.0154      3  1 2 3 5
          5      0.2059  0.2210     0.0251      3  1 2 3 4 5
          6      0.2210  0.2396     0.0152      4  1 2 3 4 5 6
          7      0.2260  0.2481     0.0050      4  1 2 3 4 5 6 7
chosen    8      0.2298  0.2554     0.0038      5  1 2 3 4 5 6 7 9
          9      0.2293  0.2585    -0.0005      5  1 2 3 4 5 6 7 9 11
         10      0.2274  0.2603    -0.0019      5  1 2 3 4 5 6 7 9 11 12
         11      0.2248  0.2615    -0.0025      5  1 2 3 4 5 6 7 9 11 12 13
         12      0.2234  0.2637    -0.0015      5  1 2 3 4 5 6 7 9 11 12 13 15
         13      0.2203  0.2644    -0.0031      5  1 2 3 4 5 6 7 8 9 11 12 13 15
         14      0.2166  0.2646    -0.0037      5  1 2 3 4 5 6 7 8 9 11 12 13 15 16
         15      0.2129  0.2647    -0.0037      5  1 2 3 4 5 6 7 8 9 11 12 13 14 15 16
         16      0.2090  0.2647    -0.0039      5  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16

Prune method "backward" penalty 3 nprune 16: selected 8 of 16 terms, and 5 of 5 predictors
After backward pass GRSq 0.2298 RSq 0.2554 

y arg to glm() is a 1046 by 1 matrix: 1=y1
First few rows of y arg to glm() are
     y1
[1,]  1
[2,]  2
[3,]  1
[4,]  2
[5,]  1
[6,]  2
GLM y1: null.deviance 244.0765 (1045 dof)   deviance 166.8796 (1038 dof)   iters 2
y arg to glm() is a 1046 by 1 matrix: 1=y2
First few rows of y arg to glm() are
       y2
[1,]  841
[2,]    0
[3,]    4
[4,]  900
[5,]  625
[6,] 2304
GLM y2: null.deviance 1022962131 (1045 dof)   deviance 761734680 (1038 dof)   iters 2
> cat("\nsummary(a12, details=TRUE)\n\n", sep="")

summary(a12, details=TRUE)

> print(summary(a12, details=TRUE))
Call: earth(formula=cbind(etitanic$sex, (as.integer(etitanic$age)^2))~
      ., data=etitanic, glm=list(family="gaussian"), trace=4, 
      degree=2)

Earth coefficients
                                y1         y2
(Intercept)             1.70676996  1626.0725
pclass2nd              -0.02929185  -742.9765
pclass3rd              -0.02427315 -1079.2907
survived               -0.51708725  -323.3167
h(sibsp-1)             -0.00568323  -150.5779
h(parch-2)             -0.01268057  1222.2889
h(2-parch)              0.09636135   190.5782
pclass3rd * h(parch-2) -0.07463666  -867.0027

GLM coefficients
                                y1         y2
(Intercept)             1.70676996  1626.0725
pclass2nd              -0.02929185  -742.9765
pclass3rd              -0.02427315 -1079.2907
survived               -0.51708725  -323.3167
h(sibsp-1)             -0.00568323  -150.5779
h(parch-2)             -0.01268057  1222.2889
h(2-parch)              0.09636135   190.5782
pclass3rd * h(parch-2) -0.07463666  -867.0027

GLM y1 deviance residuals:
       Min          1Q      Median          3Q         Max  
-0.8994927  -0.3531136   0.1247805   0.1297992   0.8516401  

GLM y1 coefficients (family gaussian, link identity)
                          Estimate  Std. Error   t value   Pr(>|t|)
(Intercept)             1.70676996  0.04957698  34.42666 < 2.22e-16
pclass3rd              -0.02427315  0.03184014  -0.76234    0.44603
pclass2nd              -0.02929185  0.03481561  -0.84134    0.40035
h(parch-2)             -0.01268057  0.11441777  -0.11083    0.91178
h(2-parch)              0.09636135  0.02171928   4.43667 1.0111e-05
survived               -0.51708725  0.02739347 -18.87630 < 2.22e-16
pclass3rd * h(parch-2) -0.07463665  0.11946250  -0.62477    0.53226
h(sibsp-1)             -0.00568323  0.02211253  -0.25701    0.79722

GLM y1 dispersion parameter for gaussian family taken to be 0.1607703

GLM y2 deviance residuals:
       Min          1Q      Median          3Q         Max  
-1718.2290   -527.9382   -198.9382    297.0618   4716.0878  

GLM y2 coefficients (family gaussian, link identity)
                          Estimate  Std. Error   t value   Pr(>|t|)
(Intercept)             1626.07248   105.92058  15.35181 < 2.22e-16
pclass3rd              -1079.29075    68.02605 -15.86584 < 2.22e-16
pclass2nd               -742.97650    74.38311  -9.98851 < 2.22e-16
h(parch-2)              1222.28888   244.45211   5.00012 6.7230e-07
h(2-parch)               190.57824    46.40296   4.10703 4.3230e-05
survived                -323.31673    58.52579  -5.52435 4.1804e-08
pclass3rd * h(parch-2)  -867.00268   255.23009  -3.39695 0.00070727
h(sibsp-1)              -150.57790    47.24314  -3.18730 0.00147899

GLM y2 dispersion parameter for gaussian family taken to be 733848.4

Number of cases: 1046
Earth selected 8 of 16 terms, and 5 of 5 predictors 
Importance: pclass3rd, pclass2nd, parch, survived, sibsp
Number of terms at each degree of interaction: 1 6 1

Earth
          GCV       RSS      GRSq       RSq
y1       0.17       167 0.2927937 0.3162817
y2  754695.48 761734680 0.2297830 0.2553638
All 754695.65 761734847 0.2297830 0.2553638

GLM (family gaussian, link identity)
   null.deviance   df     deviance   df iters converged
y1  2.440765e+02 1045 1.668796e+02 1038     2         1
y2  1.022962e+09 1045 7.617347e+08 1038     2         1
> stopifnot(identical(a12$coefficients, a12$glm.coefficients))
> 
> # test to see how standard model.matrix does column numbering with formula
> 
> my.x1 <- as.numeric(ToothGrowth[,2]) # supp was VC or OJ
> my.x2 <- as.numeric(ToothGrowth[,3]) # dose
> my.input.mat <- cbind(my.x1, my.x2)
> my.response <- ToothGrowth[,1]
> a13 <- earth(my.response~my.input.mat, trace=1)
x is a 60 by 2 matrix: 1=my.input.matmy.x1, 2=my.input.matmy.x2
y is a 60 by 1 matrix: 1=my.response
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.6819 RSq 0.7623
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.7055 RSq 0.7623 
> print(summary(a13, details=TRUE))
Call: earth(formula=my.response~my.input.mat, trace=1)

                       coefficients
(Intercept)                  21.585
h(my.input.matmy.x1-1)       -3.700
h(my.input.matmy.x2-1)        6.365
h(1-my.input.matmy.x2)      -18.260

Number of cases: 60
Selected 4 of 4 terms, and 2 of 2 predictors 
Importance: my.input.matmy.x2, my.input.matmy.x1
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 17.52421    RSS 820.425    GRSq 0.705494    RSq 0.7623478
> 
> stop.if.not.identical <- function(msg, a, b)
+ {
+     if(!identical(a, b)) {
+        cat(msg, "not identical\n")
+        cat(deparse(substitute(a)), ":\n", sep="")
+        print(a)
+        cat(deparse(substitute(b)), ":\n", sep="")
+        print(b)
+        stop("test failed")
+     }
+     cat(msg, "identical\n")
+ }
> 
> # some matrix interface tests
> 
> # double response glm model with two binomial paired cols
> SF.both <- cbind(SF, SF2)
> df <- data.frame(sex, ldose)
> aref <-  earth(SF.both ~ ., data=df, glm=list(family="binomial"), trace=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.881 RSq 0.9754
Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9393 RSq 0.9754 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> print.earth.models(aref)

Print aref 

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary aref 

Call: earth(formula=SF.both~., data=df, glm=list(family="binomial"), 
      trace=1)

GLM coefficients
               numdead   numdead2
(Intercept)  -3.473155 -3.2140605
sexmale       1.100743  0.9311515
h(ldose- -2)  1.064214  1.0759950

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary aref digits=3, details=TRUE

Call: earth(formula=SF.both~., data=df, glm=list(family="binomial"), 
      trace=1)

Earth coefficients
             numdead numdead2
(Intercept)    -1.44   -0.786
h(ldose- -2)    3.64    3.714
sexmale         3.17    2.667

GLM coefficients
             numdead numdead2
(Intercept)    -3.47   -3.214
h(ldose- -2)    1.06    1.076
sexmale         1.10    0.931

GLM numdead deviance residuals:
    Min       1Q   Median       3Q      Max  
-1.1054  -0.6534  -0.0222   0.4847   1.4294  

GLM numdead coefficients (family binomial, link logit)
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    -3.473      0.469   -7.41  1.2e-13
h(ldose- -2)    1.064      0.131    8.12  4.7e-16
sexmale         1.101      0.356    3.09   0.0020

GLM numdead2 deviance residuals:
   Min      1Q  Median      3Q     Max  
-1.255  -0.736   0.203   0.691   1.330  

GLM numdead2 coefficients (family binomial, link logit)
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    -3.214      0.447   -7.19  6.3e-13
h(ldose- -2)    1.076      0.131    8.20  2.4e-16
sexmale         0.931      0.352    2.64   0.0082

Number of cases: 12
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
          GCV  RSS  GRSq   RSq
numdead  2.38  9.7 0.953 0.981
numdead2 3.79 15.5 0.926 0.970
All      6.17 25.2 0.939 0.975

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead            125 11     6.76  9     4         1
numdead2           128 11     8.57  9     4         1

evimp aref 

        col used nsubsets        gcv          rss  
ldose     2    1        2 100.000000 1 100.000000 1
sexmale   1    1        1   5.432272 1   5.148163 1

evimp aref trim=FALSE

        col used nsubsets        gcv          rss  
ldose     2    1        2 100.000000 1 100.000000 1
sexmale   1    1        1   5.432272 1   5.148163 1

plotmo aref 
-------------------------------------------------------------------------------

> 
> a21 <-  earth(data.frame(sex, ldose), SF.both, glm=list(family="binomial"), trace=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.881 RSq 0.9754
Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9393 RSq 0.9754 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> print.earth.models(a21)

Print a21 

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a21 

Call: earth(x=data.frame(sex, ldose), y=SF.both, glm=list(family="binomial"), 
      trace=1)

GLM coefficients
               numdead   numdead2
(Intercept)  -3.473155 -3.2140605
sexmale       1.100743  0.9311515
h(ldose- -2)  1.064214  1.0759950

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a21 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(x=data.frame(sex, ldose), y=SF.both, glm=list(family="binomial"), 
      trace=1)

Earth coefficients
             numdead numdead2
(Intercept)  -1.4405 -0.78571
h(ldose- -2)  3.6429  3.71429
sexmale       3.1667  2.66667

GLM coefficients
             numdead numdead2
(Intercept)  -3.4732 -3.21406
h(ldose- -2)  1.0642  1.07600
sexmale       1.1007  0.93115

GLM numdead deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.105398  -0.653432  -0.022249   0.484706   1.429444  

GLM numdead coefficients (family binomial, link logit)
             Estimate Std. Error z value  Pr(>|z|)
(Intercept)  -3.47316    0.46852 -7.4130 1.234e-13
h(ldose- -2)  1.06421    0.13108  8.1190 4.702e-16
sexmale       1.10074    0.35583  3.0935  0.001978

GLM numdead2 deviance residuals:
     Min        1Q    Median        3Q       Max  
-1.25549  -0.73593   0.20315   0.69113   1.32952  

GLM numdead2 coefficients (family binomial, link logit)
             Estimate Std. Error z value  Pr(>|z|)
(Intercept)  -3.21406    0.44682 -7.1932 6.330e-13
h(ldose- -2)  1.07600    0.13124  8.1987 2.429e-16
sexmale       0.93115    0.35232  2.6429  0.008219

Number of cases: 12
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
            GCV     RSS    GRSq     RSq
numdead  2.3761  9.7024 0.95249 0.98076
numdead2 3.7901 15.4762 0.92646 0.97022
All      6.1662 25.1786 0.93928 0.97541

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead         124.88 11   6.7571  9     4         1
numdead2        128.03 11   8.5725  9     4         1

evimp a21 

        col used nsubsets        gcv          rss  
ldose     2    1        2 100.000000 1 100.000000 1
sexmale   1    1        1   5.432272 1   5.148163 1

evimp a21 trim=FALSE

        col used nsubsets        gcv          rss  
ldose     2    1        2 100.000000 1 100.000000 1
sexmale   1    1        1   5.432272 1   5.148163 1

plotmo a21 
-------------------------------------------------------------------------------

> check.models.equal(aref, a21, msg="aref a21")
check.models.equal not identical: aref a21 [but within numerical tolerances]
> 
> a21 <-  earth(cbind(sex, ldose), SF.both, glm=list(family="binomial"), trace=1)
x is a 12 by 2 matrix: 1=sex, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.881 RSq 0.9754
Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9393 RSq 0.9754 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> print.earth.models(a21)

Print a21 

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sex
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a21 

Call: earth(x=cbind(sex, ldose), y=SF.both, glm=list(family="binomial"), 
      trace=1)

GLM coefficients
               numdead   numdead2
(Intercept)  -3.473155 -3.2140605
h(sex-1)      1.100743  0.9311515
h(ldose- -2)  1.064214  1.0759950

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sex
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a21 digits=3, details=TRUE

Call: earth(x=cbind(sex, ldose), y=SF.both, glm=list(family="binomial"), 
      trace=1)

Earth coefficients
             numdead numdead2
(Intercept)    -1.44   -0.786
h(ldose- -2)    3.64    3.714
h(sex-1)        3.17    2.667

GLM coefficients
             numdead numdead2
(Intercept)    -3.47   -3.214
h(ldose- -2)    1.06    1.076
h(sex-1)        1.10    0.931

GLM numdead deviance residuals:
    Min       1Q   Median       3Q      Max  
-1.1054  -0.6534  -0.0222   0.4847   1.4294  

GLM numdead coefficients (family binomial, link logit)
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    -3.473      0.469   -7.41  1.2e-13
h(ldose- -2)    1.064      0.131    8.12  4.7e-16
h(sex-1)        1.101      0.356    3.09   0.0020

GLM numdead2 deviance residuals:
   Min      1Q  Median      3Q     Max  
-1.255  -0.736   0.203   0.691   1.330  

GLM numdead2 coefficients (family binomial, link logit)
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    -3.214      0.447   -7.19  6.3e-13
h(ldose- -2)    1.076      0.131    8.20  2.4e-16
h(sex-1)        0.931      0.352    2.64   0.0082

Number of cases: 12
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sex
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
          GCV  RSS  GRSq   RSq
numdead  2.38  9.7 0.953 0.981
numdead2 3.79 15.5 0.926 0.970
All      6.17 25.2 0.939 0.975

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead            125 11     6.76  9     4         1
numdead2           128 11     8.57  9     4         1

evimp a21 

      col used nsubsets        gcv          rss  
ldose   2    1        2 100.000000 1 100.000000 1
sex     1    1        1   5.432272 1   5.148163 1

evimp a21 trim=FALSE

      col used nsubsets        gcv          rss  
ldose   2    1        2 100.000000 1 100.000000 1
sex     1    1        1   5.432272 1   5.148163 1

plotmo a21 
-------------------------------------------------------------------------------

> # TODO does not match because different conversion of factor with cbind and earth, revisit
> # check.models.equal(aref, a21, msg="aref a21")
> 
> df.both <- data.frame(SF, SF2)
> a22 <-  earth(cbind(sex, ldose), df.both, glm=list(family="binomial"), trace=1)
x is a 12 by 2 matrix: 1=sex, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.881 RSq 0.9754
Prune method "backward" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9393 RSq 0.9754 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 128.0299 (11 dof)   deviance 8.572466 (9 dof)   iters 4
> print.earth.models(a22)

Print a22 

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sex
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a22 

Call: earth(x=cbind(sex, ldose), y=df.both, glm=list(family="binomial"), 
      trace=1)

GLM coefficients
               numdead   numdead2
(Intercept)  -3.473155 -3.2140605
h(sex-1)      1.100743  0.9311515
h(ldose- -2)  1.064214  1.0759950

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sex
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
              GCV       RSS      GRSq       RSq
numdead  2.376093  9.702381 0.9524860 0.9807588
numdead2 3.790087 15.476190 0.9264592 0.9702190
All      6.166181 25.178571 0.9392766 0.9754095

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead       124.8756 11 6.757064  9     4         1
numdead2      128.0299 11 8.572466  9     4         1

Summary a22 decomp="none", digits=5, fixed.point=FALSE, details=TRUE

Call: earth(x=cbind(sex, ldose), y=df.both, glm=list(family="binomial"), 
      trace=1)

Earth coefficients
             numdead numdead2
(Intercept)  -1.4405 -0.78571
h(ldose- -2)  3.6429  3.71429
h(sex-1)      3.1667  2.66667

GLM coefficients
             numdead numdead2
(Intercept)  -3.4732 -3.21406
h(ldose- -2)  1.0642  1.07600
h(sex-1)      1.1007  0.93115

GLM numdead deviance residuals:
      Min         1Q     Median         3Q        Max  
-1.105398  -0.653432  -0.022249   0.484706   1.429444  

GLM numdead coefficients (family binomial, link logit)
             Estimate Std. Error z value  Pr(>|z|)
(Intercept)  -3.47316    0.46852 -7.4130 1.234e-13
h(ldose- -2)  1.06421    0.13108  8.1190 4.702e-16
h(sex-1)      1.10074    0.35583  3.0935  0.001978

GLM numdead2 deviance residuals:
     Min        1Q    Median        3Q       Max  
-1.25549  -0.73593   0.20315   0.69113   1.32952  

GLM numdead2 coefficients (family binomial, link logit)
             Estimate Std. Error z value  Pr(>|z|)
(Intercept)  -3.21406    0.44682 -7.1932 6.330e-13
h(ldose- -2)  1.07600    0.13124  8.1987 2.429e-16
h(sex-1)      0.93115    0.35232  2.6429  0.008219

Number of cases: 12
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sex
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
            GCV     RSS    GRSq     RSq
numdead  2.3761  9.7024 0.95249 0.98076
numdead2 3.7901 15.4762 0.92646 0.97022
All      6.1662 25.1786 0.93928 0.97541

GLM (family binomial, link logit)
         null.deviance df deviance df iters converged
numdead         124.88 11   6.7571  9     4         1
numdead2        128.03 11   8.5725  9     4         1

evimp a22 

      col used nsubsets        gcv          rss  
ldose   2    1        2 100.000000 1 100.000000 1
sex     1    1        1   5.432272 1   5.148163 1

evimp a22 trim=FALSE

      col used nsubsets        gcv          rss  
ldose   2    1        2 100.000000 1 100.000000 1
sex     1    1        1   5.432272 1   5.148163 1

plotmo a22 
-------------------------------------------------------------------------------

> # TODO does not match because different conversion of factor with cbind and earth, revisit
> # check.models.equal(aref, a22, msg="a20 a22")
> check.models.equal(a21, a22, msg="a21 a22")
check.models.equal not identical: a21 a22 [but within numerical tolerances]
> 
> # --- predict with factors ------------------------------------------------------
> 
> # there is a lot of redundancy in this routine, it doesn't really matter
> 
> test.predict.with.factors <- function(trace)
+ {
+     cat("\n--- predict with single level factors and a single response, trace=", trace,
+         " ---\n\n", sep="")
+ 
+     cat("first do a quick test of predict.earth help page example\n")
+     a <- earth(Volume ~ ., data = trees)
+     if (trace) print(head(predict(a, trace=trace)))
+     if (trace) print(predict(a, c(10,80), trace=trace))
+ 
+     # test set A: prepare the data
+ 
+     ldose  <- rep(0:5, 2) - 2
+     # ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
+     ldose1 <- c(0.1, 1.2, 0.1, 1.2, 1.0, 0.1, 0.3, 1.4, 0.1, 1.2, 0.1, 0.9)
+     sex <- factor(rep(c("male", "female"), times=c(6,6)))
+     numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
+ 
+     sexmale <- (sex == "male")
+     am <-  earth(cbind(sexmale, ldose, ldose1), numdead, trace=trace, pmethod="none", degree=2)
+     af <-  earth(numdead ~ sex + ldose + ldose1, trace=trace, pmethod="none", degree=2)
+     check.models.equal(am, af, "predict with single level factors and a single response")
+ 
+     cat("A-20m head(predict(am, trace=", trace, ")\n", sep="")
+     pm <- predict(am, trace=trace)
+     if (trace) print(head(pm))
+ 
+     cat("A-20f head(predict(af, trace=", trace, ")\n", sep="")
+     pf <- predict(af, trace=trace)
+     if (trace) print(head(pf))
+     stop.if.not.identical("A-20", pm, pf)
+ 
+     cat("A-21m predict(am, newdata=c(sex[1], -2, 0.1), trace=", trace, "))\n", sep="")
+     pm <- predict(am, newdata=c(sex[1]=="male", -2, 0.1), trace=trace)
+     pm.ref <- pm
+     if (trace) print(pm)
+ 
+     cat("A-21f predict(af, newdata=c(sex[1], -2, 0.1), trace=", trace, "))\n", sep="")
+     pf <- predict(af, newdata=c(sex[1]=="male", -2, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-21", pm.ref, pf)
+ 
+     cat("A-22m predict(am, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pm <- predict(am, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-22", pm.ref, pm)
+ 
+     cat("A-22f predict(af, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pf <- predict(af, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-22", pm, pf)
+ 
+     cat("A-23m predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pm <- predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+ 
+     cat("A-23f predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pf <- predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-23", pm, pf)
+ 
+     cat("A-24m predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pm <- predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+     pm2.ref <- pm
+ 
+     cat("A-24f predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pf <- predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-24", pm, pf)
+ 
+     cat("A-25m predict(am, xpredict matrix trace=", trace, "\n", sep="")
+     new.data <- matrix(c(sex[1], sex[1], -2, -1, 0.1, 0.1), nrow=2)
+     pm <- predict(am, newdata=new.data, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-25", pm2.ref, pm)
+ 
+     cat("A-25f predict(af, xpredict matrix trace=", trace, "\n", sep="")
+     pf <- predict(af, newdata=new.data, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-25", pm, pf)
+ 
+     cat("A-26m predict(am, new.data with col names) trace=", trace, "\n", sep="")
+     new.data <- matrix(c(sex[1], sex[1], -2, -1, 0.1, 0.1), nrow=2)
+     colnames(new.data) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, newdata=new.data, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-26m", pm2.ref, pm)
+ 
+     cat("A-26f predict(af, new.data with col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, newdata=new.data, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-26f", pm, pf)
+ 
+     cat("A-27m predict(am, new.data with out of order col names) trace=", trace, "\n", sep="")
+     new.data <- matrix(c(sex[1], sex[1], 0.1, 0.1, -2, -1), nrow=2)
+     colnames(new.data) <- c("sex", "ldose1", "ldose")
+     pm <- predict(am, newdata=new.data, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-27", pm2.ref, pm)
+ 
+     cat("A-27f predict(af, new.data with out of order col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, newdata=new.data, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-27", pm, pf)
+ 
+     cat("A-28m predict(am, xdata.frame without col names) trace=", trace, "\n", sep="")
+     if (trace) print(pm)
+     stop.if.not.identical("A-28", pm2.ref, pm)
+ 
+     cat("A-28f predict(af, xdata.frame without col names) trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(c(sex[1], sex[1]), c(-2, -1), c(0.1, 0.1))
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-28", pm, pf)
+ 
+     cat("A-29m predict(am, xdata.frame with col names) trace=", trace, "\n", sep="")
+     xdata.frame.29 <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame.29) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame.29, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-29", pm.ref, pm)
+ 
+     cat("A-29f predict(af, xdata.frame with col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, xdata.frame.29, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-29", pm, pf)
+ 
+     cat("A2-29m predict(am, xdata.frame with col names) trace=", trace, "\n", sep="")
+     xdata.frame.29.2 <- data.frame(c(sex[1], sex[1]), c(-2, -1), c(0.1, 0.1))
+     colnames(xdata.frame.29.2) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame.29.2, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A2-29", pm2.ref, pm)
+ 
+     cat("A2-29f predict(af, xdata.frame with col names) trace=", trace, "\n", sep="")
+     pf <- predict(af, xdata.frame.29.2, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A2-29", pm, pf)
+ 
+     cat("A-31m predict(am, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     pm <- predict(am, xdata.frame, trace=trace)
+     stop.if.not.identical("A-31", pm.ref, pm)
+     if (trace) print(pm)
+ 
+     cat("A-31f predict(af, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-31", pm, pf)
+ 
+     cat("A-31bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex=sex[1], ldose=-2, ldose1=0.1)
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-31", pm.ref, pm)
+ 
+     cat("A-31bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-31b", pm, pf)
+ 
+     cat("A-32m predict(am, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-32", pm, pf)
+     stop.if.not.identical("A-32", pm.ref, pm)
+ 
+     cat("A-32f predict(af, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-32", pm, pf)
+ 
+     cat("A-42am predict(am, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pm <- predict(am, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-42a", pm.ref, pm)
+ 
+     cat("A-42af predict(af, newdata=c(1, -2, 0.1), trace=", trace, ")) use numeric instead of factor sex\n", sep="")
+     pf <- predict(af, newdata=c(1, -2, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-42a", pm, pf)
+ 
+     cat("A-43am predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pm <- predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+ 
+     cat("A-43af predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=", trace, ")) multiple rows as a vec\n", sep="")
+     pf <- predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-43a", pm, pf)
+ 
+     cat("A-44am predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pm <- predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-44a", pm2.ref, pm)
+ 
+     cat("A-44fm predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=", trace, ")) more multiple rows as a vec\n", sep="")
+     pf <- predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-44f", pm, pf)
+ 
+     cat("A-53m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2)
+     try.temp <- try(predict(am, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("A-53f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2)
+     try.temp <- try(predict(af, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("A-54m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(-2, sex[1], 0.1)
+     colnames(xdata.frame) <- c("ldose", "sex", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-54", pm.ref, pm)
+ 
+     cat("A-54f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-54", pm, pf)
+ 
+     cat("A-55m predict(am, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     xdata.frame <- data.frame(sex[c(1,7)], c(-2,-1), c(0.1, 0.1))
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm3.ref <- pm
+     if (trace) print(pm)
+ 
+     cat("A-55f predict(af, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-55", pm, pf)
+ 
+     cat("A-56m predict(am, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     xdata.frame <- data.frame(sex[c(1,7)], c(-2,-1), c(0.1, 0.1))
+     colnames(xdata.frame) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-56", pm3.ref, pm)
+ 
+     cat("A-56f predict(af, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-56", pm, pf)
+ 
+     cat("A-57m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex[c(1,7)], c(-2,-1))
+     tempm <- try(predict(am, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("A-57f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+     stop.if.not.identical("A-57", pm, pf)
+ 
+     cat("A-58m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(c(-2,-1), sex[c(1,7)], c(0.1, 0.1))
+     colnames(xdata.frame) <- c("ldose", "sex", "ldose1")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-58", pm3.ref, pm)
+ 
+     cat("A-58f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-58", pm, pf)
+ 
+     cat("A-59m predict(am, xdata.frame, trace=", trace, ") numeric where factor expected, expect forge on message\n", sep="")
+     xdata.frame.39 <- data.frame(c(sex[1], sex[7]), c(-2,-1), c(0.1, 0.1))
+     colnames(xdata.frame.39) <- c("sex", "ldose", "ldose1")
+     pm <- predict(am, xdata.frame.39, trace=trace)
+     if (trace) print(pm)
+     # stop.if.not.identical("A-59", pm3.ref, pm) # TODO fails but "forge on" message is correctly issued
+ 
+     cat("A-59f predict(af, xdata.frame, trace=", trace, ") numeric where factor expected, expect forge on message\n", sep="")
+     pf <- predict(af, xdata.frame.39, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-59", pm, pf)
+ 
+     cat("A-50m data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame) <- NULL
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-34", pm.ref, pm)
+ 
+     cat("A-60f data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex[1], -2, 0.1)
+     colnames(xdata.frame) <- NULL
+     pf <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-60", pm, pf)
+ 
+     cat("A-61f data frame without extra columns, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex=sex[1], extra1=99, ldose=-2, extra2=99, ldose1=0.1, extra3=sex[7])
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-61", pm, pf)
+ 
+     #-----------------------------------
+ 
+     my.x1 <- as.numeric(ToothGrowth[,2]) # supp was VC or OJ
+     my.x2 <- as.numeric(ToothGrowth[,3]) # dose
+     my.input.mat <- cbind(my.x1, my.x2)
+     my.response <- ToothGrowth[,1]
+ 
+     cat("A-68 input matrix to formula interface trace=", trace, ", expect error \"could not interpret\"\n", sep="")
+     a41 <- earth(my.response~my.input.mat, trace=trace)
+     try.temp <- try(predict(a41, c(2.1, 0.6), trace=trace)) #
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("A-69 above test but with properly named dataframe trace=", trace, "\n", sep="")
+     df <- data.frame(growth=my.response, supp=my.x1, dose=my.x2)
+     a42 <- earth(formula=growth~., data=df, trace=0)
+     p <- predict(a42, c(2.1, 0.6), trace=0) # now gives the correct result
+     if (trace) print(head(p))
+ 
+     cat("Tests with not all predictors used in the model so can pass fewer columns\n")
+     # No factor tests done, they probably won't work in this setup.
+ 
+     # first for earth.default
+     dummy <- rep(0, 12)
+     am <-  earth(cbind(ldose, dummy, ldose1), numdead, trace=trace, pmethod="none", degree=2)
+     # prepare reference prediction, using all columns
+     newdata <- matrix(c(-2, 0, 0.1), ncol=3, nrow=1)
+     colnames(newdata) <- c("ldose", "dummy", "ldose1")
+     pm.ref <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm.ref)
+ 
+     cat("A-72m predict(am, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- matrix(c(-2, 0.1), ncol=2, nrow=1)
+     colnames(newdata) <- c("ldose", "ldose1")
+     pm <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-72m", pm, pm.ref)
+ 
+     # prepare reference prediction, using all columns
+     newdata <- data.frame(cbind(ldose, dummy, ldose1))
+     print(newdata)
+     pm.ref <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm.ref)
+ 
+     cat("A-73m predict(am, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- newdata[, c(1,3)]
+     pm <- predict(am, newdata=newdata, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("A-73m", pm, pm.ref)
+ 
+     # now for earth.formula
+     dummy <- rep(0, 12)
+     af <-  earth(numdead ~ ldose + dummy + ldose1, trace=trace, pmethod="none", degree=2)
+     # prepare reference prediction, using all columns
+     newdata <- matrix(c(-2, 0, 0.1), ncol=3, nrow=1)
+     colnames(newdata) <- c("ldose", "dummy", "ldose1")
+     newdata <- as.data.frame(newdata)
+     pf.ref <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf.ref)
+ 
+     cat("A-72f predict(af, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- matrix(c(-2, 0.1), ncol=2, nrow=1)
+     colnames(newdata) <- c("ldose", "ldose1")
+     newdata <- as.data.frame(newdata)
+     pf <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-72f", pf, pf.ref)
+ 
+     # prepare reference prediction, using all columns
+     newdata <- data.frame(cbind(ldose, dummy, ldose1))
+     print(newdata)
+     pf.ref <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf.ref)
+ 
+     cat("A-73f predict(af, newdata=newdata[two columns], trace=trace)\n")
+     newdata <- newdata[, c(1,3)]
+     pf <- predict(af, newdata=newdata, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("A-73f", pf, pf.ref)
+ 
+     cat("\n--- B predict with multiple level factors and a multiple real response, trace=", trace,
+         " ---\n\n", sep="")
+ 
+     # note that we can no now longer get away with using numerics for
+     # factors because factors have more than two levels
+ 
+     # test set B: prepare the data
+ 
+     ldose  <- rep(0:5, 2) - 2
+     ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
+     sex3 <- factor(rep(c("male", "female", "andro"), times=c(6,4,2)))
+     fac3 <- factor(c("lev2", "lev2", "lev1", "lev1", "lev3", "lev3",
+                      "lev2", "lev2", "lev1", "lev1", "lev3", "lev3"))
+     numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
+     numdead2 <- c(2,3,10,13,19,20,0,3,7,11,13,17)
+     numdeadboth <- cbind(numdead, numdead2)
+     isex <- as.double(sex3) # sex3 as an index
+     df <- data.frame(sex3, ldose, ldose1, fac3)
+     am <-  earth(df, numdeadboth, trace=trace, pmethod="none", degree=2)
+     af <-  earth(numdeadboth ~ ., data=df, trace=trace, pmethod="none", degree=2)
+     check.models.equal(am, af, "B predict with multiple level factors and a multiple real response")
+     cat("20m head(predict(am, trace=", trace, ")\n", sep="")
+     pm <- predict(am, trace=trace)
+     if (trace) print(head(pm))
+ 
+     cat("B-21f head(predict(af, trace=", trace, ")\n", sep="")
+     pf <- predict(af, trace=trace)
+     if (trace) print(head(pf))
+     stop.if.not.identical("B-20", pm, pf)
+ 
+     cat("B-31m predict(am, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm.ref <- pm
+     stop.if.not.identical("B-31", pm.ref, pm)
+     if (trace) print(pm)
+ 
+     cat("B-31f predict(af, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-31", pm, pf)
+ 
+     cat("B-31bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], ldose=-2, ldose1=0.1, fac3=fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-31", pm.ref, pm)
+ 
+     cat("B-31bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-31b", pm, pf)
+ 
+     cat("B-32m predict(am, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-32", pm, pf)
+     stop.if.not.identical("B-32", pm.ref, pm)
+ 
+     cat("B-32f predict(af, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-32", pm, pf)
+ 
+     cat("B-53m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2)
+     try.temp <- try(predict(am, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("B-53f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     try.temp <- try(predict(af, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("B-54m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(-2, sex3[1], 0.1, fac3[1])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-54", pm.ref, pm)
+ 
+     cat("B-54f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-54", pm, pf)
+ 
+     cat("B-55m predict(am, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm3.ref <- pm
+     if (trace) print(pm)
+     cat("B-55m again, but with same x data for both reponses\n")
+     xdata.frame <- data.frame(sex3[c(1,1)], c(-2,-2), c(0.1, 0.1), fac3[c(1,1)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     print(pm)
+ 
+     cat("B-55f predict(af, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-55", pm, pf)
+ 
+     cat("B2-55bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[c(1,7)], ldose=c(-2,-1), ldose1=c(0.1,0.1), fac3=fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B2-55", pm3.ref, pm)
+ 
+     cat("B2-55bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B2-55b", pm, pf)
+ 
+     cat("B-56m predict(am, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-56", pm3.ref, pm)
+ 
+     cat("B-56f predict(af, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-56", pm, pf)
+ 
+     cat("B-57m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1))
+     tempm <- try(predict(am, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("B-57f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     try.temp <- try(predict(af, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+     stop.if.not.identical("B-57", pm, pf)
+ 
+     cat("B-58m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(c(-2,-1), sex3[c(1,7)], c(0.1, 0.1),  fac3[c(1,9)])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-58", pm3.ref, pm)
+ 
+     cat("B-58f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-58", pm, pf)
+ 
+     cat("B-50m data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("B-34", pm.ref, pm)
+ 
+     cat("B-60f data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pf <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-60", pm, pf)
+ 
+     cat("B-60f data frame without extra columns, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], extra1=99, ldose=-2, extra2=99,
+                                ldose1=0.1, fac3=fac3[1], extra3=sex3[7])
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("B-60f", pm, pf)
+ 
+     cat("\n--- C predict with multiple level factors and a 3 level factor response, trace=", trace,
+         " ---\n\n", sep="")
+ 
+     # test set C: prepare the data
+ 
+     ldose  <- rep(0:5, 2) - 2
+     ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
+     sex3 <- factor(rep(c("male", "female", "andro"), times=c(6,4,2)))
+     fac3 <- factor(c("lev2", "lev2", "lev1", "lev1", "lev3", "lev3",
+                      "lev2", "lev2", "lev1", "lev1", "lev3", "lev3"))
+     facdead <- factor(c("dead2", "dead2", "dead3", "dead1", "dead3", "dead3",
+                         "dead1", "dead2", "dead1", "dead1", "dead3", "dead3"))
+ 
+     isex <- as.double(sex3) # sex3 as an index
+     df <- data.frame(sex3=sex3, ldose=ldose, ldose1=ldose1, fac3=fac3)
+     am <-  earth(df, facdead, trace=trace, pmethod="none", degree=2)
+     df.with.response <- data.frame(sex3=sex3, ldose=ldose, ldose1=ldose1, facdead=facdead, fac3=fac3)
+     af <-  earth(facdead ~ ., data=df.with.response, trace=trace, pmethod="none", degree=2)
+     check.models.equal(am, af, "C predict with multiple level factors and a multiple real response")
+     cat("20m head(predict(am, trace=", trace, ")\n", sep="")
+     pm <- predict(am, trace=trace)
+     if (trace) print(head(pm))
+ 
+     cat("C-21f head(predict(af, trace=", trace, ")\n", sep="")
+     pf <- predict(af, trace=trace)
+     if (trace) print(head(pf))
+     stop.if.not.identical("C-20", pm, pf)
+ 
+     cat("C-31m predict(am, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm.ref <- pm
+     stop.if.not.identical("C-31", pm.ref, pm)
+     if (trace) print(pm)
+ 
+     cat("C-31f predict(af, xdata.frame, trace=", trace, ") data frame with factors and wrong col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-31", pm, pf)
+ 
+     cat("C-31bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], ldose=-2, ldose1=0.1, fac3=fac3[1])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-31", pm.ref, pm)
+ 
+     cat("C-31bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-31b", pm, pf)
+ 
+     cat("C-32m predict(am, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-32", pm, pf)
+     stop.if.not.identical("C-32", pm.ref, pm)
+ 
+     cat("C-32f predict(af, xdata.frame, trace=", trace, ") # data frame with names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-32", pm, pf)
+ 
+     cat("C-53m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2)
+     try.temp <- try(predict(am, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("C-53f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     try.temp <- try(predict(af, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("C-54m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(-2, sex3[1], 0.1, fac3[1])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-54", pm.ref, pm)
+ 
+     cat("C-54f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-54", pm, pf)
+ 
+     cat("C-55m predict(am, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     pm3.ref <- pm
+     if (trace) print(pm)
+ 
+     cat("C-55f predict(af, xdata.frame, trace=", trace, ") data frame without col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-55", pm, pf)
+ 
+     cat("C2-55bm predict(am, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[c(1,7)], ldose=c(-2,-1), ldose1=c(0.1,0.1), fac3=fac3[c(1,9)])
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C2-55", pm3.ref, pm)
+ 
+     cat("C2-55bf predict(af, xdata.frame, trace=", trace, ") data frame col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C2-55b", pm, pf)
+ 
+     cat("C-56m predict(am, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1), c(0.1, 0.1), fac3[c(1,9)])
+     colnames(xdata.frame) <- c("sex3", "ldose", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-56", pm3.ref, pm)
+ 
+     cat("C-56f predict(af, xdata.frame, trace=", trace, ") # data frame with col names\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-56", pm, pf)
+ 
+     cat("C-57m predict(am, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     xdata.frame <- data.frame(sex3[c(1,7)], c(-2,-1))
+     tempm <- try(predict(am, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+ 
+     cat("C-57f predict(af, xdata.frame, trace=", trace, ") data frame with not enough columns, expect error message\n", sep="")
+     try.temp <- try(predict(af, xdata.frame, trace=trace))
+     if (class(try.temp) != "try-error")
+         stop("test failed")
+     stop.if.not.identical("C-57", pm, pf)
+ 
+     cat("C-58m predict(am, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     xdata.frame <- data.frame(c(-2,-1), sex3[c(1,7)], c(0.1, 0.1),  fac3[c(1,9)])
+     colnames(xdata.frame) <- c("ldose", "sex3", "ldose1", "fac3")
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-58", pm3.ref, pm)
+ 
+     cat("C-58f predict(af, xdata.frame, trace=", trace, ") # data frame with cols in different order\n", sep="")
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-58", pm, pf)
+ 
+     cat("C-50m data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pm <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pm)
+     stop.if.not.identical("C-34", pm.ref, pm)
+ 
+     cat("C-60f data frame without column names, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3[1], -2, 0.1, fac3[1])
+     colnames(xdata.frame) <- NULL
+     pf <- predict(am, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-60", pm, pf)
+ 
+     cat("C-61f data frame without extra columns, trace=", trace, "\n", sep="")
+     xdata.frame <- data.frame(sex3=sex3[1], extra1=99, ldose=-2, extra2=99,
+                                ldose1=0.1, fac3=fac3[1], extra3=sex3[7])
+     pf <- predict(af, xdata.frame, trace=trace)
+     if (trace) print(pf)
+     stop.if.not.identical("C-61", pm, pf)
+ }
> test.predict.with.factors(trace=1)

--- predict with single level factors and a single response, trace=1 ---

first do a quick test of predict.earth help page example
predict.earth: returning earth fitted.values 
       Volume
[1,] 10.02257
[2,] 10.88250
[3,] 11.45579
[4,] 16.32876
[5,] 20.49373
[6,] 22.21705
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-12.9), 3=h(12.9-Girth), 4=h(Height-76)
Contents of bx are
     (Intercept) h(Girth-12.9) h(12.9-Girth) h(Height-76)
[1,]           1             0           2.9            4
predict.earth: returning earth predictions 
       Volume
[1,] 17.76888
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
x is a 12 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4, 6, 8, 10
Reached delta RSq threshold (DeltaRSq 0.000947013 < 0.001)
After forward pass GRSq 0.9313 RSq 0.9987
Prune method "none" penalty 3 nprune 5: selected 5 of 5 terms, and 3 of 3 predictors
After backward pass GRSq 0.731 RSq 0.9978 
check.models.equal not identical: predict with single level factors and a single response [but within numerical tolerances]
A-20m head(predict(am, trace=1)
predict.earth: returning earth fitted.values 
        numdead
[1,]  0.8203767
[2,]  3.6433743
[3,]  8.6055529
[4,] 13.2468183
[5,] 17.7471200
[6,] 20.2833170
A-20f head(predict(af, trace=1)
predict.earth: returning earth fitted.values 
        numdead
[1,]  0.8203767
[2,]  3.6433743
[3,]  8.6055529
[4,] 13.2468183
[5,] 17.7471200
[6,] 20.2833170
A-20 identical
A-21m predict(am, newdata=c(sex[1], -2, 0.1), trace=1))
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       1    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-21f predict(af, newdata=c(sex[1], -2, 0.1), trace=1))
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   1    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-21 identical
A-22m predict(am, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       1    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-22 identical
A-22f predict(af, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   1    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-22 identical
A-23m predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       2    -2    0.1
[2,]       2    -2    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 0.8203767
A-23f predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 0.8203767
A-23 identical
A-24m predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       2    -2    0.1
[2,]       2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-24f predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-24 identical
A-25m predict(am, xpredict matrix trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       2    -2    0.1
[2,]       2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-25 identical
A-25f predict(af, xpredict matrix trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-25 identical
A-26m predict(am, new.data with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
     sex ldose ldose1
[1,]   2    -2    0.1
[2,]   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-26m identical
A-26f predict(af, new.data with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-26f identical
A-27m predict(am, new.data with out of order col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: sex ldose1 ldose
    New columns: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
     sex ldose ldose1
[1,]   2    -2    0.1
[2,]   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-27 identical
A-27f predict(af, new.data with out of order col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: sex ldose1 ldose
    New columns: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-27 identical
A-28m predict(am, xdata.frame without col names) trace=1
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-28 identical
A-28f predict(af, xdata.frame without col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: c.sex.1...sex.1.. c..2...1. c.0.1..0.1.
    New names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (integer), 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-28 identical
A-29m predict(am, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-29 identical
A-29f predict(af, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-29 identical
A2-29m predict(am, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (integer), 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A2-29 identical
A2-29f predict(af, xdata.frame with col names) trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (integer), 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A2-29 identical
A-31m predict(am, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.1. X.2 X0.1
    New names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sexmale (factor), 2=ldose, 3=ldose1
Contents of x are
  sexmale ldose ldose1
1    male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
A-31 identical
       numdead
[1,] 0.8203767
A-31f predict(af, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.1. X.2 X0.1
    New names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-31 identical
A-31bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-31 identical
A-31bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-31b identical
A-32m predict(am, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-32 identical
A-32 identical
A-32f predict(af, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-32 identical
A-42am predict(am, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       1    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-42a identical
A-42af predict(af, newdata=c(1, -2, 0.1), trace=1)) use numeric instead of factor sex
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   1    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-42a identical
A-43am predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 0.8203767
A-43af predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=1)) multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       2    -2    0.1
[2,]       2    -2    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 0.8203767
A-43a identical
A-44am predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex, 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-44a identical
A-44fm predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=1)) more multiple rows as a vec
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sexmale, 2=ldose, 3=ldose1
Contents of x are
     sexmale ldose ldose1
[1,]       2    -2    0.1
[2,]       2    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   2                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 5.8895886
A-44f identical
A-53m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
A-53f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sex ldose ldose1
A-54m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-54 identical
A-54f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
   sex ldose ldose1
1 male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-54 identical
A-55m predict(am, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.c.1..7.. c..2...1. c.0.1..0.1.
    New names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sexmale (factor), 2=ldose, 3=ldose1
Contents of x are
  sexmale ldose ldose1
1    male    -2    0.1
2  female    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 3.5363410
A-55f predict(af, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex.c.1..7.. c..2...1. c.0.1..0.1.
    New names: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 3.5363410
A-55 identical
A-56m predict(am, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 3.5363410
A-56 identical
A-56f predict(af, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 3.5363410
A-56 identical
A-57m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
A-57f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
A-57 identical
A-58m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 3.5363410
A-58 identical
A-58f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex ldose1
    New columns: sex ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (factor), 2=ldose, 3=ldose1
Contents of x are
     sex ldose ldose1
1   male    -2    0.1
2 female    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   0                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 3.5363410
A-58 identical
A-59m predict(am, xdata.frame, trace=1) numeric where factor expected, expect forge on message
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (integer), 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   1                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 4.7129648
A-59f predict(af, xdata.frame, trace=1) numeric where factor expected, expect forge on message
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 3 matrix: 1=sex (integer), 2=ldose, 3=ldose1
Contents of x are
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
predict.earth: bx is a 2 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
[2,]           1           1                   1                         0
     h(ldose1-0.1)
[1,]             0
[2,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
[2,] 4.7129648
A-59 identical
A-50m data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sexmale (factor), 2=ldose, 3=ldose1
Contents of x are
  sexmale ldose ldose1
1    male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-34 identical
A-60f data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sexmale ldose ldose1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=sexmale (factor), 2=ldose, 3=ldose1
Contents of x are
  sexmale ldose ldose1
1    male    -2    0.1
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-60 identical
A-61f data frame without extra columns, trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 6 matrix: 1=sex (factor), 2=extra1, 3=ldose, 4=extra2, 5=ldose1, 6=extra3 (factor)
Contents of x are
   sex extra1 ldose extra2 ldose1 extra3
1 male     99    -2     99    0.1 female
predict.earth: bx is a 1 by 5 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale*h(ldose--2), 4=h(ldose--2)*h(ldose1-0.1), 5=h(ldose1-0.1)
Contents of bx are
     (Intercept) h(ldose--2) sexmale*h(ldose--2) h(ldose--2)*h(ldose1-0.1)
[1,]           1           0                   0                         0
     h(ldose1-0.1)
[1,]             0
predict.earth: returning earth predictions 
       numdead
[1,] 0.8203767
A-61 identical
A-68 input matrix to formula interface trace=1, expect error "could not interpret"
x is a 60 by 2 matrix: 1=my.input.matmy.x1, 2=my.input.matmy.x2
y is a 60 by 1 matrix: 1=my.response
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.6819 RSq 0.7623
Prune method "backward" penalty 2 nprune 4: selected 4 of 4 terms, and 2 of 2 predictors
After backward pass GRSq 0.7055 RSq 0.7623 
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: my.x1 my.x2
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=my.x1, 2=my.x2
Contents of x are
  my.x1 my.x2
1   2.1   0.6
Error : model.frame.default could not interpret the data passed to get.earth.x from model.matrix.earth from predict.earth
A-69 above test but with properly named dataframe trace=1
     growth
[1,] 10.211
Tests with not all predictors used in the model so can pass fewer columns
x is a 12 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0.000810716 < 0.001)
After forward pass GRSq 0.7375 RSq 0.9219
Prune method "none" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 3 predictors
After backward pass GRSq 0.8679 RSq 0.9211 
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
Contents of x are
     ldose dummy ldose1
[1,]    -2     0    0.1
predict.earth: bx is a 1 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
Contents of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
predict.earth: returning earth predictions 
       numdead
[1,] 0.1428571
A-72m predict(am, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
Contents of x are
     ldose dummy ldose1
[1,]    -2   999    0.1
predict.earth: bx is a 1 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
Contents of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
predict.earth: returning earth predictions 
       numdead
[1,] 0.1428571
A-72m identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
get.earth.x from model.matrix.earth from predict.earth: x is a 12 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
First few rows of x are
  ldose dummy ldose1
1    -2     0    0.1
2    -1     0    1.2
3     0     0    0.1
4     1     0    1.2
5     2     0    1.0
6     3     0    0.1
predict.earth: bx is a 12 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
First few rows of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
[2,]           1           1
[3,]           1           2
[4,]           1           3
[5,]           1           4
[6,]           1           5
predict.earth: returning earth predictions 
         numdead
 [1,]  0.1428571
 [2,]  3.7857143
 [3,]  7.4285714
 [4,] 11.0714286
 [5,] 14.7142857
 [6,] 18.3571429
 [7,]  0.1428571
 [8,]  3.7857143
 [9,]  7.4285714
[10,] 11.0714286
[11,] 14.7142857
[12,] 18.3571429
A-73m predict(am, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x is a 12 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
First few rows of x are
     ldose dummy ldose1
[1,]    -2   999    0.1
[2,]    -1   999    1.2
[3,]     0   999    0.1
[4,]     1   999    1.2
[5,]     2   999    1.0
[6,]     3   999    0.1
predict.earth: bx is a 12 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
First few rows of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
[2,]           1           1
[3,]           1           2
[4,]           1           3
[5,]           1           4
[6,]           1           5
predict.earth: returning earth predictions 
         numdead
 [1,]  0.1428571
 [2,]  3.7857143
 [3,]  7.4285714
 [4,] 11.0714286
 [5,] 14.7142857
 [6,] 18.3571429
 [7,]  0.1428571
 [8,]  3.7857143
 [9,]  7.4285714
[10,] 11.0714286
[11,] 14.7142857
[12,] 18.3571429
A-73m identical
x is a 12 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0.000810716 < 0.001)
After forward pass GRSq 0.7375 RSq 0.9219
Prune method "none" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 3 predictors
After backward pass GRSq 0.8679 RSq 0.9211 
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
Contents of x are
  ldose dummy ldose1
1    -2     0    0.1
predict.earth: bx is a 1 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
Contents of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
predict.earth: returning earth predictions 
       numdead
[1,] 0.1428571
A-72f predict(af, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
Contents of x are
  ldose dummy ldose1
1    -2   999    0.1
predict.earth: bx is a 1 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
Contents of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
predict.earth: returning earth predictions 
       numdead
[1,] 0.1428571
A-72f identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
get.earth.x from model.matrix.earth from predict.earth: x is a 12 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
First few rows of x are
  ldose dummy ldose1
1    -2     0    0.1
2    -1     0    1.2
3     0     0    0.1
4     1     0    1.2
5     2     0    1.0
6     3     0    0.1
predict.earth: bx is a 12 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
First few rows of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
[2,]           1           1
[3,]           1           2
[4,]           1           3
[5,]           1           4
[6,]           1           5
predict.earth: returning earth predictions 
         numdead
 [1,]  0.1428571
 [2,]  3.7857143
 [3,]  7.4285714
 [4,] 11.0714286
 [5,] 14.7142857
 [6,] 18.3571429
 [7,]  0.1428571
 [8,]  3.7857143
 [9,]  7.4285714
[10,] 11.0714286
[11,] 14.7142857
[12,] 18.3571429
A-73f predict(af, newdata=newdata[two columns], trace=trace)
get.earth.x from model.matrix.earth from predict.earth: x has missing columns, creating a new x with all cols
get.earth.x from model.matrix.earth from predict.earth: x is a 12 by 3 matrix: 1=ldose, 2=dummy, 3=ldose1
First few rows of x are
  ldose dummy ldose1
1    -2   999    0.1
2    -1   999    1.2
3     0   999    0.1
4     1   999    1.2
5     2   999    1.0
6     3   999    0.1
predict.earth: bx is a 12 by 2 matrix: 1=(Intercept), 2=h(ldose--2)
First few rows of bx are
     (Intercept) h(ldose--2)
[1,]           1           0
[2,]           1           1
[3,]           1           2
[4,]           1           3
[5,]           1           4
[6,]           1           5
predict.earth: returning earth predictions 
         numdead
 [1,]  0.1428571
 [2,]  3.7857143
 [3,]  7.4285714
 [4,] 11.0714286
 [5,] 14.7142857
 [6,] 18.3571429
 [7,]  0.1428571
 [8,]  3.7857143
 [9,]  7.4285714
[10,] 11.0714286
[11,] 14.7142857
[12,] 18.3571429
A-73f identical

--- B predict with multiple level factors and a multiple real response, trace=1 ---

x is a 12 by 6 matrix: 1=sex3female, 2=sex3male, 3=ldose, 4=ldose1, 5=fac3lev2, 6=fac3lev3
y is a 12 by 2 matrix: 1=numdead, 2=numdead2
Forward pass term 1, 2, 4, 6, 8, 10, 12
Reached delta RSq threshold (DeltaRSq 0.000878487 < 0.001)
After forward pass GRSq 0.9392 RSq 0.992
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Prune method "none" penalty 3 nprune 6: selected 6 of 6 terms, and 4 of 6 predictors
After backward pass GRSq 0.5201 RSq 0.991 
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
x is a 12 by 6 matrix: 1=sex3female, 2=sex3male, 3=ldose, 4=ldose1, 5=fac3lev2, 6=fac3lev3
y is a 12 by 2 matrix: 1=numdead, 2=numdead2
Forward pass term 1, 2, 4, 6, 8, 10, 12
Reached delta RSq threshold (DeltaRSq 0.000878487 < 0.001)
After forward pass GRSq 0.9392 RSq 0.992
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Prune method "none" penalty 3 nprune 6: selected 6 of 6 terms, and 4 of 6 predictors
After backward pass GRSq 0.5201 RSq 0.991 
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
check.models.equal not identical: B predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=1)
predict.earth: returning earth fitted.values 
       numdead  numdead2
[1,]  1.184457  1.773767
[2,]  4.008754  3.868530
[3,]  9.051451  9.525572
[4,] 12.984949 13.401474
[5,] 16.918446 17.277377
[6,] 20.851943 21.153279
B-21f head(predict(af, trace=1)
predict.earth: returning earth fitted.values 
       numdead  numdead2
[1,]  1.184457  1.773767
[2,]  4.008754  3.868530
[3,]  9.051451  9.525572
[4,] 12.984949 13.401474
[5,] 16.918446 17.277377
[6,] 20.851943 21.153279
B-20 identical
B-31m predict(am, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
B-31 identical
      numdead numdead2
[1,] 1.184457 1.773767
B-31f predict(af, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-31 identical
B-31bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-31 identical
B-31bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-31b identical
B-32m predict(am, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-32 identical
B-32 identical
B-32f predict(af, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-32 identical
B-53m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-53f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-54m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-54 identical
B-54f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-54 identical
B-55m predict(am, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..7.. c..2...1. c.0.1..0.1. fac3.c.1..9..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           1                    0                    0        0
     sex3female
[1,]          0
[2,]          1
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 3.100445 3.912609
B-55m again, but with same x data for both reponses
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..1.. c..2...2. c.0.1..0.1. fac3.c.1..1..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
2 male    -2    0.1 lev2
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           0                    0                    0        1
     sex3female
[1,]          0
[2,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 1.184457 1.773767
B-55f predict(af, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..1.. c..2...2. c.0.1..0.1. fac3.c.1..1..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
2 male    -2    0.1 lev2
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           0                    0                    0        1
     sex3female
[1,]          0
[2,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 1.184457 1.773767
B-55 identical
B2-55bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           1                    0                    0        0
     sex3female
[1,]          0
[2,]          1
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 3.100445 3.912609
B2-55 identical
B2-55bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           1                    0                    0        0
     sex3female
[1,]          0
[2,]          1
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 3.100445 3.912609
B2-55b identical
B-56m predict(am, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           1                    0                    0        0
     sex3female
[1,]          0
[2,]          1
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 3.100445 3.912609
B-56 identical
B-56f predict(af, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           1                    0                    0        0
     sex3female
[1,]          0
[2,]          1
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 3.100445 3.912609
B-56 identical
B-57m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-57f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-57 identical
B-58m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           1                    0                    0        0
     sex3female
[1,]          0
[2,]          1
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 3.100445 3.912609
B-58 identical
B-58f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
[2,]           1           1                    0                    0        0
     sex3female
[1,]          0
[2,]          1
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 3.100445 3.912609
B-58 identical
B-50m data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-34 identical
B-60f data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-60 identical
B-60f data frame without extra columns, trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 7 matrix: 1=sex3 (factor), 2=extra1, 3=ldose, 4=extra2, 5=ldose1, 6=fac3 (factor), 7=extra3 (factor)
Contents of x are
  sex3 extra1 ldose extra2 ldose1 fac3 extra3
1 male     99    -2     99    0.1 lev2 female
predict.earth: bx is a 1 by 6 matrix: 1=(Intercept), 2=h(ldose--2), 3=sex3male*h(ldose--2), 4=h(ldose--2)*fac3lev2, 5=sex3male, 6=sex3female
Contents of bx are
     (Intercept) h(ldose--2) sex3male*h(ldose--2) h(ldose--2)*fac3lev2 sex3male
[1,]           1           0                    0                    0        1
     sex3female
[1,]          0
predict.earth: returning earth predictions 
      numdead numdead2
[1,] 1.184457 1.773767
B-60f identical

--- C predict with multiple level factors and a 3 level factor response, trace=1 ---

x is a 12 by 6 matrix: 1=sex3female, 2=sex3male, 3=ldose, 4=ldose1, 5=fac3lev2, 6=fac3lev3
y is a 12 by 3 matrix: 1=dead1, 2=dead2, 3=dead3
Forward pass term 1, 2, 4, 6, 8
Reached min GRSq (GRSq -26.0319 < -10)
After forward pass GRSq -26.03 RSq 0.7766
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 3 of 6 predictors
After backward pass GRSq -1.837 RSq 0.7128 
x is a 12 by 6 matrix: 1=sex3female, 2=sex3male, 3=ldose, 4=ldose1, 5=fac3lev2, 6=fac3lev3
y is a 12 by 3 matrix: 1=dead1, 2=dead2, 3=dead3
Forward pass term 1, 2, 4, 6, 8
Reached min GRSq (GRSq -26.0319 < -10)
After forward pass GRSq -26.03 RSq 0.7766
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 3 of 6 predictors
After backward pass GRSq -1.837 RSq 0.7128 
check.models.equal not identical: C predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=1)
predict.earth: returning earth fitted.values 
             dead1         dead2 dead3
[1,] -2.335186e-16  8.750000e-01 0.125
[2,]  3.073976e-16  8.750000e-01 0.125
[3,]  5.000000e-01  1.250000e-01 0.375
[4,]  5.000000e-01  1.250000e-01 0.375
[5,]  5.544942e-18 -9.905203e-18 1.000
[6,]  5.544942e-18 -9.905203e-18 1.000
C-21f head(predict(af, trace=1)
predict.earth: returning earth fitted.values 
             dead1         dead2 dead3
[1,] -2.335186e-16  8.750000e-01 0.125
[2,]  3.073976e-16  8.750000e-01 0.125
[3,]  5.000000e-01  1.250000e-01 0.375
[4,]  5.000000e-01  1.250000e-01 0.375
[5,]  5.544942e-18 -9.905203e-18 1.000
[6,]  5.544942e-18 -9.905203e-18 1.000
C-20 identical
C-31m predict(am, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
C-31 identical
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-31f predict(af, xdata.frame, trace=1) data frame with factors and wrong col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.1. X.2 X0.1 fac3.1.
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-31 identical
C-31bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-31 identical
C-31bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-31b identical
C-32m predict(am, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-32 identical
C-32 identical
C-32f predict(af, xdata.frame, trace=1) # data frame with names
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-32 identical
C-53m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-53f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-54m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-54 identical
C-54f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-54 identical
C-55m predict(am, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..7.. c..2...1. c.0.1..0.1. fac3.c.1..9..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C-55f predict(af, xdata.frame, trace=1) data frame without col names
get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: sex3.c.1..7.. c..2...1. c.0.1..0.1. fac3.c.1..9..
    New names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C-55 identical
C2-55bm predict(am, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C2-55 identical
C2-55bf predict(af, xdata.frame, trace=1) data frame col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C2-55b identical
C-56m predict(am, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C-56 identical
C-56f predict(af, xdata.frame, trace=1) # data frame with col names
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C-56 identical
C-57m predict(am, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-57f predict(af, xdata.frame, trace=1) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-57 identical
C-58m predict(am, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C-58 identical
C-58f predict(af, xdata.frame, trace=1) # data frame with cols in different order
get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: ldose sex3 ldose1 fac3
    New columns: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
    sex3 ldose ldose1 fac3
1   male    -2    0.1 lev2
2 female    -1    0.1 lev1
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
[2,]           1        0        0          1
predict.earth: returning earth predictions 
            dead1  dead2 dead3
[1,] 2.775558e-16  0.875 0.125
[2,] 1.000000e+00 -0.125 0.125
C-58 identical
C-50m data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-34 identical
C-60f data frame without column names, trace=1
get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: sex3 ldose ldose1 fac3
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 4 matrix: 1=sex3 (factor), 2=ldose, 3=ldose1, 4=fac3 (factor)
Contents of x are
  sex3 ldose ldose1 fac3
1 male    -2    0.1 lev2
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-60 identical
C-61f data frame without extra columns, trace=1
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 7 matrix: 1=sex3 (factor), 2=extra1, 3=ldose, 4=extra2, 5=ldose1, 6=fac3 (factor), 7=extra3 (factor)
Contents of x are
  sex3 extra1 ldose extra2 ldose1 fac3 extra3
1 male     99    -2     99    0.1 lev2 female
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=fac3lev3, 3=fac3lev2, 4=sex3female
Contents of bx are
     (Intercept) fac3lev3 fac3lev2 sex3female
[1,]           1        0        1          0
predict.earth: returning earth predictions 
            dead1 dead2 dead3
[1,] 2.775558e-16 0.875 0.125
C-61 identical
> test.predict.with.factors(trace=0)

--- predict with single level factors and a single response, trace=0 ---

first do a quick test of predict.earth help page example
check.models.equal not identical: predict with single level factors and a single response [but within numerical tolerances]
A-20m head(predict(am, trace=0)
A-20f head(predict(af, trace=0)
A-20 identical
A-21m predict(am, newdata=c(sex[1], -2, 0.1), trace=0))
A-21f predict(af, newdata=c(sex[1], -2, 0.1), trace=0))
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
A-21 identical
A-22m predict(am, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
A-22 identical
A-22f predict(af, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
A-22 identical
A-23m predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
A-23f predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
A-23 identical
A-24m predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
A-24f predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-24 identical
A-25m predict(am, xpredict matrix trace=0
A-25 identical
A-25f predict(af, xpredict matrix trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-25 identical
A-26m predict(am, new.data with col names) trace=0
A-26m identical
A-26f predict(af, new.data with col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-26f identical
A-27m predict(am, new.data with out of order col names) trace=0
A-27 identical
A-27f predict(af, new.data with out of order col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-27 identical
A-28m predict(am, xdata.frame without col names) trace=0
A-28 identical
A-28f predict(af, xdata.frame without col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-28 identical
A-29m predict(am, xdata.frame with col names) trace=0
A-29 identical
A-29f predict(af, xdata.frame with col names) trace=0
A-29 identical
A2-29m predict(am, xdata.frame with col names) trace=0
A2-29 identical
A2-29f predict(af, xdata.frame with col names) trace=0
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A2-29 identical
A-31m predict(am, xdata.frame, trace=0) data frame with factors and wrong col names
A-31 identical
A-31f predict(af, xdata.frame, trace=0) data frame with factors and wrong col names
A-31 identical
A-31bm predict(am, xdata.frame, trace=0) data frame col names
A-31 identical
A-31bf predict(af, xdata.frame, trace=0) data frame col names
A-31b identical
A-32m predict(am, xdata.frame, trace=0) # data frame with names
A-32 identical
A-32 identical
A-32f predict(af, xdata.frame, trace=0) # data frame with names
A-32 identical
A-42am predict(am, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
A-42a identical
A-42af predict(af, newdata=c(1, -2, 0.1), trace=0)) use numeric instead of factor sex
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   1    -2    0.1
A-42a identical
A-43am predict(af, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -2    0.1
A-43af predict(am, newdata=c(sex[1], sex[1], -2, -2, 0.1, 0.1), trace=0)) multiple rows as a vec
A-43a identical
A-44am predict(af, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   2    -1    0.1
A-44a identical
A-44fm predict(am, newdata=c(sex[1], sex[1], -2, -1, 0.1, 0.1), trace=0)) more multiple rows as a vec
A-44f identical
A-53m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
A-53f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sex ldose ldose1
A-54m predict(am, xdata.frame, trace=0) # data frame with cols in different order
A-54 identical
A-54f predict(af, xdata.frame, trace=0) # data frame with cols in different order
A-54 identical
A-55m predict(am, xdata.frame, trace=0) data frame without col names
A-55f predict(af, xdata.frame, trace=0) data frame without col names
A-55 identical
A-56m predict(am, xdata.frame, trace=0) # data frame with col names
A-56 identical
A-56f predict(af, xdata.frame, trace=0) # data frame with col names
A-56 identical
A-57m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 3 to match: sexmale ldose ldose1
A-57f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
A-57 identical
A-58m predict(am, xdata.frame, trace=0) # data frame with cols in different order
A-58 identical
A-58f predict(af, xdata.frame, trace=0) # data frame with cols in different order
A-58 identical
A-59m predict(am, xdata.frame, trace=0) numeric where factor expected, expect forge on message
A-59f predict(af, xdata.frame, trace=0) numeric where factor expected, expect forge on message
Error : variable 'sex' was fitted with type "factor" but type "numeric" was supplied
Forging on regardless, first few rows of x are
  sex ldose ldose1
1   2    -2    0.1
2   1    -1    0.1
A-59 identical
A-50m data frame without column names, trace=0
A-34 identical
A-60f data frame without column names, trace=0
A-60 identical
A-61f data frame without extra columns, trace=0
A-61 identical
A-68 input matrix to formula interface trace=0, expect error "could not interpret"
Error : model.frame.default could not interpret the data passed to get.earth.x from model.matrix.earth from predict.earth
A-69 above test but with properly named dataframe trace=0
Tests with not all predictors used in the model so can pass fewer columns
A-72m predict(am, newdata=newdata[two columns], trace=trace)
A-72m identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
A-73m predict(am, newdata=newdata[two columns], trace=trace)
A-73m identical
A-72f predict(af, newdata=newdata[two columns], trace=trace)
A-72f identical
   ldose dummy ldose1
1     -2     0    0.1
2     -1     0    1.2
3      0     0    0.1
4      1     0    1.2
5      2     0    1.0
6      3     0    0.1
7     -2     0    0.3
8     -1     0    1.4
9      0     0    0.1
10     1     0    1.2
11     2     0    0.1
12     3     0    0.9
A-73f predict(af, newdata=newdata[two columns], trace=trace)
A-73f identical

--- B predict with multiple level factors and a multiple real response, trace=0 ---

Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
Warning: effective number 13.5 of GCV parameters >= number 12 of cases
check.models.equal not identical: B predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=0)
B-21f head(predict(af, trace=0)
B-20 identical
B-31m predict(am, xdata.frame, trace=0) data frame with factors and wrong col names
B-31 identical
B-31f predict(af, xdata.frame, trace=0) data frame with factors and wrong col names
B-31 identical
B-31bm predict(am, xdata.frame, trace=0) data frame col names
B-31 identical
B-31bf predict(af, xdata.frame, trace=0) data frame col names
B-31b identical
B-32m predict(am, xdata.frame, trace=0) # data frame with names
B-32 identical
B-32 identical
B-32f predict(af, xdata.frame, trace=0) # data frame with names
B-32 identical
B-53m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-53f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-54m predict(am, xdata.frame, trace=0) # data frame with cols in different order
B-54 identical
B-54f predict(af, xdata.frame, trace=0) # data frame with cols in different order
B-54 identical
B-55m predict(am, xdata.frame, trace=0) data frame without col names
B-55m again, but with same x data for both reponses
      numdead numdead2
[1,] 1.184457 1.773767
[2,] 1.184457 1.773767
B-55f predict(af, xdata.frame, trace=0) data frame without col names
B-55 identical
B2-55bm predict(am, xdata.frame, trace=0) data frame col names
B2-55 identical
B2-55bf predict(af, xdata.frame, trace=0) data frame col names
B2-55b identical
B-56m predict(am, xdata.frame, trace=0) # data frame with col names
B-56 identical
B-56f predict(af, xdata.frame, trace=0) # data frame with col names
B-56 identical
B-57m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-57f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
B-57 identical
B-58m predict(am, xdata.frame, trace=0) # data frame with cols in different order
B-58 identical
B-58f predict(af, xdata.frame, trace=0) # data frame with cols in different order
B-58 identical
B-50m data frame without column names, trace=0
B-34 identical
B-60f data frame without column names, trace=0
B-60 identical
B-60f data frame without extra columns, trace=0
B-60f identical

--- C predict with multiple level factors and a 3 level factor response, trace=0 ---

check.models.equal not identical: C predict with multiple level factors and a multiple real response [but within numerical tolerances]
20m head(predict(am, trace=0)
C-21f head(predict(af, trace=0)
C-20 identical
C-31m predict(am, xdata.frame, trace=0) data frame with factors and wrong col names
C-31 identical
C-31f predict(af, xdata.frame, trace=0) data frame with factors and wrong col names
C-31 identical
C-31bm predict(am, xdata.frame, trace=0) data frame col names
C-31 identical
C-31bf predict(af, xdata.frame, trace=0) data frame col names
C-31b identical
C-32m predict(am, xdata.frame, trace=0) # data frame with names
C-32 identical
C-32 identical
C-32f predict(af, xdata.frame, trace=0) # data frame with names
C-32 identical
C-53m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-53f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-54m predict(am, xdata.frame, trace=0) # data frame with cols in different order
C-54 identical
C-54f predict(af, xdata.frame, trace=0) # data frame with cols in different order
C-54 identical
C-55m predict(am, xdata.frame, trace=0) data frame without col names
C-55f predict(af, xdata.frame, trace=0) data frame without col names
C-55 identical
C2-55bm predict(am, xdata.frame, trace=0) data frame col names
C2-55 identical
C2-55bf predict(af, xdata.frame, trace=0) data frame col names
C2-55b identical
C-56m predict(am, xdata.frame, trace=0) # data frame with col names
C-56 identical
C-56f predict(af, xdata.frame, trace=0) # data frame with col names
C-56 identical
C-57m predict(am, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-57f predict(af, xdata.frame, trace=0) data frame with not enough columns, expect error message
Error : get.earth.x from model.matrix.earth from predict.earth: x has 2 columns, expected 4 to match: sex3 ldose ldose1 fac3
C-57 identical
C-58m predict(am, xdata.frame, trace=0) # data frame with cols in different order
C-58 identical
C-58f predict(af, xdata.frame, trace=0) # data frame with cols in different order
C-58 identical
C-50m data frame without column names, trace=0
C-34 identical
C-60f data frame without column names, trace=0
C-60 identical
C-61f data frame without extra columns, trace=0
C-61 identical
> 
> cat("---test glm.predict---\n")
---test glm.predict---
> 
> ldose  <- rep(0:5, 2) - 2
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> SF <- cbind(numdead, numalive=20 - numdead)
> 
> cat("c1a: single response glm model with a binomial pair of y columns, fitted values, keepxy=0\n")
c1a: single response glm model with a binomial pair of y columns, fitted values, keepxy=0
> c1a <-  earth(SF ~ sex + ldose, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=0)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
> c1ae <-  earth(numdead ~ sex + ldose, trace=1, pmethod="none", degree=1, keepxy=0)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
> c1ag <- glm(SF ~ sex + ldose, family="binomial") # use this as a reference
> 
> c1a.predict <- predict(c1a, trace=1)
predict.earth: returning glm fitted.values
> c1ag.predict <- predict(c1ag, trace=1)
> check.fuzzy.equal(c1a.predict, c1ag.predict, fuzz=1e-10, msg="c1a fitted values, type=default link, keepxy=0", verbose=TRUE)
c1a fitted values, type=default link, keepxy=0 OK
> c1a.predict <- predict(c1a, type="link", trace=1)
predict.earth: returning glm fitted.values
> c1ag.predict <- predict(c1ag, type="li", trace=1)
> check.fuzzy.equal(c1a.predict, c1ag.predict, fuzz=1e-10, msg="c1a fitted values, type=link, keepxy=0", verbose=TRUE)
c1a fitted values, type=link, keepxy=0 OK
> c1a.predict <- predict(c1a, type="response", trace=1)
predict.earth: returning glm fitted.values
> c1ag.predict <- predict(c1ag, type="resp", trace=1)
> check.fuzzy.equal(c1a.predict, c1ag.predict, fuzz=1e-10, msg="c1a fitted values, type=response, keepxy=0", verbose=TRUE)
c1a fitted values, type=response, keepxy=0 OK
> c1a.predict <- predict(c1a, type="e", trace=1)
predict.earth: returning earth (not glm) fitted.values 
> c1ae.predict <- predict(c1ae, trace=1)
predict.earth: returning earth fitted.values 
> check.fuzzy.equal(c1a.predict, c1ae.predict, fuzz=1e-10, msg="c1a fitted values, type=earth, keepxy=0", verbose=TRUE)
c1a fitted values, type=earth, keepxy=0 OK
> 
> cat("c1b: single response glm model with a binomial pair of y columns\n")
c1b: single response glm model with a binomial pair of y columns
> c1b <-  earth(SF ~ sex + ldose, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
No 'data' argument to earth so ignoring keepxy for 'data'
> c1be <-  earth(numdead ~ sex + ldose, trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
No 'data' argument to earth so ignoring keepxy for 'data'
> c1bg <- glm(SF ~ sex + ldose, family="binomial") # use this as a reference
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c1b.predict <- predict(c1b, newdata, trace=1)
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
   sex ldose
1 male     2
predict.earth: bx is a 1 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           4       1
predict.earth: returning glm link predictions
> stopifnot(dim(c1b.predict) == c(1,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata), fuzz=1e-10, msg="c1b", verbose=TRUE)
c1b OK
> 
> c1b.link.predict <- predict(c1b, newdata, type="link", trace=1) # should be same as above because default is link
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
   sex ldose
1 male     2
predict.earth: bx is a 1 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           4       1
predict.earth: returning glm link predictions
> check.fuzzy.equal(c1b.link.predict, c1b.predict, fuzz=1e-10, msg="c1b link", verbose=TRUE)
c1b link OK
> 
> c1b.predict <- predict(c1b, newdata, type="r")
> stopifnot(dim(c1b.predict) == c(1,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata, type="response"), fuzz=1e-10, msg="c1b type=response", verbose=TRUE)
c1b type=response OK
> 
> c1b.predict <- predict(c1b, newdata, type="earth")
> stopifnot(dim(c1b.predict) == c(1,1))
> check.fuzzy.equal(c1b.predict, predict(c1be, newdata), fuzz=1e-10, msg="c1b type=earth", verbose=TRUE)
c1b type=earth OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c1b.predict <- predict(c1b, newdata, trace=1)
get.earth.x from model.matrix.earth from predict.earth: x is a 4 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
predict.earth: bx is a 4 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           0       1
[2,]           1           2       1
[3,]           1           0       0
[4,]           1           2       0
predict.earth: returning glm link predictions
> stopifnot(dim(c1b.predict) == c(4,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata), fuzz=1e-10, msg="c1b multiple rows", verbose=TRUE)
c1b multiple rows OK
> 
> c1b.predict <- predict(c1b, newdata, type="response", trace=1)
get.earth.x from model.matrix.earth from predict.earth: x is a 4 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
predict.earth: bx is a 4 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           0       1
[2,]           1           2       1
[3,]           1           0       0
[4,]           1           2       0
predict.earth: returning glm response predictions
> stopifnot(dim(c1b.predict) == c(4,1))
> check.fuzzy.equal(c1b.predict, predict(c1bg, newdata, type="response"), fuzz=1e-10, msg="c1b multiple rows type=response", verbose=TRUE)
c1b multiple rows type=response OK
> 
> c1b.predict <- predict(c1b, newdata, type="terms", trace=0)
Warning: predict.earth: returning the earth (not glm) terms
> c1be.predict <- predict(c1be, newdata, type="terms")
> c1bg.predict <- predict(c1bg, newdata, type="terms")
> check.fuzzy.equal(c1b.predict, c1be.predict, fuzz=1e-10, msg="c1b multiple rows type=terms", verbose=TRUE)
c1b multiple rows type=terms OK
> 
> cat("c2: double response glm model with two y binomial pairs\n")
c2: double response glm model with two y binomial pairs
> SF2 <- cbind(numdead, numalive=20 - numdead, numdead2=numdead, numalive2=20 - numdead)
> c2 <-  earth(SF2 ~ sex + ldose, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
No 'data' argument to earth so ignoring keepxy for 'data'
> c2e <-  earth(data.frame(sex, ldose), data.frame(numdead,numdead), trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 2 matrix: 1=numdead, 2=numdead.1
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
> c2g <- glm(SF ~ sex + ldose, family="binomial") # use this as a reference
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c2.predict <- predict(c2, newdata, trace=1)
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
   sex ldose
1 male     2
predict.earth: bx is a 1 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           4       1
predict.earth: returning glm link predictions
> stopifnot(dim(c2.predict) == c(1,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata), fuzz=1e-10, msg="c2", verbose=TRUE)
c2 OK
> 
> c2.link.predict <- predict(c2, newdata, type="link", trace=1) # should be same as above because default is link
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
   sex ldose
1 male     2
predict.earth: bx is a 1 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           4       1
predict.earth: returning glm link predictions
> check.fuzzy.equal(c2.link.predict, c2.predict, fuzz=1e-10, msg="c2 link", verbose=TRUE)
c2 link OK
> 
> c2.predict <- predict(c2, newdata, type="response")
> stopifnot(dim(c2.predict) == c(1,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata, type="response"), fuzz=1e-10, msg="c2 multiple rows type=response", verbose=TRUE)
c2 multiple rows type=response OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c2.predict <- predict(c2, newdata)
> stopifnot(dim(c2.predict) == c(4,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata), fuzz=1e-10, msg="c2 column1", verbose=TRUE)
c2 column1 OK
> check.fuzzy.equal(c2.predict[,2], predict(c2g, newdata), fuzz=1e-10, msg="c2 column2", verbose=TRUE)
c2 column2 OK
> 
> c2.predict <- predict(c2, newdata, type="response")
> stopifnot(dim(c2.predict) == c(4,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2g, newdata, type="response"), fuzz=1e-10, msg="c2 column1 multiple rows type=response", verbose=TRUE)
c2 column1 multiple rows type=response OK
> check.fuzzy.equal(c2.predict[,2], predict(c2g, newdata, type="response"), fuzz=1e-10, msg="c2 column2 multiple rows type=response", verbose=TRUE)
c2 column2 multiple rows type=response OK
> 
> c2.predict <- predict(c2, newdata, type="earth", trace=1)
get.earth.x from model.matrix.earth from predict.earth: x is a 4 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
predict.earth: bx is a 4 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           0       1
[2,]           1           2       1
[3,]           1           0       0
[4,]           1           2       0
predict.earth: returning earth (not glm) predictions 
> stopifnot(dim(c2.predict) == c(4,2))
> check.fuzzy.equal(c2.predict[,1], predict(c2e, newdata, trace=1), fuzz=1e-10, msg="c2 column1 multiple rows type=earth", verbose=TRUE)
get.earth.x from model.matrix.earth from predict.earth: x is a 4 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
predict.earth: bx is a 4 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           0       1
[2,]           1           2       1
[3,]           1           0       0
[4,]           1           2       0
predict.earth: returning earth predictions 
c2 column1 multiple rows type=earth OK
> check.fuzzy.equal(c2.predict[,2], predict(c2e, newdata, trace=1), fuzz=1e-10, msg="c2 column2 multiple rows type=earth", verbose=TRUE)
get.earth.x from model.matrix.earth from predict.earth: x is a 4 by 2 matrix: 1=sex (factor), 2=ldose
Contents of x are
     sex ldose
1   male    -2
2   male     0
3 female    -2
4 female     0
predict.earth: bx is a 4 by 3 matrix: 1=(Intercept), 2=h(ldose--2), 3=sexmale
Contents of bx are
     (Intercept) h(ldose--2) sexmale
[1,]           1           0       1
[2,]           1           2       1
[3,]           1           0       0
[4,]           1           2       0
predict.earth: returning earth predictions 
c2 column2 multiple rows type=earth OK
> 
> cat("c3a: single response glm model with a boolean response, fitted values, keepxy=0\n")
c3a: single response glm model with a boolean response, fitted values, keepxy=0
> 
> mybool <- rep(c(FALSE, TRUE), times=c(6,6))
> data1 <- data.frame(mybool, sex, ldose)
> c3a <-  earth(mybool ~ sex + ldose, data=data1, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=0)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=mybool
Forward pass term 1, 2
Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Prune method "none" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
GLM mybool: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (10 dof)   iters 23
> c3ag <- glm(mybool ~ sex + ldose, family="binomial") # use this as a reference
> c3ae <- earth(mybool ~ sex + ldose, data=data1, pmethod="none", degree=1, keepxy=1)
> 
> c3a.predict <- predict(c3a, trace=1)
predict.earth: returning glm fitted.values
> c3ag.predict <- predict(c3ag, trace=1)
> # TODO why does fuzz have to be big here?
> check.fuzzy.equal(c3a.predict, c3ag.predict, fuzz=1e-7, msg="c3a fitted values, type=default link, keepxy=0", verbose=TRUE)
c3a fitted values, type=default link, keepxy=0 OK
> c3a.predict <- predict(c3a, type="link", trace=1)
predict.earth: returning glm fitted.values
> c3ag.predict <- predict(c3ag, type="link", trace=1)
> check.fuzzy.equal(c3a.predict, c3ag.predict, fuzz=1e-7, msg="c3a fitted values, type=link, keepxy=0", verbose=TRUE)
c3a fitted values, type=link, keepxy=0 OK
> c3a.predict <- predict(c3a, type="response", trace=1)
predict.earth: returning glm fitted.values
> c3ag.predict <- predict(c3ag, type="response", trace=1)
> check.fuzzy.equal(c3a.predict, c3ag.predict, fuzz=1e-10, msg="c3a fitted values, type=response, keepxy=0", verbose=TRUE)
c3a fitted values, type=response, keepxy=0 OK
> c3a.predict <- predict(c3a, type="earth", trace=1)
predict.earth: returning earth (not glm) fitted.values 
> c3ae.predict <- predict(c3ae, trace=1)
predict.earth: returning earth fitted.values 
> check.fuzzy.equal(c3a.predict, c3ae.predict, fuzz=1e-10, msg="c3a fitted values, type=earth, keepxy=0", verbose=TRUE)
c3a fitted values, type=earth, keepxy=0 OK
> 
> c3a.response.predict <- predict(c3a, type="response")
> c3a.class.predict <- predict(c3a,type="class")
> stopifnot(c3a.class.predict == (c3a.response.predict > .5))
> 
> cat("c3b: single response glm model with a boolean response, fitted values, keepxy=1\n")
c3b: single response glm model with a boolean response, fitted values, keepxy=1
> 
> c3b <-  earth(mybool ~ sex + ldose, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=mybool
Forward pass term 1, 2
Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Prune method "none" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
GLM mybool: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (10 dof)   iters 23
No 'data' argument to earth so ignoring keepxy for 'data'
> c3bg <- glm(mybool ~ sex + ldose, family="binomial") # use this as a reference
> c3be <- earth(mybool ~ sex + ldose, pmethod="none", degree=1, keepxy=0)
> 
> c3b.predict <- predict(c3b, trace=1) # fitted values
predict.earth: returning glm fitted.values
> c3bg.predict <- predict(c3bg, trace=1)
> check.fuzzy.equal(c3b.predict, c3bg.predict, fuzz=1e-7, msg="c3b fitted values, type=default link, keepxy=0", verbose=TRUE)
c3b fitted values, type=default link, keepxy=0 OK
> c3b.predict <- predict(c3b, type="link", trace=1)
predict.earth: returning glm fitted.values
> c3bg.predict <- predict(c3bg, type="link", trace=1)
> check.fuzzy.equal(c3b.predict, c3bg.predict, fuzz=1e-7, msg="c3b fitted values, type=link, keepxy=0", verbose=TRUE)
c3b fitted values, type=link, keepxy=0 OK
> c3b.predict <- predict(c3b, type="response", trace=1)
predict.earth: returning glm fitted.values
> c3bg.predict <- predict(c3bg, type="response", trace=1)
> check.fuzzy.equal(c3b.predict, c3bg.predict, fuzz=1e-10, msg="c3b fitted values, type=response, keepxy=0", verbose=TRUE)
c3b fitted values, type=response, keepxy=0 OK
> c3b.predict <- predict(c3b, type="earth", trace=1)
predict.earth: returning earth (not glm) fitted.values 
> c3be.predict <- predict(c3be, trace=1)
predict.earth: returning earth fitted.values 
> check.fuzzy.equal(c3b.predict, c3be.predict, fuzz=1e-10, msg="c3b fitted values, type=earth, keepxy=0", verbose=TRUE)
c3b fitted values, type=earth, keepxy=0 OK
> 
> c3b.response.predict <- predict(c3b, type="response")
> c3b.class.predict <- predict(c3b,type="class")
> stopifnot(c3b.class.predict == (c3b.response.predict > .5))
> 
> cat("c3c: single response glm model with a boolean response\n")
c3c: single response glm model with a boolean response
> 
> c3c <-  earth(mybool ~ sex + ldose, data=data1, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=0)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=mybool
Forward pass term 1, 2
Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Prune method "none" penalty 2 nprune 2: selected 2 of 2 terms, and 1 of 2 predictors
After backward pass GRSq 1 RSq 1 
GLM mybool: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (10 dof)   iters 23
> c3cg <- glm(mybool ~ sex + ldose, data=data1, family="binomial") # use this as a reference
> c3ce <- earth(mybool ~ sex + ldose, data=data1, pmethod="none", degree=1, keepxy=0)
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c3c.predict <- predict(c3c, newdata)
> stopifnot(dim(c3c.predict) == c(1,1))
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata), fuzz=1e-10, msg="c3c", verbose=TRUE)
c3c OK
> 
> c3c.predict <- predict(c3c, newdata, type="response")
> stopifnot(dim(c3c.predict) == c(1,1))
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata, type="response"), fuzz=1e-10, msg="c3c type=response", verbose=TRUE)
c3c type=response OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c3c.predict <- predict(c3c, newdata)
> stopifnot(dim(c3c.predict) == c(4,1))
> # TODO why does the fuzz have to be bigger on this?
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata), fuzz=1e-7, msg="c3c multiple rows", verbose=TRUE)
c3c multiple rows OK
> 
> c3c.predict <- predict(c3c, newdata, type="response")
> stopifnot(dim(c3c.predict) == c(4,1))
> check.fuzzy.equal(c3c.predict, predict(c3cg, newdata, type="response"), fuzz=1e-10, msg="c3c multiple rows type=response", verbose=TRUE)
c3c multiple rows type=response OK
> 
> c3c.response.predict <- predict(c3c, type="response")
> c3c.class.predict <- predict(c3c,type="class")
> stopifnot(c3c.class.predict == (c3c.response.predict > .5))
> 
> cat("c3d: single response glm model with a two level factor response\n")
c3d: single response glm model with a two level factor response
> cat("Expect \"did not converge warnings\", it doesn't matter for our purposes here\n")
Expect "did not converge warnings", it doesn't matter for our purposes here
> myfac <- gl(2, 3, length=12, labels = c("Control", "Treat"))
> c3d <-  earth(myfac ~ ldose + sex, data=data1, glm=list(family="binomial"), trace=0, pmethod="none", degree=1)
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
> c3d.class.predict <- predict(c3d,type="cl") # we also test here that the type can be abbreviated
> stopifnot(c3d.class.predict == myfac)
> 
> cat("c4: multiple response glm model with a factor response\n")
c4: multiple response glm model with a factor response
> fac3 <- factor(rep(c("A", "B", "C"), times=c(4,3,5)))
> cat("Expect \"did not converge warnings\", it doesn't matter for our purposes here\n")
Expect "did not converge warnings", it doesn't matter for our purposes here
> c4 <-  earth(fac3 ~ sex + ldose, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 3 matrix: 1=A, 2=B, 3=C
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -1.245 RSq 0.5362
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq -0.1454 RSq 0.5362 
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM A: null.deviance 15.27634 (11 dof)   deviance 9.406231e-10 (9 dof)   iters 25 did not converge
GLM B: null.deviance 13.49604 (11 dof)   deviance 12.68403 (9 dof)   iters 4
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM C: null.deviance 16.30064 (11 dof)   deviance 1.037213e-09 (9 dof)   iters 25 did not converge
No 'data' argument to earth so ignoring keepxy for 'data'
> c4g <- glm(fac3 ~ sex + ldose, family="binomial") # use this as a reference
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
> 
> newdata <- data.frame(sex=sex[1], ldose=2)
> c4.predict <- predict(c4, newdata)
> stopifnot(dim(c4.predict) == c(1,3))
> # minus needed on predict because of different handling of factors
> check.fuzzy.equal(c4.predict[1,1], -predict(c4g, newdata), fuzz=1e-8, msg="c4", verbose=TRUE)
c4 OK
> 
> newdata <- data.frame(sex=sex[c(1,3,7,9)], ldose=ldose[c(1,3,7,9)])
> c4.predict <- predict(c4, newdata)
> stopifnot(dim(c4.predict) == c(4,3))
> check.fuzzy.equal(c4.predict[,1], -predict(c4g, newdata), fuzz=1e-8, msg="c4 multiple rows", verbose=TRUE)
c4 multiple rows OK
> 
> c4.predict <- predict(c4, newdata, type="response")
> stopifnot(dim(c4.predict) == c(4,3))
> check.fuzzy.equal(1-c4.predict[,1], predict(c4g, newdata, type="response"), fuzz=1e-10, msg="c4 multiple rows type=response", verbose=TRUE)
c4 multiple rows type=response OK
> 
> cat("c5: multiple response glm model with two multi level factor responses\n")
c5: multiple response glm model with two multi level factor responses
> 
> fac3 <- factor(rep(c("A", "B", "C"), times=c(4,3,5)))
> fac4 <- factor(rep(c("P", "Q", "R", "S"), times=c(3,3,3,3)))
> big.dataframe <- data.frame(fac3, fac4)
> c5 <-  earth(data.frame(sex, ldose), big.dataframe, trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 7 matrix: 1=fac3A, 2=fac3B, 3=fac3C, 4=fac4P, 5=fac4Q, 6=fac4R, 7=fac4S
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -1.104 RSq 0.5652
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq -0.07368 RSq 0.5652 
> stopifnot(colnames(c5$coef) == c("fac3A", "fac3B", "fac3C",
+                                  "fac4P", "fac4Q", "fac4R", "fac4S"))
> stopifnot(is.null(c5$glm.bpairs))
> 
> cat("c6: multiple response earth model with mixed responses\n")
c6: multiple response earth model with mixed responses
> 
> big.dataframe2 <- data.frame(SF, fac3, fac4, SF+1, sex, fac4, SF+3)
> c6 <-  earth(data.frame(sex, ldose), big.dataframe2, trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 18 matrix: 1=numdead, 2=numalive, 3=fac3A, 4=fac3B, 5=fac3C, 6=fac4P, 7=fac4Q, 8=fac4R, 9=fac4S, 10=numdead.1, 11=numalive.1, 12=sex, 13=fac4.1P, 14=fac4.1Q, 15=fac4.1R, 16=fac4.1S, 17=numdead.2, 18=numalive.2
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.8903 RSq 0.9773
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.944 RSq 0.9773 
> stopifnot(colnames(c6$coef) == c("numdead", "numalive", "fac3A", "fac3B", "fac3C",
+                                   "fac4P", "fac4Q", "fac4R", "fac4S", "numdead.1", "numalive.1",
+                                   "sex", "fac4.1P", "fac4.1Q", "fac4.1R", "fac4.1S",
+                                   "numdead.2", "numalive.2"))
> stopifnot(is.null(c6$glm.bpairs))
> 
> cat("c7: multiple response glm model with mixed responses\n")
c7: multiple response glm model with mixed responses
> cat("Expect \"did not converge warnings\", it doesn't matter for our purposes here\n")
Expect "did not converge warnings", it doesn't matter for our purposes here
> c7 <-  earth(data.frame(sex, ldose), big.dataframe2, glm=list(family="binomial"), trace=1, pmethod="none", degree=1, keepxy=1)
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 18 matrix: 1=numdead (paired with numalive), 2=fac3A, 3=fac3B, 4=fac3C, 5=fac4P, 6=fac4Q, 7=fac4R, 8=fac4S, 9=numdead.1 (paired with numalive.1), 10=sex, 11=fac4.1P, 12=fac4.1Q, 13=fac4.1R, 14=fac4.1S, 15=numdead.2 (paired with numalive.2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.8741 RSq 0.974
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9357 RSq 0.974 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac3A: null.deviance 15.27634 (11 dof)   deviance 9.406231e-10 (9 dof)   iters 25 did not converge
GLM fac3B: null.deviance 13.49604 (11 dof)   deviance 12.68403 (9 dof)   iters 4
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac3C: null.deviance 16.30064 (11 dof)   deviance 1.037213e-09 (9 dof)   iters 25 did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4P: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4Q: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4R: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4S: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
GLM numdead.1: null.deviance 105.9173 (11 dof)   deviance 2.709378 (9 dof)   iters 4
GLM sex: null.deviance 16.63553 (11 dof)   deviance 5.144045e-10 (9 dof)   iters 23
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4.1P: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4.1Q: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4.1R: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
Warning in glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
GLM fac4.1S: null.deviance 13.49604 (11 dof)   deviance 9.190013e-10 (9 dof)   iters 25 did not converge
GLM numdead.2: null.deviance 84.92686 (11 dof)   deviance 1.525354 (9 dof)   iters 4
> print(summary(c7))
Call: earth(x=data.frame(sex, ldose), y=big.dataframe2, glm=list(family="binomial"), 
      trace=1, keepxy=1, pmethod="none", degree=1)

GLM coefficients
               numdead     fac3A      fac3B      fac3C     fac4P      fac4Q
(Intercept)  -3.473155 -24.02056 -2.2763280  -22.33291 -24.00932 -246.79864
sexmale       1.100743 179.74852  0.9447634 -223.30835 135.40398  135.40398
h(ldose- -2)  1.064214 -44.50778  0.2438926   44.32151 -44.55786   44.55786
                  fac4R      fac4S  numdead.1       sex   fac4.1P    fac4.1Q
(Intercept)   111.39466 -111.39466 -2.8523475 -24.56607 -24.00932 -246.79864
sexmale      -135.40398 -135.40398  0.8798704  49.13214 135.40398  135.40398
h(ldose- -2)  -44.55786   44.55786  0.8810902   0.00000 -44.55786   44.55786
                fac4.1R    fac4.1S  numdead.2
(Intercept)   111.39466 -111.39466 -2.1595272
sexmale      -135.40398 -135.40398  0.6440487
h(ldose- -2)  -44.55786   44.55786  0.6736460

Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
                GCV       RSS        GRSq        RSq
numdead   2.3760933  9.702381  0.95248599 0.98075879
fac3A     0.2145773  0.876190  0.18862974 0.67142857
fac3B     0.5148688  2.102381 -1.30737501 0.06560847
fac3C     0.1603499  0.654762  0.44564765 0.77551020
fac4P     0.2256560  0.921429 -0.01127308 0.59047619
fac4Q     0.2256560  0.921429 -0.01127308 0.59047619
fac4R     0.2256560  0.921429 -0.01127308 0.59047619
fac4S     0.2256560  0.921429 -0.01127308 0.59047619
numdead.1 2.3760933  9.702381  0.95248599 0.98075879
sex       0.0000000  0.000000  1.00000000 1.00000000
fac4.1P   0.2256560  0.921429 -0.01127308 0.59047619
fac4.1Q   0.2256560  0.921429 -0.01127308 0.59047619
fac4.1R   0.2256560  0.921429 -0.01127308 0.59047619
fac4.1S   0.2256560  0.921429 -0.01127308 0.59047619
numdead.2 2.3760933  9.702381  0.95248599 0.98075879
All       9.8233236 40.111905  0.93574668 0.97398006

GLM (family binomial, link logit)
          null.deviance df  deviance df iters converged
numdead       124.87559 11  6.757064  9     4         1
fac3A          15.27634 11  0.000000  9    25         0
fac3B          13.49604 11 12.684034  9     4         1
fac3C          16.30064 11  0.000000  9    25         0
fac4P          13.49604 11  0.000000  9    25         0
fac4Q          13.49604 11  0.000000  9    25         0
fac4R          13.49604 11  0.000000  9    25         0
fac4S          13.49604 11  0.000000  9    25         0
numdead.1     105.91731 11  2.709378  9     4         1
sex            16.63553 11  0.000000  9    23         1
fac4.1P        13.49604 11  0.000000  9    25         0
fac4.1Q        13.49604 11  0.000000  9    25         0
fac4.1R        13.49604 11  0.000000  9    25         0
fac4.1S        13.49604 11  0.000000  9    25         0
numdead.2      84.92686 11  1.525354  9     4         1
> print(summary(c7, details=1))
Call: earth(x=data.frame(sex, ldose), y=big.dataframe2, glm=list(family="binomial"), 
      trace=1, keepxy=1, pmethod="none", degree=1)

Earth coefficients
               numdead      fac3A      fac3B       fac3C      fac4P      fac4Q
(Intercept)  -1.440476  0.2857143 0.05952381  0.65476190  0.3214286 -0.3214286
sexmale       3.166667  0.6666667 0.16666667 -0.83333333  0.5000000  0.5000000
h(ldose- -2)  3.642857 -0.1142857 0.04285714  0.07142857 -0.1285714  0.1285714
                  fac4R      fac4S  numdead.1 sex    fac4.1P    fac4.1Q
(Intercept)   0.8214286  0.1785714 -0.4404762   0  0.3214286 -0.3214286
sexmale      -0.5000000 -0.5000000  3.1666667   1  0.5000000  0.5000000
h(ldose- -2) -0.1285714  0.1285714  3.6428571   0 -0.1285714  0.1285714
                fac4.1R    fac4.1S numdead.2
(Intercept)   0.8214286  0.1785714  1.559524
sexmale      -0.5000000 -0.5000000  3.166667
h(ldose- -2) -0.1285714  0.1285714  3.642857

GLM coefficients
               numdead     fac3A      fac3B      fac3C     fac4P      fac4Q
(Intercept)  -3.473155 -24.02056 -2.2763280  -22.33291 -24.00932 -246.79864
sexmale       1.100743 179.74852  0.9447634 -223.30835 135.40398  135.40398
h(ldose- -2)  1.064214 -44.50778  0.2438926   44.32151 -44.55786   44.55786
                  fac4R      fac4S  numdead.1       sex   fac4.1P    fac4.1Q
(Intercept)   111.39466 -111.39466 -2.8523475 -24.56607 -24.00932 -246.79864
sexmale      -135.40398 -135.40398  0.8798704  49.13214 135.40398  135.40398
h(ldose- -2)  -44.55786   44.55786  0.8810902   0.00000 -44.55786   44.55786
                fac4.1R    fac4.1S  numdead.2
(Intercept)   111.39466 -111.39466 -2.1595272
sexmale      -135.40398 -135.40398  0.6440487
h(ldose- -2)  -44.55786   44.55786  0.6736460

GLM numdead deviance residuals:
        Min           1Q       Median           3Q          Max  
-1.10539830  -0.65343193  -0.02224909   0.48470636   1.42944423  

GLM numdead coefficients (family binomial, link logit)
               Estimate Std. Error  z value   Pr(>|z|)
(Intercept)  -3.4731553  0.4685202 -7.41303 1.2344e-13
h(ldose- -2)  1.0642140  0.1310775  8.11897 4.7015e-16
sexmale       1.1007434  0.3558271  3.09348  0.0019782

GLM fac3A deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.029765e-05  -2.107342e-08  -2.107342e-08   2.107342e-08   2.132271e-05  

GLM fac3A coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)     -24.02056  99738.38356 -0.00024  0.99981
h(ldose- -2)    -44.50778  58344.69656 -0.00076  0.99939
sexmale         179.74852 227841.50366  0.00079  0.99937

GLM fac3B deviance residuals:
        Min           1Q       Median           3Q          Max  
-0.93544432  -0.76469903  -0.65327347  -0.06582089   2.17901533  

GLM fac3B coefficients (family binomial, link logit)
               Estimate Std. Error  z value Pr(>|z|)
(Intercept)  -2.2763280  1.6540607 -1.37621  0.16876
h(ldose- -2)  0.2438926  0.4143509  0.58861  0.55612
sexmale       0.9447634  1.4198549  0.66539  0.50580

GLM fac3C deviance residuals:
          Min             1Q         Median             3Q            Max  
-1.999798e-05  -2.107342e-08  -2.107342e-08   2.107342e-08   2.375481e-05  

GLM fac3C coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)     -22.33291  42893.27556 -0.00052  0.99958
h(ldose- -2)     44.32150  56068.06210  0.00079  0.99937
sexmale        -223.30835 268535.68901 -0.00083  0.99934

GLM fac4P deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4P coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)     -24.00932  99179.33584 -0.00024   0.9998
h(ldose- -2)    -44.55786  59044.00199 -0.00075   0.9994
sexmale         135.40398 180267.24493  0.00075   0.9994

GLM fac4Q deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4Q coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)    -246.79864 311432.58430 -0.00079  0.99937
h(ldose- -2)     44.55786  59044.00260  0.00075  0.99940
sexmale         135.40398 180267.24672  0.00075  0.99940

GLM fac4R deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4R coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)     111.39466 150533.42012  0.00074   0.9994
h(ldose- -2)    -44.55786  59044.00251 -0.00075   0.9994
sexmale        -135.40398 180267.24647 -0.00075   0.9994

GLM fac4S deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4S coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)    -111.39466 150533.41825 -0.00074   0.9994
h(ldose- -2)     44.55786  59044.00198  0.00075   0.9994
sexmale        -135.40398 180267.24491 -0.00075   0.9994

GLM numdead.1 deviance residuals:
       Min          1Q      Median          3Q         Max  
-0.6940559  -0.3139168  -0.0640255   0.4899520   0.7013721  

GLM numdead.1 coefficients (family binomial, link logit)
               Estimate Std. Error  z value   Pr(>|z|)
(Intercept)  -2.8523475  0.3873876 -7.36303 1.7978e-13
h(ldose- -2)  0.8810902  0.1086101  8.11242 4.9622e-16
sexmale       0.8798704  0.3128030  2.81286  0.0049103

GLM sex deviance residuals:
          Min             1Q         Median             3Q            Max  
-6.547293e-06  -6.547293e-06   0.000000e+00   6.547293e-06   6.547293e-06  

GLM sex coefficients (family binomial, link logit)
                  Estimate    Std. Error      z value Pr(>|z|)
(Intercept)  -2.456607e+01  7.697792e+04     -0.00032  0.99975
h(ldose- -2) -4.742861e-13  2.214486e+04 -2.14174e-17  1.00000
sexmale       4.913214e+01  7.563908e+04      0.00065  0.99948

GLM fac4.1P deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4.1P coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)     -24.00932  99179.33584 -0.00024   0.9998
h(ldose- -2)    -44.55786  59044.00199 -0.00075   0.9994
sexmale         135.40398 180267.24493  0.00075   0.9994

GLM fac4.1Q deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4.1Q coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)    -246.79864 311432.58430 -0.00079  0.99937
h(ldose- -2)     44.55786  59044.00260  0.00075  0.99940
sexmale         135.40398 180267.24672  0.00075  0.99940

GLM fac4.1R deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4.1R coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)     111.39466 150533.42012  0.00074   0.9994
h(ldose- -2)    -44.55786  59044.00251 -0.00075   0.9994
sexmale        -135.40398 180267.24647 -0.00075   0.9994

GLM fac4.1S deviance residuals:
          Min             1Q         Median             3Q            Max  
-2.054501e-05  -2.107342e-08  -2.107342e-08  -1.053671e-08   2.054500e-05  

GLM fac4.1S coefficients (family binomial, link logit)
                 Estimate   Std. Error  z value Pr(>|z|)
(Intercept)    -111.39466 150533.41825 -0.00074   0.9994
h(ldose- -2)     44.55786  59044.00198  0.00075   0.9994
sexmale        -135.40398 180267.24491 -0.00075   0.9994

GLM numdead.2 deviance residuals:
        Min           1Q       Median           3Q          Max  
-0.56274566  -0.35651851   0.06861009   0.31863617   0.52780010  

GLM numdead.2 coefficients (family binomial, link logit)
                Estimate  Std. Error  z value   Pr(>|z|)
(Intercept)  -2.15952719  0.30534288 -7.07247 1.5220e-12
h(ldose- -2)  0.67364596  0.08606233  7.82742 4.9799e-15
sexmale       0.64404875  0.26392328  2.44029   0.014676

Number of cases: 12
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
                GCV       RSS        GRSq        RSq
numdead   2.3760933  9.702381  0.95248599 0.98075879
fac3A     0.2145773  0.876190  0.18862974 0.67142857
fac3B     0.5148688  2.102381 -1.30737501 0.06560847
fac3C     0.1603499  0.654762  0.44564765 0.77551020
fac4P     0.2256560  0.921429 -0.01127308 0.59047619
fac4Q     0.2256560  0.921429 -0.01127308 0.59047619
fac4R     0.2256560  0.921429 -0.01127308 0.59047619
fac4S     0.2256560  0.921429 -0.01127308 0.59047619
numdead.1 2.3760933  9.702381  0.95248599 0.98075879
sex       0.0000000  0.000000  1.00000000 1.00000000
fac4.1P   0.2256560  0.921429 -0.01127308 0.59047619
fac4.1Q   0.2256560  0.921429 -0.01127308 0.59047619
fac4.1R   0.2256560  0.921429 -0.01127308 0.59047619
fac4.1S   0.2256560  0.921429 -0.01127308 0.59047619
numdead.2 2.3760933  9.702381  0.95248599 0.98075879
All       9.8233236 40.111905  0.93574668 0.97398006

GLM (family binomial, link logit)
          null.deviance df  deviance df iters converged
numdead       124.87559 11  6.757064  9     4         1
fac3A          15.27634 11  0.000000  9    25         0
fac3B          13.49604 11 12.684034  9     4         1
fac3C          16.30064 11  0.000000  9    25         0
fac4P          13.49604 11  0.000000  9    25         0
fac4Q          13.49604 11  0.000000  9    25         0
fac4R          13.49604 11  0.000000  9    25         0
fac4S          13.49604 11  0.000000  9    25         0
numdead.1     105.91731 11  2.709378  9     4         1
sex            16.63553 11  0.000000  9    23         1
fac4.1P        13.49604 11  0.000000  9    25         0
fac4.1Q        13.49604 11  0.000000  9    25         0
fac4.1R        13.49604 11  0.000000  9    25         0
fac4.1S        13.49604 11  0.000000  9    25         0
numdead.2      84.92686 11  1.525354  9     4         1
> stopifnot(colnames(c7$coef) == c("numdead", "fac3A", "fac3B", "fac3C",
+                                  "fac4P", "fac4Q", "fac4R", "fac4S",
+                                   "numdead.1", "sex",
+                                   "fac4.1P", "fac4.1Q", "fac4.1R", "fac4.1S", "numdead.2"))
> stopifnot(c7$glm.bpairs == c(TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE))
> 
> # residuals
> 
> a <- earth(pclass ~ ., data=etitanic)
> printh(residuals(a), max.print=3)
=== residuals(a)
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> a <- earth(pclass ~ ., data=etitanic, glm=list(family="b"))
> printh(residuals(a), expect.warning=TRUE, max.print=3)
=== residuals(a) expect warning -->Warning: residuals.earth: returning earth (not glm) residuals
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> printh(residuals(a, warn=FALSE), max.print=3)
=== residuals(a, warn = FALSE)
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> printh(resid(a, type="earth"), max.print=3)
=== resid(a, type = "earth")
        1st        2nd        3rd
1 0.6459266 -0.2575797 -0.3883469
2 0.7904775 -0.3372244 -0.4532531
3 1.0316575 -0.3335720 -0.6980855
> printh(resid(a, type="deviance"), max.print=3)
=== resid(a, type = "deviance")
       1st        2nd        3rd
1 1.463565 -0.7712447 -0.9440797
2 2.002755 -0.9266706 -1.0226283
3 2.611499 -0.9184549 -1.5622542
> printh(resid(a, type="pearson"), max.print=3)
=== resid(a, type = "pearson")
       1st        2nd        3rd
1 1.385038 -0.5885288 -0.7493292
2 2.535727 -0.7323065 -0.8287859
3 5.409631 -0.7243429 -1.5454025
> printh(resid(a, type="working"), max.print=3)
=== resid(a, type = "working")
        1st       2nd       3rd
1  2.918329 -1.346366 -1.561494
2  7.429912 -1.536273 -1.686886
3 30.264104 -1.524673 -3.388269
> printh(resid(a, type="response"), max.print=3)
=== resid(a, type = "response")
        1st        2nd        3rd
1 0.6573382 -0.2572600 -0.3595878
2 0.8654089 -0.3490739 -0.4071918
3 0.9669576 -0.3441215 -0.7048640
> printh(resid(a, type="partial"), max.print=3)
=== resid(a, type = "partial")
  `h(age-26)` `h(26-age)`  survived `h(sibsp-1)` `h(1-sibsp)` `h(parch-2)`
1    2.551986    3.229034  3.868894     2.971321     2.716353     2.967871
2    6.823847    5.636241  8.380477     7.482904     7.813164     7.479454
3   29.658038   28.561316 29.608383    30.317096    30.647355    30.313645
  `h(2-parch)` `h(age-26)` `h(26-age)`  survived `h(sibsp-1)` `h(1-sibsp)`
1     2.814339   -1.286898   -1.291444 -1.323918    -1.226331    -1.459130
2     7.875285   -1.437891   -1.853336 -1.513824    -1.416238    -1.322303
3    30.709476   -1.426291   -1.825670 -1.540158    -1.404638    -1.310703
  `h(parch-2)` `h(2-parch)` `h(age-26)` `h(26-age)`  survived `h(sibsp-1)`
1    -1.308344    -1.430315   -1.238589  -1.8139051 -2.342634    -1.688705
2    -1.498251    -1.176736   -1.152683  -0.2297406 -2.468026    -1.814097
3    -1.486651    -1.165135   -2.854066  -2.0049559 -2.849421    -3.515480
  `h(1-sibsp)` `h(parch-2)` `h(2-parch)`
1    -1.266139    -1.631657    -1.398041
2    -2.247324    -1.757049    -2.386927
3    -3.948707    -3.458432    -4.088310
> 
> # misc tests
> 
> cat("---misc 1---\n")
---misc 1---
> sex1 <- factor(rep(c("male", "female"), times=c(6,6)))
> sex2 <- factor(rep(c("male", "female"), times=c(6,6)))
> earth(numdead, cbind(sex1, sex2, sex1), trace=1) # one duplicate name
x is a 12 by 1 matrix: 1=numdead
y is a 12 by 3 matrix: 1=sex1, 2=sex2, 3=sex1.1
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -1.322 RSq 0.05966
Prune method "backward" penalty 2 nprune 2: selected 1 of 2 terms, and 0 of 1 predictors
After backward pass GRSq 0 RSq 0 
Selected 1 of 2 terms, and 0 of 1 predictors 
Importance: numdead-unused
Number of terms at each degree of interaction: 1 (intercept only model)

             GCV RSS          GRSq           RSq
sex1   0.2975207   3 -6.661338e-16 -4.440892e-16
sex2   0.2975207   3 -6.661338e-16 -4.440892e-16
sex1.1 0.2975207   3 -6.661338e-16 -4.440892e-16
All    0.8925620   9  0.000000e+00  0.000000e+00
> sex1 <- factor(rep(c("male", "female"), times=c(6,6)))
> sex2 <- factor(rep(c("male", "female"), times=c(6,6)))
> earth(numdead, cbind(sex1, sex2, sex1, sex1), trace=1) # two duplicate names
x is a 12 by 1 matrix: 1=numdead
y is a 12 by 4 matrix: 1=sex1, 2=sex2, 3=sex1.1, 4=sex1.2
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -1.322 RSq 0.05966
Prune method "backward" penalty 2 nprune 2: selected 1 of 2 terms, and 0 of 1 predictors
After backward pass GRSq 0 RSq 0 
Selected 1 of 2 terms, and 0 of 1 predictors 
Importance: numdead-unused
Number of terms at each degree of interaction: 1 (intercept only model)

             GCV RSS          GRSq           RSq
sex1   0.2975207   3 -6.661338e-16 -4.440892e-16
sex2   0.2975207   3 -6.661338e-16 -4.440892e-16
sex1.1 0.2975207   3 -6.661338e-16 -4.440892e-16
sex1.2 0.2975207   3 -6.661338e-16 -4.440892e-16
All    1.1900826  12  0.000000e+00  0.000000e+00
> 
> # test column expansion when y is a data frame in earth.default
> 
> cat("---misc 2---\n")
---misc 2---
> ldose  <- rep(0:5, 2) - 2
> ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> sex2 <- sex
> sex3 <- factor(rep(c("male", "female", "andro"), times=c(6,4,2)))
> fac3 <- factor(c("lev2", "lev2", "lev1", "lev1", "lev3", "lev3",
+                  "lev2", "lev2", "lev1", "lev1", "lev3", "lev3"))
> facdead <- factor(c("dead2", "dead2", "dead3", "dead1", "dead3", "dead3",
+                     "dead1", "dead2", "dead1", "dead1", "dead3", "dead3"))
> 
> isex <- as.double(sex3) # sex3 as an index
> df1 <- data.frame(sex2, d_=facdead, sex, sex, isex)
> af <-  earth(data.frame(sex3,ldose,fac3,isex), df1, trace=1, pmethod="none", degree=2)
x is a 12 by 6 matrix: 1=sex3female, 2=sex3male, 3=ldose, 4=fac3lev2, 5=fac3lev3, 6=isex
y is a 12 by 7 matrix: 1=sex2, 2=d_dead1, 3=d_dead2, 4=d_dead3, 5=sex, 6=sex.1, 7=isex
Forward pass term 1, 2, 4, 6, 8
Reached min GRSq (GRSq -10.5851 < -10)
After forward pass GRSq -10.59 RSq 0.9043
Prune method "none" penalty 3 nprune 4: selected 4 of 4 terms, and 3 of 6 predictors
After backward pass GRSq -0.331 RSq 0.8652 
> 
> cat("---misc 3---\n")
---misc 3---
> 
> # strings in input matrices, get converted to factors and a warning issued
> # TODO would like to improve the error message (says 'x' even when 'y')
> 
> ldose  <- rep(0:5, 2) - 2
> ldose1 <- c(0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 0.3, 1.4, 2.5, 3.6, 4.7, 5.8)
> sex2 <- rep(c("male", "female"), times=c(6,6))
> af <-  earth(sex2, sex2, trace=1, pmethod="none", degree=2)
Warning in model.matrix.default(object = attr(mf, "terms"), data = mf) :
  variable 'x' converted to a factor
Warning in model.matrix.default(object = attr(mf, "terms"), data = mf) :
  variable 'x' converted to a factor
x is a 12 by 1 matrix: 1=sex2
y is a 12 by 2 matrix: 1=female, 2=male
Forward pass term 1, 2
Reached max RSq (RSq 1 > 0.999)
After forward pass GRSq 1 RSq 1
Prune method "none" penalty 3 nprune 2: selected 2 of 2 terms, and 1 of 1 predictors
After backward pass GRSq 1 RSq 1 
> 
> # test update.earth with a bpairs argument (for now always do forward pass if bpairs used)
> 
> cat("---misc 4---\n")
---misc 4---
> volumei <- as.integer(trees$Volume)
> x1 <- trees$Height
> a <- earth(x1, cbind(volumei, 100-volumei), glm=list(family=binomial, bpairs=c(TRUE,FALSE)))
> update(a, trace=1, glm=list(family=binomial))
update.earth: forcing forward pass because bpairs argument used
update.earth: using 31 by 1 x argument from original call to earth
update.earth: using 31 by 2 y argument from original call to earth
x is a 31 by 1 matrix: 1=x1
y is a 31 by 2 matrix: 1=volumei (paired with y2)
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.01585 RSq 0.3701
Prune method "backward" penalty 2 nprune 3: selected 2 of 3 terms, and 1 of 1 predictors
After backward pass GRSq 0.2191 RSq 0.3197 
GLM volumei: null.deviance 382.4328 (30 dof)   deviance 262.7459 (29 dof)   iters 4
Earth selected 2 of 3 terms, and 1 of 1 predictors 
Importance: x1
Number of terms at each degree of interaction: 1 1 (additive model)
Earth GCV 219.0089    RSS 5538.806    GRSq 0.2190649    RSq 0.3197188

GLM null.deviance 382.4328 (30 dof)   deviance 262.7459 (29 dof)   iters 4
> a <- earth(x1, cbind(volumei, 100-volumei), glm=list(family=binomial))
> update(a, trace=1, glm=list(family=binomial, bpairs=c(TRUE,FALSE)))
update.earth: forcing forward pass because bpairs argument used
update.earth: using 31 by 1 x argument from original call to earth
update.earth: using 31 by 2 y argument from original call to earth
x is a 31 by 1 matrix: 1=x1
y is a 31 by 2 matrix: 1=volumei (paired with y2)
Forward pass term 1, 2, 4
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.01585 RSq 0.3701
Prune method "backward" penalty 2 nprune 3: selected 2 of 3 terms, and 1 of 1 predictors
After backward pass GRSq 0.2191 RSq 0.3197 
GLM volumei: null.deviance 382.4328 (30 dof)   deviance 262.7459 (29 dof)   iters 4
Earth selected 2 of 3 terms, and 1 of 1 predictors 
Importance: x1
Number of terms at each degree of interaction: 1 1 (additive model)
Earth GCV 219.0089    RSS 5538.806    GRSq 0.2190649    RSq 0.3197188

GLM null.deviance 382.4328 (30 dof)   deviance 262.7459 (29 dof)   iters 4
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
