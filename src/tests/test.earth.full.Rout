> # test.earth.full.R: test earth
> 
> print(R.version.string)
[1] "R version 2.12.0 (2010-10-15)"
> 
> library(earth)
Loading required package: leaps
Loading required package: plotrix
> library(mda)
Loading required package: class
> source("check.models.equal.R")
> data(ozone1)
> data(trees)
> data(etitanic)
> if(!interactive())
+     postscript(paper="letter")
> 
> PRINT.TIME <- FALSE         # FALSE for no time results (for diff against reference)
> PLOT <- TRUE                # TRUE to do plots too, FALSE for speed
> options.old <- options()
> options(warn=1) # print warnings as they occur
> # options(digits=5) # removed because want to check against default
> 
> printh <- function(x, expect.warning=FALSE, max.print=0) # like print but with a header
+ {
+     cat("===", deparse(substitute(x)), " ", sep="")
+     if(expect.warning)
+         cat(" expect warning -->")
+     else if (NROW(x) > 1)
+         cat("\n")
+     if (max.print > 0)
+         print(head(x, n=max.print))
+     else
+         print(x)
+ }
> 
> #--- test examples from man pages ------------------------------------------------------------
> 
> cat("--- earth.Rd -----------------------------\n")
--- earth.Rd -----------------------------
> example(earth)

earth> a <- earth(Volume ~ ., data = trees)

earth> summary(a, digits = 2, style = "pmax")
Call: earth(formula=Volume~., data=trees)

Volume =
  27
  +  6.2 * pmax(0,  Girth -     14) 
  -  3.3 * pmax(0,     14 -  Girth) 
  + 0.49 * pmax(0, Height -     72) 

Selected 4 of 6 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 11    RSS 197    GRSq 0.96    RSq 0.98

earth> # yields:
earth> # Call: earth(formula=Volume~., data=trees)
earth> #
earth> # Volume =
earth> #   27
earth> #   +  6.2 * pmax(0,  Girth -     14)
earth> #   -  3.3 * pmax(0,     14 -  Girth)
earth> #   + 0.49 * pmax(0, Height -     72)
earth> #
earth> # Selected 4 of 6 terms, and 2 of 2 predictors
earth> # Importance: Girth, Height
earth> # Number of terms at each degree of interaction: 1 3 (additive model)
earth> # GCV 11    RSS 197    GRSq 0.96    RSq 0.98
earth> 
earth> 
earth> 
> 
> a <- earth(mpg ~ ., data = mtcars, pmethod = "none", trace = 4)
Call: earth(formula=mpg~., data=mtcars, trace=4, pmethod="none")
x is a 32 by 10 matrix: 1=cyl, 2=disp, 3=hp, 4=drat, 5=wt, 6=qsec, 7=vs, 8=am, 9=gear, 10=carb
First few rows of x are
     cyl disp  hp drat    wt  qsec vs am gear carb
[1,]   6  160 110 3.90 2.620 16.46  0  1    4    4
[2,]   6  160 110 3.90 2.875 17.02  0  1    4    4
[3,]   4  108  93 3.85 2.320 18.61  1  1    4    1
[4,]   6  258 110 3.08 3.215 19.44  1  0    3    1
[5,]   8  360 175 3.15 3.440 17.02  0  0    3    2
[6,]   6  225 105 2.76 3.460 20.22  1  0    3    1
y is a 32 by 1 matrix: 1=mpg
First few rows of y are
      mpg
[1,] 21.0
[2,] 21.0
[3,] 22.8
[4,] 21.4
[5,] 18.7
[6,] 18.1
Approximate memory use after expanding x and y matrices: 0.05 MBytes
Forward pass: minspan 5 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.8157 0.8602       0.8602    2         disp         145  2   3   
4      0.7815 0.8797      0.01956    3           hp         123  4   5   
6      0.7601 0.9099      0.03016    6         qsec       18.52  6   7   
8      0.6839 0.9260      0.01611    4         drat        3.15  8   9   
10     0.5031 0.9374      0.01144    9         gear           4  10  11  
12     0.3575 0.9458     0.008417    2         disp       275.8  12      
14     0.0073 0.9494     0.003535    6         qsec       17.02  13      
16    -0.5893 0.9587     0.009271    7           vs           0< 14      
18   -32.1650 0.9655     0.006835    1          cyl           6  15  16  reject term

Reached min GRSq (GRSq -32.165 < -10)
After forward pass GRSq -32.17 RSq 0.9655
Forward pass complete: 17 terms (14 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6706  0.7118     0.6706      1  1 3
          3      0.8157  0.8602     0.1450      1  1 2 3
          4      0.7988  0.8691    -0.0169      2  1 2 3 4
          5      0.7815  0.8797    -0.0173      2  1 2 3 4 5
          6      0.7601  0.8899    -0.0214      4  1 3 4 6 13 14
          7      0.7934  0.9224     0.0332      4  1 3 4 5 6 13 14
          8      0.7852  0.9354    -0.0082      5  1 3 4 5 6 9 13 14
          9      0.7579  0.9433    -0.0272      5  1 3 4 5 6 9 12 13 14
         10      0.6997  0.9472    -0.0582      6  1 3 4 5 6 9 10 12 13 14
         11      0.6132  0.9513    -0.0865      6  1 2 3 4 5 6 9 10 12 13 14
         12      0.4534  0.9539    -0.1598      6  1 2 3 4 5 6 9 10 11 12 13 14
         13      0.1741  0.9579    -0.2793      6  1 2 3 4 5 6 8 9 10 11 12 13 14
chosen   14     -0.5893  0.9587    -0.7634      6  1 2 3 4 5 6 7 8 9 10 11 12 13 14

Prune method "none" penalty 2 nprune 14: selected 14 of 14 terms, and 6 of 10 predictors
After backward pass GRSq -0.5893 RSq 0.9587 
> 
> set.seed(1)
> train.subset <- sample(1:nrow(trees), .8 * nrow(trees))
> test.subset <- (1:nrow(trees))[-train.subset]
> a <- earth(Volume ~ ., data = trees[train.subset, ])
> yhat <- predict(a, newdata = trees[test.subset, ])
> y <- trees$Volume[test.subset]
> printh(sum((yhat - mean(yhat))^2) / sum((y - mean(y))^2)) # print R-Squared
===sum((yhat - mean(yhat))^2)/sum((y - mean(y))^2) [1] 1.057729
> get.used.pred.names <- function(obj) # obj is an earth object
+ {
+   any1 <- function(x) any(x != 0)    # like any but no warning if x is double
+   names(which(apply(obj$dirs[obj$selected.terms,,drop=FALSE],2,any1)))
+ }
> printh(get.used.pred.names(a))
===get.used.pred.names(a) 
[1] "Girth"  "Height"
> 
> a1 <- earth(survived ~ ., data=etitanic,   # c.f. Harrell "Reg. Mod. Strat." ch. 12
+              degree=2, trace=1,
+              glm=list(family=binomial))
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, ...
y is a 1046 by 1 matrix: 1=survived
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.4069 RSq 0.4487
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4222 RSq 0.4441 
GLM survived: null.deviance 1414.620 (1045 dof)   deviance 879.625 (1037 dof)   iters 5
> printh(a1)
===a1 
Earth selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
Earth GCV 0.1398544    RSS 140.4728    GRSq 0.422183    RSq 0.4440888

GLM null.deviance 1414.620 (1045 dof)   deviance 879.625 (1037 dof)   iters 5
> 
> a1a <- earth(etitanic[,-2], etitanic[,2],  # equivalent but using earth.default
+              degree=2, trace=1,
+              glm=list(family=binomial))
x is a 1046 by 6 matrix: 1=pclass2nd, 2=pclass3rd, 3=sexmale, 4=age, 5=sibsp, ...
y is a 1046 by 1 matrix: 1=etitanic[,2]
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20
Reached max number of terms 21
After forward pass GRSq 0.4069 RSq 0.4487
Prune method "backward" penalty 3 nprune 16: selected 9 of 16 terms, and 6 of 6 predictors
After backward pass GRSq 0.4222 RSq 0.4441 
GLM etitanic[,2]: null.deviance 1414.620 (1045 dof)   deviance 879.625 (1037 dof)   iters 5
> printh(a1a)
===a1a 
Earth selected 9 of 16 terms, and 6 of 6 predictors 
Importance: sexmale, pclass3rd, pclass2nd, age, sibsp, parch
Number of terms at each degree of interaction: 1 3 5
Earth GCV 0.1398544    RSS 140.4728    GRSq 0.422183    RSq 0.4440888

GLM null.deviance 1414.620 (1045 dof)   deviance 879.625 (1037 dof)   iters 5
> 
> a2 <- earth(pclass ~ ., data=etitanic, trace=1, glm=list(family=binomial))
x is a 1046 by 5 matrix: 1=survived, 2=sexmale, 3=age, 4=sibsp, 5=parch
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass term 1, 2, 4, 6, 8, 10, 12, 14
Reached delta RSq threshold (DeltaRSq 0.00061857 < 0.001)
After forward pass GRSq 0.163 RSq 0.1947
Prune method "backward" penalty 2 nprune 10: selected 8 of 10 terms, and 4 of 5 predictors
After backward pass GRSq 0.1670 RSq 0.1891 
GLM 1st: null.deviance 1223.308 (1045 dof)   deviance 920.8021 (1038 dof)   iters 5
GLM 2nd: null.deviance 1175.305 (1045 dof)   deviance 1147.518 (1038 dof)   iters 5
GLM 3rd: null.deviance 1448.212 (1045 dof)   deviance 1142.756 (1038 dof)   iters 5
> printh(a2)
===a2 
Earth selected 8 of 10 terms, and 4 of 5 predictors 
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

Earth
          GCV      RSS         GRSq        RSq
1st 0.1483414 150.7467  0.251448718 0.27137124
2nd 0.1885520 191.6094 -0.004971341 0.02177575
3rd 0.1927692 195.8949  0.229032722 0.24955184
All 0.5296626 538.2511  0.166969402 0.18914032

GLM (family binomial, link logit)
    null.deviance   df  deviance   df iters converged
1st      1223.308 1045  920.8021 1038     5         1
2nd      1175.305 1045 1147.5176 1038     5         1
3rd      1448.213 1045 1142.7559 1038     5         1
> 
> ldose <- rep(0:5, 2) - 2 # V&R 4th ed. p. 191
> sex <- factor(rep(c("male", "female"), times=c(6,6)))
> numdead <- c(1,4,9,13,18,20,0,2,6,10,12,16)
> pair <- cbind(numdead, numalive=20 - numdead)
> 
> a3 <- earth(pair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=binomial(link=probit), maxit=100))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 2 matrix: 1=numdead (paired with numalive)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 5.565963 (9 dof)   iters 4
> printh(a3)
===a3 
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 2.376093    RSS 9.70238    GRSq 0.952486    RSq 0.9807588

GLM null.deviance 124.8756 (11 dof)   deviance 5.565963 (9 dof)   iters 4
> 
> numdead2 <- c(2,8,11,12,20,23,0,4,6,16,12,14) # bogus data
> doublepair <- cbind(numdead, numalive=20-numdead,
+                     numdead2=numdead2, numalive2=30-numdead2)
> 
> a4 <- earth(doublepair ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family="binomial"))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 4 matrix: 1=numdead (paired with numalive), 2=numdead2 (paired with numalive2)
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.658 RSq 0.9293
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.8255 RSq 0.9293 
GLM numdead: null.deviance 124.8756 (11 dof)   deviance 6.757064 (9 dof)   iters 4
GLM numdead2: null.deviance 91.62481 (11 dof)   deviance 16.06743 (9 dof)   iters 4
> printh(a4)
===a4 
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)

Earth
               GCV       RSS      GRSq       RSq
numdead   2.376093  9.702381 0.9524860 0.9807588
numdead2 15.773761 64.409524 0.7079827 0.8817451
All      18.149854 74.111905 0.8255238 0.9293443

GLM (family binomial, link logit)
         null.deviance df  deviance df iters converged
numdead      124.87559 11  6.757064  9     4         1
numdead2      91.62481 11 16.067427  9     4         1
> 
> counts <- c(18,17,15,20,10,20,25,13,12) # Dobson 1990 p. 93
> outcome <- gl(3,1,9)
> treatment <- gl(3,3)
> 
> a5 <- earth(counts ~ outcome + treatment, trace=1, pmethod="none",
+             glm=list(family=poisson))
x is a 9 by 4 matrix: 1=outcome2, 2=outcome3, 3=treatment2, 4=treatment3
y is a 9 by 1 matrix: 1=counts
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq -6.576 RSq 0.5265
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 4 predictors
After backward pass GRSq -0.894 RSq 0.5265 
GLM counts: null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
> printh(a5)
===a5 
Earth selected 3 of 3 terms, and 2 of 4 predictors 
Importance: outcome2, outcome3, treatment2-unused, treatment3-unused
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 46.875    RSS 83.33333    GRSq -0.8939394    RSq 0.5265152

GLM null.deviance 10.58145 (8 dof)   deviance 5.129141 (6 dof)   iters 4
> 
> a6 <- earth(numdead ~ sex + ldose, trace=1, pmethod="none",
+             glm=list(family=gaussian(link=identity)))
x is a 12 by 2 matrix: 1=sexmale, 2=ldose
y is a 12 by 1 matrix: 1=numdead
Forward pass term 1, 2, 4, 6
Reached delta RSq threshold (DeltaRSq 0 < 0.001)
After forward pass GRSq 0.9069 RSq 0.9808
Prune method "none" penalty 2 nprune 3: selected 3 of 3 terms, and 2 of 2 predictors
After backward pass GRSq 0.9525 RSq 0.9808 
GLM numdead: null.deviance 504.25 (11 dof)   deviance 9.70238 (9 dof)   iters 2
> printh(a6$coefficients == a6$glm.coefficients)  # all TRUE
===a6$coefficients == a6$glm.coefficients 
            numdead
(Intercept)    TRUE
h(ldose--2)    TRUE
sexmale        TRUE
> printh(a6)
===a6 
Earth selected 3 of 3 terms, and 2 of 2 predictors 
Importance: ldose, sexmale
Number of terms at each degree of interaction: 1 2 (additive model)
Earth GCV 2.376093    RSS 9.70238    GRSq 0.952486    RSq 0.9807588

GLM null.deviance 504.25 (11 dof)   deviance 9.70238 (9 dof)   iters 2
> 
> remove(ldose)
> remove(sex)
> remove(numdead)
> remove(pair)
> remove(numdead2)
> remove(doublepair)
> remove(counts)
> remove(outcome)
> remove(treatment)
> 
> printh(earth(cbind(Volume,lvol=log(Volume)) ~ ., data=trees))
===earth(cbind(Volume, lvol = log(Volume)) ~ ., data = trees) 
Selected 4 of 6 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

             GCV        RSS      GRSq       RSq
Volume 10.606315 197.072183 0.9620131 0.9756884
lvol    0.013537   0.251526 0.9526989 0.9697273
All    10.619852 197.323709 0.9620035 0.9756823
> attach(trees)
> printh(earth(data.frame(Girth,Height), data.frame(Volume,lvol=log(Volume))))
===earth(data.frame(Girth, Height), data.frame(Volume, lvol = log(Volume))) 
Selected 4 of 6 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)

             GCV        RSS      GRSq       RSq
Volume 10.606315 197.072183 0.9620131 0.9756884
lvol    0.013537   0.251526 0.9526989 0.9697273
All    10.619852 197.323709 0.9620035 0.9756823
> detach(trees)
> 
> lm.fit <- lm(O3 ~ log(temp) + humidity*temp, data=ozone1)
> printh(lm.fit)
===lm.fit 

Call:
lm(formula = O3 ~ log(temp) + humidity * temp, data = ozone1)

Coefficients:
  (Intercept)      log(temp)       humidity           temp  humidity:temp  
     94.85623      -31.27411       -0.20050        0.63299        0.00475  

> plotmo(lm.fit, se=2)

 grid:    temp humidity
            62       64

> lm.fit2 <- lm(O3 ~ temp+ibh+doy, data=ozone1)
> printh(lm.fit2)
===lm.fit2 

Call:
lm(formula = O3 ~ temp + ibh + doy, data = ozone1)

Coefficients:
(Intercept)         temp          ibh          doy  
 -7.6740829    0.3785184   -0.0009858   -0.0066324  

> plotmo(lm.fit2, degree2="all", clip=FALSE)

 grid:    temp    ibh   doy
            62 2112.5 205.5

> 
> library(rpart)
Warning: package 'rpart' was built under R version 2.12.1
> rpart.fit <- rpart(O3 ~ ., data=ozone1)
> printh(rpart.fit)
===rpart.fit 
n= 330 

node), split, n, deviance, yval
      * denotes terminal node

 1) root 330 21115.4100 11.775760  
   2) temp< 67.5 214  4114.3040  7.425234  
     4) ibh>=3573.5 108   689.6296  5.148148 *
     5) ibh< 3573.5 106  2294.1230  9.745283  
      10) dpg< -9.5 35   362.6857  6.457143 *
      11) dpg>=-9.5 71  1366.4790 11.366200  
        22) ibt< 159 40   287.9000  9.050000 *
        23) ibt>=159 31   587.0968 14.354840 *
   3) temp>=67.5 116  5478.4400 19.801720  
     6) ibt< 226.5 55  1276.8360 15.945450  
      12) humidity< 59.5 10   167.6000 10.800000 *
      13) humidity>=59.5 45   785.6444 17.088890 *
     7) ibt>=226.5 61  2646.2620 23.278690  
      14) doy>=306.5 8   398.0000 16.000000 *
      15) doy< 306.5 53  1760.4530 24.377360  
        30) vis>=55 36  1149.8890 22.944440 *
        31) vis< 55 17   380.1176 27.411760 *
> plotmo(rpart.fit, type="vector")

 grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
        5760    5       64   62 2112.5  24 167.5 120 205.5

> 
> cat("--- print.default of earth object---------\n")
--- print.default of earth object---------
> print.default(a, digits=3)
$bx
      (Intercept) h(Girth-13.7) h(13.7-Girth) h(Height-75)
 [1,]           1           0.0           2.6            5
 [2,]           1           0.0           2.3            1
 [3,]           1           0.0           0.8           10
 [4,]           1           3.6           0.0            6
 [5,]           1           0.0           2.9            8
 [6,]           1           2.3           0.0            0
 [7,]           1           4.2           0.0            5
 [8,]           1           0.0           0.8            0
 [9,]           1           0.0           1.7            0
[10,]           1           0.0           5.1            0
[11,]           1           0.0           3.0            6
[12,]           1           0.0           3.2            0
[13,]           1           0.0           2.0            0
[14,]           1           0.0           2.7            0
[15,]           1           0.0           0.0            0
[16,]           1           0.0           2.7            0
[17,]           1           0.0           2.4            4
[18,]           1           4.3           0.0            5
[19,]           1           0.3           0.0            3
[20,]           1           0.0           2.5            0
[21,]           1           0.8           0.0            0
[22,]           1           0.0           4.9            0
[23,]           1           3.8           0.0            7
[24,]           1           0.5           0.0            5

$dirs
              Girth Height
(Intercept)       0      0
h(Girth-13.7)     1      0
h(13.7-Girth)    -1      0
h(Height-75)      0      1
h(75-Height)      0     -1

$cuts
              Girth Height
(Intercept)     0.0      0
h(Girth-13.7)  13.7      0
h(13.7-Girth)  13.7      0
h(Height-75)    0.0     75
h(75-Height)    0.0     75

$selected.terms
[1] 1 2 3 4

$prune.terms
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    0    0    0    0
[2,]    1    2    0    0    0
[3,]    1    2    3    0    0
[4,]    1    2    3    4    0
[5,]    1    2    3    4    5

$rss
[1] 126

$rsq
[1] 0.973

$gcv
[1] 10.5

$grsq
[1] 0.951

$rss.per.response
[1] 126

$rsq.per.response
[1] 0.973

$gcv.per.response
[1] 10.5

$grsq.per.response
[1] 0.951

$rss.per.subset
[1] 4739  796  236  126  125

$gcv.per.subset
[1] 215.0  43.3  15.7  10.5  13.4

$fitted.values
      Volume
 [1,]  21.82
 [2,]  19.95
 [3,]  32.02
 [4,]  52.91
 [5,]  22.95
 [6,]  40.92
 [7,]  55.66
 [8,]  24.64
 [9,]  21.38
[10,]   9.07
[11,]  21.11
[12,]  15.95
[13,]  20.30
[14,]  17.76
[15,]  27.54
[16,]  17.76
[17,]  21.80
[18,]  56.24
[19,]  31.50
[20,]  18.49
[21,]  32.19
[22,]   9.80
[23,]  54.81
[24,]  34.14

$residuals
      Volume
 [1,]  0.784
 [2,]  1.051
 [3,]  1.775
 [4,]  2.492
 [5,] -3.245
 [6,] -2.616
 [7,]  2.640
 [8,] -2.441
 [9,] -2.283
[10,]  1.226
[11,] -2.307
[12,]  0.448
[13,]  1.003
[14,] -2.163
[15,] -1.837
[16,]  0.437
[17,]  2.398
[18,] -4.742
[19,]  3.003
[20,]  1.413
[21,]  4.109
[22,]  0.402
[23,]  0.890
[24,] -2.437

$coefficients
              Volume
(Intercept)   27.537
h(Girth-13.7)  5.817
h(13.7-Girth) -3.620
h(Height-75)   0.738

$penalty
[1] 2

$namesx.org
[1] "Girth"  "Height"

$namesx
[1] "Girth"  "Height"

$terms
Volume ~ Girth + Height
attr(,"variables")
list(Volume, Girth, Height)
attr(,"factors")
       Girth Height
Volume     0      0
Girth      1      0
Height     0      1
attr(,"term.labels")
[1] "Girth"  "Height"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(Volume, Girth, Height)
attr(,"dataClasses")
   Volume     Girth    Height 
"numeric" "numeric" "numeric" 

$call
earth(formula = Volume ~ ., data = trees[train.subset, ])

attr(,"class")
[1] "earth"
> cat("--- done print.default of earth object----\n")
--- done print.default of earth object----
> if (PLOT)
+     plot(a)
> library(mda)
> (a <- fda(Species~., data=iris, method=earth, keepxy=TRUE))
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 92.84 100.00 

Training Misclassification Error: 0.02667 ( N = 150 )
> if (PLOT)
+     plot(a)
> printh(summary(a$fit))
===summary(a$fit) 
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE)

                            y1         y2
(Intercept)         -2.2593563 -0.5770863
h(Sepal.Length-4.9) -0.1499415 -0.3058077
h(Petal.Length-3.6)  1.3910265  0.3175657
h(Petal.Length-4.5) -0.5009526  1.2731238
h(4.5-Petal.Length)  1.1494121 -0.0231700
h(Petal.Length-5.4) -0.8462664 -1.4715197
h(Petal.Width-1.6)   2.2978429  3.9451201
h(Petal.Width-1.9)  -2.7263266 -4.6922255

Selected 8 of 13 terms, and 3 of 4 predictors 
Importance: Petal.Length, Petal.Width, Sepal.Length, Sepal.Width-unused
Number of terms at each degree of interaction: 1 7 (additive model)

           GCV       RSS      GRSq       RSq
y1  0.06445282  7.831017 0.9364037 0.9477932
y2  0.12559901 15.260280 0.8760701 0.8982648
All 0.19005183 23.091297 0.9062369 0.9230290
> if (PLOT) {
+     plot(a$fit)
+     plotmo(a$fit, ycolumn=1, ylim=c(-1.5,1.5), clip=FALSE)
+     plotmo(a$fit, ycolumn=2, ylim=c(-1.5,1.5), clip=FALSE)
+ }
> a <- update(a, nk=3) # not on man page
> printh(a)
===a 
Call:
fda(formula = Species ~ ., data = iris, method = earth, keepxy = TRUE, 
    nk = 3)

Dimension: 2 

Percent Between-Group Variance Explained:
    v1     v2 
 94.38 100.00 

Training Misclassification Error: 0.04 ( N = 150 )
> printh(summary(a$fit))
===summary(a$fit) 
Call: earth(x=x, y=Theta, weights=weights, keepxy=TRUE, nk=3)

                          y1          y2
(Intercept)        -1.300791 -0.74367728
h(Petal.Width-1.2)  1.351182  2.22366217
h(1.2-Petal.Width)  2.601323  0.03896856

Selected 3 of 3 terms, and 1 of 4 predictors 
Importance: Petal.Width, Sepal.Length-unused, Sepal.Width-unused, Petal.Length-unused
Number of terms at each degree of interaction: 1 2 (additive model)

          GCV      RSS      GRSq       RSq
y1  0.1190355 16.68481 0.8825464 0.8887680
y2  0.2430154 34.06267 0.7602140 0.7729156
All 0.3620509 50.74747 0.8213802 0.8308418
> head(etitanic) # pclass and sex are unordered factors
  pclass survived    sex     age sibsp parch
1    1st        1 female 29.0000     0     0
2    1st        1   male  0.9167     1     2
3    1st        0 female  2.0000     1     2
4    1st        0   male 30.0000     1     2
5    1st        0 female 25.0000     1     2
6    1st        1   male 48.0000     0     0
> earth(pclass ~ ., data=etitanic, trace=2)
x is a 1046 by 5 matrix: 1=survived, 2=sexmale, 3=age, 4=sibsp, 5=parch
y is a 1046 by 3 matrix: 1=1st, 2=2nd, 3=3rd
Forward pass: minspan 6 endspan 9

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.0910 0.0980      0.09797    3          age          26  2   3   
4      0.1525 0.1622       0.0642    1     survived           0< 4       
6      0.1598 0.1758      0.01368    4        sibsp           1  5   6   
8      0.1670 0.1891       0.0133    5        parch           2  7   8   
10     0.1664 0.1918     0.002617    3          age          21  9       
12     0.1656 0.1941     0.002356    3          age          56  10      
14     0.1630 0.1947    0.0006186    3          age          48  11      reject term

Reached delta RSq threshold (DeltaRSq 0.00061857 < 0.001)
After forward pass GRSq 0.163 RSq 0.1947
Forward pass complete: 13 terms (10 terms used)
Prune method "backward" penalty 2 nprune 10: selected 8 of 10 terms, and 4 of 5 predictors
After backward pass GRSq 0.1670 RSq 0.1891 
Selected 8 of 10 terms, and 4 of 5 predictors 
Importance: age, survived, sibsp, parch, sexmale-unused
Number of terms at each degree of interaction: 1 7 (additive model)

          GCV      RSS         GRSq        RSq
1st 0.1483414 150.7467  0.251448718 0.27137124
2nd 0.1885520 191.6094 -0.004971341 0.02177575
3rd 0.1927692 195.8949  0.229032722 0.24955184
All 0.5296626 538.2511  0.166969402 0.18914032
> 
> cat("--- format.earth.Rd ----------------------\n")
--- format.earth.Rd ----------------------
> as.func <- function( # convert expression string to func
+                object, digits = 8, use.names = TRUE, ...)
+   eval(parse(text=paste(
+     "function(x)\n",
+     "{\n",
+     "if(is.vector(x))\n",
+     "  x <- matrix(x, nrow = 1, ncol = length(x))\n",
+     "with(as.data.frame(x),\n",
+     format(object, digits = digits, use.names = use.names, style = "p", ...),
+     ")\n",
+     "}\n", sep = "")))
> a <- earth(Volume ~ ., data = trees)
> my.func <- as.func(a, use.names = FALSE)
> printh(my.func(c(10,80)))     # yields 17.76888
===my.func(c(10, 80)) [1] 18.11065
> printh(predict(a, c(10,80)))  # yields 17.76888, but is slower
===predict(a, c(10, 80))        Volume
[1,] 18.11065
> example(format.earth)

frmt.r> a <- earth(Volume ~ ., data = trees)

frmt.r> cat(format(a))
  27.2459
  +  6.176692 * h(Girth-14)
  -  3.266228 * h(14-Girth)
  + 0.4912072 * h(Height-72)

frmt.r> # yields:
frmt.r> #    27.2
frmt.r> #    +  6.18 * h(Girth-14)
frmt.r> #    -  3.27 * h(14-Girth)
frmt.r> #    + 0.491 * h(Height-72)
frmt.r> 
frmt.r> cat(format(a, style="pmax")) # default formatting style prior to earth version 1.4
  27.2459
  +  6.176692 * pmax(0,  Girth -     14) 
  -  3.266228 * pmax(0,     14 -  Girth) 
  + 0.4912072 * pmax(0, Height -     72) 

frmt.r> # yields:
frmt.r> #    27.2
frmt.r> #    +  6.18 * pmax(0,  Girth -     14)
frmt.r> #    -  3.27 * pmax(0,     14 -  Girth)
frmt.r> #    + 0.491 * pmax(0, Height -     72)
frmt.r> 
frmt.r> cat(format(a, style="bf"))
  27.2459
  +  6.176692 * bf1
  -  3.266228 * bf2
  + 0.4912072 * bf3

   bf1  h(Girth-14)
   bf2  h(14-Girth)
   bf3  h(Height-72)

frmt.r> # yields:
frmt.r> #    27.2
frmt.r> #    +  6.18 * bf1
frmt.r> #    -  3.27 * bf2
frmt.r> #    + 0.491 * bf3
frmt.r> #
frmt.r> #     bf1  h(Girth-14)
frmt.r> #     bf2  h(14-Girth)
frmt.r> #     bf3  h(Height-72)
frmt.r> 
frmt.r> 
frmt.r> 
> a <- earth(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.earth
  27.2459
  +  6.176692 * h(Girth-14)
  -  3.266228 * h(14-Girth)
  + 0.4912072 * h(Height-72)
> cat(format(a, digits=4))
  27.25
  +  6.177 * h(Girth-14)
  -  3.266 * h(14-Girth)
  + 0.4912 * h(Height-72)
> # cat(format(a, use.names=FALSE))
> cat(format(a, style="pmax"))
  27.2459
  +  6.176692 * pmax(0,  Girth -     14) 
  -  3.266228 * pmax(0,     14 -  Girth) 
  + 0.4912072 * pmax(0, Height -     72) 
> cat(format(a, style="max"))
  27.2459
  +  6.176692 * max(0,  Girth -     14) 
  -  3.266228 * max(0,     14 -  Girth) 
  + 0.4912072 * max(0, Height -     72) 
> cat(format(a, style="bf"))
  27.2459
  +  6.176692 * bf1
  -  3.266228 * bf2
  + 0.4912072 * bf3

   bf1  h(Girth-14)
   bf2  h(14-Girth)
   bf3  h(Height-72)
> cat(format(a, use.names=FALSE, style="p"))
  27.2459
  +  6.176692 * pmax(0, x[,1] -    14) 
  -  3.266228 * pmax(0,    14 - x[,1]) 
  + 0.4912072 * pmax(0, x[,2] -    72) 
> cat(format(a, use.names=FALSE, style="m"))
  27.2459
  +  6.176692 * max(0, x[,1] -    14) 
  -  3.266228 * max(0,    14 - x[,1]) 
  + 0.4912072 * max(0, x[,2] -    72) 
> a <- earth(Volume ~ Girth*Height, data = trees, pmethod="none")
> cat(format(a))
  23.99875
  +   2.332447 * h(Girth-12.9)
  -  0.7650929 * h(12.9-Girth)
  + 0.04033515 * h(Girth:Height-954.6)
  - 0.02653566 * h(954.6-Girth:Height)
> cat(format(a, colon.char="*"))
  23.99875
  +   2.332447 * h(Girth-12.9)
  -  0.7650929 * h(12.9-Girth)
  + 0.04033515 * h(Girth*Height-954.6)
  - 0.02653566 * h(954.6-Girth*Height)
> a <- lm(Volume ~ ., data = trees)
> cat(format(a)) # basic tests of format.lm
  -57.98766
  +  4.708161 * Girth
  + 0.3392512 * Height
> cat(format(a, digits=4))
  -57.99
  +  4.708 * Girth
  + 0.3393 * Height
> cat(format(a, use.names=FALSE))
  -57.98766
  +  4.708161 * x[,1]
  + 0.3392512 * x[,2]
> cat(format(a, style="p"))
  -57.98766
  +  4.708161 * Girth
  + 0.3392512 * Height
> cat(format(a, use.names=FALSE, style="p"))
  -57.98766
  +  4.708161 * x[,1]
  + 0.3392512 * x[,2]
> a <- lm(Volume ~ Girth*Height, data = trees)
> cat(format(a))
  69.39632
  -  5.855848 * Girth
  -  1.297083 * Height
  + 0.1346544 * Girth:Height
> cat(format(a, colon.char="*"))
  69.39632
  -  5.855848 * Girth
  -  1.297083 * Height
  + 0.1346544 * Girth*Height
> cat("--- mars.to.earth.Rd ----------------------\n")
--- mars.to.earth.Rd ----------------------
> example(mars.to.earth) # doesn't do anything

mrs.t.> if (require(mda)) {
mrs.t.+     a <- mars(trees[,-3], trees[,3])
mrs.t.+     a <- mars.to.earth(a)
mrs.t.+     summary(a, digits = 2) # the standard earth functions can now be used
mrs.t.+ 
mrs.t.+     # yields (note the reconstructed call):
mrs.t.+     #    Call: earth(x=trees[, -3], y=trees[, 3])
mrs.t.+     #
mrs.t.+     #                    y
mrs.t.+     #   (Intercept)  19.76
mrs.t.+     #   h(Girth-12)   5.40
mrs.t.+     #   h(12-Girth)  -2.56
mrs.t.+     #   h(Height-76)  0.72
mrs.t.+     #
mrs.t.+     #   Selected 4 of 5 terms, and 2 of 2 predictors
mrs.t.+     #   Importance: Girth, Height
mrs.t.+     #   Number of terms at each degree of interaction: 1 3 (additive model)
mrs.t.+     #   GCV 13    RSS 251    GRSq 0.95    RSq 0.97
mrs.t.+ }
Converted mars(x=trees[, -3], y=trees[, 3])
to        earth(x=trees[, -3], y=trees[, 3])
Call: earth(x=trees[, -3], y=trees[, 3])

             coefficients
(Intercept)         19.76
h(Girth-12)          5.40
h(12-Girth)         -2.56
h(Height-76)         0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> library(mda)
> a <- mars(trees[,-3], trees[,3])
> a <- mars.to.earth(a)
Converted mars(x=trees[, -3], y=trees[, 3])
to        earth(x=trees[, -3], y=trees[, 3])
> summary(a, digits = 2)
Call: earth(x=trees[, -3], y=trees[, 3])

             coefficients
(Intercept)         19.76
h(Girth-12)          5.40
h(12-Girth)         -2.56
h(Height-76)         0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> printh(summary(a, digits=2))
===summary(a, digits = 2) 
Call: earth(x=trees[, -3], y=trees[, 3])

             coefficients
(Intercept)         19.76
h(Girth-12)          5.40
h(12-Girth)         -2.56
h(Height-76)         0.72

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> printh(summary(a, digits=2, style="bf"))
===summary(a, digits = 2, style = "bf") 
Call: earth(x=trees[, -3], y=trees[, 3])

y =
  20
  +  5.4 * bf1
  -  2.6 * bf2
  + 0.72 * bf3

   bf1  h(Girth-12)
   bf2  h(12-Girth)
   bf3  h(Height-76)

Selected 4 of 5 terms, and 2 of 2 predictors 
Importance: Girth, Height
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 13    RSS 251    GRSq 0.95    RSq 0.97
> cat("--- plot.earth.models.Rd ----------------------\n")
--- plot.earth.models.Rd ----------------------
> if (PLOT)
+     example(plot.earth.models)

plt.r.> data(ozone1)

plt.r.> a1 <- earth(O3 ~ .,          data = ozone1, degree = 2)

plt.r.> a2 <- earth(O3 ~ .-wind,     data = ozone1, degree = 2, nk = 31)

plt.r.> a3 <- earth(O3 ~ .-humidity, data = ozone1, degree = 2, nk = 31)

plt.r.> plot.earth.models(list(a1,a2,a3), rlim=c(.6,.8))
> cat("--- plot.earth.Rd ----------------------\n")
--- plot.earth.Rd ----------------------
> if (PLOT) {
+     data(etitanic)
+     a <- earth(survived ~ ., data=etitanic, glm=list(family=binomial))
+     par(mfrow=c(2,2))
+     plot(a$glm.list[[1]])
+     example(plot.earth)
+ }

plt.rt> data(ozone1)

plt.rt> a <- earth(O3 ~ ., data = ozone1, degree = 2)

plt.rt> plot(a)
> cat("--- predict.earth.Rd ----------------------\n")
--- predict.earth.Rd ----------------------
> example(predict.earth)

prdct.> data(trees)

prdct.> a <- earth(Volume ~ ., data = trees)

prdct.> predict(a)           # same as a$fitted.values
         Volume
 [1,]  8.628402
 [2,]  9.608270
 [3,] 10.261516
 [4,] 15.814103
 [5,] 20.888213
 [6,] 22.197250
 [7,] 17.447216
 [8,] 18.920838
 [9,] 21.703497
[10,] 19.574084
[11,] 21.865535
[12,] 20.718536
[13,] 20.718536
[14,] 19.733576
[15,] 22.187066
[16,] 24.635464
[17,] 30.038743
[18,] 31.836441
[19,] 26.266031
[20,] 26.592654
[21,] 30.193143
[22,] 32.410896
[23,] 31.316660
[24,] 39.599283
[25,] 43.908327
[26,] 52.049848
[27,] 53.776393
[28,] 55.264655
[29,] 55.882325
[30,] 55.882325
[31,] 75.380174

prdct.> predict(a, c(10,80)) # yields 18.11
       Volume
[1,] 18.11065
> cat("--- update.earth.Rd ----------------------\n")
--- update.earth.Rd ----------------------
> example(update.earth)

updt.r> data(ozone1)

updt.r> (a <- earth(O3 ~ ., data = ozone1, degree = 2))
Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.45447    RSS 3767.904    GRSq 0.7910006    RSq 0.8215567

updt.r> # yields:
updt.r> #    Selected 11 of 21 terms, and 8 of 9 predictors
updt.r> #    Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
updt.r> #    Number of terms at each degree of interaction: 1 5 5
updt.r> #    GCV 13.5    RSS 3768    GRSq 0.791    RSq 0.822
updt.r> 
updt.r> update(a, formula = O3 ~ . - temp) # requires forward pass and pruning
Selected 14 of 21 terms, and 8 of 8 predictors 
Importance: ibt, humidity, doy, vh, ibh, dpg, wind, vis
Number of terms at each degree of interaction: 1 5 8
GCV 13.13386    RSS 3498.871    GRSq 0.7959809    RSq 0.8342977

updt.r> # yields:
updt.r> #    Selected 14 of 21 terms, and 8 of 8 predictors
updt.r> #    Importance: ibt, humidity, doy, vh, ibh, dpg, wind, vis
updt.r> #    Number of terms at each degree of interaction: 1 5 8
updt.r> #    GCV 13.1    RSS 3499    GRSq 0.796    RSq 0.834
updt.r> 
updt.r> update(a, nprune = 8)              # requires only pruning
Selected 8 of 21 terms, and 6 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh-unused, vis, vh-unused, wind-unused
Number of terms at each degree of interaction: 1 5 2
GCV 15.08166    RSS 4434.568    GRSq 0.7657241    RSq 0.7899842

updt.r> # yields:
updt.r> #    Selected 8 of 21 terms, and 6 of 9 predictors
updt.r> #    Importance: temp, humidity, ibt, doy, dpg, ibh-unused, vis, vh-unused, wind-unused
updt.r> #    Number of terms at each degree of interaction: 1 5 2
updt.r> #    GCV 15.1    RSS 4435    GRSq 0.766    RSq 0.79
updt.r> 
updt.r> update(a, penalty=1, ponly=TRUE)   # pruning pass only with a new penalty
Selected 13 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 7
GCV 12.5252    RSS 3671.06    GRSq 0.8054357    RSq 0.826143

updt.r> # yields:
updt.r> #    Selected 13 of 21 terms, and 8 of 9 predictors
updt.r> #    Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
updt.r> #    Number of terms at each degree of interaction: 1 5 7
updt.r> #    GCV 12.5    RSS 3671    GRSq 0.805    RSq 0.826
updt.r> 
updt.r> 
updt.r> 
> 
> cat("--- evimp.Rd -----------------------------\n")
--- evimp.Rd -----------------------------
> 
> par(mfrow=c(2,2))
> cat('before calling evimp par("mar", "cex"):\n')
before calling evimp par("mar", "cex"):
> print(par("mar", "cex"))
$mar
[1] 5.1 4.1 4.1 2.1

$cex
[1] 0.83

> 
> example(evimp)

evimp> data(ozone1)

evimp> a <- earth(O3 ~ ., data=ozone1, degree=2)

evimp> ev <- evimp(a, trim=FALSE, sqrt.=TRUE)

evimp> plot(ev)

evimp> print(ev)
          col used nsubsets        gcv          rss  
temp        4    1       10 100.000000 1 100.000000 1
humidity    3    1        8  35.569904 1  38.426666 1
ibt         7    1        8  35.569904 1  38.426666 1
doy         9    1        7  33.577198 1  35.969912 1
dpg         6    1        5  25.947585 1  27.967941 1
ibh         5    1        4  30.879132 0  32.279598 0
vis         8    1        4  20.840331 1  22.937969 1
wind        2    1        1   8.658101 1   9.925277 1
vh-unused   1    0        0   0.000000 1   0.000000 1
> 
> cat("--- plot.evimp.Rd ------------------------\n")
--- plot.evimp.Rd ------------------------
> 
> example(plot.evimp)

plt.vm> data(ozone1)

plt.vm> a <- earth(O3 ~ ., data=ozone1, degree=2)

plt.vm> ev <- evimp(a)

plt.vm> plot(ev)

plt.vm> print(ev)
         col used nsubsets         gcv           rss  
temp       4    1       10 100.0000000 1 100.0000000 1
humidity   3    1        8  12.6521804 1  14.7660866 1
ibt        7    1        8  12.6521804 1  14.7660866 1
doy        9    1        7  11.2742824 1  12.9383457 1
dpg        6    1        5   6.7327717 1   7.8220571 1
ibh        5    1        4   9.5352082 0  10.4197247 0
vis        8    1        4   4.3431940 1   5.2615043 1
wind       2    1        1   0.7496272 1   0.9851112 1
> 
> rownames(ev)[4] <- "a_long_variable_name"
> 
> plot(ev, main="plot.evimp with various options",
+     cex.var = .8,
+     type.nsubsets = "p",
+     col.nsubsets = "red",
+     lty.nsubsets = 2, # ignored because type.nsubsets="p"
+     type.gcv = "l",
+     col.gcv = "green",
+     lty.gcv = 3,
+     type.rss = "b",
+     col.rss = "blue",
+     lty.rss = 4,
+     cex.legend = .8,
+     x.legend = "topright")
> 
> cat('after calling evimp par("mar", "cex"):\n')
after calling evimp par("mar", "cex"):
> print(par("mar", "cex"))
$mar
[1] 5.1 4.1 4.1 2.1

$cex
[1] 0.83

> par(mfrow=c(1,1))
> 
> cat("--- test predict.earth -------------------\n")
--- test predict.earth -------------------
> 
> a <- earth(Volume ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
===predict(a, c(10, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
predict.earth: returning earth predictions 
       Volume
[1,] 18.11065
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
===predict(a, c(10, 10, 80, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    10     80
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    10     80
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           4            8
predict.earth: returning earth predictions 

       Volume
[1,] 18.11065
[2,] 18.11065
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
===predict(a, c(10, 11, 80, 81), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    11     81
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    11     81
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           3            9
predict.earth: returning earth predictions 

       Volume
[1,] 18.11065
[2,] 21.86808
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

        Volume
[1,]  8.628402
[2,]  9.608270
[3,] 10.261516
[4,] 15.814103
[5,] 20.888213
[6,] 22.197250
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
===predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     12
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
predict.earth: returning earth predictions 
       Volume
[1,] 14.18099
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
===predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),     trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
2    10     12
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     12
2    10     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
[2,]           1           0           4            0
predict.earth: returning earth predictions 

       Volume
[1,] 14.18099
[2,] 14.18099
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume
[1,] 18.11065
[2,] 29.55517
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume
[1,] 18.11065
[2,] 29.55517
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume
[1,] 18.11065
[2,] 29.55517
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6a predict(a, xpredict with reversed columns and colnames)\n")
6a predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume
[1,] 18.11065
[2,] 29.55517
> xpredict2 <- cbind(xpredict[,1], xpredict[,2]) # nameless matrix
> cat("6b predict(a, xpredict2)\n")
6b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1))
===predict(a, xpredict2, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    80     10
2    90     12
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    80     10
2    90     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1          66           0            0
[2,]           1          76           0            0
predict.earth: returning earth predictions 

       Volume
[1,] 434.9076
[2,] 496.6745
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, trees$Volume)
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

     trees$Volume
[1,]     8.628402
[2,]     9.608270
[3,]    10.261516
[4,]    15.814103
[5,]    20.888213
[6,]    22.197250
> cat("7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7n predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     trees$Volume
[1,]     18.11065
[2,]     29.55517
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     trees$Volume
[1,]     18.11065
[2,]     29.55517
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

     trees$Volume
[1,]     18.11065
[2,]     29.55517
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("none.such", "joe")
> cat("10a predict(a, xpredict2)\n")
10a predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
===predict(a, xpredict2, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: unexpected x column names, renaming columns
    Old names: none.such joe
    New names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 
     trees$Volume
[1,]     18.11065
[2,]     29.55517
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict2 <- cbind(xpredict[,1], xpredict[,2])
> colnames(xpredict2) <- c("Height", "Girth") # reversed
> cat("10b predict(a, xpredict2)\n")
10b predict(a, xpredict2)
> printh(predict(a, xpredict2, trace=1), expect.warning=TRUE)
===predict(a, xpredict2, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    80     10
[2,]    90     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1          66           0            0
[2,]           1          76           0            0
predict.earth: returning earth predictions 
     trees$Volume
[1,]     434.9076
[2,]     496.6745
> 
> cat("--- test predict.earth with multiple response models-------------------\n")
--- test predict.earth with multiple response models-------------------
> 
> a <- earth(cbind(Volume, Volume + 100) ~ ., data = trees)
> cat("1a predict(a, c(10,80))\n")
1a predict(a, c(10,80))
> printh(predict(a, c(10,80), trace=1))
===predict(a, c(10, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
predict.earth: returning earth predictions 
       Volume       y2
[1,] 18.11065 118.1106
> cat("1b predict(a, c(10,10,80,80))\n")
1b predict(a, c(10,10,80,80))
> printh(predict(a, c(10,10,80,80), trace=1))
===predict(a, c(10, 10, 80, 80), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    10     80
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    10     80
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           4            8
predict.earth: returning earth predictions 

       Volume       y2
[1,] 18.11065 118.1106
[2,] 18.11065 118.1106
> cat("1c predict(a, c(10,11,80,81))\n")
1c predict(a, c(10,11,80,81))
> printh(predict(a, c(10,11,80,81), trace=1))
===predict(a, c(10, 11, 80, 81), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    11     81
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    11     81
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           3            9
predict.earth: returning earth predictions 

       Volume       y2
[1,] 18.11065 118.1106
[2,] 21.86808 121.8681
> cat("2 predict(a)\n")
2 predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

        Volume       y2
[1,]  8.628402 108.6284
[2,]  9.608270 109.6083
[3,] 10.261516 110.2615
[4,] 15.814103 115.8141
[5,] 20.888213 120.8882
[6,] 22.197250 122.1973
> cat("3a predict(a, matrix(c(10,12), nrow=1, ncol=2))\n")
3a predict(a, matrix(c(10,12), nrow=1, ncol=2))
> printh(predict(a, matrix(c(10,12), nrow=1, ncol=2), trace=1))
===predict(a, matrix(c(10, 12), nrow = 1, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 1 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     12
predict.earth: bx is a 1 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
predict.earth: returning earth predictions 
       Volume      y2
[1,] 14.18099 114.181
> cat("3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)\n")
3b predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE)
> printh(predict(a, matrix(c(10,12), nrow=2, ncol=2, byrow=TRUE), trace=1))
===predict(a, matrix(c(10, 12), nrow = 2, ncol = 2, byrow = TRUE),     trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     12
2    10     12
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     12
2    10     12
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            0
[2,]           1           0           4            0
predict.earth: returning earth predictions 

       Volume      y2
[1,] 14.18099 114.181
[2,] 14.18099 114.181
> cat("3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))\n")
3c predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2))
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> colnames(xpredict) <- c("Girth", "Height")
> cat("4 predict(a, xpredict with colnames)\n")
4 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> cat("5 predict(a, as.data.frame(xpredict with colnames))\n")
5 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> # reverse dataframe columns (and their names), predict should deal with it correctly
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("6 predict(a, xpredict with reversed columns and colnames)\n")
6 predict(a, xpredict with reversed columns and colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of data after call to model.frame are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

       Volume       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> 
> # repeat but with x,y (not formula) call to earth
> 
> x1 <- cbind(trees$Girth, trees$Height)
> colnames(x1) <- c("Girth", "Height")
> a <- earth(x1, cbind(trees$Volume, trees$Volume+100))
> xpredict <- matrix(c(10,12,80,90), nrow=2, ncol=2)
> cat("7a predict(a)\n")
7a predict(a)
> printh(head(predict(a, trace=1)))
===head(predict(a, trace = 1)) predict.earth: returning earth fitted.values 

            y1       y2
[1,]  8.628402 108.6284
[2,]  9.608270 109.6083
[3,] 10.261516 110.2615
[4,] 15.814103 115.8141
[5,] 20.888213 120.8882
[6,] 22.197250 122.1973
> cat("7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)\n")
7b predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2)
> printh(predict(a, matrix(c(10,12,80,90), nrow=2, ncol=2), trace=1))
===predict(a, matrix(c(10, 12, 80, 90), nrow = 2, ncol = 2), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x has no column names, adding column names: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

           y1       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> colnames(xpredict) <- c("Girth", "Height")
> cat("8 predict(a, xpredict with colnames)\n")
8 predict(a, xpredict with colnames)
> printh(predict(a, xpredict, trace=1))
===predict(a, xpredict, trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
     Girth Height
[1,]    10     80
[2,]    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

           y1       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> cat("9 predict(a, as.data.frame(xpredict with colnames))\n")
9 predict(a, as.data.frame(xpredict with colnames))
> printh(predict(a, as.data.frame(xpredict), trace=1))
===predict(a, as.data.frame(xpredict), trace = 1) get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 

           y1       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> cat("--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'\n")
--Expect warning from predict.earth: the variable names in 'data' do not match those in 'object'
> xpredict <- as.data.frame(cbind(xpredict[,2], xpredict[,1]))
> colnames(xpredict) <- c("Height", "Girth")
> cat("10 predict(a, xpredict)\n")
10 predict(a, xpredict)
> printh(predict(a, xpredict, trace=1), expect.warning=TRUE)
===predict(a, xpredict, trace = 1)  expect warning -->get.earth.x from model.matrix.earth from predict.earth: x columns are in the wrong order, correcting the column order
    Old columns: Height Girth
    New columns: Girth Height
get.earth.x from model.matrix.earth from predict.earth: x is a 2 by 2 matrix: 1=Girth, 2=Height
Contents of x are
  Girth Height
1    10     80
2    12     90
predict.earth: bx is a 2 by 4 matrix: 1=(Intercept), 2=h(Girth-14), 3=h(14-Girth), 4=h(Height-72)
Contents of bx are
     (Intercept) h(Girth-14) h(14-Girth) h(Height-72)
[1,]           1           0           4            8
[2,]           1           0           2           18
predict.earth: returning earth predictions 
           y1       y2
[1,] 18.11065 118.1106
[2,] 29.55517 129.5552
> 
> cat("--- earth.predict with NAs, with formula interface ---\n")
--- earth.predict with NAs, with formula interface ---
> 
> predict.with.message <- function(message, earth.model, newdata) {
+     cat("predict.earth  ", message, ":\n", sep="")
+     print(predict(earth.model, newdata=newdata, trace=1))
+     cat("\n")
+ }
> 
> iris.earth <- earth(Petal.Width ~ Sepal.Length + Sepal.Width + Petal.Length, data=iris)
> x <- iris[1,]
> predict.with.message("formula interface and vector", iris.earth, newdata=x)
predict.earth  formula interface and vector:
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 1 by 3 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length
Contents of data after call to model.frame are
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
predict.earth: bx is a 1 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                  0                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2522345

> x$Sepal.Width <- as.numeric(NA)
> predict.with.message("formula interface and vector with NA", iris.earth, newdata=x)
predict.earth  formula interface and vector with NA:
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1          NA          1.4         0.2  setosa
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 1 by 3 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length
Contents of data after call to model.frame are
  Sepal.Length Sepal.Width Petal.Length
1          5.1          NA          1.4
predict.earth: bx is a 1 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                 NA                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]          NA

> x <- iris[1,]
> x$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("formula interface and vector with NA in unused variable", iris.earth, newdata=x)
predict.earth  formula interface and vector with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4          NA  setosa
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 1 by 3 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length
Contents of data after call to model.frame are
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
predict.earth: bx is a 1 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                  0                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2522345

> 
> x <- iris[1:3,]
> predict.with.message("formula interface and matrix", iris.earth, newdata=x)
predict.earth  formula interface and matrix:
get.earth.x from model.matrix.earth from predict.earth: x is a 3 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 3 by 3 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length
Contents of data after call to model.frame are
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
2          4.9         3.0          1.4
3          4.7         3.2          1.3
predict.earth: bx is a 3 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                0.0                   0
[2,]           1               4.6                0.5                   0
[3,]           1               4.7                0.3                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
[2,]                 2.0                   0                   0
[3,]                 2.2                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2522345
[2,]   0.1759537
[3,]   0.1880673

> x[2,]$Sepal.Width <- as.numeric(NA)
> predict.with.message("formula interface and matrix with NA", iris.earth, newdata=x)
predict.earth  formula interface and matrix with NA:
get.earth.x from model.matrix.earth from predict.earth: x is a 3 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9          NA          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 3 by 3 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length
Contents of data after call to model.frame are
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
2          4.9          NA          1.4
3          4.7         3.2          1.3
predict.earth: bx is a 3 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                0.0                   0
[2,]           1               4.6                 NA                   0
[3,]           1               4.7                0.3                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
[2,]                 2.0                   0                   0
[3,]                 2.2                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2522345
[2,]          NA
[3,]   0.1880673

> x <- iris[1:3,]
> x[2,]$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("formula interface and matrix with NA in unused variable", iris.earth, newdata=x)
predict.earth  formula interface and matrix with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x is a 3 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4          NA  setosa
3          4.7         3.2          1.3         0.2  setosa
get.earth.x from model.matrix.earth from predict.earth: data after call to model.frame is a 3 by 3 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length
Contents of data after call to model.frame are
  Sepal.Length Sepal.Width Petal.Length
1          5.1         3.5          1.4
2          4.9         3.0          1.4
3          4.7         3.2          1.3
predict.earth: bx is a 3 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                0.0                   0
[2,]           1               4.6                0.5                   0
[3,]           1               4.7                0.3                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
[2,]                 2.0                   0                   0
[3,]                 2.2                   0                   0
predict.earth: returning earth predictions 
     Petal.Width
[1,]   0.2522345
[2,]   0.1759537
[3,]   0.1880673

> 
> cat("--- earth.predict with NAs, with matrix interface ---\n")
--- earth.predict with NAs, with matrix interface ---
> 
> iris.earth <- earth(iris[,1:3], iris[,4])
> x <- iris[1,]
> predict.with.message("default interface and vector", iris.earth, newdata=x)
predict.earth  default interface and vector:
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
predict.earth: bx is a 1 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                  0                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2522345

> x$Sepal.Width <- as.numeric(NA)
> predict.with.message("default interface and vector with NA", iris.earth, newdata=x)
predict.earth  default interface and vector with NA:
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1          NA          1.4         0.2  setosa
predict.earth: bx is a 1 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                 NA                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
predict.earth: returning earth predictions 
     iris[,4]
[1,]       NA

> x <- iris[1,]
> x$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("default interface and vector with NA in unused variable", iris.earth, newdata=x)
predict.earth  default interface and vector with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x is a 1 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4          NA  setosa
predict.earth: bx is a 1 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                  0                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2522345

> 
> x <- iris[1:3,]
> predict.with.message("default interface and matrix", iris.earth, newdata=x)
predict.earth  default interface and matrix:
get.earth.x from model.matrix.earth from predict.earth: x is a 3 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
predict.earth: bx is a 3 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                0.0                   0
[2,]           1               4.6                0.5                   0
[3,]           1               4.7                0.3                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
[2,]                 2.0                   0                   0
[3,]                 2.2                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2522345
[2,] 0.1759537
[3,] 0.1880673

> x[2,]$Sepal.Width <- as.numeric(NA)
> predict.with.message("default interface and matrix with NA", iris.earth, newdata=x)
predict.earth  default interface and matrix with NA:
get.earth.x from model.matrix.earth from predict.earth: x is a 3 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9          NA          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
predict.earth: bx is a 3 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                0.0                   0
[2,]           1               4.6                 NA                   0
[3,]           1               4.7                0.3                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
[2,]                 2.0                   0                   0
[3,]                 2.2                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2522345
[2,]        NA
[3,] 0.1880673

> x <- iris[1:3,]
> x[2,]$Petal.Width <- as.numeric(NA) # Petal.Width is unused in the earth model
> predict.with.message("default interface and matrix with NA in unused variable", iris.earth, newdata=x)
predict.earth  default interface and matrix with NA in unused variable:
get.earth.x from model.matrix.earth from predict.earth: x is a 3 by 5 matrix: 1=Sepal.Length, 2=Sepal.Width, 3=Petal.Length, 4=Petal.Width, 5=Species (factor)
Contents of x are
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4          NA  setosa
3          4.7         3.2          1.3         0.2  setosa
predict.earth: bx is a 3 by 7 matrix: 1=(Intercept), 2=h(6-Petal.Length), 3=h(3.5-Sepal.Width), 4=h(Sepal.Length-6.9), 5=h(6.9-Sepal.Length), 6=h(Petal.Length-4.4), 7=h(Sepal.Length-7.2)
Contents of bx are
     (Intercept) h(6-Petal.Length) h(3.5-Sepal.Width) h(Sepal.Length-6.9)
[1,]           1               4.6                0.0                   0
[2,]           1               4.6                0.5                   0
[3,]           1               4.7                0.3                   0
     h(6.9-Sepal.Length) h(Petal.Length-4.4) h(Sepal.Length-7.2)
[1,]                 1.8                   0                   0
[2,]                 2.0                   0                   0
[3,]                 2.2                   0                   0
predict.earth: returning earth predictions 
      iris[,4]
[1,] 0.2522345
[2,] 0.1759537
[3,] 0.1880673

> 
> cat("--- test reorder.earth ----------------------\n")
--- test reorder.earth ----------------------
> a <- earth(O3 ~ ., data = ozone1, degree = 2)
> earth:::reorder.earth(a, decomp = "none")
 [1]  1  2  3  4  5  6  7  8  9 10 11
> earth:::reorder.earth(a)   # defaults to decomp = "anova"
 [1]  1  2 11  8  3  4  9  5  6  7 10
> a$selected.terms[earth:::reorder.earth(a)]
 [1]  1  2 19 13  6  7 14  9 10 11 17
> 
> cat("--- test model building capabilities ----------------------\n")
--- test model building capabilities ----------------------
> itest <- 0
> N <- 100
> set.seed(1)
> x1 <- runif(N, -1, 1)
> x2 <- runif(N, -1, 1)
> x3 <- runif(N, -1, 1)
> x4 <- runif(N, -1, 1)
> x5 <- runif(N, -1, 1)
> x6 <- runif(N, -1, 1)
> x7 <- runif(N, -1, 1)
> x8 <- runif(N, -1, 1)
> x9 <- runif(N, -1, 1)
> x10 <- runif(N, -1, 1)
> 
> make.func <- function(
+     obj      = stop("no 'obj' arg"),
+     digits   = 14,
+     use.names = TRUE,   # use predictor names, else "x[,1]" etc
+     ...)                # extra args passed onto format
+ {
+     s <- paste(
+         "function(x)\n",
+         "{\n",
+         "if(is.vector(x))\n",
+         "  x <- matrix(x, nrow=1, ncol=length(x))\n",
+         "with(as.data.frame(x),\n",
+         format(obj, digits=digits, use.names=use.names, style="p", ...),
+         ")\n",
+         "}\n", sep="")
+ 
+     eval.parent(parse(text=s))
+ }
> 
> # this cross checks that RSq and GRSq claimed by
> # the model versus an independent calc of RSq and GRSq
> 
> test.model.rsq <- function(object, x, y, MarsFunc, nCases, nUsedTerms, penalty, RefFunc=NULL, ...)
+ {
+     y1 <- RefFunc(x, ...)
+     rss <- sum((y1 - MarsFunc(x))^2)
+     rss.null <- sum((y - mean(y))^2)
+     gcv.null <- earth:::get.gcv(rss.null, 1, penalty, nCases)
+     gcv <- earth:::get.gcv(rss, nUsedTerms, penalty, nCases)
+     if(is.finite(object$rsq))
+         if(!isTRUE(all.equal(object$rsq, 1 - rss/rss.null)))
+             cat("\nWarning: RSq mismatch object$rsq", object$rsq, "calculated RSq", 1 - rss/rss.null)
+         else if(!isTRUE(all.equal(object$grsq, 1 - gcv/gcv.null)))
+             cat("\nWarning GRSq mismatch object$grsq", object$grsq, "calculated GRSq", 1 - gcv/gcv.null)
+ }
> 
> # this uses the global matrix data.global (data.global[,1] is the response)
> 
> test.earth <- function(itest, func, degree=2, nk=51, plotit=PLOT,
+                        test.rsq=TRUE, trace=0, linpreds=FALSE)
+ {
+     cat("itest", sprintf("%-3d", itest), sprintf("%-32s", deparse(substitute(func))),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk))
+     if(trace)
+         cat("\n")
+     gc()
+     earthTime <- system.time(fite <- earth(data.global[,-1], data.global[,1],
+                                         degree=degree, trace=trace, nk=nk,
+                                         pmethod="b", fast.k=-1, linpreds=linpreds))
+     funca <- make.func(fite)
+     nCases <- nrow(data.global)
+     penalty <- ifelse(degree>1,3,2)
+     nUsedTerms <- sum(fite$selected.terms!=0)
+     cat(" nTerms",  sprintf("%-2d", nUsedTerms), "of", sprintf("%-3d ", nrow(fite$dirs)))
+     if(PRINT.TIME)
+         cat(" time", earthTime[1])
+     cat("GRSq", sprintf("%4.2g", fite$grsq))
+     caption <- paste("itest ", itest, ": ", deparse(substitute(func)),
+                         " degree=", degree, " nk=", nk, sep="")
+     if(test.rsq)
+         test.model.rsq(fite, x=data.global[,-1, drop=FALSE], y=data.global[,1], MarsFunc=funca,
+             nCases=nCases, nUsedTerms=nUsedTerms, penalty=penalty, RefFunc=func)
+     # TODO add printh(evimp(fite))
+     if(plotit) {
+         plotmo(fite, func=func, caption=caption)
+         plot(fite, nresiduals=500, caption=caption)
+     }
+     cat("\n")
+     fite
+ }
> 
> ozone.test <- function(itest, sModel, x, y, degree=2, nk=51,
+                     plotit=PLOT, trace=0, col.loess="lightblue")
+ {
+     fite <- earth(x, y, degree=degree, nk=nk, trace=trace)
+     fitm <- mars(x, y, degree=degree, nk=nk)
+ 
+     cat("itest",
+         sprintf("%-3d", itest),
+         sprintf("%-32s", sModel),
+         "degree", sprintf("%-2d", degree), "nk", sprintf("%-3g", nk),
+         "nTerms",  sprintf("%-2d", sum(fite$selected.terms != 0)),
+         "of", sprintf("%-3d", nrow(fite$dirs)),
+         "GRSq", sprintf("%4.2g", fite$grsq),
+         "GRSq ratio", fite$grsq/mars.to.earth(fitm)$grsq,
+         "\n")
+     caption <- paste("itest ", itest, ": ", sModel, " degree=", degree, " nk=", nk, sep="")
+     printh(summary(fite))
+     printh(summary(fite, style="bf"))
+     if(plotit) {
+         fitme <- mars.to.earth(fitm)
+         plotmo(fite, caption=paste("EARTH", caption))
+         plotmo(fitme, caption=paste("MARS", caption))
+         plot(fite, nresiduals=500, col.loess=col.loess, caption=paste("EARTH", caption))
+         plot(fitme, caption=paste("MARS", caption))
+         fitme <- update(fitme)  # generate model selection data
+         plot.earth.models(list(fite, fitme), caption=paste(itest, ": Compare earth to mars ", sModel, sep=""))
+     }
+     fite
+ }
> 
> funcNoise <- function(x)    # noise
+ {
+     set.seed(ncol(x))
+     rnorm(length(x))
+ }
> x <- cbind(x1)
> data.global <- cbind(funcNoise(x), x1)
> # plotit=FALSE because there is only an intercept
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=1, plotit=FALSE, test.rsq=FALSE)
itest 1   funcNoise                        degree 1  nk 5   nTerms 1  of 4   GRSq    0
Selected 1 of 4 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.8149112    RSS 79.86945    GRSq 0    RSq 0
> itest <- itest+1; test.earth(itest, funcNoise, nk=5,  degree=2, plotit=FALSE, test.rsq=FALSE)
itest 2   funcNoise                        degree 2  nk 5   nTerms 1  of 4   GRSq    0
Selected 1 of 4 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.8149112    RSS 79.86945    GRSq 0    RSq 0
> itest <- itest+1; test.earth(itest, funcNoise, nk=51, degree=1, plotit=FALSE, test.rsq=FALSE)
itest 3   funcNoise                        degree 1  nk 51  nTerms 1  of 8   GRSq    0
Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.8149112    RSS 79.86945    GRSq 0    RSq 0
> itest <- itest+1; a <- test.earth(itest, funcNoise, nk=51, degree=2, plotit=FALSE, test.rsq=FALSE)
itest 4   funcNoise                        degree 2  nk 51  nTerms 1  of 8   GRSq    0
> printh(summary(a, fixed.point=FALSE)) # check that print summary works with intercept only model
===summary(a, fixed.point = FALSE) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

            coefficients
(Intercept)    0.1088874

Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.8149112    RSS 79.86945    GRSq 0    RSq 0
> printh(summary(a, fixed.point=FALSE, style="bf")) # ditto
===summary(a, fixed.point = FALSE, style = "bf") 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

data.global[,1] =
  0.1088874


Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.8149112    RSS 79.86945    GRSq 0    RSq 0
> printh(summary(a, details=1, fixed.point=FALSE))
===summary(a, details = 1, fixed.point = FALSE) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

            coefficients
(Intercept)    0.1088874

Number of cases: 100
Selected 1 of 8 terms, and 0 of 1 predictors 
Importance: data.global[,-1]-unused
Number of terms at each degree of interaction: 1 (intercept only model)
GCV 0.8149112    RSS 79.86945    GRSq 0    RSq 0
> 
> func1 <- function(x)
+ {
+     sin(3 * x[,1]) + x[,2]
+ }
> x.global <- cbind(                    x1, x2)
> data.global <- cbind(func1(x.global), x1, x2)
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=1)
itest 5   func1                            degree 1  nk 5   nTerms 5  of 5   GRSq 0.86
 grid:    x1         x2
 -0.02437858 0.03719751


Selected 5 of 5 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 4 (additive model)
GCV 0.1220314    RSS 10.10542    GRSq 0.855971    RSq 0.878308
> itest <- itest+1; test.earth(itest, func1, nk=5,   degree=2)
itest 6   func1                            degree 2  nk 5   nTerms 5  of 5   GRSq 0.85
 grid:    x1         x2
 -0.02437858 0.03719751


Selected 5 of 5 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 4 (additive model)
GCV 0.1275776    RSS 10.10542    GRSq 0.849425    RSq 0.878308
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=1)
itest 7   func1                            degree 1  nk 51  nTerms 9  of 9   GRSq    1
 grid:    x1         x2
 -0.02437858 0.03719751


Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)
GCV 0.001049021    RSS 0.07226709    GRSq 0.9987619    RSq 0.9991297
> itest <- itest+1; test.earth(itest, func1, nk=51, degree=2)
itest 8   func1                            degree 2  nk 51  nTerms 9  of 9   GRSq    1
 grid:    x1         x2
 -0.02437858 0.03719751


Selected 9 of 9 terms, and 2 of 2 predictors 
Importance: x1, x2
Number of terms at each degree of interaction: 1 8 (additive model)
GCV 0.001157941    RSS 0.07226709    GRSq 0.9986333    RSq 0.9991297
> 
> func7 <- function(x)    # just one predictor
+ {
+     sin(5 * x[,1])
+ }
> x.global <- cbind(                    x1)
> data.global <- cbind(func7(x.global), x1)
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=1)
itest 9   func7                            degree 1  nk 5   nTerms 4  of 4   GRSq 0.74
  grid:    x
 -0.02437858


Selected 4 of 4 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.1355322    RSS 11.72218    GRSq 0.7358613    RSq 0.766908
> itest <- itest+1; test.earth(itest, func7, nk=5,  degree=2)
itest 10  func7                            degree 2  nk 5   nTerms 4  of 4   GRSq 0.73
  grid:    x
 -0.02437858


Selected 4 of 4 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 3 (additive model)
GCV 0.1400123    RSS 11.72218    GRSq 0.72713    RSq 0.766908
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=1)
itest 11  func7                            degree 1  nk 51  nTerms 7  of 8   GRSq 0.99
  grid:    x
 -0.02437858


Selected 7 of 8 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 0.007134307    RSS 0.5399957    GRSq 0.986096    RSq 0.9892623
> itest <- itest+1; test.earth(itest, func7, nk=51, degree=2)
itest 12  func7                            degree 2  nk 51  nTerms 7  of 8   GRSq 0.99
  grid:    x
 -0.02437858


Selected 7 of 8 terms, and 1 of 1 predictors 
Importance: data.global[,-1]
Number of terms at each degree of interaction: 1 6 (additive model)
GCV 0.007653    RSS 0.5399957    GRSq 0.985085    RSq 0.9892623
> 
> func8 <- function(x)
+ {
+     ret <- 0
+     for (i in 1:5)
+         ret <- ret + sin(2 * x[,i])
+     ret + x[,1]*cos(4 * x[,2]) + (x[,3]-2)* x[,4]
+ }
> 
> func8noise <- function(x)
+ {
+     set.seed(ncol(x))
+     func8(x) + rnorm(nrow(x),0,1)
+ }
> 
> x.global <- cbind(                    x1,  x2,  x3,  x4,  x5)
> data.global <- cbind(func8(x.global), x1,  x2,  x3,  x4,  x5)
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=1)
itest 13  func8                            degree 1  nk 11  nTerms 10 of 11  GRSq 0.89
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.3061181    RSS 20.08441    GRSq 0.894668    RSq 0.9294885
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=2)
itest 14  func8                            degree 2  nk 11  nTerms 10 of 11  GRSq 0.88
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.3431912    RSS 20.08441    GRSq 0.8819115    RSq 0.9294885
> itest <- itest+1; test.earth(itest, func8, nk=11, degree=10)
itest 15  func8                            degree 10 nk 11  nTerms 10 of 11  GRSq 0.88
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.3431912    RSS 20.08441    GRSq 0.8819115    RSq 0.9294885
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=1)
itest 16  func8                            degree 1  nk 51  nTerms 12 of 17  GRSq 0.92
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 12 of 17 terms, and 5 of 5 predictors 
Importance: x3, x5, x2, x1, x4
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 0.2323811    RSS 13.77787    GRSq 0.9200401    RSq 0.9516292
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=2)
itest 17  func8                            degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.05130346    RSS 1.360696    GRSq 0.982347    RSq 0.995223
> itest <- itest+1; test.earth(itest, func8, nk=51, degree=10)
itest 18  func8                            degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.05130346    RSS 1.360696    GRSq 0.982347    RSq 0.995223
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=1,  test.rsq=FALSE)
itest 19  func8noise                       degree 1  nk 11  nTerms 10 of 11  GRSq 0.89
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.3061181    RSS 20.08441    GRSq 0.894668    RSq 0.9294885
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=2,  test.rsq=FALSE)
itest 20  func8noise                       degree 2  nk 11  nTerms 10 of 11  GRSq 0.88
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.3431912    RSS 20.08441    GRSq 0.8819115    RSq 0.9294885
> itest <- itest+1; test.earth(itest, func8noise, nk=11, degree=10, test.rsq=FALSE)
itest 21  func8noise                       degree 10 nk 11  nTerms 10 of 11  GRSq 0.88
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 10 of 11 terms, and 5 of 5 predictors 
Importance: x1, x5, x2, x3, x4
Number of terms at each degree of interaction: 1 9 (additive model)
GCV 0.3431912    RSS 20.08441    GRSq 0.8819115    RSq 0.9294885
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=1,  test.rsq=FALSE)
itest 22  func8noise                       degree 1  nk 51  nTerms 12 of 17  GRSq 0.92
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 12 of 17 terms, and 5 of 5 predictors 
Importance: x3, x5, x2, x1, x4
Number of terms at each degree of interaction: 1 11 (additive model)
GCV 0.2323811    RSS 13.77787    GRSq 0.9200401    RSq 0.9516292
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=2,  test.rsq=FALSE)
itest 23  func8noise                       degree 2  nk 51  nTerms 20 of 23  GRSq 0.98
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.05130346    RSS 1.360696    GRSq 0.982347    RSq 0.995223
> 
> itest <- itest+1; test.earth(itest, func8noise, nk=51, degree=10, test.rsq=FALSE)
itest 24  func8noise                       degree 10 nk 51  nTerms 20 of 23  GRSq 0.98
 grid:    x1         x2         x3          x4          x5
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241


Selected 20 of 23 terms, and 5 of 5 predictors 
Importance: x1, x5, x3, x2, x4
Number of terms at each degree of interaction: 1 14 5
GCV 0.05130346    RSS 1.360696    GRSq 0.982347    RSq 0.995223
> 
> eqn56 <- function(x) # Friedman MARS paper equation 56
+ {
+     0.1 * exp(4*x[,1]) +
+     4 / (1 + exp(-20*(x[,2]-0.5))) +
+     3 * x[,3] +
+     2 * x[,4] +
+     x[,5]
+ }
> 
> neg.eqn56 <- function(x)
+ {
+     -eqn56(x)
+ }
> 
> eqn56noise <- function(x)
+ {
+     set.seed(ncol(x))
+     eqn56(x) + rnorm(nrow(x),0,1)
+ }
> 
> neg.eqn56noise <- function(x)
+ {
+     -eqn56noise(x)
+ }
> 
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=1)
itest 25  eqn56                            degree 1  nk 11  nTerms 11 of 11  GRSq 0.96
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.3367594    RSS 21.01716    GRSq 0.9600263    RSq 0.9745459
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=2)
itest 26  eqn56                            degree 2  nk 11  nTerms 11 of 11  GRSq 0.95
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.3838049    RSS 21.01716    GRSq 0.954442    RSq 0.9745459
> itest <- itest+1; test.earth(itest, eqn56, nk=11, degree=10)
itest 27  eqn56                            degree 10 nk 11  nTerms 11 of 11  GRSq 0.95
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.3838049    RSS 21.01716    GRSq 0.954442    RSq 0.9745459
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=1)
itest 28  eqn56                            degree 1  nk 51  nTerms 13 of 15  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 13 of 15 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.02660665    RSS 1.496624    GRSq 0.9968418    RSq 0.9981874
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=2)
itest 29  eqn56                            degree 2  nk 51  nTerms 13 of 16  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.02440621    RSS 1.161980    GRSq 0.997103    RSq 0.9985927
> itest <- itest+1; test.earth(itest, eqn56, nk=51, degree=10)
itest 30  eqn56                            degree 10 nk 51  nTerms 13 of 16  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.02440621    RSS 1.161980    GRSq 0.997103    RSq 0.9985927
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=1,  test.rsq=FALSE)
itest 31  eqn56noise                       degree 1  nk 11  nTerms 11 of 11  GRSq 0.96
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.3367594    RSS 21.01716    GRSq 0.9600263    RSq 0.9745459
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=2,  test.rsq=FALSE)
itest 32  eqn56noise                       degree 2  nk 11  nTerms 11 of 11  GRSq 0.95
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.3838049    RSS 21.01716    GRSq 0.954442    RSq 0.9745459
> itest <- itest+1; test.earth(itest, eqn56noise, nk=11, degree=10, test.rsq=FALSE)
itest 33  eqn56noise                       degree 10 nk 11  nTerms 11 of 11  GRSq 0.95
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 11 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.3838049    RSS 21.01716    GRSq 0.954442    RSq 0.9745459
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=1,  test.rsq=FALSE)
itest 34  eqn56noise                       degree 1  nk 51  nTerms 13 of 15  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 13 of 15 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 12 (additive model)
GCV 0.02660665    RSS 1.496624    GRSq 0.9968418    RSq 0.9981874
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=2,  test.rsq=FALSE)
itest 35  eqn56noise                       degree 2  nk 51  nTerms 13 of 16  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.02440621    RSS 1.161980    GRSq 0.997103    RSq 0.9985927
> itest <- itest+1; test.earth(itest, eqn56noise, nk=51, degree=10, test.rsq=FALSE)
itest 36  eqn56noise                       degree 10 nk 51  nTerms 13 of 16  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 13 of 16 terms, and 5 of 10 predictors 
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 11 1
GCV 0.02440621    RSS 1.161980    GRSq 0.997103    RSq 0.9985927
> 
> robotArm <- function(x) # Friedman Fast MARS paper
+ {
+     l1     <- x[,1]
+     l2     <- x[,2]
+     theta1 <- x[,3]
+     theta2 <- x[,4]
+     phi    <- x[,5]
+ 
+     x1 <- l1 * cos(theta1) - l2 * cos(theta1 + theta2) * cos(phi)
+     y <-  l1 * sin(theta1) - l2 * sin(theta1 + theta2) * cos(phi)
+     z <-  l2 *  sin(theta2) * sin(phi)
+ 
+     sqrt(x1^2 + y^2 + z^2)
+ }
> N1 <- 100
> set.seed(1)
> x1. <- runif(N1, -1, 1)
> x2. <- runif(N1, -1, 1)
> x3. <- runif(N1, -1, 1)
> x4. <- runif(N1, -1, 1)
> x5. <- runif(N1, -1, 1)
> 
> x.global <- cbind(                       (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> data.global <- cbind(robotArm(x.global), (x1.+1)/2, (x2.+2)/2, pi*(x3.+1), pi*(x4.+1), pi*x5./2 )
> colnames(x.global) <- c("l1", "l2", "theta1", "theta2", "phi")
> colnames(data.global) <- c("arm", "l1", "l2", "theta1", "theta2", "phi")
> itest <- itest+1; test.earth(itest, robotArm, nk=51, degree=1)
itest 37  robotArm                         degree 1  nk 51  nTerms 11 of 19  GRSq 0.79
 grid:    l1       l2   theta1   theta2         phi
   0.4878107 1.018599 2.375682 2.907589 -0.06541174


Selected 11 of 19 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.03972609    RSS 2.479305    GRSq 0.7873676    RSq 0.8646017
> itest <- itest+1; a87 <- test.earth(itest, robotArm, nk=51, degree=10)
itest 38  robotArm                         degree 10 nk 51  nTerms 20 of 39  GRSq 0.89
 grid:    l1       l2   theta1   theta2         phi
   0.4878107 1.018599 2.375682 2.907589 -0.06541174


> printh(summary(a87))
===summary(a87) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

                                                         coefficients
(Intercept)                                                  3.354227
h(l1-0.875321)                                               1.901282
h(0.875321-l1)                                              -0.871595
h(l2-1.10154)                                                0.787000
h(1.10154-l2)                                               -1.113447
h(theta2-2.64029)                                           -0.676355
h(theta2-4.14578)                                            0.385106
h(4.14578-theta2)                                           -0.751180
h(0.875321-l1) * h(2.91516-theta2)                           0.379480
h(0.875321-l1) * h(theta2-5.22555)                          -0.867977
h(l1-0.875321) * h(phi-1.19202)                           -292.274842
h(1.10154-l2) * h(theta2-5.99132)                            3.781391
h(1.10154-l2) * h(5.99132-theta2)                            0.104902
h(theta2-1.3937) * h(phi-1.37959)                           -2.690959
h(theta2-1.3937) * h(1.37959-phi)                           -0.245111
h(theta2-1.3937) * h(phi-0.046284)                          -0.333635
h(theta2-2.64029) * h(1.36883-phi)                           0.227507
h(0.777321-l1) * h(theta2-1.3937) * h(phi-0.046284)         -0.339410
h(0.875321-l1) * h(theta2-2.91516) * h(phi- -0.00669771)     1.121190
h(0.875321-l1) * h(theta2-2.91516) * h(-0.00669771-phi)      0.259488

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.02072208    RSS 0.5496014    GRSq 0.8890859    RSq 0.9699855
> printh(summary(a87, style="bf"))
===summary(a87, style = "bf") 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

data.global[,1] =
  3.354227
  +    1.901282 * bf1
  -   0.8715952 * bf2
  +   0.7870004 * bf3
  -    1.113447 * bf4
  -   0.6763552 * bf5
  +   0.3851064 * bf6
  -   0.7511801 * bf7
  +   0.3794805 * bf2 * bf8
  -   0.8679774 * bf2 * bf9
  -    292.2748 * bf1 * bf10
  +    3.781391 * bf4 * bf11
  +   0.1049022 * bf4 * bf12
  -    2.690959 * bf13 * bf14
  -   0.2451107 * bf13 * bf15
  -   0.3336347 * bf13 * bf16
  +   0.2275069 * bf5 * bf17
  -   0.3394100 * bf18 * bf13 * bf16
  +    1.121190 * bf2 * bf19 * bf20
  +   0.2594880 * bf2 * bf19 * bf21

   bf1  h(l1-0.875321)
   bf2  h(0.875321-l1)
   bf3  h(l2-1.10154)
   bf4  h(1.10154-l2)
   bf5  h(theta2-2.64029)
   bf6  h(theta2-4.14578)
   bf7  h(4.14578-theta2)
   bf8  h(2.91516-theta2)
   bf9  h(theta2-5.22555)
  bf10  h(phi-1.19202)
  bf11  h(theta2-5.99132)
  bf12  h(5.99132-theta2)
  bf13  h(theta2-1.3937)
  bf14  h(phi-1.37959)
  bf15  h(1.37959-phi)
  bf16  h(phi-0.046284)
  bf17  h(1.36883-phi)
  bf18  h(0.777321-l1)
  bf19  h(theta2-2.91516)
  bf20  h(phi--0.00669771)
  bf21  h(-0.00669771-phi)

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.02072208    RSS 0.5496014    GRSq 0.8890859    RSq 0.9699855
> itest <- itest+1; test.earth(itest, robotArm, nk=201, degree=1)
itest 39  robotArm                         degree 1  nk 201 nTerms 11 of 19  GRSq 0.79
 grid:    l1       l2   theta1   theta2         phi
   0.4878107 1.018599 2.375682 2.907589 -0.06541174


Selected 11 of 19 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 10 (additive model)
GCV 0.03972609    RSS 2.479305    GRSq 0.7873676    RSq 0.8646017
> itest <- itest+1; a88 <- test.earth(itest, robotArm, nk=201, degree=10)
itest 40  robotArm                         degree 10 nk 201 nTerms 20 of 39  GRSq 0.89
 grid:    l1       l2   theta1   theta2         phi
   0.4878107 1.018599 2.375682 2.907589 -0.06541174


> printh(summary(a88))
===summary(a88) 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

                                                         coefficients
(Intercept)                                                  3.354227
h(l1-0.875321)                                               1.901282
h(0.875321-l1)                                              -0.871595
h(l2-1.10154)                                                0.787000
h(1.10154-l2)                                               -1.113447
h(theta2-2.64029)                                           -0.676355
h(theta2-4.14578)                                            0.385106
h(4.14578-theta2)                                           -0.751180
h(0.875321-l1) * h(2.91516-theta2)                           0.379480
h(0.875321-l1) * h(theta2-5.22555)                          -0.867977
h(l1-0.875321) * h(phi-1.19202)                           -292.274842
h(1.10154-l2) * h(theta2-5.99132)                            3.781391
h(1.10154-l2) * h(5.99132-theta2)                            0.104902
h(theta2-1.3937) * h(phi-1.37959)                           -2.690959
h(theta2-1.3937) * h(1.37959-phi)                           -0.245111
h(theta2-1.3937) * h(phi-0.046284)                          -0.333635
h(theta2-2.64029) * h(1.36883-phi)                           0.227507
h(0.777321-l1) * h(theta2-1.3937) * h(phi-0.046284)         -0.339410
h(0.875321-l1) * h(theta2-2.91516) * h(phi- -0.00669771)     1.121190
h(0.875321-l1) * h(theta2-2.91516) * h(-0.00669771-phi)      0.259488

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.02072208    RSS 0.5496014    GRSq 0.8890859    RSq 0.9699855
> printh(summary(a88, style="bf"))
===summary(a88, style = "bf") 
Call: earth(x=data.global[, -1], y=data.global[, 1], trace=trace, 
      degree=degree, nk=nk, pmethod="b", fast.k=-1, linpreds=linpreds)

data.global[,1] =
  3.354227
  +    1.901282 * bf1
  -   0.8715952 * bf2
  +   0.7870004 * bf3
  -    1.113447 * bf4
  -   0.6763552 * bf5
  +   0.3851064 * bf6
  -   0.7511801 * bf7
  +   0.3794805 * bf2 * bf8
  -   0.8679774 * bf2 * bf9
  -    292.2748 * bf1 * bf10
  +    3.781391 * bf4 * bf11
  +   0.1049022 * bf4 * bf12
  -    2.690959 * bf13 * bf14
  -   0.2451107 * bf13 * bf15
  -   0.3336347 * bf13 * bf16
  +   0.2275069 * bf5 * bf17
  -   0.3394100 * bf18 * bf13 * bf16
  +    1.121190 * bf2 * bf19 * bf20
  +   0.2594880 * bf2 * bf19 * bf21

   bf1  h(l1-0.875321)
   bf2  h(0.875321-l1)
   bf3  h(l2-1.10154)
   bf4  h(1.10154-l2)
   bf5  h(theta2-2.64029)
   bf6  h(theta2-4.14578)
   bf7  h(4.14578-theta2)
   bf8  h(2.91516-theta2)
   bf9  h(theta2-5.22555)
  bf10  h(phi-1.19202)
  bf11  h(theta2-5.99132)
  bf12  h(5.99132-theta2)
  bf13  h(theta2-1.3937)
  bf14  h(phi-1.37959)
  bf15  h(1.37959-phi)
  bf16  h(phi-0.046284)
  bf17  h(1.36883-phi)
  bf18  h(0.777321-l1)
  bf19  h(theta2-2.91516)
  bf20  h(phi--0.00669771)
  bf21  h(-0.00669771-phi)

Selected 20 of 39 terms, and 4 of 5 predictors 
Importance: theta2, l2, l1, phi, theta1-unused
Number of terms at each degree of interaction: 1 7 9 3
GCV 0.02072208    RSS 0.5496014    GRSq 0.8890859    RSq 0.9699855
> 
> cat("--- linear predictors -------------------------\n")
--- linear predictors -------------------------
> 
> # Build a linear-only earth model and an identical lm model to compare predict().
> # The somewhat strange args are to force the models to use the same predictors.
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 41  
> a <- earth(O3 ~ ., linpreds=TRUE, data = ozone1, pmethod="none", thresh=1e-10)
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=ozone1, linpreds=TRUE, pmethod="none", 
      thresh=1e-10)

            coefficients
(Intercept)   -9.2940941
wind          -0.0272423
humidity       0.0832655
temp           0.2649552
ibh           -0.0003230
dpg           -0.0026598
ibt            0.0235920
vis           -0.0077189
doy           -0.0093787

Selected 9 of 9 terms, and 8 of 9 predictors 8 linear predictors
Importance: temp, humidity, ibh, ibt, doy, vis, dpg, wind, vh-unused
Number of terms at each degree of interaction: 1 8 (additive model)
GCV 21.32277    RSS 6330.213    GRSq 0.6687758    RSq 0.7002088
> alin <- lm(O3 ~ . - vh, data = ozone1)
> printh(summary(alin))
===summary(alin) 

Call:
lm(formula = O3 ~ . - vh, data = ozone1)

Residuals:
     Min       1Q   Median       3Q      Max 
-12.0077  -2.8663  -0.2215   2.7642  13.4535 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) -9.2940941  1.9968503  -4.654 4.76e-06 ***
wind        -0.0272423  0.1320735  -0.206 0.836714    
humidity     0.0832655  0.0187013   4.452 1.17e-05 ***
temp         0.2649552  0.0486640   5.445 1.03e-07 ***
ibh         -0.0003230  0.0002819  -1.146 0.252821    
dpg         -0.0026598  0.0112590  -0.236 0.813396    
ibt          0.0235920  0.0122064   1.933 0.054146 .  
vis         -0.0077189  0.0037406  -2.064 0.039865 *  
doy         -0.0093787  0.0027625  -3.395 0.000773 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 4.441 on 321 degrees of freedom
Multiple R-squared: 0.7002,	Adjusted R-squared: 0.6927 
F-statistic: 93.72 on 8 and 321 DF,  p-value: < 2.2e-16 

> printh(summary(alin, style="bf"))
===summary(alin, style = "bf") 

Call:
lm(formula = O3 ~ . - vh, data = ozone1)

Residuals:
     Min       1Q   Median       3Q      Max 
-12.0077  -2.8663  -0.2215   2.7642  13.4535 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) -9.2940941  1.9968503  -4.654 4.76e-06 ***
wind        -0.0272423  0.1320735  -0.206 0.836714    
humidity     0.0832655  0.0187013   4.452 1.17e-05 ***
temp         0.2649552  0.0486640   5.445 1.03e-07 ***
ibh         -0.0003230  0.0002819  -1.146 0.252821    
dpg         -0.0026598  0.0112590  -0.236 0.813396    
ibt          0.0235920  0.0122064   1.933 0.054146 .  
vis         -0.0077189  0.0037406  -2.064 0.039865 *  
doy         -0.0093787  0.0027625  -3.395 0.000773 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 4.441 on 321 degrees of freedom
Multiple R-squared: 0.7002,	Adjusted R-squared: 0.6927 
F-statistic: 93.72 on 8 and 321 DF,  p-value: < 2.2e-16 

> stopifnot(all.equal(as.double(predict(a)), as.double(predict(alin))))
> newdata <- data.frame(
+         vh = c(5700,5701,5702),
+         wind = c(3,4,5),
+         humidity = c(30,40,50),
+         temp = c(31,42,53),
+         ibh = c(1000, 1000, 1000),
+         dpg = c(-10, 0, 10),
+         ibt = c(90, 80, 60),
+         vis = c(100, 110, 120),
+         doy= c(12, 34, 56))
> apred <- as.double(predict(a, newdata=newdata))
> alinpred <- as.double(predict(alin, newdata=newdata))
> stopifnot(all.equal(apred, alinpred))
> # printh(head(predict(a, type="terms")))
> printh(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
===earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms) 
[1] 0 1 2 3 4 5 6 7 8
> 
> # test with mixed linear and standard predictors
> itest <- itest+1; cat("itest", sprintf("%-3d", itest), "\n")
itest 42  
> a <- earth(O3 ~ ., linpreds=c(3, 8), data = ozone1, degree=2, trace=4)  # 3,8 is humidity,vis
Call: earth(formula=O3~., data=ozone1, trace=4, linpreds=c(3, 
      8), degree=2)
x is a 330 by 9 matrix: 1=vh, 2=wind, 3=humidity, 4=temp, 5=ibh, 6=dpg, 7=ibt, 8=vis, 9=doy
First few rows of x are
       vh wind humidity temp  ibh dpg ibt vis doy
[1,] 5710    4       28   40 2693 -25  87 250  33
[2,] 5700    3       37   45  590 -24 128 100  34
[3,] 5760    3       51   54 1450  25 139  60  35
[4,] 5720    4       69   35 1568  15 121  60  36
[5,] 5790    6       19   45 2631 -33 123 100  37
[6,] 5790    3       25   55  554 -28 182 250  38
y is a 330 by 1 matrix: 1=O3
First few rows of y are
     O3
[1,]  3
[2,]  5
[3,]  5
[4,]  6
[5,]  4
[6,]  4
linear predictors 3=humidity 8=vis
Approximate memory use after expanding x and y matrices: 0.2 MBytes
Forward pass: minspan 6 endspan 10

         GRSq    RSq     DeltaRSq Pred     PredName         Cut  Terms   ParentTerm
1      0.0000 0.0000                                             1
2      0.6493 0.6599       0.6599    4         temp          58  2   3   
4      0.6908 0.7094      0.04948    5          ibh        1069  4   5   
6      0.7110 0.7368      0.02744    9          doy          89  6   7   
8      0.7337 0.7613       0.0245    3     humidity          19< 8       2   
10     0.7524 0.7851       0.0238    6          dpg          11  9   10  
12     0.7573 0.7962      0.01107    1           vh        5900  11  12  
14     0.7642 0.8052     0.009048    8          vis           0< 13      
16     0.7694 0.8127     0.007528    9          doy         151  14      
18     0.7692 0.8188     0.006099    2         wind           4  15  16  12  
20     0.7675 0.8237     0.004849    4         temp          72  17  18  16  

Reached max number of terms 21
After forward pass GRSq 0.7675 RSq 0.8237
Forward pass complete: 21 terms (18 terms used)

Subset size        GRSq     RSq  DeltaGRSq nPreds  Terms (col nbr in bx)
          1      0.0000  0.0000     0.0000      0  1
          2      0.6721  0.6771     0.6721      2  1 8
          3      0.6909  0.7002     0.0188      2  1 2 4
          4      0.7278  0.7400     0.0369      4  1 4 7 8
          5      0.7373  0.7530     0.0095      4  1 4 6 7 8
          6      0.7495  0.7682     0.0122      5  1 4 6 7 8 9
          7      0.7642  0.7852     0.0147      6  1 7 8 9 12 13 14
          8      0.7753  0.7986     0.0111      6  1 7 8 9 10 12 13 14
          9      0.7793  0.8053     0.0040      7  1 4 7 8 9 10 12 13 14
         10      0.7793  0.8085    -0.0000      7  1 4 7 8 9 10 12 13 14 17
         11      0.7821  0.8139     0.0027      7  1 4 7 8 9 10 11 12 13 14 17
         12      0.7809  0.8160    -0.0011      8  1 4 7 8 9 10 11 12 13 14 16 17
chosen   13      0.7833  0.8210     0.0024      8  1 4 7 8 9 10 11 12 13 14 15 16 17
         14      0.7808  0.8220    -0.0025      8  1 4 6 7 8 9 10 11 12 13 14 15 16 17
         15      0.7782  0.8229    -0.0026      8  1 2 4 6 7 8 9 10 11 12 13 14 15 16 17
         16      0.7751  0.8235    -0.0031      8  1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17
         17      0.7715  0.8237    -0.0036      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
         18      0.7675  0.8237    -0.0040      8  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18

Prune method "backward" penalty 3 nprune 18: selected 13 of 18 terms, and 8 of 9 predictors
After backward pass GRSq 0.7833 RSq 0.821 
> printh(summary(a))
===summary(a) 
Call: earth(formula=O3~., data=ozone1, trace=4, linpreds=c(3, 
      8), degree=2)

                        coefficients
(Intercept)               18.0057404
vis                       -0.0113823
h(vh-5900)                 0.4017820
h(5900-vh)                -0.0154223
h(ibh-1069)               -0.0005118
h(dpg-11)                 -0.0927226
h(11-dpg)                 -0.0579073
h(89-doy)                 -0.1409308
h(doy-151)                -0.0274469
humidity * h(temp-58)      0.0075823
h(vh-5900) * h(wind-4)    -0.0867242
h(vh-5900) * h(4-wind)    -0.3996014
h(temp-72) * h(doy-151)   -0.0034190

Selected 13 of 18 terms, and 8 of 9 predictors 2 linear predictors
Importance: temp, humidity, doy, ibh, dpg, vh, vis, wind, ibt-unused
Number of terms at each degree of interaction: 1 8 4
GCV 13.94806    RSS 3778.698    GRSq 0.7833333    RSq 0.8210454
> if (PLOT) {
+     plot(a)
+     plotmo(a)
+ }

 grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
        5760    5       64   62 2112.5  24 167.5 120 205.5

> printh(earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms))
===earth:::get.nused.preds.per.subset(a$dirs, a$prune.terms) 
 [1] 0 2 2 4 4 5 6 6 7 7 7 8 8 8 8 8 8 8
> printh(earth:::get.nterms.per.degree(a))
===earth:::get.nterms.per.degree(a) 

0 1 2 
1 8 4 
> # printh(head(predict(a, type="terms")))
> 
> # this is a good example because it has linear preds in both 1 and 2 degree terms
> x.global <- cbind(                    x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> data.global <- cbind(eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> itest <- itest+1; test.earth(itest, eqn56,     nk=21, degree=2, linpreds=c(3,5))
itest 43  eqn56                            degree 2  nk 21  nTerms 11 of 14  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 14 terms, and 5 of 10 predictors 3 linear predictors
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 1
GCV 0.02254096    RSS 1.234343    GRSq 0.9973244    RSq 0.998505
> # check symmetry by using negative of eqn56
> itest <- itest+1; data.global <- cbind(neg.eqn56(x.global), x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 )
> test.earth(itest, neg.eqn56, nk=21, degree=2, linpreds=c(3,5))
itest 44  neg.eqn56                        degree 2  nk 21  nTerms 11 of 14  GRSq    1
 grid:    x1         x2         x3          x4          x5        x6         x7
 -0.02437858 0.03719751 -0.2437968 -0.07448578 -0.04164241 0.1161652 0.03777443
          x8          x9        x10
 -0.02585157 -0.07134113 -0.1014971


Selected 11 of 14 terms, and 5 of 10 predictors 3 linear predictors
Importance: x3, x2, x4, x1, x5, x6-unused, x7-unused, x8-unused, x9-unused, x10-unused
Number of terms at each degree of interaction: 1 9 1
GCV 0.02254096    RSS 1.234343    GRSq 0.9973244    RSq 0.998505
> 
> cat("--- tests with ozone data ----------------------\n")
--- tests with ozone data ----------------------
> 
> data(ozone1)
> attach(ozone1)
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=1, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 45  doy ~ wind+humidity+temp+vis     degree 1  nk 21  nTerms 6  of 15  GRSq 0.18 GRSq ratio 1.363416 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

               coefficients
(Intercept)      133.587081
h(3-wind)         57.523805
h(humidity-28)     1.483386
h(28-humidity)     8.749051
h(temp-49)         1.140510
h(49-temp)        -4.903351

Selected 6 of 15 terms, and 3 of 4 predictors 
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 8930.508    RSS 2753871    GRSq 0.1827523    RSq 0.231678
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  133.5871
  +   57.5238 * bf1
  +  1.483386 * bf2
  +   8.74905 * bf3
  +  1.140510 * bf4
  -  4.903351 * bf5

   bf1  h(3-wind)
   bf2  h(humidity-28)
   bf3  h(28-humidity)
   bf4  h(temp-49)
   bf5  h(49-temp)

Selected 6 of 15 terms, and 3 of 4 predictors 
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 8930.508    RSS 2753871    GRSq 0.1827523    RSq 0.231678
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)

 grid:    wind humidity temp vis
             5       64   62 120


 grid:    wind humidity temp vis
             5       64   62 120

Selected 6 of 15 terms, and 3 of 4 predictors 
Importance: wind, temp, humidity, vis-unused
Number of terms at each degree of interaction: 1 5 (additive model)
GCV 8930.508    RSS 2753871    GRSq 0.1827523    RSq 0.231678
> 
> x.global <- cbind(wind, humidity, temp, vis)
> y <- doy
> itest <- itest+1; a91 <- ozone.test(itest, "doy ~ wind+humidity+temp+vis", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 46  doy ~ wind+humidity+temp+vis     degree 2  nk 21  nTerms 8  of 20  GRSq 0.21 GRSq ratio 1.710692 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                   140.122198
h(3-wind)                      55.271007
h(humidity-28)                  1.913497
h(28-humidity) * h(temp-60)     1.485234
h(28-humidity) * h(60-temp)     1.128805
h(humidity-54) * h(49-temp)    -0.659818
h(humidity-77) * h(49-temp)     4.252359
h(77-humidity) * h(49-temp)    -0.162175

Selected 8 of 20 terms, and 3 of 4 predictors 
Importance: wind, humidity, temp, vis-unused
Number of terms at each degree of interaction: 1 2 5
GCV 8636.803    RSS 2539541    GRSq 0.2096298    RSq 0.2914755
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  140.1222
  +   55.27101 * bf1
  +   1.913497 * bf2
  +   1.485234 * bf3 * bf4
  +   1.128805 * bf3 * bf5
  -  0.6598181 * bf6 * bf7
  +   4.252359 * bf8 * bf7
  -  0.1621753 * bf9 * bf7

   bf1  h(3-wind)
   bf2  h(humidity-28)
   bf3  h(28-humidity)
   bf4  h(temp-60)
   bf5  h(60-temp)
   bf6  h(humidity-54)
   bf7  h(49-temp)
   bf8  h(humidity-77)
   bf9  h(77-humidity)

Selected 8 of 20 terms, and 3 of 4 predictors 
Importance: wind, humidity, temp, vis-unused
Number of terms at each degree of interaction: 1 2 5
GCV 8636.803    RSS 2539541    GRSq 0.2096298    RSq 0.2914755
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)

 grid:    wind humidity temp vis
             5       64   62 120


 grid:    wind humidity temp vis
             5       64   62 120

> 
> # this is a basic test of RegressAndFix (because this generates lin dep bx cols)
> 
> cat("--Expect warning from mda::mars: NAs introduced by coercion\n") # why do we get a warning?
--Expect warning from mda::mars: NAs introduced by coercion
> x.global <- cbind(wind, exp(humidity))
> y <- doy
> # col.loess is 0 else get loess errors
> itest <- itest+1; ozone.test(itest, "doy ~ wind+exp(humidity)", x.global, y, degree=1, nk=21, col.loess=0)
Warning in storage.mode(tagx) <- "integer" : NAs introduced by coercion
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 47  doy ~ wind+exp(humidity)         degree 1  nk 21  nTerms 3  of 7   GRSq  0.1 GRSq ratio 1.640727 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

            coefficients
(Intercept)    202.17924
h(3-wind)       50.04004
h(wind-9)      -61.15513

Selected 3 of 7 terms, and 1 of 2 predictors 
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.564    RSS 3143644    GRSq 0.1012101    RSq 0.1229323
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  202.1792
  + 50.04004 * bf1
  - 61.15513 * bf2

   bf1  h(3-wind)
   bf2  h(wind-9)

Selected 3 of 7 terms, and 1 of 2 predictors 
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.564    RSS 3143644    GRSq 0.1012101    RSq 0.1229323
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)

 grid:    wind           V2
             5 6.235149e+27


 grid:    wind           V2
             5 6.235149e+27

Selected 3 of 7 terms, and 1 of 2 predictors 
Importance: wind, x2-unused
Number of terms at each degree of interaction: 1 2 (additive model)
GCV 9821.564    RSS 3143644    GRSq 0.1012101    RSq 0.1229323
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~.", x.global, y, degree=2, nk=21)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 48  O3~.                             degree 2  nk 21  nTerms 11 of 21  GRSq 0.79 GRSq ratio 1.010102 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                   14.8885242
h(temp-58)                     0.3207913
h(233-ibt)                    -0.0456181
h(200-vis)                     0.0220154
h(doy-89)                     -0.0232471
h(89-doy)                     -0.1436648
h(wind-7) * h(200-vis)        -0.0187155
h(56-humidity) * h(temp-58)   -0.0209600
h(temp-58) * h(dpg-54)        -0.0189092
h(temp-58) * h(54-dpg)         0.0041001
h(1069-ibh) * h(44-dpg)       -0.0000805

Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.45447    RSS 3767.904    GRSq 0.7910006    RSq 0.8215567
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  14.88852
  +    0.3207913 * bf1
  -   0.04561807 * bf2
  +   0.02201538 * bf3
  -   0.02324712 * bf4
  -    0.1436648 * bf5
  -    0.0187155 * bf6 * bf3
  -   0.02096002 * bf7 * bf1
  -   0.01890919 * bf1 * bf8
  +  0.004100053 * bf1 * bf9
  - 8.051735e-05 * bf10 * bf11

   bf1  h(temp-58)
   bf2  h(233-ibt)
   bf3  h(200-vis)
   bf4  h(doy-89)
   bf5  h(89-doy)
   bf6  h(wind-7)
   bf7  h(56-humidity)
   bf8  h(dpg-54)
   bf9  h(54-dpg)
  bf10  h(1069-ibh)
  bf11  h(44-dpg)

Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.45447    RSS 3767.904    GRSq 0.7910006    RSq 0.8215567
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)

 grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
        5760    5       64   62 2112.5  24 167.5 120 205.5


 grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
        5760    5       64   62 2112.5  24 167.5 120 205.5

Selected 11 of 21 terms, and 8 of 9 predictors 
Importance: temp, humidity, ibt, doy, dpg, ibh, vis, wind, vh-unused
Number of terms at each degree of interaction: 1 5 5
GCV 13.45447    RSS 3767.904    GRSq 0.7910006    RSq 0.8215567
> 
> x.global <- cbind(vh,wind,humidity,temp,ibh,dpg,ibt,vis,doy)
> y <- O3
> itest <- itest+1; ozone.test(itest, "O3~., nk=51", x.global, y, degree=2, nk=51)
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)
itest 49  O3~., nk=51                      degree 2  nk 51  nTerms 27 of 48  GRSq 0.81 GRSq ratio 1.010625 
===summary(fite) 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

                            coefficients
(Intercept)                   12.0135192
h(temp-58)                     0.6578253
h(ibt-233)                     0.2203734
h(233-ibt)                    -0.0296826
h(200-vis)                     0.0576446
h(doy-89)                     -0.0206850
h(89-doy)                     -0.1163833
h(vh-5870) * h(temp-58)       -0.0081176
h(vh-5890) * h(200-vis)        0.0029107
h(5890-vh) * h(200-vis)       -0.0001168
h(vh-5850) * h(doy-89)         0.0005563
h(7-wind) * h(temp-81)        -0.4721177
h(wind-6) * h(ibt-233)        -0.1810748
h(6-wind) * h(ibt-233)        -0.0304043
h(56-humidity) * h(temp-58)   -0.0127575
h(71-humidity) * h(ibt-233)   -0.0073213
h(temp-58) * h(dpg-54)        -0.0148074
h(temp-76) * h(233-ibt)       -0.0542600
h(temp-72) * h(200-vis)       -0.0037720
h(temp-84) * h(200-vis)        0.0198905
h(temp-88) * h(200-vis)       -0.0227786
h(temp-58) * h(doy-159)       -0.0021176
h(temp-58) * h(159-doy)       -0.0053335
h(1069-ibh) * h(ibt-268)       0.0006451
h(dpg-17) * h(200-vis)        -0.0006026
h(17-dpg) * h(200-vis)        -0.0005448
h(ibt-258) * h(200-vis)       -0.0025072

Selected 27 of 48 terms, and 9 of 9 predictors 
Importance: temp, ibt, doy, vis, dpg, ibh, humidity, wind, vh
Number of terms at each degree of interaction: 1 6 20
GCV 12.45516    RSS 2630.530    GRSq 0.8065237    RSq 0.8754213
===summary(fite, style = "bf") 
Call: earth(x=x, y=y, trace=trace, degree=degree, nk=nk)

y =
  12.01352
  +    0.6578253 * bf1
  +    0.2203734 * bf2
  -   0.02968265 * bf3
  +   0.05764456 * bf4
  -   0.02068496 * bf5
  -    0.1163833 * bf6
  -  0.008117648 * bf7 * bf1
  +  0.002910693 * bf8 * bf4
  - 0.0001168164 * bf9 * bf4
  + 0.0005563047 * bf10 * bf5
  -    0.4721177 * bf11 * bf12
  -    0.1810748 * bf13 * bf2
  -   0.03040432 * bf14 * bf2
  -   0.01275745 * bf15 * bf1
  -  0.007321349 * bf16 * bf2
  -   0.01480744 * bf1 * bf17
  -   0.05426002 * bf18 * bf3
  -  0.003772030 * bf19 * bf4
  +   0.01989054 * bf20 * bf4
  -   0.02277855 * bf21 * bf4
  -  0.002117587 * bf1 * bf22
  -  0.005333521 * bf1 * bf23
  + 0.0006450869 * bf24 * bf25
  - 0.0006026025 * bf26 * bf4
  - 0.0005448315 * bf27 * bf4
  -  0.002507211 * bf28 * bf4

   bf1  h(temp-58)
   bf2  h(ibt-233)
   bf3  h(233-ibt)
   bf4  h(200-vis)
   bf5  h(doy-89)
   bf6  h(89-doy)
   bf7  h(vh-5870)
   bf8  h(vh-5890)
   bf9  h(5890-vh)
  bf10  h(vh-5850)
  bf11  h(7-wind)
  bf12  h(temp-81)
  bf13  h(wind-6)
  bf14  h(6-wind)
  bf15  h(56-humidity)
  bf16  h(71-humidity)
  bf17  h(dpg-54)
  bf18  h(temp-76)
  bf19  h(temp-72)
  bf20  h(temp-84)
  bf21  h(temp-88)
  bf22  h(doy-159)
  bf23  h(159-doy)
  bf24  h(1069-ibh)
  bf25  h(ibt-268)
  bf26  h(dpg-17)
  bf27  h(17-dpg)
  bf28  h(ibt-258)

Selected 27 of 48 terms, and 9 of 9 predictors 
Importance: temp, ibt, doy, vis, dpg, ibh, humidity, wind, vh
Number of terms at each degree of interaction: 1 6 20
GCV 12.45516    RSS 2630.530    GRSq 0.8065237    RSq 0.8754213
Converted mars(x=x, y=y, degree=degree, nk=nk)
to        earth(x=x, y=y, degree=degree, nk=nk)

 grid:    vh wind humidity temp    ibh dpg   ibt vis   doy
        5760    5       64   62 2112.5  24 167.5 120 205.5


Execution halted
